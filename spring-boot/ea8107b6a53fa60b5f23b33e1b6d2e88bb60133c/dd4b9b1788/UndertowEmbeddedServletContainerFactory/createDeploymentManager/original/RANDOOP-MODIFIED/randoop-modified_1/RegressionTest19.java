import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest19 {

    public static boolean debug = false;

    @Test
    public void test09501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09501");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory10.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray11);
        org.springframework.boot.context.embedded.Ssl ssl13 = null;
        undertowEmbeddedServletContainerFactory10.setSsl(ssl13);
        org.springframework.boot.context.embedded.Ssl ssl15 = undertowEmbeddedServletContainerFactory10.getSsl();
        undertowEmbeddedServletContainerFactory10.setDisplayName("");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory10.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer undertowDeploymentInfoCustomizer19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray20 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] { undertowDeploymentInfoCustomizer19 };
        undertowEmbeddedServletContainerFactory10.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray20);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray20);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 32);
        boolean boolean25 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray11);
        org.junit.Assert.assertNull(ssl15);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test09502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09502");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file2 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file6 = undertowEmbeddedServletContainerFactory5.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory5.setPersistSession(false);
        undertowEmbeddedServletContainerFactory5.setJspServletClassName("");
        java.io.File file11 = undertowEmbeddedServletContainerFactory5.getSessionStoreDir();
        java.lang.String str12 = undertowEmbeddedServletContainerFactory5.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory14.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory14.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory14.getSsl();
        boolean boolean20 = undertowEmbeddedServletContainerFactory14.isAccessLogEnabled();
        java.io.File file21 = null;
        undertowEmbeddedServletContainerFactory14.setAccessLogDirectory(file21);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray23 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24, errorPageArray23);
        undertowEmbeddedServletContainerFactory14.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24);
        undertowEmbeddedServletContainerFactory5.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24);
        boolean boolean29 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 0);
        boolean boolean34 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.String str35 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file38 = undertowEmbeddedServletContainerFactory37.getSessionStoreDir();
        boolean boolean39 = undertowEmbeddedServletContainerFactory37.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory37.setSessionTimeout((int) (short) 100);
        java.io.File file42 = undertowEmbeddedServletContainerFactory37.getDocumentRoot();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = undertowEmbeddedServletContainerFactory37.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings43);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection45 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        boolean boolean46 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(errorPageArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test09503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09503");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 1);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        boolean boolean3 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file4);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test09504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09504");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file4);
        org.springframework.boot.context.embedded.Compression compression6 = undertowEmbeddedServletContainerFactory1.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray9 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory8.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory12.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray13);
        undertowEmbeddedServletContainerFactory8.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray13);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray13);
        boolean boolean17 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file20 = undertowEmbeddedServletContainerFactory19.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory19.setPersistSession(false);
        undertowEmbeddedServletContainerFactory19.setJspServletClassName("");
        java.io.File file25 = undertowEmbeddedServletContainerFactory19.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory19.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory19.setBufferSize((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.JspServlet jspServlet30 = undertowEmbeddedServletContainerFactory19.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet30);
        org.springframework.core.io.ResourceLoader resourceLoader32 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader32);
        org.springframework.boot.context.embedded.Compression compression34 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression34);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(compression6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray9);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(jspServlet30);
    }

    @Test
    public void test09505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09505");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file4);
        org.springframework.boot.context.embedded.ErrorPage errorPage6 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray7 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage6 };
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray7);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        int int15 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 52);
        java.io.File file18 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file18);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        org.junit.Assert.assertNotNull(errorPageArray7);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test09506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09506");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader9);
        org.springframework.boot.context.embedded.Compression compression11 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.io.File file12 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file12);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        java.io.File file16 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 32);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        java.net.InetAddress inetAddress28 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress28);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNull(compression11);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(ssl17);
    }

    @Test
    public void test09507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09507");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet3 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory5.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory5.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory5.getSsl();
        boolean boolean11 = undertowEmbeddedServletContainerFactory5.isAccessLogEnabled();
        java.io.File file12 = null;
        undertowEmbeddedServletContainerFactory5.setAccessLogDirectory(file12);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection14 = undertowEmbeddedServletContainerFactory5.getBuilderCustomizers();
        org.springframework.boot.context.embedded.Compression compression15 = null;
        undertowEmbeddedServletContainerFactory5.setCompression(compression15);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory5.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.net.InetAddress inetAddress20 = null;
        undertowEmbeddedServletContainerFactory19.setAddress(inetAddress20);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray24 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory23.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray24);
        org.springframework.boot.context.embedded.Ssl ssl26 = null;
        undertowEmbeddedServletContainerFactory23.setSsl(ssl26);
        org.springframework.boot.context.embedded.Ssl ssl28 = undertowEmbeddedServletContainerFactory23.getSsl();
        undertowEmbeddedServletContainerFactory23.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory23.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection33 = undertowEmbeddedServletContainerFactory23.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory23.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory37.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray42 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory41.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray42);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray46 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory45.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray46);
        undertowEmbeddedServletContainerFactory41.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray46);
        undertowEmbeddedServletContainerFactory37.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray46);
        java.lang.String str50 = undertowEmbeddedServletContainerFactory37.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory52.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory52.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray57 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer58 = undertowEmbeddedServletContainerFactory52.getEmbeddedServletContainer(servletContextInitializerArray57);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer59 = undertowEmbeddedServletContainerFactory37.getEmbeddedServletContainer(servletContextInitializerArray57);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer60 = undertowEmbeddedServletContainerFactory23.getEmbeddedServletContainer(servletContextInitializerArray57);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer61 = undertowEmbeddedServletContainerFactory19.getEmbeddedServletContainer(servletContextInitializerArray57);
        undertowEmbeddedServletContainerFactory5.addInitializers(servletContextInitializerArray57);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray57);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(errorPageSet3);
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection14);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray24);
        org.junit.Assert.assertNull(ssl28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection33);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray42);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray46);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(servletContextInitializerArray57);
        org.junit.Assert.assertNotNull(embeddedServletContainer58);
        org.junit.Assert.assertNotNull(embeddedServletContainer59);
        org.junit.Assert.assertNotNull(embeddedServletContainer60);
        org.junit.Assert.assertNotNull(embeddedServletContainer61);
    }

    @Test
    public void test09508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09508");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 10);
        org.springframework.boot.context.embedded.Ssl ssl3 = null;
        undertowEmbeddedServletContainerFactory2.setSsl(ssl3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file7 = undertowEmbeddedServletContainerFactory6.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory6.setPersistSession(false);
        undertowEmbeddedServletContainerFactory6.setJspServletClassName("");
        java.io.File file12 = undertowEmbeddedServletContainerFactory6.getSessionStoreDir();
        java.lang.String str13 = undertowEmbeddedServletContainerFactory6.getDisplayName();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = undertowEmbeddedServletContainerFactory6.getMimeMappings();
        undertowEmbeddedServletContainerFactory2.setMimeMappings(mimeMappings14);
        boolean boolean16 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory2.setPersistSession(true);
        undertowEmbeddedServletContainerFactory2.setPersistSession(false);
        undertowEmbeddedServletContainerFactory2.setDisplayName("");
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test09509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09509");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory8.setPort((int) (byte) -1);
        boolean boolean11 = undertowEmbeddedServletContainerFactory8.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory13.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory13.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl18 = null;
        undertowEmbeddedServletContainerFactory13.setSsl(ssl18);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray20 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory13.addErrorPages(errorPageArray20);
        undertowEmbeddedServletContainerFactory8.addErrorPages(errorPageArray20);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray20);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray25 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer24 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray25);
        org.springframework.boot.context.embedded.Compression compression27 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection28 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(errorPageArray20);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray25);
        org.junit.Assert.assertNull(compression27);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection28);
    }

    @Test
    public void test09510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09510");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory10.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory10.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl15 = undertowEmbeddedServletContainerFactory10.getSsl();
        boolean boolean16 = undertowEmbeddedServletContainerFactory10.isAccessLogEnabled();
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory10.setAccessLogDirectory(file17);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray19 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20, errorPageArray19);
        undertowEmbeddedServletContainerFactory10.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory25.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray28 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory25.addBuilderCustomizers(undertowBuilderCustomizerArray28);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray28);
        undertowEmbeddedServletContainerFactory1.setPort(32);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1800);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(ssl15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(errorPageArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray28);
    }

    @Test
    public void test09511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09511");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file4);
        undertowEmbeddedServletContainerFactory1.setPort(0);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray8 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setPort(1800);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        org.springframework.boot.context.embedded.Compression compression17 = undertowEmbeddedServletContainerFactory1.getCompression();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray8);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertNull(compression17);
    }

    @Test
    public void test09512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09512");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file2 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file6 = undertowEmbeddedServletContainerFactory5.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory5.setPersistSession(false);
        undertowEmbeddedServletContainerFactory5.setJspServletClassName("");
        java.io.File file11 = undertowEmbeddedServletContainerFactory5.getSessionStoreDir();
        java.lang.String str12 = undertowEmbeddedServletContainerFactory5.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory14.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory14.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory14.getSsl();
        boolean boolean20 = undertowEmbeddedServletContainerFactory14.isAccessLogEnabled();
        java.io.File file21 = null;
        undertowEmbeddedServletContainerFactory14.setAccessLogDirectory(file21);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray23 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24, errorPageArray23);
        undertowEmbeddedServletContainerFactory14.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24);
        undertowEmbeddedServletContainerFactory5.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24);
        boolean boolean29 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 0);
        boolean boolean34 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress35 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress35);
        org.springframework.boot.context.embedded.Compression compression37 = undertowEmbeddedServletContainerFactory1.getCompression();
        org.springframework.boot.context.embedded.Compression compression38 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.io.File file39 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(errorPageArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(compression37);
        org.junit.Assert.assertNull(compression38);
        org.junit.Assert.assertNull(file39);
    }

    @Test
    public void test09513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09513");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet8 = null;
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet8);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.Compression compression11 = undertowEmbeddedServletContainerFactory1.getCompression();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 97);
        java.io.File file17 = undertowEmbeddedServletContainerFactory16.getDocumentRoot();
        int int18 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = undertowEmbeddedServletContainerFactory16.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet19);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        org.springframework.boot.context.embedded.JspServlet jspServlet27 = undertowEmbeddedServletContainerFactory26.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file30 = null;
        undertowEmbeddedServletContainerFactory29.setAccessLogDirectory(file30);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray32 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory29.addErrorPages(errorPageArray32);
        undertowEmbeddedServletContainerFactory26.addErrorPages(errorPageArray32);
        org.springframework.boot.context.embedded.Compression compression35 = undertowEmbeddedServletContainerFactory26.getCompression();
        org.springframework.boot.context.embedded.Ssl ssl36 = null;
        undertowEmbeddedServletContainerFactory26.setSsl(ssl36);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file40 = undertowEmbeddedServletContainerFactory39.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory39.setPersistSession(false);
        undertowEmbeddedServletContainerFactory39.setJspServletClassName("");
        java.io.File file45 = undertowEmbeddedServletContainerFactory39.getSessionStoreDir();
        java.lang.String str46 = undertowEmbeddedServletContainerFactory39.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory48.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory48.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl53 = undertowEmbeddedServletContainerFactory48.getSsl();
        boolean boolean54 = undertowEmbeddedServletContainerFactory48.isAccessLogEnabled();
        java.io.File file55 = null;
        undertowEmbeddedServletContainerFactory48.setAccessLogDirectory(file55);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray57 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet58 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet58, errorPageArray57);
        undertowEmbeddedServletContainerFactory48.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet58);
        undertowEmbeddedServletContainerFactory39.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet58);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory63.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray66 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory63.addBuilderCustomizers(undertowBuilderCustomizerArray66);
        undertowEmbeddedServletContainerFactory39.addBuilderCustomizers(undertowBuilderCustomizerArray66);
        undertowEmbeddedServletContainerFactory39.setPort(32);
        undertowEmbeddedServletContainerFactory39.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory74.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory78 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray79 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory78.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray79);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory82 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray83 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory82.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray83);
        undertowEmbeddedServletContainerFactory78.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray83);
        undertowEmbeddedServletContainerFactory74.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray83);
        undertowEmbeddedServletContainerFactory39.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray83);
        undertowEmbeddedServletContainerFactory26.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray83);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray83);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNull(compression11);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1800 + "'", int18 == 1800);
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertNotNull(jspServlet27);
        org.junit.Assert.assertNotNull(errorPageArray32);
        org.junit.Assert.assertNull(compression35);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(ssl53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(errorPageArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray66);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray79);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray83);
    }

    @Test
    public void test09514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09514");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory10.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory10.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl15 = undertowEmbeddedServletContainerFactory10.getSsl();
        boolean boolean16 = undertowEmbeddedServletContainerFactory10.isAccessLogEnabled();
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory10.setAccessLogDirectory(file17);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray19 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20, errorPageArray19);
        undertowEmbeddedServletContainerFactory10.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory25.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray28 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory25.addBuilderCustomizers(undertowBuilderCustomizerArray28);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray28);
        java.net.InetAddress inetAddress31 = undertowEmbeddedServletContainerFactory1.getAddress();
        boolean boolean32 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        java.net.InetAddress inetAddress35 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress35);
        int int37 = undertowEmbeddedServletContainerFactory1.getPort();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(ssl15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(errorPageArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray28);
        org.junit.Assert.assertNull(inetAddress31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
    }

    @Test
    public void test09515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09515");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer8 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap7);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer10 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer12 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap11);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer8, initParameterConfiguringServletContextInitializer10, initParameterConfiguringServletContextInitializer12 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray13);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        int int17 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.Ssl ssl18 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 32);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(ssl18);
        org.junit.Assert.assertNotNull(errorPageSet19);
    }

    @Test
    public void test09516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09516");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        boolean boolean3 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.net.InetAddress inetAddress4 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet5 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setPersistSession(true);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        int int10 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        java.io.File file11 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file11);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(inetAddress4);
        org.junit.Assert.assertNotNull(errorPageSet5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
    }

    @Test
    public void test09517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09517");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory9.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory9.setPersistSession(false);
        boolean boolean14 = undertowEmbeddedServletContainerFactory9.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory16.setPort((int) (byte) -1);
        boolean boolean19 = undertowEmbeddedServletContainerFactory16.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory21.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory21.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl26 = null;
        undertowEmbeddedServletContainerFactory21.setSsl(ssl26);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray28 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory21.addErrorPages(errorPageArray28);
        undertowEmbeddedServletContainerFactory16.addErrorPages(errorPageArray28);
        undertowEmbeddedServletContainerFactory9.addErrorPages(errorPageArray28);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer32 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray33 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer32 };
        undertowEmbeddedServletContainerFactory9.addBuilderCustomizers(undertowBuilderCustomizerArray33);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray33);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        int int38 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        java.io.File file39 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file39);
        org.springframework.boot.context.embedded.Ssl ssl41 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl41);
        java.io.File file43 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file43);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(errorPageArray28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray33);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1800 + "'", int38 == 1800);
    }

    @Test
    public void test09518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09518");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        boolean boolean4 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory6.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl11 = null;
        undertowEmbeddedServletContainerFactory6.setSsl(ssl11);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray13 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory6.addErrorPages(errorPageArray13);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray13);
        boolean boolean16 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file17);
        boolean boolean19 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        java.io.File file23 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file23);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file27 = undertowEmbeddedServletContainerFactory26.getSessionStoreDir();
        java.lang.String str28 = undertowEmbeddedServletContainerFactory26.getContextPath();
        java.net.InetAddress inetAddress29 = undertowEmbeddedServletContainerFactory26.getAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet30 = undertowEmbeddedServletContainerFactory26.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray33 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory32.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray33);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray37 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory36.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray37);
        undertowEmbeddedServletContainerFactory32.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray37);
        undertowEmbeddedServletContainerFactory26.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray37);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray37);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray44 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory43.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray44);
        org.springframework.boot.context.embedded.Ssl ssl46 = null;
        undertowEmbeddedServletContainerFactory43.setSsl(ssl46);
        org.springframework.boot.context.embedded.Ssl ssl48 = undertowEmbeddedServletContainerFactory43.getSsl();
        undertowEmbeddedServletContainerFactory43.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory43.setDisplayName("hi!");
        java.net.InetAddress inetAddress53 = undertowEmbeddedServletContainerFactory43.getAddress();
        org.springframework.boot.context.embedded.Compression compression54 = null;
        undertowEmbeddedServletContainerFactory43.setCompression(compression54);
        undertowEmbeddedServletContainerFactory43.setIoThreads((java.lang.Integer) 1800);
        java.io.File file58 = undertowEmbeddedServletContainerFactory43.getSessionStoreDir();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings59 = undertowEmbeddedServletContainerFactory43.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings59);
        org.springframework.core.io.ResourceLoader resourceLoader61 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader61);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(errorPageArray13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(errorPageSet20);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(inetAddress29);
        org.junit.Assert.assertNotNull(errorPageSet30);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray33);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray37);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray44);
        org.junit.Assert.assertNull(ssl48);
        org.junit.Assert.assertNull(inetAddress53);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(mimeMappings59);
    }

    @Test
    public void test09519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09519");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory5.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory5.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory5.getSsl();
        boolean boolean11 = undertowEmbeddedServletContainerFactory5.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet12 = null;
        undertowEmbeddedServletContainerFactory5.setJspServlet(jspServlet12);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray14 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet15 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet15, errorPageArray14);
        undertowEmbeddedServletContainerFactory5.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet15);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet15);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        boolean boolean20 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        int int21 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection24 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(errorPageArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1800 + "'", int21 == 1800);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection24);
    }

    @Test
    public void test09520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09520");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        boolean boolean11 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        int int12 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 0);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        int int19 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
    }

    @Test
    public void test09521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09521");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        boolean boolean11 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        int int12 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.springframework.boot.context.embedded.Ssl ssl13 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl13);
        org.springframework.boot.context.embedded.Compression compression15 = undertowEmbeddedServletContainerFactory1.getCompression();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 52);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory19.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory19.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl24 = null;
        undertowEmbeddedServletContainerFactory19.setSsl(ssl24);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file28 = undertowEmbeddedServletContainerFactory27.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory27.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory32.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory32.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl37 = undertowEmbeddedServletContainerFactory32.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer39 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer41 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap40);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer43 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap42);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray44 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer39, initParameterConfiguringServletContextInitializer41, initParameterConfiguringServletContextInitializer43 };
        undertowEmbeddedServletContainerFactory32.addInitializers(servletContextInitializerArray44);
        undertowEmbeddedServletContainerFactory27.addInitializers(servletContextInitializerArray44);
        undertowEmbeddedServletContainerFactory19.addInitializers(servletContextInitializerArray44);
        org.springframework.core.io.ResourceLoader resourceLoader48 = null;
        undertowEmbeddedServletContainerFactory19.setResourceLoader(resourceLoader48);
        java.io.File file50 = undertowEmbeddedServletContainerFactory19.getSessionStoreDir();
        boolean boolean51 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet52 = undertowEmbeddedServletContainerFactory19.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet52);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertNull(compression15);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(ssl37);
        org.junit.Assert.assertNotNull(servletContextInitializerArray44);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(errorPageSet52);
    }

    @Test
    public void test09522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09522");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory5.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray6);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory9.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        undertowEmbeddedServletContainerFactory5.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.lang.String str14 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str15 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        int int20 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
    }

    @Test
    public void test09523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09523");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 100);
        java.lang.String str3 = undertowEmbeddedServletContainerFactory2.getDisplayName();
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file4);
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory2.setJspServletClassName("");
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test09524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09524");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory10.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory10.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl15 = undertowEmbeddedServletContainerFactory10.getSsl();
        boolean boolean16 = undertowEmbeddedServletContainerFactory10.isAccessLogEnabled();
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory10.setAccessLogDirectory(file17);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray19 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20, errorPageArray19);
        undertowEmbeddedServletContainerFactory10.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory25.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray28 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory25.addBuilderCustomizers(undertowBuilderCustomizerArray28);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray28);
        undertowEmbeddedServletContainerFactory1.setPort(32);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory36.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray41 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory40.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray41);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray45 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory44.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray45);
        undertowEmbeddedServletContainerFactory40.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray45);
        undertowEmbeddedServletContainerFactory36.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray45);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray45);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings50 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray55 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory54.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray55);
        org.springframework.boot.context.embedded.JspServlet jspServlet57 = undertowEmbeddedServletContainerFactory54.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet57);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(ssl15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(errorPageArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray28);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray41);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray45);
        org.junit.Assert.assertNotNull(mimeMappings50);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray55);
        org.junit.Assert.assertNotNull(jspServlet57);
    }

    @Test
    public void test09525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09525");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory5.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory5.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory5.setResourceLoader(resourceLoader10);
        org.springframework.boot.context.embedded.Compression compression12 = null;
        undertowEmbeddedServletContainerFactory5.setCompression(compression12);
        undertowEmbeddedServletContainerFactory5.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory17.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory17.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl22 = undertowEmbeddedServletContainerFactory17.getSsl();
        boolean boolean23 = undertowEmbeddedServletContainerFactory17.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet24 = null;
        undertowEmbeddedServletContainerFactory17.setJspServlet(jspServlet24);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        undertowEmbeddedServletContainerFactory5.setMimeMappings(mimeMappings26);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings26);
        boolean boolean29 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        int int30 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file33 = undertowEmbeddedServletContainerFactory32.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory32.setPersistSession(false);
        undertowEmbeddedServletContainerFactory32.setJspServletClassName("");
        undertowEmbeddedServletContainerFactory32.setPersistSession(false);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = undertowEmbeddedServletContainerFactory32.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings40);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.net.InetAddress inetAddress44 = null;
        undertowEmbeddedServletContainerFactory43.setAddress(inetAddress44);
        java.net.InetAddress inetAddress46 = undertowEmbeddedServletContainerFactory43.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory48.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory48.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl53 = undertowEmbeddedServletContainerFactory48.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer55 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap54);
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer57 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap56);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer59 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap58);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray60 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer55, initParameterConfiguringServletContextInitializer57, initParameterConfiguringServletContextInitializer59 };
        undertowEmbeddedServletContainerFactory48.addInitializers(servletContextInitializerArray60);
        undertowEmbeddedServletContainerFactory48.setJspServletClassName("hi!");
        int int64 = undertowEmbeddedServletContainerFactory48.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet65 = undertowEmbeddedServletContainerFactory48.getErrorPages();
        org.springframework.boot.context.embedded.JspServlet jspServlet66 = undertowEmbeddedServletContainerFactory48.getJspServlet();
        undertowEmbeddedServletContainerFactory43.setJspServlet(jspServlet66);
        java.lang.String str68 = undertowEmbeddedServletContainerFactory43.getDisplayName();
        undertowEmbeddedServletContainerFactory43.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory43.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory43.setWorkerThreads((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory43.setDisplayName("");
        org.springframework.boot.context.embedded.JspServlet jspServlet77 = undertowEmbeddedServletContainerFactory43.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet77);
        java.io.File file79 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file79);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection81 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNull(inetAddress46);
        org.junit.Assert.assertNull(ssl53);
        org.junit.Assert.assertNotNull(servletContextInitializerArray60);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet65);
        org.junit.Assert.assertNotNull(jspServlet66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(jspServlet77);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection81);
    }

    @Test
    public void test09526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09526");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 100);
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory2.setBuffersPerRegion((java.lang.Integer) 32);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory2.getDeploymentInfoCustomizers();
        java.net.InetAddress inetAddress8 = undertowEmbeddedServletContainerFactory2.getAddress();
        undertowEmbeddedServletContainerFactory2.setWorkerThreads((java.lang.Integer) 0);
        boolean boolean11 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        java.lang.Class<?> wildcardClass12 = undertowEmbeddedServletContainerFactory2.getClass();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNull(inetAddress8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test09527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09527");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory6.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13, initParameterConfiguringServletContextInitializer15, initParameterConfiguringServletContextInitializer17 };
        undertowEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage errorPage25 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray26 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage25 };
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray26);
        org.springframework.boot.context.embedded.Ssl ssl28 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl28);
        java.io.File file30 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        int int31 = undertowEmbeddedServletContainerFactory1.getPort();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertNotNull(errorPageArray26);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
    }

    @Test
    public void test09528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09528");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        boolean boolean13 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 10);
        boolean boolean16 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory20.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray21);
        java.io.File file23 = null;
        undertowEmbeddedServletContainerFactory20.setSessionStoreDir(file23);
        undertowEmbeddedServletContainerFactory20.setPort(0);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray27 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        undertowEmbeddedServletContainerFactory20.addInitializers(servletContextInitializerArray27);
        org.springframework.core.io.ResourceLoader resourceLoader29 = null;
        undertowEmbeddedServletContainerFactory20.setResourceLoader(resourceLoader29);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = undertowEmbeddedServletContainerFactory20.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory33.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory37.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory37.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl42 = undertowEmbeddedServletContainerFactory37.getSsl();
        boolean boolean43 = undertowEmbeddedServletContainerFactory37.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet44 = null;
        undertowEmbeddedServletContainerFactory37.setJspServlet(jspServlet44);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray46 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet47 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet47, errorPageArray46);
        undertowEmbeddedServletContainerFactory37.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet47);
        undertowEmbeddedServletContainerFactory33.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet47);
        undertowEmbeddedServletContainerFactory20.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet47);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet47);
        java.io.File file53 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        undertowEmbeddedServletContainerFactory1.setPersistSession(true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray21);
        org.junit.Assert.assertNotNull(servletContextInitializerArray27);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNull(ssl42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(errorPageArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(file53);
    }

    @Test
    public void test09529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09529");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory8.setPort((int) (byte) -1);
        boolean boolean11 = undertowEmbeddedServletContainerFactory8.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory13.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory13.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl18 = null;
        undertowEmbeddedServletContainerFactory13.setSsl(ssl18);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray20 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory13.addErrorPages(errorPageArray20);
        undertowEmbeddedServletContainerFactory8.addErrorPages(errorPageArray20);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray20);
        java.io.File file24 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 100);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection33 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.Ssl ssl34 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(errorPageArray20);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection33);
        org.junit.Assert.assertNull(ssl34);
    }

    @Test
    public void test09530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09530");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader3);
        org.springframework.boot.context.embedded.Ssl ssl5 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl5);
        org.springframework.core.io.ResourceLoader resourceLoader7 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader7);
        org.springframework.boot.context.embedded.Compression compression9 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression9);
        java.net.InetAddress inetAddress11 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        int int16 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 52);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(inetAddress11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1800 + "'", int16 == 1800);
    }

    @Test
    public void test09531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09531");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        java.io.File file11 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file11);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings15);
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file17);
        undertowEmbeddedServletContainerFactory1.setPort(0);
        java.net.InetAddress inetAddress21 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.lang.String str22 = undertowEmbeddedServletContainerFactory1.getContextPath();
        boolean boolean23 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        org.springframework.core.io.ResourceLoader resourceLoader24 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader24);
        java.io.File file26 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNull(inetAddress21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(file26);
    }

    @Test
    public void test09532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09532");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory12.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory12.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory12.getSsl();
        boolean boolean18 = undertowEmbeddedServletContainerFactory12.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = null;
        undertowEmbeddedServletContainerFactory12.setJspServlet(jspServlet19);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings21);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection23 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        int int26 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file29 = undertowEmbeddedServletContainerFactory28.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory28.setPersistSession(false);
        undertowEmbeddedServletContainerFactory28.setJspServletClassName("");
        java.io.File file34 = undertowEmbeddedServletContainerFactory28.getSessionStoreDir();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet35 = undertowEmbeddedServletContainerFactory28.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory37.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray42 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory41.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray42);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray46 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory45.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray46);
        undertowEmbeddedServletContainerFactory41.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray46);
        undertowEmbeddedServletContainerFactory37.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray46);
        java.lang.String str50 = undertowEmbeddedServletContainerFactory37.getContextPath();
        java.lang.String str51 = undertowEmbeddedServletContainerFactory37.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory53.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory53.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray58 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer59 = undertowEmbeddedServletContainerFactory53.getEmbeddedServletContainer(servletContextInitializerArray58);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer60 = undertowEmbeddedServletContainerFactory37.getEmbeddedServletContainer(servletContextInitializerArray58);
        undertowEmbeddedServletContainerFactory28.addInitializers(servletContextInitializerArray58);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray58);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection69 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(errorPageSet35);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray42);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray46);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(servletContextInitializerArray58);
        org.junit.Assert.assertNotNull(embeddedServletContainer59);
        org.junit.Assert.assertNotNull(embeddedServletContainer60);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection69);
    }

    @Test
    public void test09533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09533");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file8);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray10 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11, errorPageArray10);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 10);
        boolean boolean20 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray23 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Customizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(errorPageArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test09534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09534");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file2 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file6 = undertowEmbeddedServletContainerFactory5.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory5.setPersistSession(false);
        undertowEmbeddedServletContainerFactory5.setJspServletClassName("");
        java.io.File file11 = undertowEmbeddedServletContainerFactory5.getSessionStoreDir();
        java.lang.String str12 = undertowEmbeddedServletContainerFactory5.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory14.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory14.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory14.getSsl();
        boolean boolean20 = undertowEmbeddedServletContainerFactory14.isAccessLogEnabled();
        java.io.File file21 = null;
        undertowEmbeddedServletContainerFactory14.setAccessLogDirectory(file21);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray23 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24, errorPageArray23);
        undertowEmbeddedServletContainerFactory14.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24);
        undertowEmbeddedServletContainerFactory5.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24);
        boolean boolean29 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.io.File file30 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.io.File file31 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file31);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 0);
        java.lang.String str35 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1800);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(errorPageArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
    }

    @Test
    public void test09535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09535");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression8);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader10);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test09536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09536");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory6.setDocumentRoot(file7);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file11 = undertowEmbeddedServletContainerFactory10.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory10.setPersistSession(false);
        undertowEmbeddedServletContainerFactory10.setJspServletClassName("");
        java.io.File file16 = undertowEmbeddedServletContainerFactory10.getSessionStoreDir();
        java.lang.String str17 = undertowEmbeddedServletContainerFactory10.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory19.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory19.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl24 = undertowEmbeddedServletContainerFactory19.getSsl();
        boolean boolean25 = undertowEmbeddedServletContainerFactory19.isAccessLogEnabled();
        java.io.File file26 = null;
        undertowEmbeddedServletContainerFactory19.setAccessLogDirectory(file26);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray28 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet29 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet29, errorPageArray28);
        undertowEmbeddedServletContainerFactory19.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet29);
        undertowEmbeddedServletContainerFactory10.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet29);
        undertowEmbeddedServletContainerFactory6.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet29);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet29);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory36.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray39 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory36.addBuilderCustomizers(undertowBuilderCustomizerArray39);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray39);
        org.springframework.boot.context.embedded.Compression compression42 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.io.File file43 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file43);
        java.io.File file45 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file45);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(ssl24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(errorPageArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray39);
        org.junit.Assert.assertNull(compression42);
    }

    @Test
    public void test09537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09537");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) '#');
        undertowEmbeddedServletContainerFactory2.setWorkerThreads((java.lang.Integer) 32);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection5 = undertowEmbeddedServletContainerFactory2.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory2.setJspServletClassName("");
        java.net.InetAddress inetAddress8 = null;
        undertowEmbeddedServletContainerFactory2.setAddress(inetAddress8);
        org.springframework.boot.context.embedded.Compression compression10 = null;
        undertowEmbeddedServletContainerFactory2.setCompression(compression10);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory2.setErrorPages(errorPageSet12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ErrorPages must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection5);
    }

    @Test
    public void test09538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09538");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.Compression compression7 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression7);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection9 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file14 = undertowEmbeddedServletContainerFactory13.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory13.setPersistSession(false);
        undertowEmbeddedServletContainerFactory13.setJspServletClassName("");
        java.io.File file19 = undertowEmbeddedServletContainerFactory13.getSessionStoreDir();
        java.lang.String str20 = undertowEmbeddedServletContainerFactory13.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory22.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory22.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl27 = undertowEmbeddedServletContainerFactory22.getSsl();
        boolean boolean28 = undertowEmbeddedServletContainerFactory22.isAccessLogEnabled();
        java.io.File file29 = null;
        undertowEmbeddedServletContainerFactory22.setAccessLogDirectory(file29);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray31 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet32 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet32, errorPageArray31);
        undertowEmbeddedServletContainerFactory22.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet32);
        undertowEmbeddedServletContainerFactory13.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet32);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet32);
        java.io.File file37 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file37);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection40 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(1);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(ssl27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(errorPageArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection40);
    }

    @Test
    public void test09539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09539");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection11 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file14 = null;
        undertowEmbeddedServletContainerFactory13.setDocumentRoot(file14);
        org.springframework.boot.context.embedded.Ssl ssl16 = null;
        undertowEmbeddedServletContainerFactory13.setSsl(ssl16);
        int int18 = undertowEmbeddedServletContainerFactory13.getPort();
        java.net.InetAddress inetAddress19 = undertowEmbeddedServletContainerFactory13.getAddress();
        undertowEmbeddedServletContainerFactory13.setSessionTimeout(1800);
        undertowEmbeddedServletContainerFactory13.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        boolean boolean26 = undertowEmbeddedServletContainerFactory25.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory30.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray33 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory30.addBuilderCustomizers(undertowBuilderCustomizerArray33);
        undertowEmbeddedServletContainerFactory28.addBuilderCustomizers(undertowBuilderCustomizerArray33);
        undertowEmbeddedServletContainerFactory28.setRegisterDefaultServlet(true);
        boolean boolean38 = undertowEmbeddedServletContainerFactory28.isAccessLogEnabled();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray39 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet40 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet40, errorPageArray39);
        undertowEmbeddedServletContainerFactory28.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet40);
        undertowEmbeddedServletContainerFactory25.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet40);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory45.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory45.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl50 = undertowEmbeddedServletContainerFactory45.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer52 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap51);
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer54 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap53);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer56 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap55);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray57 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer52, initParameterConfiguringServletContextInitializer54, initParameterConfiguringServletContextInitializer56 };
        undertowEmbeddedServletContainerFactory45.addInitializers(servletContextInitializerArray57);
        undertowEmbeddedServletContainerFactory45.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str61 = undertowEmbeddedServletContainerFactory45.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory63.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory63.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl68 = undertowEmbeddedServletContainerFactory63.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer70 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap69);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer72 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap71);
        java.util.Map<java.lang.String, java.lang.String> strMap73 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer74 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap73);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray75 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer70, initParameterConfiguringServletContextInitializer72, initParameterConfiguringServletContextInitializer74 };
        undertowEmbeddedServletContainerFactory63.addInitializers(servletContextInitializerArray75);
        undertowEmbeddedServletContainerFactory63.setJspServletClassName("hi!");
        int int79 = undertowEmbeddedServletContainerFactory63.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet80 = undertowEmbeddedServletContainerFactory63.getErrorPages();
        undertowEmbeddedServletContainerFactory45.setErrorPages(errorPageSet80);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory83 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file84 = null;
        undertowEmbeddedServletContainerFactory83.setAccessLogDirectory(file84);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray86 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory83.addErrorPages(errorPageArray86);
        undertowEmbeddedServletContainerFactory45.addErrorPages(errorPageArray86);
        undertowEmbeddedServletContainerFactory25.addErrorPages(errorPageArray86);
        undertowEmbeddedServletContainerFactory13.addErrorPages(errorPageArray86);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray86);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
        java.io.File file94 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file94);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection11);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
        org.junit.Assert.assertNull(inetAddress19);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(errorPageArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(ssl50);
        org.junit.Assert.assertNotNull(servletContextInitializerArray57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNull(ssl68);
        org.junit.Assert.assertNotNull(servletContextInitializerArray75);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet80);
        org.junit.Assert.assertNotNull(errorPageArray86);
    }

    @Test
    public void test09540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09540");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(1800);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1800);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection6 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file12 = undertowEmbeddedServletContainerFactory11.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory11.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory16.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory16.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl21 = undertowEmbeddedServletContainerFactory16.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer23 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap22);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer25 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap24);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer27 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap26);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray28 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer23, initParameterConfiguringServletContextInitializer25, initParameterConfiguringServletContextInitializer27 };
        undertowEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray28);
        undertowEmbeddedServletContainerFactory11.addInitializers(servletContextInitializerArray28);
        boolean boolean31 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        boolean boolean32 = undertowEmbeddedServletContainerFactory11.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory11.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file37 = undertowEmbeddedServletContainerFactory36.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory36.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory41.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory41.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl46 = undertowEmbeddedServletContainerFactory41.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer48 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap47);
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer50 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap49);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer52 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap51);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray53 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer48, initParameterConfiguringServletContextInitializer50, initParameterConfiguringServletContextInitializer52 };
        undertowEmbeddedServletContainerFactory41.addInitializers(servletContextInitializerArray53);
        undertowEmbeddedServletContainerFactory36.addInitializers(servletContextInitializerArray53);
        undertowEmbeddedServletContainerFactory36.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory36.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage errorPage60 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray61 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage60 };
        undertowEmbeddedServletContainerFactory36.addErrorPages(errorPageArray61);
        undertowEmbeddedServletContainerFactory11.addErrorPages(errorPageArray61);
        java.lang.String str64 = undertowEmbeddedServletContainerFactory11.getContextPath();
        org.springframework.boot.context.embedded.JspServlet jspServlet65 = undertowEmbeddedServletContainerFactory11.getJspServlet();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet66 = undertowEmbeddedServletContainerFactory11.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet66);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings68 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection6);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(ssl21);
        org.junit.Assert.assertNotNull(servletContextInitializerArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(ssl46);
        org.junit.Assert.assertNotNull(servletContextInitializerArray53);
        org.junit.Assert.assertNotNull(errorPageArray61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(jspServlet65);
        org.junit.Assert.assertNotNull(errorPageSet66);
        org.junit.Assert.assertNotNull(mimeMappings68);
    }

    @Test
    public void test09541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09541");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer8 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap7);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer10 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer12 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap11);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer8, initParameterConfiguringServletContextInitializer10, initParameterConfiguringServletContextInitializer12 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray13);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str17 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 97);
        org.springframework.boot.context.embedded.Compression compression22 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection26 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.lang.String str27 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertNull(compression22);
        org.junit.Assert.assertNotNull(errorPageSet23);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
    }

    @Test
    public void test09542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09542");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        undertowEmbeddedServletContainerFactory1.setPersistSession(true);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet18 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(errorPageSet18);
    }

    @Test
    public void test09543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09543");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection8 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection9 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file12 = undertowEmbeddedServletContainerFactory11.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory11.setPersistSession(false);
        undertowEmbeddedServletContainerFactory11.setJspServletClassName("");
        java.io.File file17 = undertowEmbeddedServletContainerFactory11.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory11.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file25 = undertowEmbeddedServletContainerFactory24.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory24.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory29.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory29.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl34 = undertowEmbeddedServletContainerFactory29.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer36 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap35);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer38 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap37);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer40 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap39);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray41 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer36, initParameterConfiguringServletContextInitializer38, initParameterConfiguringServletContextInitializer40 };
        undertowEmbeddedServletContainerFactory29.addInitializers(servletContextInitializerArray41);
        undertowEmbeddedServletContainerFactory24.addInitializers(servletContextInitializerArray41);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory45.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory45.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl50 = undertowEmbeddedServletContainerFactory45.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer52 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap51);
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer54 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap53);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer56 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap55);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray57 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer52, initParameterConfiguringServletContextInitializer54, initParameterConfiguringServletContextInitializer56 };
        undertowEmbeddedServletContainerFactory45.addInitializers(servletContextInitializerArray57);
        undertowEmbeddedServletContainerFactory45.setJspServletClassName("hi!");
        int int61 = undertowEmbeddedServletContainerFactory45.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet62 = undertowEmbeddedServletContainerFactory45.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory64.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray69 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory68.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray69);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray73 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory72.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray73);
        undertowEmbeddedServletContainerFactory68.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray73);
        undertowEmbeddedServletContainerFactory64.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray73);
        java.lang.String str77 = undertowEmbeddedServletContainerFactory64.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory79 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory79.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory79.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray84 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer85 = undertowEmbeddedServletContainerFactory79.getEmbeddedServletContainer(servletContextInitializerArray84);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer86 = undertowEmbeddedServletContainerFactory64.getEmbeddedServletContainer(servletContextInitializerArray84);
        undertowEmbeddedServletContainerFactory45.addInitializers(servletContextInitializerArray84);
        undertowEmbeddedServletContainerFactory24.addInitializers(servletContextInitializerArray84);
        undertowEmbeddedServletContainerFactory22.addInitializers(servletContextInitializerArray84);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer90 = undertowEmbeddedServletContainerFactory11.getEmbeddedServletContainer(servletContextInitializerArray84);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray84);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        java.lang.String str94 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setPort(1);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.io.File file99 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(ssl34);
        org.junit.Assert.assertNotNull(servletContextInitializerArray41);
        org.junit.Assert.assertNull(ssl50);
        org.junit.Assert.assertNotNull(servletContextInitializerArray57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet62);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray69);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray73);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(servletContextInitializerArray84);
        org.junit.Assert.assertNotNull(embeddedServletContainer85);
        org.junit.Assert.assertNotNull(embeddedServletContainer86);
        org.junit.Assert.assertNotNull(embeddedServletContainer90);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "" + "'", str94, "");
        org.junit.Assert.assertNull(file99);
    }

    @Test
    public void test09544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09544");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        int int11 = undertowEmbeddedServletContainerFactory1.getPort();
        undertowEmbeddedServletContainerFactory1.setPort(0);
        java.lang.String str14 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory16.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray17);
        java.io.File file19 = null;
        undertowEmbeddedServletContainerFactory16.setSessionStoreDir(file19);
        undertowEmbeddedServletContainerFactory16.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.JspServlet jspServlet23 = undertowEmbeddedServletContainerFactory16.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet23);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 97);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray17);
        org.junit.Assert.assertNotNull(jspServlet23);
    }

    @Test
    public void test09545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09545");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory12.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory12.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        undertowEmbeddedServletContainerFactory10.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory20.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray21);
        java.io.File file23 = null;
        undertowEmbeddedServletContainerFactory20.setSessionStoreDir(file23);
        undertowEmbeddedServletContainerFactory20.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory30.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray33 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory30.addBuilderCustomizers(undertowBuilderCustomizerArray33);
        undertowEmbeddedServletContainerFactory28.addBuilderCustomizers(undertowBuilderCustomizerArray33);
        org.springframework.boot.context.embedded.Ssl ssl36 = null;
        undertowEmbeddedServletContainerFactory28.setSsl(ssl36);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory39.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory39.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl44 = undertowEmbeddedServletContainerFactory39.getSsl();
        boolean boolean45 = undertowEmbeddedServletContainerFactory39.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet46 = null;
        undertowEmbeddedServletContainerFactory39.setJspServlet(jspServlet46);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings48 = undertowEmbeddedServletContainerFactory39.getMimeMappings();
        undertowEmbeddedServletContainerFactory28.setMimeMappings(mimeMappings48);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection50 = undertowEmbeddedServletContainerFactory28.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory28.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory54.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory54.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl59 = null;
        undertowEmbeddedServletContainerFactory54.setSsl(ssl59);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray61 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory54.addErrorPages(errorPageArray61);
        undertowEmbeddedServletContainerFactory28.addErrorPages(errorPageArray61);
        undertowEmbeddedServletContainerFactory20.addErrorPages(errorPageArray61);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray61);
        org.springframework.boot.context.embedded.Ssl ssl66 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl66);
        org.springframework.boot.context.embedded.Ssl ssl68 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray33);
        org.junit.Assert.assertNull(ssl44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(mimeMappings48);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection50);
        org.junit.Assert.assertNotNull(errorPageArray61);
        org.junit.Assert.assertNull(ssl68);
    }

    @Test
    public void test09546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09546");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.net.InetAddress inetAddress2 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress2);
        java.net.InetAddress inetAddress4 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory6.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13, initParameterConfiguringServletContextInitializer15, initParameterConfiguringServletContextInitializer17 };
        undertowEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory6.setJspServletClassName("hi!");
        int int22 = undertowEmbeddedServletContainerFactory6.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = undertowEmbeddedServletContainerFactory6.getErrorPages();
        org.springframework.boot.context.embedded.JspServlet jspServlet24 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet24);
        java.lang.String str26 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        java.lang.String str29 = undertowEmbeddedServletContainerFactory1.getContextPath();
        int int30 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file33 = undertowEmbeddedServletContainerFactory32.getSessionStoreDir();
        java.lang.String str34 = undertowEmbeddedServletContainerFactory32.getContextPath();
        java.net.InetAddress inetAddress35 = undertowEmbeddedServletContainerFactory32.getAddress();
        undertowEmbeddedServletContainerFactory32.setIoThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory32.setRegisterDefaultServlet(true);
        boolean boolean40 = undertowEmbeddedServletContainerFactory32.isRegisterDefaultServlet();
        java.io.File file41 = null;
        undertowEmbeddedServletContainerFactory32.setSessionStoreDir(file41);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory44.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory44.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader49 = null;
        undertowEmbeddedServletContainerFactory44.setResourceLoader(resourceLoader49);
        org.springframework.boot.context.embedded.Compression compression51 = null;
        undertowEmbeddedServletContainerFactory44.setCompression(compression51);
        undertowEmbeddedServletContainerFactory44.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings55 = undertowEmbeddedServletContainerFactory44.getMimeMappings();
        undertowEmbeddedServletContainerFactory44.setBufferSize((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory44.setAccessLogEnabled(true);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings60 = undertowEmbeddedServletContainerFactory44.getMimeMappings();
        undertowEmbeddedServletContainerFactory32.setMimeMappings(mimeMappings60);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings60);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        org.springframework.boot.context.embedded.JspServlet jspServlet65 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        org.junit.Assert.assertNull(inetAddress4);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet23);
        org.junit.Assert.assertNotNull(jspServlet24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 97 + "'", int30 == 97);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(inetAddress35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(mimeMappings55);
        org.junit.Assert.assertNotNull(mimeMappings60);
        org.junit.Assert.assertNotNull(jspServlet65);
    }

    @Test
    public void test09547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09547");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression8);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.Ssl ssl12 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.io.File file13 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory15.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray16);
        org.springframework.boot.context.embedded.Ssl ssl18 = null;
        undertowEmbeddedServletContainerFactory15.setSsl(ssl18);
        undertowEmbeddedServletContainerFactory15.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = undertowEmbeddedServletContainerFactory15.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet22);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection24 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.junit.Assert.assertNull(ssl12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray16);
        org.junit.Assert.assertNotNull(errorPageSet22);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection24);
    }

    @Test
    public void test09548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09548");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory12.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory12.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory12.getSsl();
        boolean boolean18 = undertowEmbeddedServletContainerFactory12.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = null;
        undertowEmbeddedServletContainerFactory12.setJspServlet(jspServlet19);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings21);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection23 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory27.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory27.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl32 = null;
        undertowEmbeddedServletContainerFactory27.setSsl(ssl32);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray34 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory27.addErrorPages(errorPageArray34);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray34);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        int int39 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection23);
        org.junit.Assert.assertNotNull(errorPageArray34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1800 + "'", int39 == 1800);
    }

    @Test
    public void test09549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09549");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory5.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray6);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory9.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        undertowEmbeddedServletContainerFactory5.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.lang.String str14 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        java.net.InetAddress inetAddress17 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress17);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file21 = undertowEmbeddedServletContainerFactory20.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory20.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl24 = null;
        undertowEmbeddedServletContainerFactory20.setSsl(ssl24);
        java.lang.String str26 = undertowEmbeddedServletContainerFactory20.getContextPath();
        int int27 = undertowEmbeddedServletContainerFactory20.getSessionTimeout();
        java.net.InetAddress inetAddress28 = null;
        undertowEmbeddedServletContainerFactory20.setAddress(inetAddress28);
        org.springframework.boot.context.embedded.Compression compression30 = null;
        undertowEmbeddedServletContainerFactory20.setCompression(compression30);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory33.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory33.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl38 = undertowEmbeddedServletContainerFactory33.getSsl();
        boolean boolean39 = undertowEmbeddedServletContainerFactory33.isAccessLogEnabled();
        java.io.File file40 = null;
        undertowEmbeddedServletContainerFactory33.setAccessLogDirectory(file40);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray42 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet43 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet43, errorPageArray42);
        undertowEmbeddedServletContainerFactory33.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet43);
        undertowEmbeddedServletContainerFactory33.setAccessLogPattern("");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings48 = undertowEmbeddedServletContainerFactory33.getMimeMappings();
        boolean boolean49 = undertowEmbeddedServletContainerFactory33.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray52 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory51.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray52);
        org.springframework.boot.context.embedded.Ssl ssl54 = null;
        undertowEmbeddedServletContainerFactory51.setSsl(ssl54);
        org.springframework.boot.context.embedded.Ssl ssl56 = undertowEmbeddedServletContainerFactory51.getSsl();
        undertowEmbeddedServletContainerFactory51.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory51.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection61 = undertowEmbeddedServletContainerFactory51.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory51.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory65.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray70 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory69.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray70);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory73 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray74 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory73.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray74);
        undertowEmbeddedServletContainerFactory69.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray74);
        undertowEmbeddedServletContainerFactory65.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray74);
        java.lang.String str78 = undertowEmbeddedServletContainerFactory65.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory80 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory80.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory80.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray85 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer86 = undertowEmbeddedServletContainerFactory80.getEmbeddedServletContainer(servletContextInitializerArray85);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer87 = undertowEmbeddedServletContainerFactory65.getEmbeddedServletContainer(servletContextInitializerArray85);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer88 = undertowEmbeddedServletContainerFactory51.getEmbeddedServletContainer(servletContextInitializerArray85);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer undertowDeploymentInfoCustomizer89 = null;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray90 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] { undertowDeploymentInfoCustomizer89 };
        undertowEmbeddedServletContainerFactory51.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray90);
        undertowEmbeddedServletContainerFactory33.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray90);
        undertowEmbeddedServletContainerFactory20.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray90);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray90);
        int int95 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setPort((int) '#');
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1800 + "'", int27 == 1800);
        org.junit.Assert.assertNull(ssl38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(errorPageArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(mimeMappings48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray52);
        org.junit.Assert.assertNull(ssl56);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection61);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray70);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray74);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(servletContextInitializerArray85);
        org.junit.Assert.assertNotNull(embeddedServletContainer86);
        org.junit.Assert.assertNotNull(embeddedServletContainer87);
        org.junit.Assert.assertNotNull(embeddedServletContainer88);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray90);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 1800 + "'", int95 == 1800);
    }

    @Test
    public void test09550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09550");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory12.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory12.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory12.getSsl();
        boolean boolean18 = undertowEmbeddedServletContainerFactory12.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = null;
        undertowEmbeddedServletContainerFactory12.setJspServlet(jspServlet19);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings21);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection23 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory27.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory27.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl32 = null;
        undertowEmbeddedServletContainerFactory27.setSsl(ssl32);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray34 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory27.addErrorPages(errorPageArray34);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray34);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        java.lang.String str41 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection23);
        org.junit.Assert.assertNotNull(errorPageArray34);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
    }

    @Test
    public void test09551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09551");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory12.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory12.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory12.getSsl();
        boolean boolean18 = undertowEmbeddedServletContainerFactory12.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = null;
        undertowEmbeddedServletContainerFactory12.setJspServlet(jspServlet19);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings21);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 10);
        java.net.InetAddress inetAddress25 = undertowEmbeddedServletContainerFactory1.getAddress();
        boolean boolean26 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNull(inetAddress25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test09552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09552");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet8 = null;
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet8);
        java.net.InetAddress inetAddress10 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.Compression compression12 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression12);
        java.lang.String str14 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory16.setPort((int) (byte) -1);
        java.io.File file19 = null;
        undertowEmbeddedServletContainerFactory16.setSessionStoreDir(file19);
        org.springframework.boot.context.embedded.ErrorPage errorPage21 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray22 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage21 };
        undertowEmbeddedServletContainerFactory16.addErrorPages(errorPageArray22);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray22);
        java.io.File file25 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file25);
        org.springframework.core.io.ResourceLoader resourceLoader27 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader27);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(inetAddress10);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(errorPageArray22);
    }

    @Test
    public void test09553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09553");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        boolean boolean8 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader12 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader12);
        boolean boolean14 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        java.lang.Class<?> wildcardClass17 = undertowEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test09554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09554");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory6.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13, initParameterConfiguringServletContextInitializer15, initParameterConfiguringServletContextInitializer17 };
        undertowEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.Compression compression27 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.io.File file28 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file28);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection33 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray36 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory35.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        org.springframework.boot.context.embedded.Ssl ssl38 = null;
        undertowEmbeddedServletContainerFactory35.setSsl(ssl38);
        org.springframework.boot.context.embedded.Ssl ssl40 = undertowEmbeddedServletContainerFactory35.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray43 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory42.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray43);
        org.springframework.boot.context.embedded.Ssl ssl45 = null;
        undertowEmbeddedServletContainerFactory42.setSsl(ssl45);
        undertowEmbeddedServletContainerFactory42.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file51 = null;
        undertowEmbeddedServletContainerFactory50.setAccessLogDirectory(file51);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray53 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory50.addErrorPages(errorPageArray53);
        org.springframework.boot.context.embedded.Compression compression55 = undertowEmbeddedServletContainerFactory50.getCompression();
        org.springframework.boot.context.embedded.JspServlet jspServlet56 = undertowEmbeddedServletContainerFactory50.getJspServlet();
        undertowEmbeddedServletContainerFactory42.setJspServlet(jspServlet56);
        undertowEmbeddedServletContainerFactory35.setJspServlet(jspServlet56);
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet56);
        org.springframework.boot.context.embedded.Compression compression60 = undertowEmbeddedServletContainerFactory1.getCompression();
        boolean boolean61 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        boolean boolean62 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertNull(compression27);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection33);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray36);
        org.junit.Assert.assertNull(ssl40);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray43);
        org.junit.Assert.assertNotNull(errorPageArray53);
        org.junit.Assert.assertNull(compression55);
        org.junit.Assert.assertNotNull(jspServlet56);
        org.junit.Assert.assertNull(compression60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test09555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09555");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer8 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap7);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer10 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer12 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap11);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer8, initParameterConfiguringServletContextInitializer10, initParameterConfiguringServletContextInitializer12 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray13);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1800);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer22 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap21);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer24 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap23);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray25 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer22, initParameterConfiguringServletContextInitializer24 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray25);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory28.setJspServletClassName("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory32.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory32.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl37 = undertowEmbeddedServletContainerFactory32.getSsl();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet38 = undertowEmbeddedServletContainerFactory32.getErrorPages();
        undertowEmbeddedServletContainerFactory28.setErrorPages(errorPageSet38);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet38);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings41 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertNotNull(servletContextInitializerArray25);
        org.junit.Assert.assertNull(ssl37);
        org.junit.Assert.assertNotNull(errorPageSet38);
        org.junit.Assert.assertNotNull(mimeMappings41);
    }

    @Test
    public void test09556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09556");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test09557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09557");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file4);
        undertowEmbeddedServletContainerFactory1.setPort(0);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray8 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray8);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        int int13 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory15.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray16);
        org.springframework.boot.context.embedded.Ssl ssl18 = null;
        undertowEmbeddedServletContainerFactory15.setSsl(ssl18);
        undertowEmbeddedServletContainerFactory15.setPort(0);
        java.io.File file22 = null;
        undertowEmbeddedServletContainerFactory15.setSessionStoreDir(file22);
        org.springframework.boot.context.embedded.Compression compression24 = null;
        undertowEmbeddedServletContainerFactory15.setCompression(compression24);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray26 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory15.addErrorPages(errorPageArray26);
        org.springframework.boot.context.embedded.JspServlet jspServlet28 = undertowEmbeddedServletContainerFactory15.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet28);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet30 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 1);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection35 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray8);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray16);
        org.junit.Assert.assertNotNull(errorPageArray26);
        org.junit.Assert.assertNotNull(jspServlet28);
        org.junit.Assert.assertNotNull(errorPageSet30);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection35);
    }

    @Test
    public void test09558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09558");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        boolean boolean11 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        int int12 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 0);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        java.io.File file21 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file21);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        boolean boolean27 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory31.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray34 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory31.addBuilderCustomizers(undertowBuilderCustomizerArray34);
        undertowEmbeddedServletContainerFactory29.addBuilderCustomizers(undertowBuilderCustomizerArray34);
        undertowEmbeddedServletContainerFactory29.setAccessLogPattern("hi!");
        java.io.File file39 = null;
        undertowEmbeddedServletContainerFactory29.setAccessLogDirectory(file39);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = undertowEmbeddedServletContainerFactory42.getMimeMappings();
        undertowEmbeddedServletContainerFactory29.setMimeMappings(mimeMappings43);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings43);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray34);
        org.junit.Assert.assertNotNull(mimeMappings43);
    }

    @Test
    public void test09559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09559");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory12.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory12.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory12.getSsl();
        boolean boolean18 = undertowEmbeddedServletContainerFactory12.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = null;
        undertowEmbeddedServletContainerFactory12.setJspServlet(jspServlet19);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings21);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.Ssl ssl25 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection26 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory28.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory28.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl33 = null;
        undertowEmbeddedServletContainerFactory28.setSsl(ssl33);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray35 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory28.addErrorPages(errorPageArray35);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray35);
        java.lang.String str38 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNull(ssl25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection26);
        org.junit.Assert.assertNotNull(errorPageArray35);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test09560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09560");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 0);
        java.lang.String str3 = undertowEmbeddedServletContainerFactory2.getDisplayName();
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory2.getJspServlet();
        undertowEmbeddedServletContainerFactory2.setJspServletClassName("");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(jspServlet4);
    }

    @Test
    public void test09561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09561");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        boolean boolean3 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        java.lang.Class<?> wildcardClass9 = undertowEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test09562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09562");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file8);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection10 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.Compression compression11 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression11);
        org.springframework.boot.context.embedded.Compression compression13 = undertowEmbeddedServletContainerFactory1.getCompression();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 100);
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1800);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        java.io.File file24 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 32);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection10);
        org.junit.Assert.assertNull(compression13);
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNull(file24);
    }

    @Test
    public void test09563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09563");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory6.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13, initParameterConfiguringServletContextInitializer15, initParameterConfiguringServletContextInitializer17 };
        undertowEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage errorPage25 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray26 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage25 };
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray26);
        org.springframework.boot.context.embedded.Ssl ssl28 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl28);
        org.springframework.core.io.ResourceLoader resourceLoader30 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader30);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        int int34 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        boolean boolean35 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertNotNull(errorPageArray26);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1800 + "'", int34 == 1800);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test09564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09564");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl6 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl6);
        undertowEmbeddedServletContainerFactory1.setPersistSession(true);
        org.springframework.boot.context.embedded.Compression compression10 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression10);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (short) 0);
        boolean boolean16 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection17 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection17);
    }

    @Test
    public void test09565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09565");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory10.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray11);
        org.springframework.boot.context.embedded.Ssl ssl13 = null;
        undertowEmbeddedServletContainerFactory10.setSsl(ssl13);
        undertowEmbeddedServletContainerFactory10.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = undertowEmbeddedServletContainerFactory10.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader18 = null;
        undertowEmbeddedServletContainerFactory10.setResourceLoader(resourceLoader18);
        java.lang.String str20 = undertowEmbeddedServletContainerFactory10.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray23 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory22.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray23);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray27 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory26.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        undertowEmbeddedServletContainerFactory22.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        undertowEmbeddedServletContainerFactory10.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        org.springframework.boot.context.embedded.Ssl ssl32 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1);
        java.lang.String str35 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setPersistSession(true);
        int int38 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        int int39 = undertowEmbeddedServletContainerFactory1.getPort();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray11);
        org.junit.Assert.assertNotNull(errorPageSet17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray23);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray27);
        org.junit.Assert.assertNull(ssl32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1800 + "'", int38 == 1800);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
    }

    @Test
    public void test09566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09566");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.Compression compression7 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression7);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet9 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(errorPageSet9);
    }

    @Test
    public void test09567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09567");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer8 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap7);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer10 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer12 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap11);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer8, initParameterConfiguringServletContextInitializer10, initParameterConfiguringServletContextInitializer12 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray13);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str17 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory1.getAddress();
        boolean boolean19 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        boolean boolean20 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.io.File file21 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file21);
        java.io.File file23 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file28 = undertowEmbeddedServletContainerFactory27.getSessionStoreDir();
        boolean boolean29 = undertowEmbeddedServletContainerFactory27.isAccessLogEnabled();
        java.io.File file30 = null;
        undertowEmbeddedServletContainerFactory27.setAccessLogDirectory(file30);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection32 = undertowEmbeddedServletContainerFactory27.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory34.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory34.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl39 = null;
        undertowEmbeddedServletContainerFactory34.setSsl(ssl39);
        undertowEmbeddedServletContainerFactory34.setPersistSession(true);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = undertowEmbeddedServletContainerFactory34.getMimeMappings();
        undertowEmbeddedServletContainerFactory27.setMimeMappings(mimeMappings43);
        java.io.File file45 = null;
        undertowEmbeddedServletContainerFactory27.setAccessLogDirectory(file45);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 97);
        java.lang.String str50 = undertowEmbeddedServletContainerFactory49.getDisplayName();
        java.lang.String str51 = undertowEmbeddedServletContainerFactory49.getContextPath();
        undertowEmbeddedServletContainerFactory49.setDisplayName("hi!");
        org.springframework.boot.context.embedded.Ssl ssl54 = undertowEmbeddedServletContainerFactory49.getSsl();
        java.lang.String str55 = undertowEmbeddedServletContainerFactory49.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 0);
        undertowEmbeddedServletContainerFactory58.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory62.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray65 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory62.addBuilderCustomizers(undertowBuilderCustomizerArray65);
        undertowEmbeddedServletContainerFactory58.addBuilderCustomizers(undertowBuilderCustomizerArray65);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory69.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory73 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray74 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory73.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray74);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray78 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory77.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray78);
        undertowEmbeddedServletContainerFactory73.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray78);
        undertowEmbeddedServletContainerFactory69.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray78);
        undertowEmbeddedServletContainerFactory58.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray78);
        undertowEmbeddedServletContainerFactory49.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray78);
        undertowEmbeddedServletContainerFactory27.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray78);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray78);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection32);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(ssl54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray65);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray74);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray78);
    }

    @Test
    public void test09568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09568");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
    }

    @Test
    public void test09569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09569");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer8 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap7);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer10 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer12 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap11);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer8, initParameterConfiguringServletContextInitializer10, initParameterConfiguringServletContextInitializer12 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray13);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        int int19 = undertowEmbeddedServletContainerFactory1.getPort();
        java.io.File file20 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file20);
        java.util.concurrent.TimeUnit timeUnit23 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout(32, timeUnit23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test09570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09570");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory12.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory12.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory12.getSsl();
        boolean boolean18 = undertowEmbeddedServletContainerFactory12.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = null;
        undertowEmbeddedServletContainerFactory12.setJspServlet(jspServlet19);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings21);
        java.net.InetAddress inetAddress23 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 52);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNull(inetAddress23);
    }

    @Test
    public void test09571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09571");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        boolean boolean11 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        int int12 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader15);
        boolean boolean17 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test09572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09572");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.lang.String str3 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.boot.context.embedded.Compression compression4 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.net.InetAddress inetAddress5 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress5);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory8.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory8.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        undertowEmbeddedServletContainerFactory8.setResourceLoader(resourceLoader13);
        java.lang.String str15 = undertowEmbeddedServletContainerFactory8.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory17.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray18);
        org.springframework.boot.context.embedded.Ssl ssl20 = null;
        undertowEmbeddedServletContainerFactory17.setSsl(ssl20);
        undertowEmbeddedServletContainerFactory17.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = undertowEmbeddedServletContainerFactory17.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader25 = null;
        undertowEmbeddedServletContainerFactory17.setResourceLoader(resourceLoader25);
        java.lang.String str27 = undertowEmbeddedServletContainerFactory17.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray30 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory29.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray30);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray34 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory33.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray34);
        undertowEmbeddedServletContainerFactory29.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray34);
        undertowEmbeddedServletContainerFactory17.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray34);
        undertowEmbeddedServletContainerFactory8.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray34);
        org.springframework.boot.context.embedded.Ssl ssl39 = undertowEmbeddedServletContainerFactory8.getSsl();
        undertowEmbeddedServletContainerFactory8.setDisplayName("");
        undertowEmbeddedServletContainerFactory8.setPersistSession(false);
        org.springframework.core.io.ResourceLoader resourceLoader44 = null;
        undertowEmbeddedServletContainerFactory8.setResourceLoader(resourceLoader44);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray48 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory47.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray48);
        undertowEmbeddedServletContainerFactory47.setUseForwardHeaders(true);
        undertowEmbeddedServletContainerFactory47.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory55.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory55.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl60 = undertowEmbeddedServletContainerFactory55.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap61 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer62 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap61);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer64 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap63);
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer66 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap65);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray67 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer62, initParameterConfiguringServletContextInitializer64, initParameterConfiguringServletContextInitializer66 };
        undertowEmbeddedServletContainerFactory55.addInitializers(servletContextInitializerArray67);
        undertowEmbeddedServletContainerFactory55.setJspServletClassName("hi!");
        int int71 = undertowEmbeddedServletContainerFactory55.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet72 = undertowEmbeddedServletContainerFactory55.getErrorPages();
        org.springframework.boot.context.embedded.JspServlet jspServlet73 = undertowEmbeddedServletContainerFactory55.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray74 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory55.addBuilderCustomizers(undertowBuilderCustomizerArray74);
        undertowEmbeddedServletContainerFactory47.addBuilderCustomizers(undertowBuilderCustomizerArray74);
        undertowEmbeddedServletContainerFactory8.addBuilderCustomizers(undertowBuilderCustomizerArray74);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray74);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/' and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(compression4);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray18);
        org.junit.Assert.assertNotNull(errorPageSet24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray30);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray34);
        org.junit.Assert.assertNull(ssl39);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray48);
        org.junit.Assert.assertNull(ssl60);
        org.junit.Assert.assertNotNull(servletContextInitializerArray67);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet72);
        org.junit.Assert.assertNotNull(jspServlet73);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray74);
    }

    @Test
    public void test09573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09573");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file4);
        org.springframework.boot.context.embedded.Ssl ssl6 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl6);
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file8);
        org.springframework.boot.context.embedded.Compression compression10 = undertowEmbeddedServletContainerFactory1.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory12.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory12.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory12.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer19 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap18);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer21 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap20);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer23 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap22);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray24 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer19, initParameterConfiguringServletContextInitializer21, initParameterConfiguringServletContextInitializer23 };
        undertowEmbeddedServletContainerFactory12.addInitializers(servletContextInitializerArray24);
        undertowEmbeddedServletContainerFactory12.setJspServletClassName("hi!");
        int int28 = undertowEmbeddedServletContainerFactory12.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file31 = undertowEmbeddedServletContainerFactory30.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory30.setPersistSession(false);
        undertowEmbeddedServletContainerFactory30.setJspServletClassName("");
        java.io.File file36 = undertowEmbeddedServletContainerFactory30.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory30.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory30.setBufferSize((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.JspServlet jspServlet41 = undertowEmbeddedServletContainerFactory30.getJspServlet();
        undertowEmbeddedServletContainerFactory12.setJspServlet(jspServlet41);
        java.lang.String str43 = undertowEmbeddedServletContainerFactory12.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray46 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory45.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray46);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory49.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory49.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader54 = null;
        undertowEmbeddedServletContainerFactory49.setResourceLoader(resourceLoader54);
        org.springframework.boot.context.embedded.Compression compression56 = null;
        undertowEmbeddedServletContainerFactory49.setCompression(compression56);
        undertowEmbeddedServletContainerFactory49.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory61.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory61.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl66 = undertowEmbeddedServletContainerFactory61.getSsl();
        boolean boolean67 = undertowEmbeddedServletContainerFactory61.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet68 = null;
        undertowEmbeddedServletContainerFactory61.setJspServlet(jspServlet68);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings70 = undertowEmbeddedServletContainerFactory61.getMimeMappings();
        undertowEmbeddedServletContainerFactory49.setMimeMappings(mimeMappings70);
        undertowEmbeddedServletContainerFactory45.setMimeMappings(mimeMappings70);
        boolean boolean73 = undertowEmbeddedServletContainerFactory45.isPersistSession();
        undertowEmbeddedServletContainerFactory45.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory77.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory77.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl82 = undertowEmbeddedServletContainerFactory77.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap83 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer84 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap83);
        java.util.Map<java.lang.String, java.lang.String> strMap85 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer86 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap85);
        java.util.Map<java.lang.String, java.lang.String> strMap87 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer88 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap87);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray89 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer84, initParameterConfiguringServletContextInitializer86, initParameterConfiguringServletContextInitializer88 };
        undertowEmbeddedServletContainerFactory77.addInitializers(servletContextInitializerArray89);
        undertowEmbeddedServletContainerFactory77.setJspServletClassName("hi!");
        int int93 = undertowEmbeddedServletContainerFactory77.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet94 = undertowEmbeddedServletContainerFactory77.getErrorPages();
        undertowEmbeddedServletContainerFactory45.setErrorPages(errorPageSet94);
        undertowEmbeddedServletContainerFactory12.setErrorPages(errorPageSet94);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet94);
        org.junit.Assert.assertNull(compression10);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(jspServlet41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray46);
        org.junit.Assert.assertNull(ssl66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(mimeMappings70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(ssl82);
        org.junit.Assert.assertNotNull(servletContextInitializerArray89);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet94);
    }

    @Test
    public void test09574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09574");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet8 = null;
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet8);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray10 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11, errorPageArray10);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11);
        org.springframework.boot.context.embedded.Compression compression14 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression14);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(errorPageArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test09575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09575");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet8 = null;
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet8);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray10 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11, errorPageArray10);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11);
        org.springframework.boot.context.embedded.JspServlet jspServlet14 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        org.springframework.boot.context.embedded.Compression compression15 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.io.File file16 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file16);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection20 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.Ssl ssl21 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.Compression compression22 = undertowEmbeddedServletContainerFactory1.getCompression();
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(errorPageArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(jspServlet14);
        org.junit.Assert.assertNull(compression15);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection20);
        org.junit.Assert.assertNull(ssl21);
        org.junit.Assert.assertNull(compression22);
    }

    @Test
    public void test09576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09576");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory5.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray6);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory9.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        undertowEmbeddedServletContainerFactory5.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.lang.String str14 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 32);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test09577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09577");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) ' ');
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        java.net.InetAddress inetAddress6 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress6);
        java.io.File file8 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPort((int) (short) -1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory12.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray13);
        org.springframework.boot.context.embedded.Ssl ssl15 = null;
        undertowEmbeddedServletContainerFactory12.setSsl(ssl15);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory12.getSsl();
        undertowEmbeddedServletContainerFactory12.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory12.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection22 = undertowEmbeddedServletContainerFactory12.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory12.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory26.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray31 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory30.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray31);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray35 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory34.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray35);
        undertowEmbeddedServletContainerFactory30.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray35);
        undertowEmbeddedServletContainerFactory26.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray35);
        java.lang.String str39 = undertowEmbeddedServletContainerFactory26.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory41.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory41.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray46 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer47 = undertowEmbeddedServletContainerFactory41.getEmbeddedServletContainer(servletContextInitializerArray46);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer48 = undertowEmbeddedServletContainerFactory26.getEmbeddedServletContainer(servletContextInitializerArray46);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer49 = undertowEmbeddedServletContainerFactory12.getEmbeddedServletContainer(servletContextInitializerArray46);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray52 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory51.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray52);
        org.springframework.boot.context.embedded.Ssl ssl54 = null;
        undertowEmbeddedServletContainerFactory51.setSsl(ssl54);
        org.springframework.boot.context.embedded.Ssl ssl56 = undertowEmbeddedServletContainerFactory51.getSsl();
        undertowEmbeddedServletContainerFactory51.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory51.setDisplayName("hi!");
        java.net.InetAddress inetAddress61 = undertowEmbeddedServletContainerFactory51.getAddress();
        org.springframework.boot.context.embedded.Compression compression62 = null;
        undertowEmbeddedServletContainerFactory51.setCompression(compression62);
        java.io.File file64 = null;
        undertowEmbeddedServletContainerFactory51.setAccessLogDirectory(file64);
        java.lang.String str66 = undertowEmbeddedServletContainerFactory51.getDisplayName();
        boolean boolean67 = undertowEmbeddedServletContainerFactory51.isPersistSession();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings68 = undertowEmbeddedServletContainerFactory51.getMimeMappings();
        undertowEmbeddedServletContainerFactory12.setMimeMappings(mimeMappings68);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings68);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings71 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.io.File file72 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray13);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection22);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray31);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(servletContextInitializerArray46);
        org.junit.Assert.assertNotNull(embeddedServletContainer47);
        org.junit.Assert.assertNotNull(embeddedServletContainer48);
        org.junit.Assert.assertNotNull(embeddedServletContainer49);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray52);
        org.junit.Assert.assertNull(ssl56);
        org.junit.Assert.assertNull(inetAddress61);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(mimeMappings68);
        org.junit.Assert.assertNotNull(mimeMappings71);
        org.junit.Assert.assertNull(file72);
    }

    @Test
    public void test09578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09578");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory6.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13, initParameterConfiguringServletContextInitializer15, initParameterConfiguringServletContextInitializer17 };
        undertowEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray18);
        boolean boolean21 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        boolean boolean22 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress23 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 32);
        java.io.File file27 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.io.File file28 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file28);
        java.io.File file30 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file30);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(inetAddress23);
        org.junit.Assert.assertNotNull(errorPageSet24);
        org.junit.Assert.assertNull(file27);
    }

    @Test
    public void test09579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09579");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet8 = null;
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet8);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray10 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11, errorPageArray10);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11);
        org.springframework.boot.context.embedded.JspServlet jspServlet14 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        org.springframework.boot.context.embedded.Compression compression15 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.io.File file16 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file16);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory21.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray22);
        org.springframework.boot.context.embedded.Ssl ssl24 = null;
        undertowEmbeddedServletContainerFactory21.setSsl(ssl24);
        org.springframework.boot.context.embedded.Ssl ssl26 = undertowEmbeddedServletContainerFactory21.getSsl();
        undertowEmbeddedServletContainerFactory21.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory21.setDisplayName("hi!");
        java.net.InetAddress inetAddress31 = undertowEmbeddedServletContainerFactory21.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray34 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory33.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray34);
        org.springframework.boot.context.embedded.JspServlet jspServlet36 = undertowEmbeddedServletContainerFactory33.getJspServlet();
        undertowEmbeddedServletContainerFactory21.setJspServlet(jspServlet36);
        java.net.InetAddress inetAddress38 = undertowEmbeddedServletContainerFactory21.getAddress();
        java.net.InetAddress inetAddress39 = undertowEmbeddedServletContainerFactory21.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory43.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray46 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory43.addBuilderCustomizers(undertowBuilderCustomizerArray46);
        undertowEmbeddedServletContainerFactory41.addBuilderCustomizers(undertowBuilderCustomizerArray46);
        org.springframework.boot.context.embedded.Ssl ssl49 = null;
        undertowEmbeddedServletContainerFactory41.setSsl(ssl49);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory52.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory52.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl57 = undertowEmbeddedServletContainerFactory52.getSsl();
        boolean boolean58 = undertowEmbeddedServletContainerFactory52.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet59 = null;
        undertowEmbeddedServletContainerFactory52.setJspServlet(jspServlet59);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings61 = undertowEmbeddedServletContainerFactory52.getMimeMappings();
        undertowEmbeddedServletContainerFactory41.setMimeMappings(mimeMappings61);
        java.net.InetAddress inetAddress63 = undertowEmbeddedServletContainerFactory41.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 0);
        undertowEmbeddedServletContainerFactory66.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory70.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray73 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory70.addBuilderCustomizers(undertowBuilderCustomizerArray73);
        undertowEmbeddedServletContainerFactory66.addBuilderCustomizers(undertowBuilderCustomizerArray73);
        undertowEmbeddedServletContainerFactory41.addBuilderCustomizers(undertowBuilderCustomizerArray73);
        undertowEmbeddedServletContainerFactory21.addBuilderCustomizers(undertowBuilderCustomizerArray73);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray73);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(errorPageArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(jspServlet14);
        org.junit.Assert.assertNull(compression15);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray22);
        org.junit.Assert.assertNull(ssl26);
        org.junit.Assert.assertNull(inetAddress31);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray34);
        org.junit.Assert.assertNotNull(jspServlet36);
        org.junit.Assert.assertNull(inetAddress38);
        org.junit.Assert.assertNull(inetAddress39);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray46);
        org.junit.Assert.assertNull(ssl57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(mimeMappings61);
        org.junit.Assert.assertNull(inetAddress63);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray73);
    }

    @Test
    public void test09580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09580");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        org.springframework.boot.context.embedded.JspServlet jspServlet2 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory4.setAccessLogDirectory(file5);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray7 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory4.addErrorPages(errorPageArray7);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray7);
        org.springframework.boot.context.embedded.Compression compression10 = undertowEmbeddedServletContainerFactory1.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file13 = undertowEmbeddedServletContainerFactory12.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory12.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory17.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory17.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl22 = undertowEmbeddedServletContainerFactory17.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer24 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap23);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer26 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap25);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer28 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap27);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray29 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer24, initParameterConfiguringServletContextInitializer26, initParameterConfiguringServletContextInitializer28 };
        undertowEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray29);
        undertowEmbeddedServletContainerFactory12.addInitializers(servletContextInitializerArray29);
        boolean boolean32 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        boolean boolean33 = undertowEmbeddedServletContainerFactory12.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory12.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file38 = undertowEmbeddedServletContainerFactory37.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory37.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory42.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory42.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl47 = undertowEmbeddedServletContainerFactory42.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer49 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap48);
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer51 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap50);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer53 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap52);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray54 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer49, initParameterConfiguringServletContextInitializer51, initParameterConfiguringServletContextInitializer53 };
        undertowEmbeddedServletContainerFactory42.addInitializers(servletContextInitializerArray54);
        undertowEmbeddedServletContainerFactory37.addInitializers(servletContextInitializerArray54);
        undertowEmbeddedServletContainerFactory37.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory37.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage errorPage61 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray62 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage61 };
        undertowEmbeddedServletContainerFactory37.addErrorPages(errorPageArray62);
        undertowEmbeddedServletContainerFactory12.addErrorPages(errorPageArray62);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray62);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection66 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.junit.Assert.assertNotNull(jspServlet2);
        org.junit.Assert.assertNotNull(errorPageArray7);
        org.junit.Assert.assertNull(compression10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(ssl22);
        org.junit.Assert.assertNotNull(servletContextInitializerArray29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(ssl47);
        org.junit.Assert.assertNotNull(servletContextInitializerArray54);
        org.junit.Assert.assertNotNull(errorPageArray62);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection66);
    }

    @Test
    public void test09581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09581");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.Compression compression11 = undertowEmbeddedServletContainerFactory1.getCompression();
        boolean boolean12 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file15 = undertowEmbeddedServletContainerFactory14.getSessionStoreDir();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory14.setSessionTimeout((int) (short) 100);
        java.io.File file19 = undertowEmbeddedServletContainerFactory14.getDocumentRoot();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings20);
        org.springframework.boot.context.embedded.Compression compression22 = undertowEmbeddedServletContainerFactory1.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory24.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory24.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray29 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer30 = undertowEmbeddedServletContainerFactory24.getEmbeddedServletContainer(servletContextInitializerArray29);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer31 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray29);
        boolean boolean32 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 32);
        java.io.File file35 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file35);
        int int37 = undertowEmbeddedServletContainerFactory1.getPort();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(compression11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNull(compression22);
        org.junit.Assert.assertNotNull(servletContextInitializerArray29);
        org.junit.Assert.assertNotNull(embeddedServletContainer30);
        org.junit.Assert.assertNotNull(embeddedServletContainer31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
    }

    @Test
    public void test09582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09582");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 0);
        int int12 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet13 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        java.io.File file16 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file16);
        org.springframework.boot.context.embedded.JspServlet jspServlet18 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file21 = undertowEmbeddedServletContainerFactory20.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory20.setPersistSession(false);
        undertowEmbeddedServletContainerFactory20.setJspServletClassName("");
        java.io.File file26 = undertowEmbeddedServletContainerFactory20.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory20.setAccessLogEnabled(true);
        undertowEmbeddedServletContainerFactory20.setBufferSize((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory20.setDisplayName("hi!");
        org.springframework.core.io.ResourceLoader resourceLoader33 = null;
        undertowEmbeddedServletContainerFactory20.setResourceLoader(resourceLoader33);
        undertowEmbeddedServletContainerFactory20.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.JspServlet jspServlet37 = undertowEmbeddedServletContainerFactory20.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray40 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory39.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray40);
        java.io.File file42 = null;
        undertowEmbeddedServletContainerFactory39.setSessionStoreDir(file42);
        undertowEmbeddedServletContainerFactory39.setPort(0);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray46 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        undertowEmbeddedServletContainerFactory39.addInitializers(servletContextInitializerArray46);
        undertowEmbeddedServletContainerFactory39.setBuffersPerRegion((java.lang.Integer) 10);
        int int50 = undertowEmbeddedServletContainerFactory39.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.net.InetAddress inetAddress53 = null;
        undertowEmbeddedServletContainerFactory52.setAddress(inetAddress53);
        java.net.InetAddress inetAddress55 = undertowEmbeddedServletContainerFactory52.getAddress();
        java.io.File file56 = null;
        undertowEmbeddedServletContainerFactory52.setSessionStoreDir(file56);
        undertowEmbeddedServletContainerFactory52.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings60 = undertowEmbeddedServletContainerFactory52.getMimeMappings();
        undertowEmbeddedServletContainerFactory39.setMimeMappings(mimeMappings60);
        undertowEmbeddedServletContainerFactory20.setMimeMappings(mimeMappings60);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings60);
        int int64 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertNotNull(errorPageSet13);
        org.junit.Assert.assertNotNull(jspServlet18);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(jspServlet37);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray40);
        org.junit.Assert.assertNotNull(servletContextInitializerArray46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1800 + "'", int50 == 1800);
        org.junit.Assert.assertNull(inetAddress55);
        org.junit.Assert.assertNotNull(mimeMappings60);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1800 + "'", int64 == 1800);
    }

    @Test
    public void test09583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09583");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file15 = undertowEmbeddedServletContainerFactory14.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory14.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory19.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory19.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl24 = undertowEmbeddedServletContainerFactory19.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer26 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap25);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer28 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap27);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer30 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap29);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray31 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer26, initParameterConfiguringServletContextInitializer28, initParameterConfiguringServletContextInitializer30 };
        undertowEmbeddedServletContainerFactory19.addInitializers(servletContextInitializerArray31);
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray31);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory35.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory35.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl40 = undertowEmbeddedServletContainerFactory35.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer42 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap41);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer44 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap43);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer46 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap45);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray47 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer42, initParameterConfiguringServletContextInitializer44, initParameterConfiguringServletContextInitializer46 };
        undertowEmbeddedServletContainerFactory35.addInitializers(servletContextInitializerArray47);
        undertowEmbeddedServletContainerFactory35.setJspServletClassName("hi!");
        int int51 = undertowEmbeddedServletContainerFactory35.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet52 = undertowEmbeddedServletContainerFactory35.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory54.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray59 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory58.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray59);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray63 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory62.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray63);
        undertowEmbeddedServletContainerFactory58.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray63);
        undertowEmbeddedServletContainerFactory54.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray63);
        java.lang.String str67 = undertowEmbeddedServletContainerFactory54.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory69.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory69.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray74 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer75 = undertowEmbeddedServletContainerFactory69.getEmbeddedServletContainer(servletContextInitializerArray74);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer76 = undertowEmbeddedServletContainerFactory54.getEmbeddedServletContainer(servletContextInitializerArray74);
        undertowEmbeddedServletContainerFactory35.addInitializers(servletContextInitializerArray74);
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray74);
        undertowEmbeddedServletContainerFactory12.addInitializers(servletContextInitializerArray74);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer80 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray74);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet81 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.net.InetAddress inetAddress82 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress82);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(ssl24);
        org.junit.Assert.assertNotNull(servletContextInitializerArray31);
        org.junit.Assert.assertNull(ssl40);
        org.junit.Assert.assertNotNull(servletContextInitializerArray47);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet52);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray59);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray63);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(servletContextInitializerArray74);
        org.junit.Assert.assertNotNull(embeddedServletContainer75);
        org.junit.Assert.assertNotNull(embeddedServletContainer76);
        org.junit.Assert.assertNotNull(embeddedServletContainer80);
        org.junit.Assert.assertNotNull(errorPageSet81);
    }

    @Test
    public void test09584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09584");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        java.net.InetAddress inetAddress8 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress8);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) 'a');
        java.net.InetAddress inetAddress12 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file17 = undertowEmbeddedServletContainerFactory16.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory16.setPersistSession(false);
        undertowEmbeddedServletContainerFactory16.setJspServletClassName("");
        java.io.File file22 = undertowEmbeddedServletContainerFactory16.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory16.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory16.setUseForwardHeaders(true);
        undertowEmbeddedServletContainerFactory16.setPort(97);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray31 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory30.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray31);
        org.springframework.boot.context.embedded.Ssl ssl33 = null;
        undertowEmbeddedServletContainerFactory30.setSsl(ssl33);
        undertowEmbeddedServletContainerFactory30.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet37 = undertowEmbeddedServletContainerFactory30.getErrorPages();
        undertowEmbeddedServletContainerFactory16.setErrorPages(errorPageSet37);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet37);
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        org.junit.Assert.assertNull(inetAddress12);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray31);
        org.junit.Assert.assertNotNull(errorPageSet37);
    }

    @Test
    public void test09585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09585");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file4);
        undertowEmbeddedServletContainerFactory1.setPort(0);
        int int8 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        java.lang.String str11 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.io.File file12 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test09586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09586");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file6);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
    }

    @Test
    public void test09587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09587");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory12.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory12.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        undertowEmbeddedServletContainerFactory10.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory20.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray21);
        java.io.File file23 = null;
        undertowEmbeddedServletContainerFactory20.setSessionStoreDir(file23);
        undertowEmbeddedServletContainerFactory20.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory30.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray33 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory30.addBuilderCustomizers(undertowBuilderCustomizerArray33);
        undertowEmbeddedServletContainerFactory28.addBuilderCustomizers(undertowBuilderCustomizerArray33);
        org.springframework.boot.context.embedded.Ssl ssl36 = null;
        undertowEmbeddedServletContainerFactory28.setSsl(ssl36);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory39.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory39.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl44 = undertowEmbeddedServletContainerFactory39.getSsl();
        boolean boolean45 = undertowEmbeddedServletContainerFactory39.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet46 = null;
        undertowEmbeddedServletContainerFactory39.setJspServlet(jspServlet46);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings48 = undertowEmbeddedServletContainerFactory39.getMimeMappings();
        undertowEmbeddedServletContainerFactory28.setMimeMappings(mimeMappings48);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection50 = undertowEmbeddedServletContainerFactory28.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory28.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory54.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory54.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl59 = null;
        undertowEmbeddedServletContainerFactory54.setSsl(ssl59);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray61 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory54.addErrorPages(errorPageArray61);
        undertowEmbeddedServletContainerFactory28.addErrorPages(errorPageArray61);
        undertowEmbeddedServletContainerFactory20.addErrorPages(errorPageArray61);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray61);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray33);
        org.junit.Assert.assertNull(ssl44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(mimeMappings48);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection50);
        org.junit.Assert.assertNotNull(errorPageArray61);
    }

    @Test
    public void test09588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09588");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 0);
        java.lang.String str3 = undertowEmbeddedServletContainerFactory2.getDisplayName();
        java.lang.String str4 = undertowEmbeddedServletContainerFactory2.getDisplayName();
        undertowEmbeddedServletContainerFactory2.setPersistSession(true);
        java.io.File file7 = undertowEmbeddedServletContainerFactory2.getDocumentRoot();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory2.getDisplayName();
        undertowEmbeddedServletContainerFactory2.setBufferSize((java.lang.Integer) 100);
        int int11 = undertowEmbeddedServletContainerFactory2.getSessionTimeout();
        java.lang.String str12 = undertowEmbeddedServletContainerFactory2.getDisplayName();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection13 = undertowEmbeddedServletContainerFactory2.getBuilderCustomizers();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1800 + "'", int11 == 1800);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection13);
    }

    @Test
    public void test09589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09589");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.io.File file8 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.io.File file9 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        int int10 = undertowEmbeddedServletContainerFactory1.getPort();
        boolean boolean11 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test09590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09590");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setPort(1);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        org.junit.Assert.assertNotNull(mimeMappings2);
    }

    @Test
    public void test09591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09591");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory6.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13, initParameterConfiguringServletContextInitializer15, initParameterConfiguringServletContextInitializer17 };
        undertowEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray18);
        boolean boolean21 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        boolean boolean22 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress23 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.net.InetAddress inetAddress25 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress25);
        java.net.InetAddress inetAddress27 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 32);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(inetAddress23);
        org.junit.Assert.assertNotNull(errorPageSet24);
        org.junit.Assert.assertNull(inetAddress27);
    }

    @Test
    public void test09592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09592");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        java.net.InetAddress inetAddress8 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress8);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) 'a');
        org.springframework.boot.context.embedded.JspServlet jspServlet12 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory14.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory18.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory18.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl23 = undertowEmbeddedServletContainerFactory18.getSsl();
        boolean boolean24 = undertowEmbeddedServletContainerFactory18.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet25 = null;
        undertowEmbeddedServletContainerFactory18.setJspServlet(jspServlet25);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray27 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet28 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet28, errorPageArray27);
        undertowEmbeddedServletContainerFactory18.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet28);
        undertowEmbeddedServletContainerFactory14.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet28);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet28);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray35 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory34.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray35);
        org.springframework.boot.context.embedded.Ssl ssl37 = null;
        undertowEmbeddedServletContainerFactory34.setSsl(ssl37);
        undertowEmbeddedServletContainerFactory34.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet41 = undertowEmbeddedServletContainerFactory34.getErrorPages();
        undertowEmbeddedServletContainerFactory34.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) 'a');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray49 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory48.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray49);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray53 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory52.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray53);
        undertowEmbeddedServletContainerFactory48.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray53);
        undertowEmbeddedServletContainerFactory46.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray53);
        undertowEmbeddedServletContainerFactory34.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray53);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray53);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection59 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.setPersistSession(true);
        boolean boolean62 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.String str63 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.junit.Assert.assertNotNull(jspServlet12);
        org.junit.Assert.assertNull(ssl23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(errorPageArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray35);
        org.junit.Assert.assertNotNull(errorPageSet41);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray49);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray53);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str63);
    }

    @Test
    public void test09593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09593");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        boolean boolean3 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file4);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.Compression compression12 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression12);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test09594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09594");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        java.lang.String str11 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection12 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory14.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory14.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory14.getSsl();
        boolean boolean20 = undertowEmbeddedServletContainerFactory14.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet21 = null;
        undertowEmbeddedServletContainerFactory14.setJspServlet(jspServlet21);
        java.net.InetAddress inetAddress23 = undertowEmbeddedServletContainerFactory14.getAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        undertowEmbeddedServletContainerFactory14.setSessionTimeout(100);
        org.springframework.boot.context.embedded.Compression compression27 = undertowEmbeddedServletContainerFactory14.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory29.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory29.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader34 = null;
        undertowEmbeddedServletContainerFactory29.setResourceLoader(resourceLoader34);
        org.springframework.boot.context.embedded.Compression compression36 = null;
        undertowEmbeddedServletContainerFactory29.setCompression(compression36);
        undertowEmbeddedServletContainerFactory29.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.Ssl ssl40 = undertowEmbeddedServletContainerFactory29.getSsl();
        java.io.File file41 = undertowEmbeddedServletContainerFactory29.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray44 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory43.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray44);
        org.springframework.boot.context.embedded.Ssl ssl46 = null;
        undertowEmbeddedServletContainerFactory43.setSsl(ssl46);
        org.springframework.boot.context.embedded.Ssl ssl48 = undertowEmbeddedServletContainerFactory43.getSsl();
        undertowEmbeddedServletContainerFactory43.setDisplayName("");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings51 = undertowEmbeddedServletContainerFactory43.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer undertowDeploymentInfoCustomizer52 = null;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray53 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] { undertowDeploymentInfoCustomizer52 };
        undertowEmbeddedServletContainerFactory43.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray53);
        undertowEmbeddedServletContainerFactory29.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray53);
        undertowEmbeddedServletContainerFactory14.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray53);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray53);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        java.io.File file62 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection12);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(inetAddress23);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNull(compression27);
        org.junit.Assert.assertNull(ssl40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray44);
        org.junit.Assert.assertNull(ssl48);
        org.junit.Assert.assertNotNull(mimeMappings51);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray53);
        org.junit.Assert.assertNull(file62);
    }

    @Test
    public void test09595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09595");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer8 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap7);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer10 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer12 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap11);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer8, initParameterConfiguringServletContextInitializer10, initParameterConfiguringServletContextInitializer12 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray13);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection17 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.io.File file18 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file18);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        org.springframework.boot.context.embedded.JspServlet jspServlet26 = undertowEmbeddedServletContainerFactory25.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet26);
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        java.net.InetAddress inetAddress30 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress30);
        int int32 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory34.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory34.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader39 = null;
        undertowEmbeddedServletContainerFactory34.setResourceLoader(resourceLoader39);
        java.net.InetAddress inetAddress41 = null;
        undertowEmbeddedServletContainerFactory34.setAddress(inetAddress41);
        undertowEmbeddedServletContainerFactory34.setIoThreads((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.JspServlet jspServlet45 = undertowEmbeddedServletContainerFactory34.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet45);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection17);
        org.junit.Assert.assertNotNull(jspServlet26);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(jspServlet45);
    }

    @Test
    public void test09596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09596");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        boolean boolean13 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 10);
        boolean boolean16 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        boolean boolean21 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test09597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09597");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) -1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file6 = undertowEmbeddedServletContainerFactory5.getSessionStoreDir();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory5.getContextPath();
        java.net.InetAddress inetAddress8 = undertowEmbeddedServletContainerFactory5.getAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet9 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray12 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory11.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray12);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory15.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray16);
        undertowEmbeddedServletContainerFactory11.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray16);
        undertowEmbeddedServletContainerFactory5.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray16);
        undertowEmbeddedServletContainerFactory3.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray16);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray16);
        java.lang.String str22 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.JspServlet jspServlet23 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(inetAddress8);
        org.junit.Assert.assertNotNull(errorPageSet9);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray12);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray16);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(jspServlet23);
    }

    @Test
    public void test09598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09598");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 10);
        org.springframework.boot.context.embedded.Ssl ssl3 = null;
        undertowEmbeddedServletContainerFactory2.setSsl(ssl3);
        org.springframework.boot.context.embedded.JspServlet jspServlet5 = undertowEmbeddedServletContainerFactory2.getJspServlet();
        org.junit.Assert.assertNotNull(jspServlet5);
    }

    @Test
    public void test09599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09599");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file4);
        undertowEmbeddedServletContainerFactory1.setPort(0);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray8 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray8);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader10);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        java.io.File file14 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file14);
        int int16 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        int int17 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.Compression compression22 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray8);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1800 + "'", int16 == 1800);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertNull(compression22);
        org.junit.Assert.assertNotNull(errorPageSet23);
    }

    @Test
    public void test09600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09600");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer8 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap7);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer10 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer12 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap11);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer8, initParameterConfiguringServletContextInitializer10, initParameterConfiguringServletContextInitializer12 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray13);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1800);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer22 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap21);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer24 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap23);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray25 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer22, initParameterConfiguringServletContextInitializer24 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray25);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory28.setJspServletClassName("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory32.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory32.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl37 = undertowEmbeddedServletContainerFactory32.getSsl();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet38 = undertowEmbeddedServletContainerFactory32.getErrorPages();
        undertowEmbeddedServletContainerFactory28.setErrorPages(errorPageSet38);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet38);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet41 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.io.File file42 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file42);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 32);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray46 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Customizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertNotNull(servletContextInitializerArray25);
        org.junit.Assert.assertNull(ssl37);
        org.junit.Assert.assertNotNull(errorPageSet38);
        org.junit.Assert.assertNotNull(errorPageSet41);
    }

    @Test
    public void test09601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09601");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet8 = null;
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet8);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray10 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11, errorPageArray10);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11);
        org.springframework.boot.context.embedded.JspServlet jspServlet14 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1);
        java.lang.String str17 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 10);
        undertowEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        boolean boolean25 = undertowEmbeddedServletContainerFactory22.isPersistSession();
        java.lang.String str26 = undertowEmbeddedServletContainerFactory22.getContextPath();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection27 = undertowEmbeddedServletContainerFactory22.getDeploymentInfoCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection28 = undertowEmbeddedServletContainerFactory22.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory22.setDisplayName("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file33 = undertowEmbeddedServletContainerFactory32.getSessionStoreDir();
        org.springframework.boot.context.embedded.Compression compression34 = null;
        undertowEmbeddedServletContainerFactory32.setCompression(compression34);
        undertowEmbeddedServletContainerFactory32.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = undertowEmbeddedServletContainerFactory32.getMimeMappings();
        undertowEmbeddedServletContainerFactory22.setMimeMappings(mimeMappings38);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings38);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(errorPageArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(jspServlet14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection27);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection28);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(mimeMappings38);
    }

    @Test
    public void test09602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09602");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection16 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.lang.Class<?> wildcardClass17 = undertowEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test09603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09603");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        java.lang.String str3 = undertowEmbeddedServletContainerFactory2.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory2.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray4);
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory2.setAccessLogDirectory(file6);
        undertowEmbeddedServletContainerFactory2.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection10 = undertowEmbeddedServletContainerFactory2.getBuilderCustomizers();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray4);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection10);
    }

    @Test
    public void test09604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09604");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1800);
        java.net.InetAddress inetAddress16 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 52);
        java.io.File file19 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file19);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(inetAddress16);
    }

    @Test
    public void test09605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09605");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer8 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap7);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer10 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer12 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap11);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer8, initParameterConfiguringServletContextInitializer10, initParameterConfiguringServletContextInitializer12 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray13);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        int int17 = undertowEmbeddedServletContainerFactory1.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet18 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) 'a');
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        int int25 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet18);
        org.junit.Assert.assertNotNull(jspServlet19);
        org.junit.Assert.assertNotNull(errorPageSet24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 97 + "'", int25 == 97);
    }

    @Test
    public void test09606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09606");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory6.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13, initParameterConfiguringServletContextInitializer15, initParameterConfiguringServletContextInitializer17 };
        undertowEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        java.net.InetAddress inetAddress25 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress25);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory28.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory28.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl33 = null;
        undertowEmbeddedServletContainerFactory28.setSsl(ssl33);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file37 = undertowEmbeddedServletContainerFactory36.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory36.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory41.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory41.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl46 = undertowEmbeddedServletContainerFactory41.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer48 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap47);
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer50 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap49);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer52 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap51);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray53 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer48, initParameterConfiguringServletContextInitializer50, initParameterConfiguringServletContextInitializer52 };
        undertowEmbeddedServletContainerFactory41.addInitializers(servletContextInitializerArray53);
        undertowEmbeddedServletContainerFactory36.addInitializers(servletContextInitializerArray53);
        undertowEmbeddedServletContainerFactory28.addInitializers(servletContextInitializerArray53);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory58.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory58.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl63 = undertowEmbeddedServletContainerFactory58.getSsl();
        boolean boolean64 = undertowEmbeddedServletContainerFactory58.isAccessLogEnabled();
        java.io.File file65 = null;
        undertowEmbeddedServletContainerFactory58.setAccessLogDirectory(file65);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray67 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet68 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet68, errorPageArray67);
        undertowEmbeddedServletContainerFactory58.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet68);
        undertowEmbeddedServletContainerFactory58.setAccessLogPattern("");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings73 = undertowEmbeddedServletContainerFactory58.getMimeMappings();
        undertowEmbeddedServletContainerFactory28.setMimeMappings(mimeMappings73);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings73);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 97);
        org.springframework.boot.context.embedded.JspServlet jspServlet78 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection79 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader80 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader80);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(ssl46);
        org.junit.Assert.assertNotNull(servletContextInitializerArray53);
        org.junit.Assert.assertNull(ssl63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(errorPageArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(mimeMappings73);
        org.junit.Assert.assertNotNull(jspServlet78);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection79);
    }

    @Test
    public void test09607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09607");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        int int13 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file15);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(errorPageSet12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test09608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09608");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory10.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory10.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl15 = undertowEmbeddedServletContainerFactory10.getSsl();
        boolean boolean16 = undertowEmbeddedServletContainerFactory10.isAccessLogEnabled();
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory10.setAccessLogDirectory(file17);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray19 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20, errorPageArray19);
        undertowEmbeddedServletContainerFactory10.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory25.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray28 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory25.addBuilderCustomizers(undertowBuilderCustomizerArray28);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray28);
        int int31 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        int int32 = undertowEmbeddedServletContainerFactory1.getPort();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection37 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setPersistSession(true);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(ssl15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(errorPageArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1800 + "'", int31 == 1800);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection37);
    }

    @Test
    public void test09609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09609");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file13 = null;
        undertowEmbeddedServletContainerFactory12.setAccessLogDirectory(file13);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray15 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory12.addErrorPages(errorPageArray15);
        org.springframework.boot.context.embedded.Compression compression17 = undertowEmbeddedServletContainerFactory12.getCompression();
        org.springframework.boot.context.embedded.JspServlet jspServlet18 = undertowEmbeddedServletContainerFactory12.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file21 = null;
        undertowEmbeddedServletContainerFactory20.setAccessLogDirectory(file21);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray23 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory20.addErrorPages(errorPageArray23);
        undertowEmbeddedServletContainerFactory12.addErrorPages(errorPageArray23);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray23);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection27 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory31.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory31.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl36 = null;
        undertowEmbeddedServletContainerFactory31.setSsl(ssl36);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file40 = undertowEmbeddedServletContainerFactory39.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory39.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory44.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory44.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl49 = undertowEmbeddedServletContainerFactory44.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer51 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap50);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer53 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap52);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer55 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap54);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray56 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer51, initParameterConfiguringServletContextInitializer53, initParameterConfiguringServletContextInitializer55 };
        undertowEmbeddedServletContainerFactory44.addInitializers(servletContextInitializerArray56);
        undertowEmbeddedServletContainerFactory39.addInitializers(servletContextInitializerArray56);
        undertowEmbeddedServletContainerFactory31.addInitializers(servletContextInitializerArray56);
        java.lang.String str60 = undertowEmbeddedServletContainerFactory31.getContextPath();
        undertowEmbeddedServletContainerFactory31.setBufferSize((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory31.setBuffersPerRegion((java.lang.Integer) (-1));
        org.springframework.boot.context.embedded.Ssl ssl65 = undertowEmbeddedServletContainerFactory31.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        boolean boolean68 = undertowEmbeddedServletContainerFactory67.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray71 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory70.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray71);
        org.springframework.boot.context.embedded.Ssl ssl73 = null;
        undertowEmbeddedServletContainerFactory70.setSsl(ssl73);
        undertowEmbeddedServletContainerFactory70.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory78 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file79 = null;
        undertowEmbeddedServletContainerFactory78.setAccessLogDirectory(file79);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray81 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory78.addErrorPages(errorPageArray81);
        org.springframework.boot.context.embedded.Compression compression83 = undertowEmbeddedServletContainerFactory78.getCompression();
        org.springframework.boot.context.embedded.JspServlet jspServlet84 = undertowEmbeddedServletContainerFactory78.getJspServlet();
        undertowEmbeddedServletContainerFactory70.setJspServlet(jspServlet84);
        undertowEmbeddedServletContainerFactory67.setJspServlet(jspServlet84);
        undertowEmbeddedServletContainerFactory31.setJspServlet(jspServlet84);
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet84);
        org.springframework.boot.context.embedded.Ssl ssl89 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl89);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(errorPageArray15);
        org.junit.Assert.assertNull(compression17);
        org.junit.Assert.assertNotNull(jspServlet18);
        org.junit.Assert.assertNotNull(errorPageArray23);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection27);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(ssl49);
        org.junit.Assert.assertNotNull(servletContextInitializerArray56);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNull(ssl65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray71);
        org.junit.Assert.assertNotNull(errorPageArray81);
        org.junit.Assert.assertNull(compression83);
        org.junit.Assert.assertNotNull(jspServlet84);
    }

    @Test
    public void test09610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09610");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression8);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.Ssl ssl12 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.io.File file13 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory15.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray16);
        org.springframework.boot.context.embedded.Ssl ssl18 = null;
        undertowEmbeddedServletContainerFactory15.setSsl(ssl18);
        org.springframework.boot.context.embedded.Ssl ssl20 = undertowEmbeddedServletContainerFactory15.getSsl();
        undertowEmbeddedServletContainerFactory15.setDisplayName("");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = undertowEmbeddedServletContainerFactory15.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer undertowDeploymentInfoCustomizer24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray25 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] { undertowDeploymentInfoCustomizer24 };
        undertowEmbeddedServletContainerFactory15.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray25);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray25);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection28 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1800);
        java.io.File file31 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file31);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.junit.Assert.assertNull(ssl12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray16);
        org.junit.Assert.assertNull(ssl20);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection28);
        org.junit.Assert.assertNotNull(mimeMappings33);
    }

    @Test
    public void test09611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09611");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Compression compression6 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file7);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection11 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.io.File file12 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        int int15 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.junit.Assert.assertNull(compression6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
    }

    @Test
    public void test09612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09612");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        java.lang.String str11 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 97);
        int int14 = undertowEmbeddedServletContainerFactory1.getPort();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection17 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection22 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection22);
    }

    @Test
    public void test09613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09613");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet8 = null;
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet8);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray10 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11, errorPageArray10);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11);
        org.springframework.boot.context.embedded.JspServlet jspServlet14 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.Compression compression17 = undertowEmbeddedServletContainerFactory1.getCompression();
        org.springframework.boot.context.embedded.Compression compression18 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.net.InetAddress inetAddress19 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress19);
        org.springframework.boot.context.embedded.Compression compression21 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression21);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray25 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory24.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray25);
        org.springframework.boot.context.embedded.Ssl ssl27 = null;
        undertowEmbeddedServletContainerFactory24.setSsl(ssl27);
        org.springframework.boot.context.embedded.Ssl ssl29 = undertowEmbeddedServletContainerFactory24.getSsl();
        boolean boolean30 = undertowEmbeddedServletContainerFactory24.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory34.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray37 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory34.addBuilderCustomizers(undertowBuilderCustomizerArray37);
        undertowEmbeddedServletContainerFactory32.addBuilderCustomizers(undertowBuilderCustomizerArray37);
        org.springframework.boot.context.embedded.Ssl ssl40 = null;
        undertowEmbeddedServletContainerFactory32.setSsl(ssl40);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory43.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory43.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl48 = undertowEmbeddedServletContainerFactory43.getSsl();
        boolean boolean49 = undertowEmbeddedServletContainerFactory43.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet50 = null;
        undertowEmbeddedServletContainerFactory43.setJspServlet(jspServlet50);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings52 = undertowEmbeddedServletContainerFactory43.getMimeMappings();
        undertowEmbeddedServletContainerFactory32.setMimeMappings(mimeMappings52);
        undertowEmbeddedServletContainerFactory32.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.Ssl ssl56 = undertowEmbeddedServletContainerFactory32.getSsl();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection57 = undertowEmbeddedServletContainerFactory32.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.net.InetAddress inetAddress60 = null;
        undertowEmbeddedServletContainerFactory59.setAddress(inetAddress60);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray64 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory63.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray64);
        org.springframework.boot.context.embedded.Ssl ssl66 = null;
        undertowEmbeddedServletContainerFactory63.setSsl(ssl66);
        undertowEmbeddedServletContainerFactory63.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet70 = undertowEmbeddedServletContainerFactory63.getErrorPages();
        undertowEmbeddedServletContainerFactory63.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory63.setIoThreads((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file77 = null;
        undertowEmbeddedServletContainerFactory76.setAccessLogDirectory(file77);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray79 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory76.addErrorPages(errorPageArray79);
        undertowEmbeddedServletContainerFactory63.addErrorPages(errorPageArray79);
        undertowEmbeddedServletContainerFactory59.addErrorPages(errorPageArray79);
        undertowEmbeddedServletContainerFactory32.addErrorPages(errorPageArray79);
        undertowEmbeddedServletContainerFactory24.addErrorPages(errorPageArray79);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray79);
        org.springframework.boot.context.embedded.Compression compression86 = undertowEmbeddedServletContainerFactory1.getCompression();
        boolean boolean87 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(errorPageArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(jspServlet14);
        org.junit.Assert.assertNull(compression17);
        org.junit.Assert.assertNull(compression18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray25);
        org.junit.Assert.assertNull(ssl29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray37);
        org.junit.Assert.assertNull(ssl48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(mimeMappings52);
        org.junit.Assert.assertNull(ssl56);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection57);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray64);
        org.junit.Assert.assertNotNull(errorPageSet70);
        org.junit.Assert.assertNotNull(errorPageArray79);
        org.junit.Assert.assertNull(compression86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test09614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09614");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file5 = undertowEmbeddedServletContainerFactory4.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory4.setPersistSession(false);
        undertowEmbeddedServletContainerFactory4.setJspServletClassName("");
        java.io.File file10 = undertowEmbeddedServletContainerFactory4.getSessionStoreDir();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory4.getErrorPages();
        undertowEmbeddedServletContainerFactory2.setErrorPages(errorPageSet11);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory14.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray15);
        org.springframework.boot.context.embedded.Ssl ssl17 = null;
        undertowEmbeddedServletContainerFactory14.setSsl(ssl17);
        undertowEmbeddedServletContainerFactory14.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = undertowEmbeddedServletContainerFactory14.getErrorPages();
        undertowEmbeddedServletContainerFactory14.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) 'a');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray29 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory28.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray29);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray33 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory32.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray33);
        undertowEmbeddedServletContainerFactory28.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray33);
        undertowEmbeddedServletContainerFactory26.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray33);
        undertowEmbeddedServletContainerFactory14.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray33);
        undertowEmbeddedServletContainerFactory2.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray33);
        undertowEmbeddedServletContainerFactory2.setBufferSize((java.lang.Integer) 32);
        org.springframework.boot.context.embedded.JspServlet jspServlet41 = undertowEmbeddedServletContainerFactory2.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory43.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory43.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl48 = undertowEmbeddedServletContainerFactory43.getSsl();
        boolean boolean49 = undertowEmbeddedServletContainerFactory43.isAccessLogEnabled();
        java.io.File file50 = null;
        undertowEmbeddedServletContainerFactory43.setAccessLogDirectory(file50);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray52 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet53 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet53, errorPageArray52);
        undertowEmbeddedServletContainerFactory43.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet53);
        undertowEmbeddedServletContainerFactory43.setSessionTimeout((int) (byte) -1);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection58 = undertowEmbeddedServletContainerFactory43.getBuilderCustomizers();
        org.springframework.boot.context.embedded.JspServlet jspServlet59 = undertowEmbeddedServletContainerFactory43.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.net.InetAddress inetAddress62 = null;
        undertowEmbeddedServletContainerFactory61.setAddress(inetAddress62);
        java.net.InetAddress inetAddress64 = undertowEmbeddedServletContainerFactory61.getAddress();
        java.net.InetAddress inetAddress65 = null;
        undertowEmbeddedServletContainerFactory61.setAddress(inetAddress65);
        java.io.File file67 = undertowEmbeddedServletContainerFactory61.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory69.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory69.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl74 = undertowEmbeddedServletContainerFactory69.getSsl();
        boolean boolean75 = undertowEmbeddedServletContainerFactory69.isAccessLogEnabled();
        java.io.File file76 = null;
        undertowEmbeddedServletContainerFactory69.setAccessLogDirectory(file76);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection78 = undertowEmbeddedServletContainerFactory69.getBuilderCustomizers();
        org.springframework.boot.context.embedded.Compression compression79 = null;
        undertowEmbeddedServletContainerFactory69.setCompression(compression79);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings81 = undertowEmbeddedServletContainerFactory69.getMimeMappings();
        undertowEmbeddedServletContainerFactory61.setMimeMappings(mimeMappings81);
        undertowEmbeddedServletContainerFactory43.setMimeMappings(mimeMappings81);
        undertowEmbeddedServletContainerFactory2.setMimeMappings(mimeMappings81);
        undertowEmbeddedServletContainerFactory2.setUseForwardHeaders(true);
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(false);
        java.io.File file89 = null;
        undertowEmbeddedServletContainerFactory2.setSessionStoreDir(file89);
        java.io.File file91 = undertowEmbeddedServletContainerFactory2.getDocumentRoot();
        boolean boolean92 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray15);
        org.junit.Assert.assertNotNull(errorPageSet21);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray29);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray33);
        org.junit.Assert.assertNotNull(jspServlet41);
        org.junit.Assert.assertNull(ssl48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(errorPageArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection58);
        org.junit.Assert.assertNotNull(jspServlet59);
        org.junit.Assert.assertNull(inetAddress64);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNull(ssl74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection78);
        org.junit.Assert.assertNotNull(mimeMappings81);
        org.junit.Assert.assertNull(file91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test09615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09615");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet8 = null;
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet8);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray10 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11, errorPageArray10);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection14 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1800);
        undertowEmbeddedServletContainerFactory1.setPort(97);
        org.springframework.boot.context.embedded.Compression compression19 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression19);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(errorPageArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection14);
    }

    @Test
    public void test09616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09616");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 0);
        java.lang.String str3 = undertowEmbeddedServletContainerFactory2.getDisplayName();
        undertowEmbeddedServletContainerFactory2.setBufferSize((java.lang.Integer) 32);
        undertowEmbeddedServletContainerFactory2.setBuffersPerRegion((java.lang.Integer) 1);
        boolean boolean8 = undertowEmbeddedServletContainerFactory2.isPersistSession();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test09617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09617");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file4);
        undertowEmbeddedServletContainerFactory1.setPort(0);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray8 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray8);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 10);
        java.io.File file12 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file12);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray8);
    }

    @Test
    public void test09618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09618");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file4);
        undertowEmbeddedServletContainerFactory1.setPort(0);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray8 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet15 = undertowEmbeddedServletContainerFactory14.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet15);
        int int17 = undertowEmbeddedServletContainerFactory1.getPort();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ErrorPages must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray8);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertNotNull(errorPageSet15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test09619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09619");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet8 = null;
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet8);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection10 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.lang.String str11 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test09620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09620");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.lang.String str3 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.net.InetAddress inetAddress4 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(inetAddress4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test09621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09621");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        undertowEmbeddedServletContainerFactory1.setPort(0);
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.Ssl ssl11 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl11);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(errorPageSet10);
    }

    @Test
    public void test09622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09622");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray4);
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 100);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file10);
        java.net.InetAddress inetAddress12 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNull(inetAddress12);
    }

    @Test
    public void test09623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09623");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        boolean boolean13 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 10);
        boolean boolean16 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        java.io.File file21 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file21);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection23 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection23);
    }

    @Test
    public void test09624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09624");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 0);
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray9 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory6.addBuilderCustomizers(undertowBuilderCustomizerArray9);
        undertowEmbeddedServletContainerFactory2.addBuilderCustomizers(undertowBuilderCustomizerArray9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory13.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory17.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory21.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray22);
        undertowEmbeddedServletContainerFactory17.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray22);
        undertowEmbeddedServletContainerFactory13.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray22);
        undertowEmbeddedServletContainerFactory2.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray22);
        org.springframework.boot.context.embedded.Compression compression27 = null;
        undertowEmbeddedServletContainerFactory2.setCompression(compression27);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        undertowEmbeddedServletContainerFactory2.setBuffersPerRegion((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory2.setWorkerThreads((java.lang.Integer) 100);
        int int34 = undertowEmbeddedServletContainerFactory2.getPort();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray9);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray22);
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
    }

    @Test
    public void test09625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09625");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        boolean boolean4 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory6.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl11 = null;
        undertowEmbeddedServletContainerFactory6.setSsl(ssl11);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray13 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory6.addErrorPages(errorPageArray13);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray13);
        boolean boolean16 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file17);
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Compression compression23 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression23);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(errorPageArray13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test09626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09626");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader3);
        org.springframework.boot.context.embedded.Ssl ssl5 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl5);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        java.io.File file13 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file13);
        org.junit.Assert.assertNull(file2);
    }

    @Test
    public void test09627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09627");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory6.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13, initParameterConfiguringServletContextInitializer15, initParameterConfiguringServletContextInitializer17 };
        undertowEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.Compression compression27 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.io.File file28 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file28);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection33 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray36 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory35.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        org.springframework.boot.context.embedded.Ssl ssl38 = null;
        undertowEmbeddedServletContainerFactory35.setSsl(ssl38);
        org.springframework.boot.context.embedded.Ssl ssl40 = undertowEmbeddedServletContainerFactory35.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray43 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory42.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray43);
        org.springframework.boot.context.embedded.Ssl ssl45 = null;
        undertowEmbeddedServletContainerFactory42.setSsl(ssl45);
        undertowEmbeddedServletContainerFactory42.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file51 = null;
        undertowEmbeddedServletContainerFactory50.setAccessLogDirectory(file51);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray53 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory50.addErrorPages(errorPageArray53);
        org.springframework.boot.context.embedded.Compression compression55 = undertowEmbeddedServletContainerFactory50.getCompression();
        org.springframework.boot.context.embedded.JspServlet jspServlet56 = undertowEmbeddedServletContainerFactory50.getJspServlet();
        undertowEmbeddedServletContainerFactory42.setJspServlet(jspServlet56);
        undertowEmbeddedServletContainerFactory35.setJspServlet(jspServlet56);
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet56);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet62 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.net.InetAddress inetAddress63 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress63);
        org.springframework.core.io.ResourceLoader resourceLoader65 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader65);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertNull(compression27);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection33);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray36);
        org.junit.Assert.assertNull(ssl40);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray43);
        org.junit.Assert.assertNotNull(errorPageArray53);
        org.junit.Assert.assertNull(compression55);
        org.junit.Assert.assertNotNull(jspServlet56);
        org.junit.Assert.assertNotNull(errorPageSet62);
    }

    @Test
    public void test09628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09628");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory6.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13, initParameterConfiguringServletContextInitializer15, initParameterConfiguringServletContextInitializer17 };
        undertowEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        java.io.File file25 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        java.net.InetAddress inetAddress28 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(inetAddress28);
    }

    @Test
    public void test09629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09629");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory10.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray11);
        org.springframework.boot.context.embedded.Ssl ssl13 = null;
        undertowEmbeddedServletContainerFactory10.setSsl(ssl13);
        undertowEmbeddedServletContainerFactory10.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = undertowEmbeddedServletContainerFactory10.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader18 = null;
        undertowEmbeddedServletContainerFactory10.setResourceLoader(resourceLoader18);
        java.lang.String str20 = undertowEmbeddedServletContainerFactory10.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray23 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory22.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray23);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray27 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory26.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        undertowEmbeddedServletContainerFactory22.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        undertowEmbeddedServletContainerFactory10.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        org.springframework.boot.context.embedded.Ssl ssl32 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.Compression compression35 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression35);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory38.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory38.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl43 = undertowEmbeddedServletContainerFactory38.getSsl();
        boolean boolean44 = undertowEmbeddedServletContainerFactory38.isAccessLogEnabled();
        java.io.File file45 = null;
        undertowEmbeddedServletContainerFactory38.setAccessLogDirectory(file45);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection47 = undertowEmbeddedServletContainerFactory38.getBuilderCustomizers();
        org.springframework.boot.context.embedded.Compression compression48 = null;
        undertowEmbeddedServletContainerFactory38.setCompression(compression48);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings50 = undertowEmbeddedServletContainerFactory38.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory52.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory52.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl57 = undertowEmbeddedServletContainerFactory52.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer59 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap58);
        java.util.Map<java.lang.String, java.lang.String> strMap60 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer61 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap60);
        java.util.Map<java.lang.String, java.lang.String> strMap62 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer63 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap62);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray64 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer59, initParameterConfiguringServletContextInitializer61, initParameterConfiguringServletContextInitializer63 };
        undertowEmbeddedServletContainerFactory52.addInitializers(servletContextInitializerArray64);
        undertowEmbeddedServletContainerFactory52.setJspServletClassName("hi!");
        int int68 = undertowEmbeddedServletContainerFactory52.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet69 = undertowEmbeddedServletContainerFactory52.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory71.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory75 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray76 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory75.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray76);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory79 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray80 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory79.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray80);
        undertowEmbeddedServletContainerFactory75.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray80);
        undertowEmbeddedServletContainerFactory71.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray80);
        java.lang.String str84 = undertowEmbeddedServletContainerFactory71.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory86 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory86.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory86.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray91 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer92 = undertowEmbeddedServletContainerFactory86.getEmbeddedServletContainer(servletContextInitializerArray91);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer93 = undertowEmbeddedServletContainerFactory71.getEmbeddedServletContainer(servletContextInitializerArray91);
        undertowEmbeddedServletContainerFactory52.addInitializers(servletContextInitializerArray91);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer95 = undertowEmbeddedServletContainerFactory38.getEmbeddedServletContainer(servletContextInitializerArray91);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer96 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray91);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 52);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray11);
        org.junit.Assert.assertNotNull(errorPageSet17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray23);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray27);
        org.junit.Assert.assertNull(ssl32);
        org.junit.Assert.assertNull(ssl43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection47);
        org.junit.Assert.assertNotNull(mimeMappings50);
        org.junit.Assert.assertNull(ssl57);
        org.junit.Assert.assertNotNull(servletContextInitializerArray64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet69);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray76);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray80);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(servletContextInitializerArray91);
        org.junit.Assert.assertNotNull(embeddedServletContainer92);
        org.junit.Assert.assertNotNull(embeddedServletContainer93);
        org.junit.Assert.assertNotNull(embeddedServletContainer95);
        org.junit.Assert.assertNotNull(embeddedServletContainer96);
    }

    @Test
    public void test09630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09630");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader14);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection16 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection17 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection16);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection17);
    }

    @Test
    public void test09631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09631");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 0);
        int int12 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        java.io.File file13 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 0);
        boolean boolean17 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection18 = undertowEmbeddedServletContainerFactory16.getDeploymentInfoCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection19 = undertowEmbeddedServletContainerFactory16.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = undertowEmbeddedServletContainerFactory16.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings20);
        java.net.InetAddress inetAddress22 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection23 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection19);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNull(inetAddress22);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection23);
    }

    @Test
    public void test09632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09632");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet8 = null;
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet8);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 0);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(mimeMappings10);
    }

    @Test
    public void test09633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09633");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection11 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 97);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.Ssl ssl16 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) (-1));
        java.net.InetAddress inetAddress22 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress22);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection11);
        org.junit.Assert.assertNull(ssl16);
        org.junit.Assert.assertNull(ssl17);
    }

    @Test
    public void test09634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09634");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory12.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory12.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory12.getSsl();
        boolean boolean18 = undertowEmbeddedServletContainerFactory12.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = null;
        undertowEmbeddedServletContainerFactory12.setJspServlet(jspServlet19);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings21);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(100);
        undertowEmbeddedServletContainerFactory1.setPersistSession(true);
        org.springframework.boot.context.embedded.Compression compression27 = undertowEmbeddedServletContainerFactory1.getCompression();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNull(compression27);
    }

    @Test
    public void test09635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09635");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass6 = undertowEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test09636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09636");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection11 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        java.net.InetAddress inetAddress14 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.Compression compression15 = undertowEmbeddedServletContainerFactory1.getCompression();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 10);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file22 = undertowEmbeddedServletContainerFactory21.getSessionStoreDir();
        org.springframework.core.io.ResourceLoader resourceLoader23 = null;
        undertowEmbeddedServletContainerFactory21.setResourceLoader(resourceLoader23);
        org.springframework.boot.context.embedded.Ssl ssl25 = null;
        undertowEmbeddedServletContainerFactory21.setSsl(ssl25);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file32 = undertowEmbeddedServletContainerFactory31.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory31.setPersistSession(false);
        undertowEmbeddedServletContainerFactory31.setJspServletClassName("");
        java.io.File file37 = undertowEmbeddedServletContainerFactory31.getSessionStoreDir();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet38 = undertowEmbeddedServletContainerFactory31.getErrorPages();
        undertowEmbeddedServletContainerFactory29.setErrorPages(errorPageSet38);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray42 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory41.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray42);
        org.springframework.boot.context.embedded.Ssl ssl44 = null;
        undertowEmbeddedServletContainerFactory41.setSsl(ssl44);
        undertowEmbeddedServletContainerFactory41.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet48 = undertowEmbeddedServletContainerFactory41.getErrorPages();
        undertowEmbeddedServletContainerFactory41.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) 'a');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray56 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory55.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray56);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray60 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory59.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray60);
        undertowEmbeddedServletContainerFactory55.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray60);
        undertowEmbeddedServletContainerFactory53.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray60);
        undertowEmbeddedServletContainerFactory41.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray60);
        undertowEmbeddedServletContainerFactory29.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray60);
        undertowEmbeddedServletContainerFactory29.setIoThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory29.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory29.setDisplayName("");
        org.springframework.boot.context.embedded.JspServlet jspServlet72 = undertowEmbeddedServletContainerFactory29.getJspServlet();
        undertowEmbeddedServletContainerFactory21.setJspServlet(jspServlet72);
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet72);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection11);
        org.junit.Assert.assertNull(inetAddress14);
        org.junit.Assert.assertNull(compression15);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(errorPageSet38);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray42);
        org.junit.Assert.assertNotNull(errorPageSet48);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray56);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray60);
        org.junit.Assert.assertNotNull(jspServlet72);
    }

    @Test
    public void test09637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09637");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 100);
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory2.setBuffersPerRegion((java.lang.Integer) 32);
        java.lang.String str7 = undertowEmbeddedServletContainerFactory2.getDisplayName();
        undertowEmbeddedServletContainerFactory2.setPort(1800);
        java.io.File file10 = undertowEmbeddedServletContainerFactory2.getSessionStoreDir();
        java.net.InetAddress inetAddress11 = undertowEmbeddedServletContainerFactory2.getAddress();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(inetAddress11);
    }

    @Test
    public void test09638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09638");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression8);
        java.lang.String str10 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        boolean boolean13 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test09639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09639");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 100);
        undertowEmbeddedServletContainerFactory2.setPort(1800);
        java.lang.String str5 = undertowEmbeddedServletContainerFactory2.getContextPath();
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file6);
        java.net.InetAddress inetAddress8 = null;
        undertowEmbeddedServletContainerFactory2.setAddress(inetAddress8);
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory2.setAccessLogDirectory(file10);
        java.net.InetAddress inetAddress12 = undertowEmbeddedServletContainerFactory2.getAddress();
        undertowEmbeddedServletContainerFactory2.setBufferSize((java.lang.Integer) 100);
        boolean boolean15 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(inetAddress12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test09640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09640");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader9);
        java.lang.String str11 = undertowEmbeddedServletContainerFactory1.getContextPath();
        boolean boolean12 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        org.springframework.boot.context.embedded.Compression compression13 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression13);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.JspServlet jspServlet17 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(jspServlet17);
    }

    @Test
    public void test09641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09641");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader9);
        java.lang.String str11 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.boot.context.embedded.Ssl ssl12 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory14.setAccessLogDirectory(file15);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray17 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory14.addErrorPages(errorPageArray17);
        org.springframework.boot.context.embedded.Compression compression19 = undertowEmbeddedServletContainerFactory14.getCompression();
        org.springframework.boot.context.embedded.JspServlet jspServlet20 = undertowEmbeddedServletContainerFactory14.getJspServlet();
        org.springframework.core.io.ResourceLoader resourceLoader21 = null;
        undertowEmbeddedServletContainerFactory14.setResourceLoader(resourceLoader21);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file25 = null;
        undertowEmbeddedServletContainerFactory24.setDocumentRoot(file25);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file29 = undertowEmbeddedServletContainerFactory28.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory28.setPersistSession(false);
        undertowEmbeddedServletContainerFactory28.setJspServletClassName("");
        java.io.File file34 = undertowEmbeddedServletContainerFactory28.getSessionStoreDir();
        java.lang.String str35 = undertowEmbeddedServletContainerFactory28.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory37.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory37.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl42 = undertowEmbeddedServletContainerFactory37.getSsl();
        boolean boolean43 = undertowEmbeddedServletContainerFactory37.isAccessLogEnabled();
        java.io.File file44 = null;
        undertowEmbeddedServletContainerFactory37.setAccessLogDirectory(file44);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray46 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet47 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet47, errorPageArray46);
        undertowEmbeddedServletContainerFactory37.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet47);
        undertowEmbeddedServletContainerFactory28.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet47);
        undertowEmbeddedServletContainerFactory24.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet47);
        boolean boolean52 = undertowEmbeddedServletContainerFactory24.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory24.setBuffersPerRegion((java.lang.Integer) 10);
        java.io.File file55 = undertowEmbeddedServletContainerFactory24.getSessionStoreDir();
        boolean boolean56 = undertowEmbeddedServletContainerFactory24.isAccessLogEnabled();
        java.lang.String str57 = undertowEmbeddedServletContainerFactory24.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet58 = undertowEmbeddedServletContainerFactory24.getErrorPages();
        undertowEmbeddedServletContainerFactory14.setErrorPages(errorPageSet58);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet58);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings61 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(ssl12);
        org.junit.Assert.assertNotNull(errorPageArray17);
        org.junit.Assert.assertNull(compression19);
        org.junit.Assert.assertNotNull(jspServlet20);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(ssl42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(errorPageArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(errorPageSet58);
        org.junit.Assert.assertNotNull(mimeMappings61);
    }

    @Test
    public void test09642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09642");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression8);
        java.lang.String str10 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        boolean boolean13 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory17.setPort((int) (byte) -1);
        boolean boolean20 = undertowEmbeddedServletContainerFactory17.isAccessLogEnabled();
        java.io.File file21 = null;
        undertowEmbeddedServletContainerFactory17.setSessionStoreDir(file21);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file25 = null;
        undertowEmbeddedServletContainerFactory24.setDocumentRoot(file25);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file29 = undertowEmbeddedServletContainerFactory28.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory28.setPersistSession(false);
        undertowEmbeddedServletContainerFactory28.setJspServletClassName("");
        java.io.File file34 = undertowEmbeddedServletContainerFactory28.getSessionStoreDir();
        java.lang.String str35 = undertowEmbeddedServletContainerFactory28.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory37.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory37.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl42 = undertowEmbeddedServletContainerFactory37.getSsl();
        boolean boolean43 = undertowEmbeddedServletContainerFactory37.isAccessLogEnabled();
        java.io.File file44 = null;
        undertowEmbeddedServletContainerFactory37.setAccessLogDirectory(file44);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray46 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet47 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet47, errorPageArray46);
        undertowEmbeddedServletContainerFactory37.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet47);
        undertowEmbeddedServletContainerFactory28.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet47);
        undertowEmbeddedServletContainerFactory24.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet47);
        boolean boolean52 = undertowEmbeddedServletContainerFactory24.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory24.setBuffersPerRegion((java.lang.Integer) 10);
        java.io.File file55 = undertowEmbeddedServletContainerFactory24.getSessionStoreDir();
        boolean boolean56 = undertowEmbeddedServletContainerFactory24.isAccessLogEnabled();
        java.lang.String str57 = undertowEmbeddedServletContainerFactory24.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet58 = undertowEmbeddedServletContainerFactory24.getErrorPages();
        undertowEmbeddedServletContainerFactory17.setErrorPages(errorPageSet58);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet58);
        undertowEmbeddedServletContainerFactory1.setPort((int) 'a');
        java.io.File file63 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file63);
        org.springframework.boot.context.embedded.Compression compression65 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression65);
        boolean boolean67 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(ssl42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(errorPageArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(errorPageSet58);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test09643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09643");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray4);
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        undertowEmbeddedServletContainerFactory1.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory11.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory11.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Compression compression16 = undertowEmbeddedServletContainerFactory11.getCompression();
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory11.setSessionStoreDir(file17);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory20.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory20.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl25 = undertowEmbeddedServletContainerFactory20.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer27 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap26);
        java.util.Map<java.lang.String, java.lang.String> strMap28 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer29 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap28);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer31 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap30);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray32 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer27, initParameterConfiguringServletContextInitializer29, initParameterConfiguringServletContextInitializer31 };
        undertowEmbeddedServletContainerFactory20.addInitializers(servletContextInitializerArray32);
        undertowEmbeddedServletContainerFactory20.setJspServletClassName("hi!");
        int int36 = undertowEmbeddedServletContainerFactory20.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file39 = undertowEmbeddedServletContainerFactory38.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory38.setPersistSession(false);
        undertowEmbeddedServletContainerFactory38.setJspServletClassName("");
        java.io.File file44 = undertowEmbeddedServletContainerFactory38.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory38.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory38.setBufferSize((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.JspServlet jspServlet49 = undertowEmbeddedServletContainerFactory38.getJspServlet();
        undertowEmbeddedServletContainerFactory20.setJspServlet(jspServlet49);
        undertowEmbeddedServletContainerFactory11.setJspServlet(jspServlet49);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file54 = undertowEmbeddedServletContainerFactory53.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory53.setPersistSession(false);
        undertowEmbeddedServletContainerFactory53.setJspServletClassName("");
        java.io.File file59 = undertowEmbeddedServletContainerFactory53.getSessionStoreDir();
        java.lang.String str60 = undertowEmbeddedServletContainerFactory53.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory62.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory62.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl67 = undertowEmbeddedServletContainerFactory62.getSsl();
        boolean boolean68 = undertowEmbeddedServletContainerFactory62.isAccessLogEnabled();
        java.io.File file69 = null;
        undertowEmbeddedServletContainerFactory62.setAccessLogDirectory(file69);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray71 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet72 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet72, errorPageArray71);
        undertowEmbeddedServletContainerFactory62.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet72);
        undertowEmbeddedServletContainerFactory53.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet72);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory77.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray80 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory77.addBuilderCustomizers(undertowBuilderCustomizerArray80);
        undertowEmbeddedServletContainerFactory53.addBuilderCustomizers(undertowBuilderCustomizerArray80);
        undertowEmbeddedServletContainerFactory11.addBuilderCustomizers(undertowBuilderCustomizerArray80);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray80);
        org.springframework.core.io.ResourceLoader resourceLoader85 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader85);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1800);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/' and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(compression16);
        org.junit.Assert.assertNull(ssl25);
        org.junit.Assert.assertNotNull(servletContextInitializerArray32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(jspServlet49);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(ssl67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(errorPageArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray80);
    }

    @Test
    public void test09644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09644");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        boolean boolean4 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory6.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl11 = null;
        undertowEmbeddedServletContainerFactory6.setSsl(ssl11);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray13 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory6.addErrorPages(errorPageArray13);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray13);
        boolean boolean16 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file17);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.Compression compression21 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression21);
        undertowEmbeddedServletContainerFactory1.setPort((int) (short) 100);
        java.util.concurrent.TimeUnit timeUnit26 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) ' ', timeUnit26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(errorPageArray13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test09645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09645");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) '#');
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.lang.String str4 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader5);
        org.springframework.boot.context.embedded.Ssl ssl7 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl7);
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file9);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test09646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09646");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory10.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory10.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl15 = undertowEmbeddedServletContainerFactory10.getSsl();
        boolean boolean16 = undertowEmbeddedServletContainerFactory10.isAccessLogEnabled();
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory10.setAccessLogDirectory(file17);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray19 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20, errorPageArray19);
        undertowEmbeddedServletContainerFactory10.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory25.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray28 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory25.addBuilderCustomizers(undertowBuilderCustomizerArray28);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray28);
        undertowEmbeddedServletContainerFactory1.setPort(32);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.Ssl ssl37 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl37);
        java.io.File file39 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file39);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory42.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory42.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader47 = null;
        undertowEmbeddedServletContainerFactory42.setResourceLoader(resourceLoader47);
        org.springframework.boot.context.embedded.Compression compression49 = null;
        undertowEmbeddedServletContainerFactory42.setCompression(compression49);
        java.net.InetAddress inetAddress51 = undertowEmbeddedServletContainerFactory42.getAddress();
        undertowEmbeddedServletContainerFactory42.setPort(32);
        undertowEmbeddedServletContainerFactory42.setWorkerThreads((java.lang.Integer) 0);
        java.lang.String str56 = undertowEmbeddedServletContainerFactory42.getDisplayName();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection57 = undertowEmbeddedServletContainerFactory42.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray60 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory59.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray60);
        org.springframework.boot.context.embedded.Ssl ssl62 = null;
        undertowEmbeddedServletContainerFactory59.setSsl(ssl62);
        org.springframework.boot.context.embedded.Ssl ssl64 = undertowEmbeddedServletContainerFactory59.getSsl();
        undertowEmbeddedServletContainerFactory59.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory59.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection69 = undertowEmbeddedServletContainerFactory59.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory59.setAccessLogEnabled(true);
        java.net.InetAddress inetAddress72 = undertowEmbeddedServletContainerFactory59.getAddress();
        org.springframework.boot.context.embedded.Compression compression73 = undertowEmbeddedServletContainerFactory59.getCompression();
        boolean boolean74 = undertowEmbeddedServletContainerFactory59.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory76.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory76.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl81 = undertowEmbeddedServletContainerFactory76.getSsl();
        boolean boolean82 = undertowEmbeddedServletContainerFactory76.isAccessLogEnabled();
        java.io.File file83 = null;
        undertowEmbeddedServletContainerFactory76.setAccessLogDirectory(file83);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray85 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet86 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet86, errorPageArray85);
        undertowEmbeddedServletContainerFactory76.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet86);
        undertowEmbeddedServletContainerFactory76.setAccessLogPattern("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory92 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings93 = undertowEmbeddedServletContainerFactory92.getMimeMappings();
        undertowEmbeddedServletContainerFactory76.setMimeMappings(mimeMappings93);
        undertowEmbeddedServletContainerFactory59.setMimeMappings(mimeMappings93);
        undertowEmbeddedServletContainerFactory42.setMimeMappings(mimeMappings93);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings93);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(ssl15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(errorPageArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray28);
        org.junit.Assert.assertNull(inetAddress51);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection57);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray60);
        org.junit.Assert.assertNull(ssl64);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection69);
        org.junit.Assert.assertNull(inetAddress72);
        org.junit.Assert.assertNull(compression73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(ssl81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(errorPageArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(mimeMappings93);
    }

    @Test
    public void test09647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09647");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader3);
        org.springframework.boot.context.embedded.Ssl ssl5 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl5);
        org.springframework.core.io.ResourceLoader resourceLoader7 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader7);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 35);
        org.junit.Assert.assertNull(file2);
    }

    @Test
    public void test09648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09648");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        boolean boolean3 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file4);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection10 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory13.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory13.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl18 = undertowEmbeddedServletContainerFactory13.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer20 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap19);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer22 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap21);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer24 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap23);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray25 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer20, initParameterConfiguringServletContextInitializer22, initParameterConfiguringServletContextInitializer24 };
        undertowEmbeddedServletContainerFactory13.addInitializers(servletContextInitializerArray25);
        undertowEmbeddedServletContainerFactory13.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str29 = undertowEmbeddedServletContainerFactory13.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory31.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory31.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl36 = undertowEmbeddedServletContainerFactory31.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer38 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap37);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer40 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap39);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer42 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap41);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray43 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer38, initParameterConfiguringServletContextInitializer40, initParameterConfiguringServletContextInitializer42 };
        undertowEmbeddedServletContainerFactory31.addInitializers(servletContextInitializerArray43);
        undertowEmbeddedServletContainerFactory31.setJspServletClassName("hi!");
        int int47 = undertowEmbeddedServletContainerFactory31.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet48 = undertowEmbeddedServletContainerFactory31.getErrorPages();
        undertowEmbeddedServletContainerFactory13.setErrorPages(errorPageSet48);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray52 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory51.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray52);
        org.springframework.boot.context.embedded.Ssl ssl54 = null;
        undertowEmbeddedServletContainerFactory51.setSsl(ssl54);
        undertowEmbeddedServletContainerFactory51.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet58 = undertowEmbeddedServletContainerFactory51.getErrorPages();
        undertowEmbeddedServletContainerFactory51.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory51.setIoThreads((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file65 = null;
        undertowEmbeddedServletContainerFactory64.setAccessLogDirectory(file65);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray67 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory64.addErrorPages(errorPageArray67);
        undertowEmbeddedServletContainerFactory51.addErrorPages(errorPageArray67);
        undertowEmbeddedServletContainerFactory13.addErrorPages(errorPageArray67);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray67);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection10);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(ssl18);
        org.junit.Assert.assertNotNull(servletContextInitializerArray25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(ssl36);
        org.junit.Assert.assertNotNull(servletContextInitializerArray43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet48);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray52);
        org.junit.Assert.assertNotNull(errorPageSet58);
        org.junit.Assert.assertNotNull(errorPageArray67);
    }

    @Test
    public void test09649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09649");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) 'a');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray5 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory4.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray5);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray9 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory8.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray9);
        undertowEmbeddedServletContainerFactory4.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray9);
        undertowEmbeddedServletContainerFactory2.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray9);
        java.lang.String str13 = undertowEmbeddedServletContainerFactory2.getContextPath();
        undertowEmbeddedServletContainerFactory2.setDisplayName("");
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory19.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory19.setPersistSession(false);
        boolean boolean24 = undertowEmbeddedServletContainerFactory19.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory19.setBufferSize((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory19.setWorkerThreads((java.lang.Integer) 100);
        java.net.InetAddress inetAddress29 = undertowEmbeddedServletContainerFactory19.getAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = undertowEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file33 = undertowEmbeddedServletContainerFactory32.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory32.setPersistSession(false);
        undertowEmbeddedServletContainerFactory32.setJspServletClassName("");
        undertowEmbeddedServletContainerFactory32.setPersistSession(false);
        int int40 = undertowEmbeddedServletContainerFactory32.getSessionTimeout();
        undertowEmbeddedServletContainerFactory32.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file45 = undertowEmbeddedServletContainerFactory44.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory44.setPersistSession(false);
        undertowEmbeddedServletContainerFactory44.setJspServletClassName("");
        java.io.File file50 = undertowEmbeddedServletContainerFactory44.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory44.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory44.setBufferSize((java.lang.Integer) 0);
        int int55 = undertowEmbeddedServletContainerFactory44.getSessionTimeout();
        java.io.File file56 = undertowEmbeddedServletContainerFactory44.getSessionStoreDir();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory58.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray63 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory62.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray63);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray67 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory66.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray67);
        undertowEmbeddedServletContainerFactory62.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray67);
        undertowEmbeddedServletContainerFactory58.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray67);
        java.lang.String str71 = undertowEmbeddedServletContainerFactory58.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory73 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory73.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory73.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray78 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer79 = undertowEmbeddedServletContainerFactory73.getEmbeddedServletContainer(servletContextInitializerArray78);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer80 = undertowEmbeddedServletContainerFactory58.getEmbeddedServletContainer(servletContextInitializerArray78);
        undertowEmbeddedServletContainerFactory44.addInitializers(servletContextInitializerArray78);
        undertowEmbeddedServletContainerFactory32.addInitializers(servletContextInitializerArray78);
        undertowEmbeddedServletContainerFactory19.addInitializers(servletContextInitializerArray78);
        undertowEmbeddedServletContainerFactory2.addInitializers(servletContextInitializerArray78);
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray5);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(inetAddress29);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1800 + "'", int40 == 1800);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1800 + "'", int55 == 1800);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray63);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray67);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(servletContextInitializerArray78);
        org.junit.Assert.assertNotNull(embeddedServletContainer79);
        org.junit.Assert.assertNotNull(embeddedServletContainer80);
    }

    @Test
    public void test09650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09650");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer8 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap7);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer10 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer12 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap11);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer8, initParameterConfiguringServletContextInitializer10, initParameterConfiguringServletContextInitializer12 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray13);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str17 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.boot.context.embedded.Ssl ssl18 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.Ssl ssl21 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection22 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray25 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory24.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray25);
        org.springframework.boot.context.embedded.Ssl ssl27 = null;
        undertowEmbeddedServletContainerFactory24.setSsl(ssl27);
        org.springframework.boot.context.embedded.Ssl ssl29 = undertowEmbeddedServletContainerFactory24.getSsl();
        boolean boolean30 = undertowEmbeddedServletContainerFactory24.isRegisterDefaultServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection31 = undertowEmbeddedServletContainerFactory24.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings32);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file38 = null;
        undertowEmbeddedServletContainerFactory37.setDocumentRoot(file38);
        org.springframework.boot.context.embedded.Ssl ssl40 = null;
        undertowEmbeddedServletContainerFactory37.setSsl(ssl40);
        int int42 = undertowEmbeddedServletContainerFactory37.getPort();
        java.net.InetAddress inetAddress43 = undertowEmbeddedServletContainerFactory37.getAddress();
        undertowEmbeddedServletContainerFactory37.setPort((int) (byte) -1);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet46 = undertowEmbeddedServletContainerFactory37.getErrorPages();
        java.lang.String str47 = undertowEmbeddedServletContainerFactory37.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        java.lang.String str51 = undertowEmbeddedServletContainerFactory50.getContextPath();
        org.springframework.boot.context.embedded.Ssl ssl52 = null;
        undertowEmbeddedServletContainerFactory50.setSsl(ssl52);
        undertowEmbeddedServletContainerFactory50.setAccessLogEnabled(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray58 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory57.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray58);
        org.springframework.boot.context.embedded.Ssl ssl60 = null;
        undertowEmbeddedServletContainerFactory57.setSsl(ssl60);
        org.springframework.boot.context.embedded.Ssl ssl62 = undertowEmbeddedServletContainerFactory57.getSsl();
        boolean boolean63 = undertowEmbeddedServletContainerFactory57.isRegisterDefaultServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection64 = undertowEmbeddedServletContainerFactory57.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory57.setPersistSession(false);
        int int67 = undertowEmbeddedServletContainerFactory57.getPort();
        undertowEmbeddedServletContainerFactory57.setPort((int) (short) -1);
        int int70 = undertowEmbeddedServletContainerFactory57.getSessionTimeout();
        java.io.File file71 = null;
        undertowEmbeddedServletContainerFactory57.setAccessLogDirectory(file71);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings73 = undertowEmbeddedServletContainerFactory57.getMimeMappings();
        undertowEmbeddedServletContainerFactory50.setMimeMappings(mimeMappings73);
        undertowEmbeddedServletContainerFactory37.setMimeMappings(mimeMappings73);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings73);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(ssl18);
        org.junit.Assert.assertNull(ssl21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection22);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray25);
        org.junit.Assert.assertNull(ssl29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection31);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 97 + "'", int42 == 97);
        org.junit.Assert.assertNull(inetAddress43);
        org.junit.Assert.assertNotNull(errorPageSet46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray58);
        org.junit.Assert.assertNull(ssl62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1800 + "'", int70 == 1800);
        org.junit.Assert.assertNotNull(mimeMappings73);
    }

    @Test
    public void test09651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09651");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file6);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.net.InetAddress inetAddress10 = null;
        undertowEmbeddedServletContainerFactory9.setAddress(inetAddress10);
        undertowEmbeddedServletContainerFactory9.setBuffersPerRegion((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory9.setJspServletClassName("hi!");
        java.io.File file16 = null;
        undertowEmbeddedServletContainerFactory9.setSessionStoreDir(file16);
        undertowEmbeddedServletContainerFactory9.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory21.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray22);
        org.springframework.boot.context.embedded.Ssl ssl24 = null;
        undertowEmbeddedServletContainerFactory21.setSsl(ssl24);
        org.springframework.boot.context.embedded.Ssl ssl26 = undertowEmbeddedServletContainerFactory21.getSsl();
        boolean boolean27 = undertowEmbeddedServletContainerFactory21.isRegisterDefaultServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection28 = undertowEmbeddedServletContainerFactory21.getDeploymentInfoCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection29 = undertowEmbeddedServletContainerFactory21.getDeploymentInfoCustomizers();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet30 = undertowEmbeddedServletContainerFactory21.getErrorPages();
        undertowEmbeddedServletContainerFactory9.setErrorPages(errorPageSet30);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet30);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray22);
        org.junit.Assert.assertNull(ssl26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection28);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection29);
        org.junit.Assert.assertNotNull(errorPageSet30);
    }

    @Test
    public void test09652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09652");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray4);
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 100);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        int int11 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
    }

    @Test
    public void test09653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09653");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        boolean boolean3 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader4);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 100);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(mimeMappings10);
    }

    @Test
    public void test09654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09654");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader9);
        java.io.File file11 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 32);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet14 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray19 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory18.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray19);
        org.springframework.boot.context.embedded.Ssl ssl21 = null;
        undertowEmbeddedServletContainerFactory18.setSsl(ssl21);
        org.springframework.boot.context.embedded.Ssl ssl23 = undertowEmbeddedServletContainerFactory18.getSsl();
        undertowEmbeddedServletContainerFactory18.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory18.setDisplayName("hi!");
        java.net.InetAddress inetAddress28 = undertowEmbeddedServletContainerFactory18.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray31 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory30.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray31);
        org.springframework.boot.context.embedded.JspServlet jspServlet33 = undertowEmbeddedServletContainerFactory30.getJspServlet();
        undertowEmbeddedServletContainerFactory18.setJspServlet(jspServlet33);
        undertowEmbeddedServletContainerFactory18.setPersistSession(true);
        undertowEmbeddedServletContainerFactory18.setBufferSize((java.lang.Integer) 100);
        boolean boolean39 = undertowEmbeddedServletContainerFactory18.isPersistSession();
        boolean boolean40 = undertowEmbeddedServletContainerFactory18.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray43 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory42.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray43);
        java.io.File file45 = null;
        undertowEmbeddedServletContainerFactory42.setSessionStoreDir(file45);
        undertowEmbeddedServletContainerFactory42.setPort(0);
        java.io.File file49 = undertowEmbeddedServletContainerFactory42.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings52 = undertowEmbeddedServletContainerFactory51.getMimeMappings();
        undertowEmbeddedServletContainerFactory51.setDisplayName("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet55 = undertowEmbeddedServletContainerFactory51.getErrorPages();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet56 = undertowEmbeddedServletContainerFactory51.getErrorPages();
        undertowEmbeddedServletContainerFactory42.setErrorPages(errorPageSet56);
        undertowEmbeddedServletContainerFactory18.setErrorPages(errorPageSet56);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet56);
        boolean boolean60 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(errorPageSet14);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray19);
        org.junit.Assert.assertNull(ssl23);
        org.junit.Assert.assertNull(inetAddress28);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray31);
        org.junit.Assert.assertNotNull(jspServlet33);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray43);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(mimeMappings52);
        org.junit.Assert.assertNotNull(errorPageSet55);
        org.junit.Assert.assertNotNull(errorPageSet56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test09655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09655");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory12.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory12.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory12.getSsl();
        boolean boolean18 = undertowEmbeddedServletContainerFactory12.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = null;
        undertowEmbeddedServletContainerFactory12.setJspServlet(jspServlet19);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings21);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection23 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory27.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory27.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl32 = null;
        undertowEmbeddedServletContainerFactory27.setSsl(ssl32);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray34 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory27.addErrorPages(errorPageArray34);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray34);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Compression compression39 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet40 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 10);
        java.net.InetAddress inetAddress43 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress43);
        undertowEmbeddedServletContainerFactory1.setPort(97);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection23);
        org.junit.Assert.assertNotNull(errorPageArray34);
        org.junit.Assert.assertNull(compression39);
        org.junit.Assert.assertNotNull(errorPageSet40);
    }

    @Test
    public void test09656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09656");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory5.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray6);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory9.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        undertowEmbeddedServletContainerFactory5.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.lang.String str14 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory16.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory16.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray21 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer22 = undertowEmbeddedServletContainerFactory16.getEmbeddedServletContainer(servletContextInitializerArray21);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer23 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray21);
        org.springframework.boot.context.embedded.JspServlet jspServlet24 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        java.io.File file25 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file25);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection29 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray32 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory31.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray32);
        java.io.File file34 = null;
        undertowEmbeddedServletContainerFactory31.setSessionStoreDir(file34);
        org.springframework.boot.context.embedded.Compression compression36 = null;
        undertowEmbeddedServletContainerFactory31.setCompression(compression36);
        undertowEmbeddedServletContainerFactory31.setBufferSize((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray42 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory41.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray42);
        org.springframework.boot.context.embedded.Ssl ssl44 = null;
        undertowEmbeddedServletContainerFactory41.setSsl(ssl44);
        org.springframework.boot.context.embedded.Ssl ssl46 = undertowEmbeddedServletContainerFactory41.getSsl();
        undertowEmbeddedServletContainerFactory41.setDisplayName("");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings49 = undertowEmbeddedServletContainerFactory41.getMimeMappings();
        undertowEmbeddedServletContainerFactory31.setMimeMappings(mimeMappings49);
        undertowEmbeddedServletContainerFactory31.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory31.setPersistSession(true);
        undertowEmbeddedServletContainerFactory31.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory58.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray63 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory62.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray63);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray67 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory66.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray67);
        undertowEmbeddedServletContainerFactory62.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray67);
        undertowEmbeddedServletContainerFactory58.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray67);
        java.lang.String str71 = undertowEmbeddedServletContainerFactory58.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory73 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory73.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory73.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray78 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer79 = undertowEmbeddedServletContainerFactory73.getEmbeddedServletContainer(servletContextInitializerArray78);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer80 = undertowEmbeddedServletContainerFactory58.getEmbeddedServletContainer(servletContextInitializerArray78);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer81 = undertowEmbeddedServletContainerFactory31.getEmbeddedServletContainer(servletContextInitializerArray78);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray78);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(servletContextInitializerArray21);
        org.junit.Assert.assertNotNull(embeddedServletContainer22);
        org.junit.Assert.assertNotNull(embeddedServletContainer23);
        org.junit.Assert.assertNotNull(jspServlet24);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection29);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray32);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray42);
        org.junit.Assert.assertNull(ssl46);
        org.junit.Assert.assertNotNull(mimeMappings49);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray63);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray67);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(servletContextInitializerArray78);
        org.junit.Assert.assertNotNull(embeddedServletContainer79);
        org.junit.Assert.assertNotNull(embeddedServletContainer80);
        org.junit.Assert.assertNotNull(embeddedServletContainer81);
    }

    @Test
    public void test09657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09657");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory5.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory5.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory5.setResourceLoader(resourceLoader10);
        org.springframework.boot.context.embedded.Compression compression12 = null;
        undertowEmbeddedServletContainerFactory5.setCompression(compression12);
        undertowEmbeddedServletContainerFactory5.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory17.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory17.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl22 = undertowEmbeddedServletContainerFactory17.getSsl();
        boolean boolean23 = undertowEmbeddedServletContainerFactory17.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet24 = null;
        undertowEmbeddedServletContainerFactory17.setJspServlet(jspServlet24);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        undertowEmbeddedServletContainerFactory5.setMimeMappings(mimeMappings26);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings26);
        boolean boolean29 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) ' ');
        java.io.File file34 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file34);
        int int36 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory1.setPort((int) '4');
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 32 + "'", int36 == 32);
    }

    @Test
    public void test09658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09658");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.Compression compression6 = undertowEmbeddedServletContainerFactory1.getCompression();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setPersistSession(true);
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file10);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection16 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file19 = undertowEmbeddedServletContainerFactory18.getSessionStoreDir();
        java.lang.String str20 = undertowEmbeddedServletContainerFactory18.getContextPath();
        java.net.InetAddress inetAddress21 = undertowEmbeddedServletContainerFactory18.getAddress();
        undertowEmbeddedServletContainerFactory18.setIoThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory18.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory18.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory29.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory29.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader34 = null;
        undertowEmbeddedServletContainerFactory29.setResourceLoader(resourceLoader34);
        org.springframework.boot.context.embedded.Compression compression36 = null;
        undertowEmbeddedServletContainerFactory29.setCompression(compression36);
        java.lang.String str38 = undertowEmbeddedServletContainerFactory29.getContextPath();
        undertowEmbeddedServletContainerFactory29.setUseForwardHeaders(true);
        java.lang.String str41 = undertowEmbeddedServletContainerFactory29.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory43.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory43.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl48 = undertowEmbeddedServletContainerFactory43.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer50 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap49);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer52 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap51);
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer54 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap53);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray55 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer50, initParameterConfiguringServletContextInitializer52, initParameterConfiguringServletContextInitializer54 };
        undertowEmbeddedServletContainerFactory43.addInitializers(servletContextInitializerArray55);
        undertowEmbeddedServletContainerFactory29.addInitializers(servletContextInitializerArray55);
        undertowEmbeddedServletContainerFactory18.addInitializers(servletContextInitializerArray55);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection59 = undertowEmbeddedServletContainerFactory18.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray62 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory61.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray62);
        org.springframework.boot.context.embedded.Ssl ssl64 = null;
        undertowEmbeddedServletContainerFactory61.setSsl(ssl64);
        org.springframework.boot.context.embedded.Ssl ssl66 = undertowEmbeddedServletContainerFactory61.getSsl();
        undertowEmbeddedServletContainerFactory61.setRegisterJspServlet(false);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet69 = undertowEmbeddedServletContainerFactory61.getErrorPages();
        undertowEmbeddedServletContainerFactory18.setErrorPages(errorPageSet69);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet69);
        undertowEmbeddedServletContainerFactory1.setPort((-1));
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(compression6);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection16);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(inetAddress21);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(ssl48);
        org.junit.Assert.assertNotNull(servletContextInitializerArray55);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection59);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray62);
        org.junit.Assert.assertNull(ssl66);
        org.junit.Assert.assertNotNull(errorPageSet69);
    }

    @Test
    public void test09659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09659");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 0);
        int int12 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        java.io.File file13 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.io.File file14 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.lang.String str15 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.JspServlet jspServlet16 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        org.springframework.boot.context.embedded.Compression compression17 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression17);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(jspServlet16);
        org.junit.Assert.assertNull(ssl19);
    }

    @Test
    public void test09660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09660");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression8);
        java.lang.String str10 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        boolean boolean13 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection16 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file17);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory22.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray25 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory22.addBuilderCustomizers(undertowBuilderCustomizerArray25);
        undertowEmbeddedServletContainerFactory20.addBuilderCustomizers(undertowBuilderCustomizerArray25);
        org.springframework.boot.context.embedded.Ssl ssl28 = null;
        undertowEmbeddedServletContainerFactory20.setSsl(ssl28);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory31.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory31.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl36 = undertowEmbeddedServletContainerFactory31.getSsl();
        boolean boolean37 = undertowEmbeddedServletContainerFactory31.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet38 = null;
        undertowEmbeddedServletContainerFactory31.setJspServlet(jspServlet38);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = undertowEmbeddedServletContainerFactory31.getMimeMappings();
        undertowEmbeddedServletContainerFactory20.setMimeMappings(mimeMappings40);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection42 = undertowEmbeddedServletContainerFactory20.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory20.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory46.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory46.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl51 = null;
        undertowEmbeddedServletContainerFactory46.setSsl(ssl51);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray53 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory46.addErrorPages(errorPageArray53);
        undertowEmbeddedServletContainerFactory20.addErrorPages(errorPageArray53);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file58 = undertowEmbeddedServletContainerFactory57.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory57.setPersistSession(false);
        undertowEmbeddedServletContainerFactory57.setJspServletClassName("");
        java.io.File file63 = undertowEmbeddedServletContainerFactory57.getSessionStoreDir();
        java.lang.String str64 = undertowEmbeddedServletContainerFactory57.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory66.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory66.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl71 = undertowEmbeddedServletContainerFactory66.getSsl();
        boolean boolean72 = undertowEmbeddedServletContainerFactory66.isAccessLogEnabled();
        java.io.File file73 = null;
        undertowEmbeddedServletContainerFactory66.setAccessLogDirectory(file73);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray75 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet76 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet76, errorPageArray75);
        undertowEmbeddedServletContainerFactory66.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet76);
        undertowEmbeddedServletContainerFactory57.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet76);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory81 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory81.setPort((int) (byte) -1);
        boolean boolean84 = undertowEmbeddedServletContainerFactory81.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory86 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory86.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory86.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl91 = null;
        undertowEmbeddedServletContainerFactory86.setSsl(ssl91);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray93 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory86.addErrorPages(errorPageArray93);
        undertowEmbeddedServletContainerFactory81.addErrorPages(errorPageArray93);
        undertowEmbeddedServletContainerFactory57.addErrorPages(errorPageArray93);
        undertowEmbeddedServletContainerFactory20.addErrorPages(errorPageArray93);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray93);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection16);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray25);
        org.junit.Assert.assertNull(ssl36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection42);
        org.junit.Assert.assertNotNull(errorPageArray53);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(ssl71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(errorPageArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(errorPageArray93);
    }

    @Test
    public void test09661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09661");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory10.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory14.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray15);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray19 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory18.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray19);
        undertowEmbeddedServletContainerFactory14.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray19);
        undertowEmbeddedServletContainerFactory10.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray19);
        java.lang.String str23 = undertowEmbeddedServletContainerFactory10.getContextPath();
        java.lang.String str24 = undertowEmbeddedServletContainerFactory10.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory26.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory26.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray31 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer32 = undertowEmbeddedServletContainerFactory26.getEmbeddedServletContainer(servletContextInitializerArray31);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer33 = undertowEmbeddedServletContainerFactory10.getEmbeddedServletContainer(servletContextInitializerArray31);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray31);
        java.io.File file35 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file35);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection37 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        int int38 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.Ssl ssl39 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray15);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(servletContextInitializerArray31);
        org.junit.Assert.assertNotNull(embeddedServletContainer32);
        org.junit.Assert.assertNotNull(embeddedServletContainer33);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        org.junit.Assert.assertNull(ssl39);
    }

    @Test
    public void test09662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09662");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory5.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory5.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory5.setResourceLoader(resourceLoader10);
        org.springframework.boot.context.embedded.Compression compression12 = null;
        undertowEmbeddedServletContainerFactory5.setCompression(compression12);
        undertowEmbeddedServletContainerFactory5.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory17.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory17.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl22 = undertowEmbeddedServletContainerFactory17.getSsl();
        boolean boolean23 = undertowEmbeddedServletContainerFactory17.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet24 = null;
        undertowEmbeddedServletContainerFactory17.setJspServlet(jspServlet24);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        undertowEmbeddedServletContainerFactory5.setMimeMappings(mimeMappings26);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings26);
        boolean boolean29 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        java.lang.String str32 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file35 = undertowEmbeddedServletContainerFactory34.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory34.setPersistSession(false);
        undertowEmbeddedServletContainerFactory34.setJspServletClassName("");
        java.io.File file40 = undertowEmbeddedServletContainerFactory34.getSessionStoreDir();
        java.lang.String str41 = undertowEmbeddedServletContainerFactory34.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory45.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray48 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory45.addBuilderCustomizers(undertowBuilderCustomizerArray48);
        undertowEmbeddedServletContainerFactory43.addBuilderCustomizers(undertowBuilderCustomizerArray48);
        undertowEmbeddedServletContainerFactory34.addBuilderCustomizers(undertowBuilderCustomizerArray48);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray48);
        undertowEmbeddedServletContainerFactory1.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file57 = null;
        undertowEmbeddedServletContainerFactory56.setDocumentRoot(file57);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file61 = undertowEmbeddedServletContainerFactory60.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory60.setPersistSession(false);
        undertowEmbeddedServletContainerFactory60.setJspServletClassName("");
        java.io.File file66 = undertowEmbeddedServletContainerFactory60.getSessionStoreDir();
        java.lang.String str67 = undertowEmbeddedServletContainerFactory60.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory69.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory69.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl74 = undertowEmbeddedServletContainerFactory69.getSsl();
        boolean boolean75 = undertowEmbeddedServletContainerFactory69.isAccessLogEnabled();
        java.io.File file76 = null;
        undertowEmbeddedServletContainerFactory69.setAccessLogDirectory(file76);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray78 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet79 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet79, errorPageArray78);
        undertowEmbeddedServletContainerFactory69.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet79);
        undertowEmbeddedServletContainerFactory60.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet79);
        undertowEmbeddedServletContainerFactory56.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet79);
        boolean boolean84 = undertowEmbeddedServletContainerFactory56.isAccessLogEnabled();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet85 = undertowEmbeddedServletContainerFactory56.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet85);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        java.lang.Class<?> wildcardClass89 = undertowEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray48);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(ssl74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(errorPageArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(errorPageSet85);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test09663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09663");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        boolean boolean3 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file4);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        java.net.InetAddress inetAddress8 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.io.File file9 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory11.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory11.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl16 = null;
        undertowEmbeddedServletContainerFactory11.setSsl(ssl16);
        undertowEmbeddedServletContainerFactory11.setPersistSession(true);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = undertowEmbeddedServletContainerFactory11.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory11.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings21);
        org.springframework.boot.context.embedded.JspServlet jspServlet23 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        boolean boolean24 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(inetAddress8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(jspServlet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test09664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09664");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory12.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory12.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        undertowEmbeddedServletContainerFactory10.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory20.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory24.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory24.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl29 = undertowEmbeddedServletContainerFactory24.getSsl();
        boolean boolean30 = undertowEmbeddedServletContainerFactory24.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet31 = null;
        undertowEmbeddedServletContainerFactory24.setJspServlet(jspServlet31);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray33 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet34 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet34, errorPageArray33);
        undertowEmbeddedServletContainerFactory24.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet34);
        undertowEmbeddedServletContainerFactory20.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet34);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet38 = undertowEmbeddedServletContainerFactory20.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet38);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory41.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory41.setBuffersPerRegion((java.lang.Integer) 97);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory47.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory47.setPersistSession(false);
        boolean boolean52 = undertowEmbeddedServletContainerFactory47.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory54.setPort((int) (byte) -1);
        boolean boolean57 = undertowEmbeddedServletContainerFactory54.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory59.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory59.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl64 = null;
        undertowEmbeddedServletContainerFactory59.setSsl(ssl64);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray66 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory59.addErrorPages(errorPageArray66);
        undertowEmbeddedServletContainerFactory54.addErrorPages(errorPageArray66);
        undertowEmbeddedServletContainerFactory47.addErrorPages(errorPageArray66);
        undertowEmbeddedServletContainerFactory41.addErrorPages(errorPageArray66);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray66);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection74 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(ssl29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(errorPageArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(errorPageSet38);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(errorPageArray66);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection74);
    }

    @Test
    public void test09665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09665");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader3);
        org.springframework.boot.context.embedded.Ssl ssl5 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl5);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        int int8 = undertowEmbeddedServletContainerFactory1.getPort();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
    }

    @Test
    public void test09666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09666");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory6.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13, initParameterConfiguringServletContextInitializer15, initParameterConfiguringServletContextInitializer17 };
        undertowEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray18);
        boolean boolean21 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        boolean boolean22 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file27 = undertowEmbeddedServletContainerFactory26.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory26.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory31.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory31.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl36 = undertowEmbeddedServletContainerFactory31.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer38 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap37);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer40 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap39);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer42 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap41);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray43 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer38, initParameterConfiguringServletContextInitializer40, initParameterConfiguringServletContextInitializer42 };
        undertowEmbeddedServletContainerFactory31.addInitializers(servletContextInitializerArray43);
        undertowEmbeddedServletContainerFactory26.addInitializers(servletContextInitializerArray43);
        undertowEmbeddedServletContainerFactory26.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory26.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage errorPage50 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray51 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage50 };
        undertowEmbeddedServletContainerFactory26.addErrorPages(errorPageArray51);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray51);
        java.lang.String str54 = undertowEmbeddedServletContainerFactory1.getContextPath();
        boolean boolean55 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(ssl36);
        org.junit.Assert.assertNotNull(servletContextInitializerArray43);
        org.junit.Assert.assertNotNull(errorPageArray51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test09667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09667");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file8);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection10 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.Compression compression11 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression11);
        org.springframework.boot.context.embedded.Compression compression13 = undertowEmbeddedServletContainerFactory1.getCompression();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 100);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection18 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.io.File file19 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        int int20 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory22.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory22.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader27 = null;
        undertowEmbeddedServletContainerFactory22.setResourceLoader(resourceLoader27);
        java.net.InetAddress inetAddress29 = null;
        undertowEmbeddedServletContainerFactory22.setAddress(inetAddress29);
        undertowEmbeddedServletContainerFactory22.setSessionTimeout((int) 'a');
        org.springframework.boot.context.embedded.JspServlet jspServlet33 = undertowEmbeddedServletContainerFactory22.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet33);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 100);
        java.lang.Class<?> wildcardClass37 = undertowEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection10);
        org.junit.Assert.assertNull(compression13);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertNotNull(jspServlet33);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test09668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09668");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        java.net.InetAddress inetAddress8 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress8);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) 'a');
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection14 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.io.File file15 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.lang.String str16 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.io.File file19 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file19);
        boolean boolean21 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test09669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09669");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection11 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection14 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory16.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory16.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl21 = undertowEmbeddedServletContainerFactory16.getSsl();
        boolean boolean22 = undertowEmbeddedServletContainerFactory16.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet23 = null;
        undertowEmbeddedServletContainerFactory16.setJspServlet(jspServlet23);
        java.net.InetAddress inetAddress25 = undertowEmbeddedServletContainerFactory16.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory27.setPort((int) (byte) -1);
        boolean boolean30 = undertowEmbeddedServletContainerFactory27.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory32.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory32.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl37 = null;
        undertowEmbeddedServletContainerFactory32.setSsl(ssl37);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray39 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory32.addErrorPages(errorPageArray39);
        undertowEmbeddedServletContainerFactory27.addErrorPages(errorPageArray39);
        java.lang.String str42 = undertowEmbeddedServletContainerFactory27.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory44.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray49 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory48.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray49);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray53 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory52.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray53);
        undertowEmbeddedServletContainerFactory48.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray53);
        undertowEmbeddedServletContainerFactory44.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray53);
        java.lang.String str57 = undertowEmbeddedServletContainerFactory44.getContextPath();
        java.lang.String str58 = undertowEmbeddedServletContainerFactory44.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory60.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory60.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray65 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer66 = undertowEmbeddedServletContainerFactory60.getEmbeddedServletContainer(servletContextInitializerArray65);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer67 = undertowEmbeddedServletContainerFactory44.getEmbeddedServletContainer(servletContextInitializerArray65);
        undertowEmbeddedServletContainerFactory27.addInitializers(servletContextInitializerArray65);
        undertowEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray65);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer70 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray65);
        java.io.File file71 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file71);
        java.net.InetAddress inetAddress73 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet76 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection14);
        org.junit.Assert.assertNull(ssl21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(inetAddress25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(errorPageArray39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray49);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray53);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(servletContextInitializerArray65);
        org.junit.Assert.assertNotNull(embeddedServletContainer66);
        org.junit.Assert.assertNotNull(embeddedServletContainer67);
        org.junit.Assert.assertNotNull(embeddedServletContainer70);
        org.junit.Assert.assertNull(inetAddress73);
        org.junit.Assert.assertNotNull(errorPageSet76);
    }

    @Test
    public void test09670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09670");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.Compression compression6 = undertowEmbeddedServletContainerFactory1.getCompression();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 1);
        undertowEmbeddedServletContainerFactory11.setBufferSize((java.lang.Integer) 97);
        undertowEmbeddedServletContainerFactory11.setAccessLogEnabled(false);
        java.io.File file16 = undertowEmbeddedServletContainerFactory11.getSessionStoreDir();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file19 = undertowEmbeddedServletContainerFactory18.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory18.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory23.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory23.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl28 = undertowEmbeddedServletContainerFactory23.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer30 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap29);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer32 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap31);
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer34 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap33);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray35 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer30, initParameterConfiguringServletContextInitializer32, initParameterConfiguringServletContextInitializer34 };
        undertowEmbeddedServletContainerFactory23.addInitializers(servletContextInitializerArray35);
        undertowEmbeddedServletContainerFactory18.addInitializers(servletContextInitializerArray35);
        undertowEmbeddedServletContainerFactory18.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory18.setPersistSession(false);
        java.net.InetAddress inetAddress42 = undertowEmbeddedServletContainerFactory18.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file45 = undertowEmbeddedServletContainerFactory44.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory44.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory49.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory49.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl54 = undertowEmbeddedServletContainerFactory49.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer56 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap55);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer58 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap57);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer60 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap59);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray61 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer56, initParameterConfiguringServletContextInitializer58, initParameterConfiguringServletContextInitializer60 };
        undertowEmbeddedServletContainerFactory49.addInitializers(servletContextInitializerArray61);
        undertowEmbeddedServletContainerFactory44.addInitializers(servletContextInitializerArray61);
        undertowEmbeddedServletContainerFactory44.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory44.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage errorPage68 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray69 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage68 };
        undertowEmbeddedServletContainerFactory44.addErrorPages(errorPageArray69);
        org.springframework.boot.context.embedded.Ssl ssl71 = null;
        undertowEmbeddedServletContainerFactory44.setSsl(ssl71);
        java.io.File file73 = undertowEmbeddedServletContainerFactory44.getSessionStoreDir();
        java.io.File file74 = null;
        undertowEmbeddedServletContainerFactory44.setSessionStoreDir(file74);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet76 = undertowEmbeddedServletContainerFactory44.getErrorPages();
        undertowEmbeddedServletContainerFactory18.setErrorPages(errorPageSet76);
        undertowEmbeddedServletContainerFactory11.setErrorPages(errorPageSet76);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet76);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(compression6);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(ssl28);
        org.junit.Assert.assertNotNull(servletContextInitializerArray35);
        org.junit.Assert.assertNull(inetAddress42);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(ssl54);
        org.junit.Assert.assertNotNull(servletContextInitializerArray61);
        org.junit.Assert.assertNotNull(errorPageArray69);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNotNull(errorPageSet76);
    }

    @Test
    public void test09671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09671");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        boolean boolean14 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.Compression compression15 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression15);
        boolean boolean17 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        java.io.File file18 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test09672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09672");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file8);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection10 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.Compression compression11 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression11);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.net.InetAddress inetAddress16 = null;
        undertowEmbeddedServletContainerFactory15.setAddress(inetAddress16);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray20 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory19.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray20);
        org.springframework.boot.context.embedded.Ssl ssl22 = null;
        undertowEmbeddedServletContainerFactory19.setSsl(ssl22);
        org.springframework.boot.context.embedded.Ssl ssl24 = undertowEmbeddedServletContainerFactory19.getSsl();
        undertowEmbeddedServletContainerFactory19.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory19.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection29 = undertowEmbeddedServletContainerFactory19.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory19.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory33.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray38 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory37.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray38);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray42 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory41.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray42);
        undertowEmbeddedServletContainerFactory37.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray42);
        undertowEmbeddedServletContainerFactory33.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray42);
        java.lang.String str46 = undertowEmbeddedServletContainerFactory33.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory48.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory48.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray53 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer54 = undertowEmbeddedServletContainerFactory48.getEmbeddedServletContainer(servletContextInitializerArray53);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer55 = undertowEmbeddedServletContainerFactory33.getEmbeddedServletContainer(servletContextInitializerArray53);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer56 = undertowEmbeddedServletContainerFactory19.getEmbeddedServletContainer(servletContextInitializerArray53);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer57 = undertowEmbeddedServletContainerFactory15.getEmbeddedServletContainer(servletContextInitializerArray53);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray53);
        java.io.File file59 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file59);
        org.springframework.boot.context.embedded.Ssl ssl61 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection10);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray20);
        org.junit.Assert.assertNull(ssl24);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection29);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray38);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray42);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(servletContextInitializerArray53);
        org.junit.Assert.assertNotNull(embeddedServletContainer54);
        org.junit.Assert.assertNotNull(embeddedServletContainer55);
        org.junit.Assert.assertNotNull(embeddedServletContainer56);
        org.junit.Assert.assertNotNull(embeddedServletContainer57);
        org.junit.Assert.assertNull(ssl61);
    }

    @Test
    public void test09673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09673");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file2 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.Ssl ssl7 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 97);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file12 = undertowEmbeddedServletContainerFactory11.getSessionStoreDir();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isAccessLogEnabled();
        java.io.File file14 = null;
        undertowEmbeddedServletContainerFactory11.setAccessLogDirectory(file14);
        undertowEmbeddedServletContainerFactory11.setRegisterDefaultServlet(true);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection18 = undertowEmbeddedServletContainerFactory11.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory11.setAccessLogPattern("");
        org.springframework.boot.context.embedded.Ssl ssl21 = null;
        undertowEmbeddedServletContainerFactory11.setSsl(ssl21);
        java.io.File file23 = null;
        undertowEmbeddedServletContainerFactory11.setAccessLogDirectory(file23);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray29 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory28.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray29);
        org.springframework.boot.context.embedded.Ssl ssl31 = null;
        undertowEmbeddedServletContainerFactory28.setSsl(ssl31);
        undertowEmbeddedServletContainerFactory28.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet35 = undertowEmbeddedServletContainerFactory28.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader36 = null;
        undertowEmbeddedServletContainerFactory28.setResourceLoader(resourceLoader36);
        java.lang.String str38 = undertowEmbeddedServletContainerFactory28.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray41 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory40.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray41);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray45 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory44.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray45);
        undertowEmbeddedServletContainerFactory40.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray45);
        undertowEmbeddedServletContainerFactory28.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray45);
        boolean boolean49 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet50 = undertowEmbeddedServletContainerFactory28.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file53 = undertowEmbeddedServletContainerFactory52.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory52.setPersistSession(false);
        undertowEmbeddedServletContainerFactory52.setJspServletClassName("");
        java.io.File file58 = undertowEmbeddedServletContainerFactory52.getSessionStoreDir();
        java.lang.String str59 = undertowEmbeddedServletContainerFactory52.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory61.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory61.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl66 = undertowEmbeddedServletContainerFactory61.getSsl();
        boolean boolean67 = undertowEmbeddedServletContainerFactory61.isAccessLogEnabled();
        java.io.File file68 = null;
        undertowEmbeddedServletContainerFactory61.setAccessLogDirectory(file68);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray70 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet71 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet71, errorPageArray70);
        undertowEmbeddedServletContainerFactory61.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet71);
        undertowEmbeddedServletContainerFactory52.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet71);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory76.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray79 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory76.addBuilderCustomizers(undertowBuilderCustomizerArray79);
        undertowEmbeddedServletContainerFactory52.addBuilderCustomizers(undertowBuilderCustomizerArray79);
        undertowEmbeddedServletContainerFactory28.addBuilderCustomizers(undertowBuilderCustomizerArray79);
        undertowEmbeddedServletContainerFactory26.addBuilderCustomizers(undertowBuilderCustomizerArray79);
        undertowEmbeddedServletContainerFactory11.addBuilderCustomizers(undertowBuilderCustomizerArray79);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray79);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection86 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        boolean boolean87 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(ssl7);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray29);
        org.junit.Assert.assertNotNull(errorPageSet35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray41);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(errorPageSet50);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(ssl66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(errorPageArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray79);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test09674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09674");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        java.net.InetAddress inetAddress10 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress10);
        int int12 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection14 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection15 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection14);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection15);
    }

    @Test
    public void test09675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09675");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory6.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13, initParameterConfiguringServletContextInitializer15, initParameterConfiguringServletContextInitializer17 };
        undertowEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.Compression compression27 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.io.File file28 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file28);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 97);
        int int34 = undertowEmbeddedServletContainerFactory1.getPort();
        java.lang.String str35 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        java.io.File file36 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file36);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertNull(compression27);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
    }

    @Test
    public void test09676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09676");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 100);
        undertowEmbeddedServletContainerFactory2.setPort(1800);
        java.lang.String str5 = undertowEmbeddedServletContainerFactory2.getContextPath();
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file6);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory9.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        org.springframework.boot.context.embedded.Ssl ssl12 = null;
        undertowEmbeddedServletContainerFactory9.setSsl(ssl12);
        org.springframework.boot.context.embedded.Ssl ssl14 = undertowEmbeddedServletContainerFactory9.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory16.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray17);
        org.springframework.boot.context.embedded.Ssl ssl19 = null;
        undertowEmbeddedServletContainerFactory16.setSsl(ssl19);
        undertowEmbeddedServletContainerFactory16.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file25 = null;
        undertowEmbeddedServletContainerFactory24.setAccessLogDirectory(file25);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray27 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory24.addErrorPages(errorPageArray27);
        org.springframework.boot.context.embedded.Compression compression29 = undertowEmbeddedServletContainerFactory24.getCompression();
        org.springframework.boot.context.embedded.JspServlet jspServlet30 = undertowEmbeddedServletContainerFactory24.getJspServlet();
        undertowEmbeddedServletContainerFactory16.setJspServlet(jspServlet30);
        undertowEmbeddedServletContainerFactory9.setJspServlet(jspServlet30);
        undertowEmbeddedServletContainerFactory2.setJspServlet(jspServlet30);
        java.io.File file34 = undertowEmbeddedServletContainerFactory2.getDocumentRoot();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertNull(ssl14);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray17);
        org.junit.Assert.assertNotNull(errorPageArray27);
        org.junit.Assert.assertNull(compression29);
        org.junit.Assert.assertNotNull(jspServlet30);
        org.junit.Assert.assertNull(file34);
    }

    @Test
    public void test09677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09677");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory6.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13, initParameterConfiguringServletContextInitializer15, initParameterConfiguringServletContextInitializer17 };
        undertowEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray18);
        java.io.File file21 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file21);
        org.springframework.boot.context.embedded.Ssl ssl23 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl23);
        java.net.InetAddress inetAddress25 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress25);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file31 = undertowEmbeddedServletContainerFactory30.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory30.setPersistSession(false);
        undertowEmbeddedServletContainerFactory30.setJspServletClassName("");
        java.io.File file36 = undertowEmbeddedServletContainerFactory30.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory30.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory30.setBufferSize((java.lang.Integer) 0);
        int int41 = undertowEmbeddedServletContainerFactory30.getSessionTimeout();
        java.io.File file42 = undertowEmbeddedServletContainerFactory30.getSessionStoreDir();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 0);
        boolean boolean46 = undertowEmbeddedServletContainerFactory45.isPersistSession();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection47 = undertowEmbeddedServletContainerFactory45.getDeploymentInfoCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection48 = undertowEmbeddedServletContainerFactory45.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings49 = undertowEmbeddedServletContainerFactory45.getMimeMappings();
        undertowEmbeddedServletContainerFactory30.setMimeMappings(mimeMappings49);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings49);
        org.springframework.core.io.ResourceLoader resourceLoader52 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader52);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1800 + "'", int41 == 1800);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection47);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection48);
        org.junit.Assert.assertNotNull(mimeMappings49);
    }

    @Test
    public void test09678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09678");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection4 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection4);
    }

    @Test
    public void test09679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09679");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl6 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl6);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file10 = undertowEmbeddedServletContainerFactory9.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory9.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory14.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory14.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory14.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer21 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap20);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer23 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap22);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer25 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap24);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer21, initParameterConfiguringServletContextInitializer23, initParameterConfiguringServletContextInitializer25 };
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray26);
        undertowEmbeddedServletContainerFactory9.addInitializers(servletContextInitializerArray26);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray26);
        java.lang.String str30 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 10);
        java.io.File file35 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file35);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet37 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.lang.String str38 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertNotNull(servletContextInitializerArray26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(errorPageSet37);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test09680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09680");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file4);
        undertowEmbeddedServletContainerFactory1.setPort(0);
        int int8 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1800);
        java.net.InetAddress inetAddress13 = undertowEmbeddedServletContainerFactory1.getAddress();
        boolean boolean14 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        boolean boolean15 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection16 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.lang.String str17 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.io.File file18 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test09681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09681");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 100);
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory2.setBuffersPerRegion((java.lang.Integer) 32);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory2.getDeploymentInfoCustomizers();
        boolean boolean8 = undertowEmbeddedServletContainerFactory2.isPersistSession();
        java.net.InetAddress inetAddress9 = undertowEmbeddedServletContainerFactory2.getAddress();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(inetAddress9);
    }

    @Test
    public void test09682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09682");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        boolean boolean3 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) 'a');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory10.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray11);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory14.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray15);
        undertowEmbeddedServletContainerFactory10.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray15);
        undertowEmbeddedServletContainerFactory8.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray15);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray15);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray11);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray15);
    }

    @Test
    public void test09683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09683");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory12.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory12.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory12.getSsl();
        boolean boolean18 = undertowEmbeddedServletContainerFactory12.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = null;
        undertowEmbeddedServletContainerFactory12.setJspServlet(jspServlet19);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings21);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.Ssl ssl25 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection26 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        boolean boolean27 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNull(ssl25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test09684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09684");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory6.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13, initParameterConfiguringServletContextInitializer15, initParameterConfiguringServletContextInitializer17 };
        undertowEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray18);
        java.io.File file21 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file21);
        org.springframework.boot.context.embedded.Ssl ssl23 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl23);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection25 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.net.InetAddress inetAddress26 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress26);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection25);
    }

    @Test
    public void test09685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09685");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray5 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory4.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray5);
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory4.setSessionStoreDir(file7);
        undertowEmbeddedServletContainerFactory4.setPort(0);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray11 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        undertowEmbeddedServletContainerFactory4.addInitializers(servletContextInitializerArray11);
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        undertowEmbeddedServletContainerFactory4.setResourceLoader(resourceLoader13);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = undertowEmbeddedServletContainerFactory4.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file18 = undertowEmbeddedServletContainerFactory17.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory17.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory22.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory22.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl27 = undertowEmbeddedServletContainerFactory22.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer29 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap28);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer31 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap30);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer33 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap32);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray34 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer29, initParameterConfiguringServletContextInitializer31, initParameterConfiguringServletContextInitializer33 };
        undertowEmbeddedServletContainerFactory22.addInitializers(servletContextInitializerArray34);
        undertowEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray34);
        undertowEmbeddedServletContainerFactory17.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory17.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage errorPage41 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray42 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage41 };
        undertowEmbeddedServletContainerFactory17.addErrorPages(errorPageArray42);
        undertowEmbeddedServletContainerFactory4.addErrorPages(errorPageArray42);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray42);
        java.lang.Class<?> wildcardClass46 = undertowEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray5);
        org.junit.Assert.assertNotNull(servletContextInitializerArray11);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(ssl27);
        org.junit.Assert.assertNotNull(servletContextInitializerArray34);
        org.junit.Assert.assertNotNull(errorPageArray42);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test09686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09686");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection11 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        java.net.InetAddress inetAddress14 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.Compression compression15 = undertowEmbeddedServletContainerFactory1.getCompression();
        boolean boolean16 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        java.lang.String str17 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        java.io.File file18 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file18);
        org.springframework.core.io.ResourceLoader resourceLoader20 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader20);
        java.net.InetAddress inetAddress22 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress22);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection11);
        org.junit.Assert.assertNull(inetAddress14);
        org.junit.Assert.assertNull(compression15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test09687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09687");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file2 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.Ssl ssl7 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.JspServlet jspServlet8 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file9);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1800);
        java.io.File file13 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        boolean boolean14 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(ssl7);
        org.junit.Assert.assertNotNull(jspServlet8);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test09688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09688");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory6.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13, initParameterConfiguringServletContextInitializer15, initParameterConfiguringServletContextInitializer17 };
        undertowEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage errorPage25 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray26 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage25 };
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray26);
        org.springframework.boot.context.embedded.Ssl ssl28 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl28);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet30 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 97);
        java.io.File file33 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file33);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertNotNull(errorPageArray26);
        org.junit.Assert.assertNotNull(errorPageSet30);
    }

    @Test
    public void test09689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09689");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer8 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap7);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer10 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer12 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap11);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer8, initParameterConfiguringServletContextInitializer10, initParameterConfiguringServletContextInitializer12 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray13);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str17 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        boolean boolean24 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.io.File file27 = null;
        undertowEmbeddedServletContainerFactory26.setAccessLogDirectory(file27);
        java.net.InetAddress inetAddress29 = undertowEmbeddedServletContainerFactory26.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory31.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory31.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl36 = undertowEmbeddedServletContainerFactory31.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer38 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap37);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer40 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap39);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer42 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap41);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray43 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer38, initParameterConfiguringServletContextInitializer40, initParameterConfiguringServletContextInitializer42 };
        undertowEmbeddedServletContainerFactory31.addInitializers(servletContextInitializerArray43);
        undertowEmbeddedServletContainerFactory31.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str47 = undertowEmbeddedServletContainerFactory31.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory49.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory49.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl54 = undertowEmbeddedServletContainerFactory49.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer56 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap55);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer58 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap57);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer60 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap59);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray61 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer56, initParameterConfiguringServletContextInitializer58, initParameterConfiguringServletContextInitializer60 };
        undertowEmbeddedServletContainerFactory49.addInitializers(servletContextInitializerArray61);
        undertowEmbeddedServletContainerFactory49.setJspServletClassName("hi!");
        int int65 = undertowEmbeddedServletContainerFactory49.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet66 = undertowEmbeddedServletContainerFactory49.getErrorPages();
        undertowEmbeddedServletContainerFactory31.setErrorPages(errorPageSet66);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray70 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory69.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray70);
        org.springframework.boot.context.embedded.Ssl ssl72 = null;
        undertowEmbeddedServletContainerFactory69.setSsl(ssl72);
        undertowEmbeddedServletContainerFactory69.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet76 = undertowEmbeddedServletContainerFactory69.getErrorPages();
        undertowEmbeddedServletContainerFactory69.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory69.setIoThreads((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory82 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file83 = null;
        undertowEmbeddedServletContainerFactory82.setAccessLogDirectory(file83);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray85 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory82.addErrorPages(errorPageArray85);
        undertowEmbeddedServletContainerFactory69.addErrorPages(errorPageArray85);
        undertowEmbeddedServletContainerFactory31.addErrorPages(errorPageArray85);
        undertowEmbeddedServletContainerFactory26.addErrorPages(errorPageArray85);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray85);
        boolean boolean91 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(inetAddress29);
        org.junit.Assert.assertNull(ssl36);
        org.junit.Assert.assertNotNull(servletContextInitializerArray43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(ssl54);
        org.junit.Assert.assertNotNull(servletContextInitializerArray61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet66);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray70);
        org.junit.Assert.assertNotNull(errorPageSet76);
        org.junit.Assert.assertNotNull(errorPageArray85);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test09690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09690");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        boolean boolean11 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        int int12 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader15);
        boolean boolean17 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        org.springframework.boot.context.embedded.Compression compression20 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression20);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test09691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09691");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file8);
        org.springframework.boot.context.embedded.Compression compression10 = undertowEmbeddedServletContainerFactory1.getCompression();
        org.springframework.core.io.ResourceLoader resourceLoader11 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader11);
        org.springframework.boot.context.embedded.Ssl ssl13 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl13);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(compression10);
    }

    @Test
    public void test09692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09692");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1800);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory11.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory11.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl16 = undertowEmbeddedServletContainerFactory11.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer18 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap17);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer20 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap19);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer22 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap21);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer18, initParameterConfiguringServletContextInitializer20, initParameterConfiguringServletContextInitializer22 };
        undertowEmbeddedServletContainerFactory11.addInitializers(servletContextInitializerArray23);
        undertowEmbeddedServletContainerFactory11.setJspServletClassName("hi!");
        int int27 = undertowEmbeddedServletContainerFactory11.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet28 = undertowEmbeddedServletContainerFactory11.getErrorPages();
        org.springframework.boot.context.embedded.JspServlet jspServlet29 = undertowEmbeddedServletContainerFactory11.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file32 = undertowEmbeddedServletContainerFactory31.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory31.setPersistSession(false);
        undertowEmbeddedServletContainerFactory31.setJspServletClassName("");
        boolean boolean37 = undertowEmbeddedServletContainerFactory31.isPersistSession();
        org.springframework.core.io.ResourceLoader resourceLoader38 = null;
        undertowEmbeddedServletContainerFactory31.setResourceLoader(resourceLoader38);
        org.springframework.core.io.ResourceLoader resourceLoader40 = null;
        undertowEmbeddedServletContainerFactory31.setResourceLoader(resourceLoader40);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection42 = undertowEmbeddedServletContainerFactory31.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray45 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory44.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray45);
        org.springframework.boot.context.embedded.Ssl ssl47 = null;
        undertowEmbeddedServletContainerFactory44.setSsl(ssl47);
        org.springframework.boot.context.embedded.Ssl ssl49 = undertowEmbeddedServletContainerFactory44.getSsl();
        org.springframework.boot.context.embedded.Compression compression50 = null;
        undertowEmbeddedServletContainerFactory44.setCompression(compression50);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory53.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory53.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader58 = null;
        undertowEmbeddedServletContainerFactory53.setResourceLoader(resourceLoader58);
        java.net.InetAddress inetAddress60 = null;
        undertowEmbeddedServletContainerFactory53.setAddress(inetAddress60);
        undertowEmbeddedServletContainerFactory53.setSessionTimeout((int) 'a');
        java.net.InetAddress inetAddress64 = undertowEmbeddedServletContainerFactory53.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray69 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory68.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray69);
        org.springframework.boot.context.embedded.Ssl ssl71 = null;
        undertowEmbeddedServletContainerFactory68.setSsl(ssl71);
        org.springframework.boot.context.embedded.Ssl ssl73 = undertowEmbeddedServletContainerFactory68.getSsl();
        undertowEmbeddedServletContainerFactory68.setDisplayName("");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings76 = undertowEmbeddedServletContainerFactory68.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer undertowDeploymentInfoCustomizer77 = null;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray78 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] { undertowDeploymentInfoCustomizer77 };
        undertowEmbeddedServletContainerFactory68.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray78);
        undertowEmbeddedServletContainerFactory66.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray78);
        undertowEmbeddedServletContainerFactory53.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray78);
        undertowEmbeddedServletContainerFactory44.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray78);
        undertowEmbeddedServletContainerFactory31.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray78);
        org.springframework.boot.context.embedded.JspServlet jspServlet84 = undertowEmbeddedServletContainerFactory31.getJspServlet();
        undertowEmbeddedServletContainerFactory11.setJspServlet(jspServlet84);
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet84);
        int int87 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.junit.Assert.assertNull(ssl16);
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet28);
        org.junit.Assert.assertNotNull(jspServlet29);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection42);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray45);
        org.junit.Assert.assertNull(ssl49);
        org.junit.Assert.assertNull(inetAddress64);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray69);
        org.junit.Assert.assertNull(ssl73);
        org.junit.Assert.assertNotNull(mimeMappings76);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray78);
        org.junit.Assert.assertNotNull(jspServlet84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1800 + "'", int87 == 1800);
    }

    @Test
    public void test09693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09693");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet8 = null;
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet8);
        java.net.InetAddress inetAddress10 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader11 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader11);
        org.springframework.boot.context.embedded.Ssl ssl13 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str14 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory1.setPersistSession(true);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(inetAddress10);
        org.junit.Assert.assertNull(ssl13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test09694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09694");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(0);
        org.springframework.boot.context.embedded.JspServlet jspServlet2 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        org.springframework.boot.context.embedded.Ssl ssl3 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.junit.Assert.assertNotNull(jspServlet2);
        org.junit.Assert.assertNull(ssl3);
    }

    @Test
    public void test09695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09695");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.net.InetAddress inetAddress2 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress2);
        java.net.InetAddress inetAddress4 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file7 = undertowEmbeddedServletContainerFactory6.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory6.setPersistSession(false);
        java.lang.String str10 = undertowEmbeddedServletContainerFactory6.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory12.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory12.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory12.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer19 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap18);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer21 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap20);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer23 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap22);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray24 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer19, initParameterConfiguringServletContextInitializer21, initParameterConfiguringServletContextInitializer23 };
        undertowEmbeddedServletContainerFactory12.addInitializers(servletContextInitializerArray24);
        undertowEmbeddedServletContainerFactory12.setJspServletClassName("hi!");
        int int28 = undertowEmbeddedServletContainerFactory12.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet29 = undertowEmbeddedServletContainerFactory12.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory31.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray36 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory35.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray40 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory39.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray40);
        undertowEmbeddedServletContainerFactory35.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray40);
        undertowEmbeddedServletContainerFactory31.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray40);
        java.lang.String str44 = undertowEmbeddedServletContainerFactory31.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory46.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory46.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray51 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer52 = undertowEmbeddedServletContainerFactory46.getEmbeddedServletContainer(servletContextInitializerArray51);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer53 = undertowEmbeddedServletContainerFactory31.getEmbeddedServletContainer(servletContextInitializerArray51);
        undertowEmbeddedServletContainerFactory12.addInitializers(servletContextInitializerArray51);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer55 = undertowEmbeddedServletContainerFactory6.getEmbeddedServletContainer(servletContextInitializerArray51);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer56 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray51);
        int int57 = undertowEmbeddedServletContainerFactory1.getPort();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 35);
        org.junit.Assert.assertNull(inetAddress4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet29);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray36);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray40);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(servletContextInitializerArray51);
        org.junit.Assert.assertNotNull(embeddedServletContainer52);
        org.junit.Assert.assertNotNull(embeddedServletContainer53);
        org.junit.Assert.assertNotNull(embeddedServletContainer55);
        org.junit.Assert.assertNotNull(embeddedServletContainer56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 97 + "'", int57 == 97);
    }

    @Test
    public void test09696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09696");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection8 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        int int11 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.Ssl ssl12 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader15);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection17 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file23 = undertowEmbeddedServletContainerFactory22.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory22.setPersistSession(false);
        undertowEmbeddedServletContainerFactory22.setJspServletClassName("");
        java.io.File file28 = undertowEmbeddedServletContainerFactory22.getSessionStoreDir();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet29 = undertowEmbeddedServletContainerFactory22.getErrorPages();
        undertowEmbeddedServletContainerFactory20.setErrorPages(errorPageSet29);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet29);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet32 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertNull(ssl12);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection17);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(errorPageSet29);
        org.junit.Assert.assertNotNull(errorPageSet32);
    }

    @Test
    public void test09697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09697");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 0);
        java.lang.String str3 = undertowEmbeddedServletContainerFactory2.getDisplayName();
        java.lang.String str4 = undertowEmbeddedServletContainerFactory2.getDisplayName();
        undertowEmbeddedServletContainerFactory2.setPersistSession(true);
        java.io.File file7 = undertowEmbeddedServletContainerFactory2.getDocumentRoot();
        java.io.File file8 = undertowEmbeddedServletContainerFactory2.getSessionStoreDir();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test09698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09698");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        org.springframework.boot.context.embedded.JspServlet jspServlet2 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray5 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory4.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray5);
        undertowEmbeddedServletContainerFactory4.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.Compression compression9 = undertowEmbeddedServletContainerFactory4.getCompression();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory4.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings10);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection14 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file17 = undertowEmbeddedServletContainerFactory16.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory16.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory21.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory21.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl26 = undertowEmbeddedServletContainerFactory21.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer28 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap27);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer30 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap29);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer32 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap31);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray33 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer28, initParameterConfiguringServletContextInitializer30, initParameterConfiguringServletContextInitializer32 };
        undertowEmbeddedServletContainerFactory21.addInitializers(servletContextInitializerArray33);
        undertowEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray33);
        undertowEmbeddedServletContainerFactory16.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory16.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory16.setPersistSession(false);
        org.springframework.boot.context.embedded.Compression compression42 = undertowEmbeddedServletContainerFactory16.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory44.setPort((int) (byte) -1);
        java.io.File file47 = null;
        undertowEmbeddedServletContainerFactory44.setSessionStoreDir(file47);
        org.springframework.boot.context.embedded.ErrorPage errorPage49 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray50 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage49 };
        undertowEmbeddedServletContainerFactory44.addErrorPages(errorPageArray50);
        undertowEmbeddedServletContainerFactory16.addErrorPages(errorPageArray50);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray50);
        boolean boolean54 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        org.junit.Assert.assertNotNull(jspServlet2);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray5);
        org.junit.Assert.assertNull(compression9);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection14);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(ssl26);
        org.junit.Assert.assertNotNull(servletContextInitializerArray33);
        org.junit.Assert.assertNull(compression42);
        org.junit.Assert.assertNotNull(errorPageArray50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test09699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09699");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray4);
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection12 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection12);
    }

    @Test
    public void test09700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09700");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression8);
        java.lang.String str10 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1800);
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test09701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09701");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file10 = undertowEmbeddedServletContainerFactory9.getSessionStoreDir();
        java.lang.String str11 = undertowEmbeddedServletContainerFactory9.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        undertowEmbeddedServletContainerFactory9.setMimeMappings(mimeMappings14);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings14);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        java.io.File file19 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file19);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection21 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.net.InetAddress inetAddress22 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection23 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.io.File file24 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file24);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection21);
        org.junit.Assert.assertNull(inetAddress22);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection23);
    }

    @Test
    public void test09702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09702");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        boolean boolean3 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 100);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1800);
        undertowEmbeddedServletContainerFactory1.setPersistSession(true);
        boolean boolean10 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test09703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09703");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection11 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 97);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.Ssl ssl16 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        java.lang.String str20 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection11);
        org.junit.Assert.assertNull(ssl16);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test09704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09704");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory5.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory5.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory5.setResourceLoader(resourceLoader10);
        org.springframework.boot.context.embedded.Compression compression12 = null;
        undertowEmbeddedServletContainerFactory5.setCompression(compression12);
        undertowEmbeddedServletContainerFactory5.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory17.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory17.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl22 = undertowEmbeddedServletContainerFactory17.getSsl();
        boolean boolean23 = undertowEmbeddedServletContainerFactory17.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet24 = null;
        undertowEmbeddedServletContainerFactory17.setJspServlet(jspServlet24);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        undertowEmbeddedServletContainerFactory5.setMimeMappings(mimeMappings26);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings26);
        boolean boolean29 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.io.File file30 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file30);
        int int32 = undertowEmbeddedServletContainerFactory1.getPort();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
    }

    @Test
    public void test09705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09705");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.springframework.boot.context.embedded.Compression compression3 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression3);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        java.net.InetAddress inetAddress9 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.Compression compression10 = undertowEmbeddedServletContainerFactory1.getCompression();
        boolean boolean11 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(inetAddress9);
        org.junit.Assert.assertNull(compression10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test09706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09706");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        java.io.File file11 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file11);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings15);
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file17);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertNotNull(mimeMappings15);
    }

    @Test
    public void test09707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09707");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory6.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13, initParameterConfiguringServletContextInitializer15, initParameterConfiguringServletContextInitializer17 };
        undertowEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        java.net.InetAddress inetAddress25 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress25);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory28.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory28.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl33 = null;
        undertowEmbeddedServletContainerFactory28.setSsl(ssl33);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file37 = undertowEmbeddedServletContainerFactory36.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory36.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory41.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory41.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl46 = undertowEmbeddedServletContainerFactory41.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer48 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap47);
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer50 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap49);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer52 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap51);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray53 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer48, initParameterConfiguringServletContextInitializer50, initParameterConfiguringServletContextInitializer52 };
        undertowEmbeddedServletContainerFactory41.addInitializers(servletContextInitializerArray53);
        undertowEmbeddedServletContainerFactory36.addInitializers(servletContextInitializerArray53);
        undertowEmbeddedServletContainerFactory28.addInitializers(servletContextInitializerArray53);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory58.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory58.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl63 = undertowEmbeddedServletContainerFactory58.getSsl();
        boolean boolean64 = undertowEmbeddedServletContainerFactory58.isAccessLogEnabled();
        java.io.File file65 = null;
        undertowEmbeddedServletContainerFactory58.setAccessLogDirectory(file65);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray67 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet68 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet68, errorPageArray67);
        undertowEmbeddedServletContainerFactory58.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet68);
        undertowEmbeddedServletContainerFactory58.setAccessLogPattern("");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings73 = undertowEmbeddedServletContainerFactory58.getMimeMappings();
        undertowEmbeddedServletContainerFactory28.setMimeMappings(mimeMappings73);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings73);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader78 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader78);
        java.net.InetAddress inetAddress80 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress80);
        java.io.File file82 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file82);
        org.springframework.boot.context.embedded.Ssl ssl84 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.Compression compression85 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression85);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(ssl46);
        org.junit.Assert.assertNotNull(servletContextInitializerArray53);
        org.junit.Assert.assertNull(ssl63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(errorPageArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(mimeMappings73);
        org.junit.Assert.assertNull(ssl84);
    }

    @Test
    public void test09708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09708");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader9);
        java.io.File file11 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 32);
        org.springframework.boot.context.embedded.Ssl ssl14 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl14);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection18 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection18);
    }

    @Test
    public void test09709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09709");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        boolean boolean3 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file4);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection6 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1);
        java.io.File file9 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file10);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection6);
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test09710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09710");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet8 = null;
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet8);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        java.lang.String str12 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.Compression compression15 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression15);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 32);
        java.util.concurrent.TimeUnit timeUnit22 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1, timeUnit22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test09711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09711");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 97);
        java.lang.String str3 = undertowEmbeddedServletContainerFactory2.getDisplayName();
        java.lang.String str4 = undertowEmbeddedServletContainerFactory2.getContextPath();
        java.net.InetAddress inetAddress5 = undertowEmbeddedServletContainerFactory2.getAddress();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection6 = undertowEmbeddedServletContainerFactory2.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory2.setIoThreads((java.lang.Integer) 52);
        org.springframework.core.io.ResourceLoader resourceLoader11 = null;
        undertowEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader11);
        undertowEmbeddedServletContainerFactory2.setIoThreads((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(inetAddress5);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection6);
    }

    @Test
    public void test09712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09712");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression8);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.Ssl ssl12 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.io.File file13 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        int int16 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file23 = null;
        undertowEmbeddedServletContainerFactory22.setDocumentRoot(file23);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file27 = undertowEmbeddedServletContainerFactory26.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory26.setPersistSession(false);
        undertowEmbeddedServletContainerFactory26.setJspServletClassName("");
        java.io.File file32 = undertowEmbeddedServletContainerFactory26.getSessionStoreDir();
        java.lang.String str33 = undertowEmbeddedServletContainerFactory26.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory35.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory35.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl40 = undertowEmbeddedServletContainerFactory35.getSsl();
        boolean boolean41 = undertowEmbeddedServletContainerFactory35.isAccessLogEnabled();
        java.io.File file42 = null;
        undertowEmbeddedServletContainerFactory35.setAccessLogDirectory(file42);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray44 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet45 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet45, errorPageArray44);
        undertowEmbeddedServletContainerFactory35.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet45);
        undertowEmbeddedServletContainerFactory26.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet45);
        undertowEmbeddedServletContainerFactory22.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet45);
        boolean boolean50 = undertowEmbeddedServletContainerFactory22.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory22.setContextPath("");
        undertowEmbeddedServletContainerFactory22.setSessionTimeout((int) (short) 0);
        boolean boolean55 = undertowEmbeddedServletContainerFactory22.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.Compression compression56 = null;
        undertowEmbeddedServletContainerFactory22.setCompression(compression56);
        undertowEmbeddedServletContainerFactory22.setDisplayName("");
        java.io.File file60 = null;
        undertowEmbeddedServletContainerFactory22.setAccessLogDirectory(file60);
        undertowEmbeddedServletContainerFactory22.setAccessLogPattern("");
        org.springframework.boot.context.embedded.JspServlet jspServlet64 = undertowEmbeddedServletContainerFactory22.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet64);
        org.junit.Assert.assertNull(ssl12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1800 + "'", int16 == 1800);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(ssl40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(errorPageArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(jspServlet64);
    }

    @Test
    public void test09713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09713");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file4);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.Ssl ssl8 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl8);
        java.io.File file10 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        boolean boolean11 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        boolean boolean12 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        org.springframework.boot.context.embedded.Compression compression13 = undertowEmbeddedServletContainerFactory1.getCompression();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(compression13);
    }

    @Test
    public void test09714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09714");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) 'a');
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(true);
        java.net.InetAddress inetAddress5 = null;
        undertowEmbeddedServletContainerFactory2.setAddress(inetAddress5);
        org.springframework.core.io.ResourceLoader resourceLoader7 = null;
        undertowEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader7);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file11 = undertowEmbeddedServletContainerFactory10.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory10.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory15.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory15.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl20 = undertowEmbeddedServletContainerFactory15.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer22 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap21);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer24 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap23);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer26 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap25);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray27 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer22, initParameterConfiguringServletContextInitializer24, initParameterConfiguringServletContextInitializer26 };
        undertowEmbeddedServletContainerFactory15.addInitializers(servletContextInitializerArray27);
        undertowEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray27);
        java.io.File file30 = null;
        undertowEmbeddedServletContainerFactory10.setDocumentRoot(file30);
        org.springframework.boot.context.embedded.Ssl ssl32 = null;
        undertowEmbeddedServletContainerFactory10.setSsl(ssl32);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection34 = undertowEmbeddedServletContainerFactory10.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory38.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray41 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory38.addBuilderCustomizers(undertowBuilderCustomizerArray41);
        undertowEmbeddedServletContainerFactory36.addBuilderCustomizers(undertowBuilderCustomizerArray41);
        org.springframework.boot.context.embedded.Ssl ssl44 = null;
        undertowEmbeddedServletContainerFactory36.setSsl(ssl44);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory47.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory47.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl52 = undertowEmbeddedServletContainerFactory47.getSsl();
        boolean boolean53 = undertowEmbeddedServletContainerFactory47.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet54 = null;
        undertowEmbeddedServletContainerFactory47.setJspServlet(jspServlet54);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings56 = undertowEmbeddedServletContainerFactory47.getMimeMappings();
        undertowEmbeddedServletContainerFactory36.setMimeMappings(mimeMappings56);
        undertowEmbeddedServletContainerFactory36.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory36.setDisplayName("");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection62 = undertowEmbeddedServletContainerFactory36.getBuilderCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection63 = undertowEmbeddedServletContainerFactory36.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.Compression compression64 = null;
        undertowEmbeddedServletContainerFactory36.setCompression(compression64);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray68 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory67.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray68);
        org.springframework.boot.context.embedded.Ssl ssl70 = null;
        undertowEmbeddedServletContainerFactory67.setSsl(ssl70);
        org.springframework.boot.context.embedded.Ssl ssl72 = undertowEmbeddedServletContainerFactory67.getSsl();
        undertowEmbeddedServletContainerFactory67.setDisplayName("");
        undertowEmbeddedServletContainerFactory67.setRegisterDefaultServlet(true);
        int int77 = undertowEmbeddedServletContainerFactory67.getPort();
        java.lang.String str78 = undertowEmbeddedServletContainerFactory67.getContextPath();
        java.io.File file79 = null;
        undertowEmbeddedServletContainerFactory67.setSessionStoreDir(file79);
        undertowEmbeddedServletContainerFactory67.setIoThreads((java.lang.Integer) 1);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet83 = undertowEmbeddedServletContainerFactory67.getErrorPages();
        undertowEmbeddedServletContainerFactory36.setErrorPages(errorPageSet83);
        undertowEmbeddedServletContainerFactory10.setErrorPages(errorPageSet83);
        undertowEmbeddedServletContainerFactory2.setErrorPages(errorPageSet83);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(ssl20);
        org.junit.Assert.assertNotNull(servletContextInitializerArray27);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection34);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray41);
        org.junit.Assert.assertNull(ssl52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(mimeMappings56);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection62);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection63);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray68);
        org.junit.Assert.assertNull(ssl72);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertNotNull(errorPageSet83);
    }

    @Test
    public void test09715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09715");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.setPort(0);
        org.springframework.boot.context.embedded.Compression compression4 = undertowEmbeddedServletContainerFactory1.getCompression();
        org.junit.Assert.assertNull(compression4);
    }

    @Test
    public void test09716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09716");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) '#');
        undertowEmbeddedServletContainerFactory2.setWorkerThreads((java.lang.Integer) 32);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection5 = undertowEmbeddedServletContainerFactory2.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory2.setJspServletClassName("");
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(true);
        undertowEmbeddedServletContainerFactory2.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray14 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory13.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray14);
        undertowEmbeddedServletContainerFactory13.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.Compression compression18 = undertowEmbeddedServletContainerFactory13.getCompression();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        int int20 = undertowEmbeddedServletContainerFactory13.getSessionTimeout();
        undertowEmbeddedServletContainerFactory13.setBufferSize((java.lang.Integer) 52);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory26.setPort((int) (byte) -1);
        boolean boolean29 = undertowEmbeddedServletContainerFactory26.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory31.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory31.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl36 = null;
        undertowEmbeddedServletContainerFactory31.setSsl(ssl36);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray38 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory31.addErrorPages(errorPageArray38);
        undertowEmbeddedServletContainerFactory26.addErrorPages(errorPageArray38);
        undertowEmbeddedServletContainerFactory24.addErrorPages(errorPageArray38);
        undertowEmbeddedServletContainerFactory13.addErrorPages(errorPageArray38);
        undertowEmbeddedServletContainerFactory2.addErrorPages(errorPageArray38);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection5);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray14);
        org.junit.Assert.assertNull(compression18);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(errorPageArray38);
    }

    @Test
    public void test09717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09717");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1800);
        undertowEmbeddedServletContainerFactory2.setAccessLogPattern("hi!");
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
    }

    @Test
    public void test09718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09718");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray6 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer7 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray6);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory9.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        org.springframework.boot.context.embedded.JspServlet jspServlet12 = undertowEmbeddedServletContainerFactory9.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet12);
        java.io.File file14 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file14);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray6);
        org.junit.Assert.assertNotNull(embeddedServletContainer7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertNotNull(jspServlet12);
    }

    @Test
    public void test09719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09719");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression8);
        java.lang.String str10 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        java.lang.String str13 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory15.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory15.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl20 = undertowEmbeddedServletContainerFactory15.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer22 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap21);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer24 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap23);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer26 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap25);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray27 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer22, initParameterConfiguringServletContextInitializer24, initParameterConfiguringServletContextInitializer26 };
        undertowEmbeddedServletContainerFactory15.addInitializers(servletContextInitializerArray27);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray27);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection32 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        int int33 = undertowEmbeddedServletContainerFactory1.getPort();
        java.io.File file34 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file37 = undertowEmbeddedServletContainerFactory36.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory36.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory41.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory41.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl46 = undertowEmbeddedServletContainerFactory41.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer48 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap47);
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer50 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap49);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer52 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap51);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray53 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer48, initParameterConfiguringServletContextInitializer50, initParameterConfiguringServletContextInitializer52 };
        undertowEmbeddedServletContainerFactory41.addInitializers(servletContextInitializerArray53);
        undertowEmbeddedServletContainerFactory36.addInitializers(servletContextInitializerArray53);
        undertowEmbeddedServletContainerFactory36.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory36.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage errorPage60 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray61 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage60 };
        undertowEmbeddedServletContainerFactory36.addErrorPages(errorPageArray61);
        org.springframework.boot.context.embedded.Ssl ssl63 = null;
        undertowEmbeddedServletContainerFactory36.setSsl(ssl63);
        java.io.File file65 = undertowEmbeddedServletContainerFactory36.getSessionStoreDir();
        java.io.File file66 = null;
        undertowEmbeddedServletContainerFactory36.setSessionStoreDir(file66);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet68 = undertowEmbeddedServletContainerFactory36.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet68);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) (-1));
        org.springframework.boot.context.embedded.Ssl ssl72 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.io.File file73 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file73);
        java.io.File file75 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file75);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(ssl20);
        org.junit.Assert.assertNotNull(servletContextInitializerArray27);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(ssl46);
        org.junit.Assert.assertNotNull(servletContextInitializerArray53);
        org.junit.Assert.assertNotNull(errorPageArray61);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNotNull(errorPageSet68);
        org.junit.Assert.assertNull(ssl72);
    }

    @Test
    public void test09720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09720");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1800);
        int int13 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.lang.Class<?> wildcardClass16 = undertowEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test09721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09721");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory10.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray11);
        org.springframework.boot.context.embedded.Ssl ssl13 = null;
        undertowEmbeddedServletContainerFactory10.setSsl(ssl13);
        undertowEmbeddedServletContainerFactory10.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = undertowEmbeddedServletContainerFactory10.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader18 = null;
        undertowEmbeddedServletContainerFactory10.setResourceLoader(resourceLoader18);
        java.lang.String str20 = undertowEmbeddedServletContainerFactory10.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray23 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory22.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray23);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray27 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory26.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        undertowEmbeddedServletContainerFactory22.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        undertowEmbeddedServletContainerFactory10.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        org.springframework.boot.context.embedded.Ssl ssl32 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        java.io.File file35 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file35);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.io.File file38 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file38);
        boolean boolean40 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory42.setPort((int) (byte) -1);
        java.io.File file45 = null;
        undertowEmbeddedServletContainerFactory42.setSessionStoreDir(file45);
        org.springframework.boot.context.embedded.ErrorPage errorPage47 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray48 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage47 };
        undertowEmbeddedServletContainerFactory42.addErrorPages(errorPageArray48);
        org.springframework.core.io.ResourceLoader resourceLoader50 = null;
        undertowEmbeddedServletContainerFactory42.setResourceLoader(resourceLoader50);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory53.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory53.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader58 = null;
        undertowEmbeddedServletContainerFactory53.setResourceLoader(resourceLoader58);
        org.springframework.boot.context.embedded.Compression compression60 = null;
        undertowEmbeddedServletContainerFactory53.setCompression(compression60);
        undertowEmbeddedServletContainerFactory53.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.Ssl ssl64 = undertowEmbeddedServletContainerFactory53.getSsl();
        java.io.File file65 = undertowEmbeddedServletContainerFactory53.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray68 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory67.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray68);
        org.springframework.boot.context.embedded.Ssl ssl70 = null;
        undertowEmbeddedServletContainerFactory67.setSsl(ssl70);
        org.springframework.boot.context.embedded.Ssl ssl72 = undertowEmbeddedServletContainerFactory67.getSsl();
        undertowEmbeddedServletContainerFactory67.setDisplayName("");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings75 = undertowEmbeddedServletContainerFactory67.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer undertowDeploymentInfoCustomizer76 = null;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray77 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] { undertowDeploymentInfoCustomizer76 };
        undertowEmbeddedServletContainerFactory67.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray77);
        undertowEmbeddedServletContainerFactory53.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray77);
        undertowEmbeddedServletContainerFactory42.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray77);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray77);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray11);
        org.junit.Assert.assertNotNull(errorPageSet17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray23);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray27);
        org.junit.Assert.assertNull(ssl32);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(errorPageArray48);
        org.junit.Assert.assertNull(ssl64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray68);
        org.junit.Assert.assertNull(ssl72);
        org.junit.Assert.assertNotNull(mimeMappings75);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray77);
    }

    @Test
    public void test09722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09722");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory12.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory12.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory12.getSsl();
        boolean boolean18 = undertowEmbeddedServletContainerFactory12.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = null;
        undertowEmbeddedServletContainerFactory12.setJspServlet(jspServlet19);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings21);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection23 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        int int26 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray30 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory29.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray30);
        java.io.File file32 = null;
        undertowEmbeddedServletContainerFactory29.setSessionStoreDir(file32);
        undertowEmbeddedServletContainerFactory29.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory39.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray42 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory39.addBuilderCustomizers(undertowBuilderCustomizerArray42);
        undertowEmbeddedServletContainerFactory37.addBuilderCustomizers(undertowBuilderCustomizerArray42);
        org.springframework.boot.context.embedded.Ssl ssl45 = null;
        undertowEmbeddedServletContainerFactory37.setSsl(ssl45);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory48.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory48.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl53 = undertowEmbeddedServletContainerFactory48.getSsl();
        boolean boolean54 = undertowEmbeddedServletContainerFactory48.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet55 = null;
        undertowEmbeddedServletContainerFactory48.setJspServlet(jspServlet55);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings57 = undertowEmbeddedServletContainerFactory48.getMimeMappings();
        undertowEmbeddedServletContainerFactory37.setMimeMappings(mimeMappings57);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection59 = undertowEmbeddedServletContainerFactory37.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory37.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory63.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory63.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl68 = null;
        undertowEmbeddedServletContainerFactory63.setSsl(ssl68);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray70 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory63.addErrorPages(errorPageArray70);
        undertowEmbeddedServletContainerFactory37.addErrorPages(errorPageArray70);
        undertowEmbeddedServletContainerFactory29.addErrorPages(errorPageArray70);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray70);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet77 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.JspServlet jspServlet78 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray30);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray42);
        org.junit.Assert.assertNull(ssl53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(mimeMappings57);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection59);
        org.junit.Assert.assertNotNull(errorPageArray70);
        org.junit.Assert.assertNotNull(errorPageSet77);
        org.junit.Assert.assertNotNull(jspServlet78);
    }

    @Test
    public void test09723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09723");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file8);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray10 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11, errorPageArray10);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) -1);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection16 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.JspServlet jspServlet17 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        org.springframework.boot.context.embedded.Ssl ssl18 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        java.lang.String str20 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        boolean boolean21 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        boolean boolean22 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.io.File file23 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(errorPageArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection16);
        org.junit.Assert.assertNotNull(jspServlet17);
        org.junit.Assert.assertNull(ssl18);
        org.junit.Assert.assertNotNull(jspServlet19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(file23);
    }

    @Test
    public void test09724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09724");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        java.net.InetAddress inetAddress8 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress8);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.JspServlet jspServlet12 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        boolean boolean15 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.Compression compression16 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression16);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1800);
        org.junit.Assert.assertNotNull(jspServlet12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test09725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09725");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("");
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file7);
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("");
        boolean boolean12 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test09726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09726");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.net.InetAddress inetAddress2 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress2);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file8 = undertowEmbeddedServletContainerFactory7.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory7.setPersistSession(false);
        undertowEmbeddedServletContainerFactory7.setJspServletClassName("");
        java.io.File file13 = undertowEmbeddedServletContainerFactory7.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory7.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory7.setBuffersPerRegion((java.lang.Integer) 32);
        undertowEmbeddedServletContainerFactory7.setBufferSize((java.lang.Integer) 97);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) -1);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection22 = undertowEmbeddedServletContainerFactory21.getDeploymentInfoCustomizers();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = undertowEmbeddedServletContainerFactory21.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory25.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory25.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl30 = undertowEmbeddedServletContainerFactory25.getSsl();
        boolean boolean31 = undertowEmbeddedServletContainerFactory25.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory33.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory33.setPersistSession(false);
        boolean boolean38 = undertowEmbeddedServletContainerFactory33.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory40.setPort((int) (byte) -1);
        boolean boolean43 = undertowEmbeddedServletContainerFactory40.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory45.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory45.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl50 = null;
        undertowEmbeddedServletContainerFactory45.setSsl(ssl50);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray52 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory45.addErrorPages(errorPageArray52);
        undertowEmbeddedServletContainerFactory40.addErrorPages(errorPageArray52);
        undertowEmbeddedServletContainerFactory33.addErrorPages(errorPageArray52);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer56 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray57 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer56 };
        undertowEmbeddedServletContainerFactory33.addBuilderCustomizers(undertowBuilderCustomizerArray57);
        undertowEmbeddedServletContainerFactory25.addBuilderCustomizers(undertowBuilderCustomizerArray57);
        undertowEmbeddedServletContainerFactory21.addBuilderCustomizers(undertowBuilderCustomizerArray57);
        undertowEmbeddedServletContainerFactory7.addBuilderCustomizers(undertowBuilderCustomizerArray57);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray57);
        java.io.File file63 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file63);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection22);
        org.junit.Assert.assertNotNull(errorPageSet23);
        org.junit.Assert.assertNull(ssl30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(errorPageArray52);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray57);
    }

    @Test
    public void test09727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09727");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        java.net.InetAddress inetAddress6 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress6);
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression8);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl12 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl12);
        java.io.File file14 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection15 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection15);
    }

    @Test
    public void test09728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09728");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory5.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory5.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory5.setResourceLoader(resourceLoader10);
        org.springframework.boot.context.embedded.Compression compression12 = null;
        undertowEmbeddedServletContainerFactory5.setCompression(compression12);
        undertowEmbeddedServletContainerFactory5.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory17.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory17.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl22 = undertowEmbeddedServletContainerFactory17.getSsl();
        boolean boolean23 = undertowEmbeddedServletContainerFactory17.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet24 = null;
        undertowEmbeddedServletContainerFactory17.setJspServlet(jspServlet24);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        undertowEmbeddedServletContainerFactory5.setMimeMappings(mimeMappings26);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings26);
        boolean boolean29 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) ' ');
        java.io.File file34 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file34);
        org.springframework.boot.context.embedded.Compression compression36 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression36);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test09729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09729");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer8 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap7);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer10 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer12 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap11);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer8, initParameterConfiguringServletContextInitializer10, initParameterConfiguringServletContextInitializer12 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray13);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 0);
        org.springframework.boot.context.embedded.Compression compression17 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression17);
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
    }

    @Test
    public void test09730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09730");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression8);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        int int15 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 52);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
    }

    @Test
    public void test09731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09731");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl5 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl5);
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.boot.context.embedded.Ssl ssl8 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl8);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory11.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory11.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader16 = null;
        undertowEmbeddedServletContainerFactory11.setResourceLoader(resourceLoader16);
        org.springframework.boot.context.embedded.Compression compression18 = null;
        undertowEmbeddedServletContainerFactory11.setCompression(compression18);
        undertowEmbeddedServletContainerFactory11.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.Ssl ssl22 = undertowEmbeddedServletContainerFactory11.getSsl();
        java.io.File file23 = undertowEmbeddedServletContainerFactory11.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory27.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray30 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory27.addBuilderCustomizers(undertowBuilderCustomizerArray30);
        undertowEmbeddedServletContainerFactory25.addBuilderCustomizers(undertowBuilderCustomizerArray30);
        undertowEmbeddedServletContainerFactory11.addBuilderCustomizers(undertowBuilderCustomizerArray30);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray30);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray37 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory36.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray37);
        org.springframework.boot.context.embedded.Ssl ssl39 = null;
        undertowEmbeddedServletContainerFactory36.setSsl(ssl39);
        undertowEmbeddedServletContainerFactory36.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet43 = undertowEmbeddedServletContainerFactory36.getErrorPages();
        boolean boolean44 = undertowEmbeddedServletContainerFactory36.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray47 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory46.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray47);
        org.springframework.boot.context.embedded.Ssl ssl49 = null;
        undertowEmbeddedServletContainerFactory46.setSsl(ssl49);
        undertowEmbeddedServletContainerFactory46.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet53 = undertowEmbeddedServletContainerFactory46.getErrorPages();
        undertowEmbeddedServletContainerFactory36.setErrorPages(errorPageSet53);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet53);
        boolean boolean56 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file59 = null;
        undertowEmbeddedServletContainerFactory58.setDocumentRoot(file59);
        org.springframework.boot.context.embedded.Ssl ssl61 = null;
        undertowEmbeddedServletContainerFactory58.setSsl(ssl61);
        boolean boolean63 = undertowEmbeddedServletContainerFactory58.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory58.setPersistSession(false);
        java.lang.String str66 = undertowEmbeddedServletContainerFactory58.getContextPath();
        undertowEmbeddedServletContainerFactory58.setJspServletClassName("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet69 = undertowEmbeddedServletContainerFactory58.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet69);
        org.springframework.core.io.ResourceLoader resourceLoader71 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader71);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection73 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(ssl22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray30);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray37);
        org.junit.Assert.assertNotNull(errorPageSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray47);
        org.junit.Assert.assertNotNull(errorPageSet53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(errorPageSet69);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection73);
    }

    @Test
    public void test09732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09732");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        boolean boolean11 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        int int12 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 0);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        java.net.InetAddress inetAddress17 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress17);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
    }

    @Test
    public void test09733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09733");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        undertowEmbeddedServletContainerFactory1.setPort(0);
        org.springframework.boot.context.embedded.Compression compression8 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.io.File file9 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 10);
        undertowEmbeddedServletContainerFactory1.setPort((int) (short) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory17.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray20 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory17.addBuilderCustomizers(undertowBuilderCustomizerArray20);
        undertowEmbeddedServletContainerFactory15.addBuilderCustomizers(undertowBuilderCustomizerArray20);
        org.springframework.boot.context.embedded.Ssl ssl23 = null;
        undertowEmbeddedServletContainerFactory15.setSsl(ssl23);
        boolean boolean25 = undertowEmbeddedServletContainerFactory15.isRegisterDefaultServlet();
        int int26 = undertowEmbeddedServletContainerFactory15.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file29 = undertowEmbeddedServletContainerFactory28.getSessionStoreDir();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isAccessLogEnabled();
        java.io.File file31 = null;
        undertowEmbeddedServletContainerFactory28.setAccessLogDirectory(file31);
        org.springframework.boot.context.embedded.Ssl ssl33 = null;
        undertowEmbeddedServletContainerFactory28.setSsl(ssl33);
        java.io.File file35 = null;
        undertowEmbeddedServletContainerFactory28.setAccessLogDirectory(file35);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection37 = undertowEmbeddedServletContainerFactory28.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray40 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory39.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray40);
        org.springframework.boot.context.embedded.Ssl ssl42 = null;
        undertowEmbeddedServletContainerFactory39.setSsl(ssl42);
        undertowEmbeddedServletContainerFactory39.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file48 = null;
        undertowEmbeddedServletContainerFactory47.setAccessLogDirectory(file48);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray50 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory47.addErrorPages(errorPageArray50);
        org.springframework.boot.context.embedded.Compression compression52 = undertowEmbeddedServletContainerFactory47.getCompression();
        org.springframework.boot.context.embedded.JspServlet jspServlet53 = undertowEmbeddedServletContainerFactory47.getJspServlet();
        undertowEmbeddedServletContainerFactory39.setJspServlet(jspServlet53);
        undertowEmbeddedServletContainerFactory28.setJspServlet(jspServlet53);
        undertowEmbeddedServletContainerFactory15.setJspServlet(jspServlet53);
        java.io.File file57 = undertowEmbeddedServletContainerFactory15.getDocumentRoot();
        java.lang.String str58 = undertowEmbeddedServletContainerFactory15.getDisplayName();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings59 = undertowEmbeddedServletContainerFactory15.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file62 = undertowEmbeddedServletContainerFactory61.getSessionStoreDir();
        org.springframework.core.io.ResourceLoader resourceLoader63 = null;
        undertowEmbeddedServletContainerFactory61.setResourceLoader(resourceLoader63);
        org.springframework.boot.context.embedded.Ssl ssl65 = null;
        undertowEmbeddedServletContainerFactory61.setSsl(ssl65);
        org.springframework.core.io.ResourceLoader resourceLoader67 = null;
        undertowEmbeddedServletContainerFactory61.setResourceLoader(resourceLoader67);
        org.springframework.boot.context.embedded.Compression compression69 = null;
        undertowEmbeddedServletContainerFactory61.setCompression(compression69);
        java.net.InetAddress inetAddress71 = undertowEmbeddedServletContainerFactory61.getAddress();
        undertowEmbeddedServletContainerFactory61.setWorkerThreads((java.lang.Integer) 0);
        java.io.File file74 = undertowEmbeddedServletContainerFactory61.getSessionStoreDir();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings75 = undertowEmbeddedServletContainerFactory61.getMimeMappings();
        undertowEmbeddedServletContainerFactory15.setMimeMappings(mimeMappings75);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings75);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(compression8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1800 + "'", int26 == 1800);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection37);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray40);
        org.junit.Assert.assertNotNull(errorPageArray50);
        org.junit.Assert.assertNull(compression52);
        org.junit.Assert.assertNotNull(jspServlet53);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(mimeMappings59);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(inetAddress71);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNotNull(mimeMappings75);
    }

    @Test
    public void test09734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09734");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file2 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file6 = undertowEmbeddedServletContainerFactory5.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory5.setPersistSession(false);
        undertowEmbeddedServletContainerFactory5.setJspServletClassName("");
        java.io.File file11 = undertowEmbeddedServletContainerFactory5.getSessionStoreDir();
        java.lang.String str12 = undertowEmbeddedServletContainerFactory5.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory14.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory14.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory14.getSsl();
        boolean boolean20 = undertowEmbeddedServletContainerFactory14.isAccessLogEnabled();
        java.io.File file21 = null;
        undertowEmbeddedServletContainerFactory14.setAccessLogDirectory(file21);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray23 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24, errorPageArray23);
        undertowEmbeddedServletContainerFactory14.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24);
        undertowEmbeddedServletContainerFactory5.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24);
        boolean boolean29 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.Ssl ssl32 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.io.File file33 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        int int34 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.Compression compression35 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection36 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(errorPageArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(ssl32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 97 + "'", int34 == 97);
        org.junit.Assert.assertNull(compression35);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection36);
    }

    @Test
    public void test09735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09735");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.net.InetAddress inetAddress2 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress2);
        java.net.InetAddress inetAddress4 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 100);
        java.net.InetAddress inetAddress7 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.junit.Assert.assertNull(inetAddress4);
        org.junit.Assert.assertNull(inetAddress7);
    }

    @Test
    public void test09736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09736");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 10);
        org.springframework.boot.context.embedded.Compression compression3 = undertowEmbeddedServletContainerFactory2.getCompression();
        java.net.InetAddress inetAddress4 = null;
        undertowEmbeddedServletContainerFactory2.setAddress(inetAddress4);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        undertowEmbeddedServletContainerFactory2.setDisplayName("");
        org.springframework.boot.context.embedded.Ssl ssl9 = undertowEmbeddedServletContainerFactory2.getSsl();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection10 = undertowEmbeddedServletContainerFactory2.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file13 = undertowEmbeddedServletContainerFactory12.getSessionStoreDir();
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory12.setResourceLoader(resourceLoader14);
        org.springframework.boot.context.embedded.Ssl ssl16 = null;
        undertowEmbeddedServletContainerFactory12.setSsl(ssl16);
        undertowEmbeddedServletContainerFactory12.setIoThreads((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory21.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray22);
        org.springframework.boot.context.embedded.Ssl ssl24 = null;
        undertowEmbeddedServletContainerFactory21.setSsl(ssl24);
        undertowEmbeddedServletContainerFactory21.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet28 = undertowEmbeddedServletContainerFactory21.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader29 = null;
        undertowEmbeddedServletContainerFactory21.setResourceLoader(resourceLoader29);
        java.io.File file31 = undertowEmbeddedServletContainerFactory21.getDocumentRoot();
        undertowEmbeddedServletContainerFactory21.setWorkerThreads((java.lang.Integer) 32);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet34 = undertowEmbeddedServletContainerFactory21.getErrorPages();
        undertowEmbeddedServletContainerFactory21.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 100);
        undertowEmbeddedServletContainerFactory39.setPort(1800);
        java.lang.String str42 = undertowEmbeddedServletContainerFactory39.getContextPath();
        java.io.File file43 = null;
        undertowEmbeddedServletContainerFactory39.setDocumentRoot(file43);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray47 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory46.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray47);
        org.springframework.boot.context.embedded.Ssl ssl49 = null;
        undertowEmbeddedServletContainerFactory46.setSsl(ssl49);
        org.springframework.boot.context.embedded.Ssl ssl51 = undertowEmbeddedServletContainerFactory46.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray54 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory53.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray54);
        org.springframework.boot.context.embedded.Ssl ssl56 = null;
        undertowEmbeddedServletContainerFactory53.setSsl(ssl56);
        undertowEmbeddedServletContainerFactory53.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file62 = null;
        undertowEmbeddedServletContainerFactory61.setAccessLogDirectory(file62);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray64 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory61.addErrorPages(errorPageArray64);
        org.springframework.boot.context.embedded.Compression compression66 = undertowEmbeddedServletContainerFactory61.getCompression();
        org.springframework.boot.context.embedded.JspServlet jspServlet67 = undertowEmbeddedServletContainerFactory61.getJspServlet();
        undertowEmbeddedServletContainerFactory53.setJspServlet(jspServlet67);
        undertowEmbeddedServletContainerFactory46.setJspServlet(jspServlet67);
        undertowEmbeddedServletContainerFactory39.setJspServlet(jspServlet67);
        undertowEmbeddedServletContainerFactory21.setJspServlet(jspServlet67);
        undertowEmbeddedServletContainerFactory12.setJspServlet(jspServlet67);
        undertowEmbeddedServletContainerFactory2.setJspServlet(jspServlet67);
        org.junit.Assert.assertNull(compression3);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNull(ssl9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray22);
        org.junit.Assert.assertNotNull(errorPageSet28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(errorPageSet34);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray47);
        org.junit.Assert.assertNull(ssl51);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray54);
        org.junit.Assert.assertNotNull(errorPageArray64);
        org.junit.Assert.assertNull(compression66);
        org.junit.Assert.assertNotNull(jspServlet67);
    }

    @Test
    public void test09737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09737");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray4);
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 10);
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file9);
        undertowEmbeddedServletContainerFactory1.setPort(1);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test09738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09738");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file8);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray10 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11, errorPageArray10);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.net.InetAddress inetAddress18 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress18);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.Compression compression22 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression22);
        org.springframework.boot.context.embedded.Compression compression24 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression24);
        org.springframework.boot.context.embedded.Compression compression26 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression26);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.lang.String str30 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(errorPageArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(errorPageSet17);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
    }

    @Test
    public void test09739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09739");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) 'a');
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(true);
        undertowEmbeddedServletContainerFactory2.setBuffersPerRegion((java.lang.Integer) 35);
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) true);
    }

    @Test
    public void test09740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09740");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection11 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 97);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.Ssl ssl16 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray20 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory19.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray20);
        org.springframework.boot.context.embedded.Ssl ssl22 = null;
        undertowEmbeddedServletContainerFactory19.setSsl(ssl22);
        org.springframework.boot.context.embedded.Ssl ssl24 = undertowEmbeddedServletContainerFactory19.getSsl();
        undertowEmbeddedServletContainerFactory19.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory19.setDisplayName("hi!");
        java.net.InetAddress inetAddress29 = undertowEmbeddedServletContainerFactory19.getAddress();
        org.springframework.boot.context.embedded.Compression compression30 = null;
        undertowEmbeddedServletContainerFactory19.setCompression(compression30);
        java.io.File file32 = null;
        undertowEmbeddedServletContainerFactory19.setAccessLogDirectory(file32);
        java.lang.String str34 = undertowEmbeddedServletContainerFactory19.getDisplayName();
        boolean boolean35 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = undertowEmbeddedServletContainerFactory19.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings36);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray42 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory41.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray42);
        org.springframework.boot.context.embedded.Ssl ssl44 = null;
        undertowEmbeddedServletContainerFactory41.setSsl(ssl44);
        undertowEmbeddedServletContainerFactory41.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet48 = undertowEmbeddedServletContainerFactory41.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader49 = null;
        undertowEmbeddedServletContainerFactory41.setResourceLoader(resourceLoader49);
        org.springframework.boot.context.embedded.Compression compression51 = undertowEmbeddedServletContainerFactory41.getCompression();
        java.io.File file52 = null;
        undertowEmbeddedServletContainerFactory41.setSessionStoreDir(file52);
        boolean boolean54 = undertowEmbeddedServletContainerFactory41.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory41.setDisplayName("hi!");
        org.springframework.boot.context.embedded.JspServlet jspServlet57 = undertowEmbeddedServletContainerFactory41.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet57);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 97);
        java.io.File file61 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection11);
        org.junit.Assert.assertNull(ssl16);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray20);
        org.junit.Assert.assertNull(ssl24);
        org.junit.Assert.assertNull(inetAddress29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray42);
        org.junit.Assert.assertNotNull(errorPageSet48);
        org.junit.Assert.assertNull(compression51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(jspServlet57);
        org.junit.Assert.assertNull(file61);
    }

    @Test
    public void test09741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09741");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file4);
        undertowEmbeddedServletContainerFactory1.setPort(0);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray8 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray8);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        boolean boolean14 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader17);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 52);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray8);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test09742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09742");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory5.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) '4');
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection11 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        boolean boolean14 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test09743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09743");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file2 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file6 = undertowEmbeddedServletContainerFactory5.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory5.setPersistSession(false);
        undertowEmbeddedServletContainerFactory5.setJspServletClassName("");
        java.io.File file11 = undertowEmbeddedServletContainerFactory5.getSessionStoreDir();
        java.lang.String str12 = undertowEmbeddedServletContainerFactory5.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory14.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory14.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory14.getSsl();
        boolean boolean20 = undertowEmbeddedServletContainerFactory14.isAccessLogEnabled();
        java.io.File file21 = null;
        undertowEmbeddedServletContainerFactory14.setAccessLogDirectory(file21);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray23 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24, errorPageArray23);
        undertowEmbeddedServletContainerFactory14.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24);
        undertowEmbeddedServletContainerFactory5.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24);
        boolean boolean29 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.io.File file30 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        int int31 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        java.io.File file32 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file32);
        org.springframework.boot.context.embedded.Ssl ssl34 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl34);
        java.io.File file36 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray39 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory38.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray39);
        org.springframework.boot.context.embedded.Ssl ssl41 = null;
        undertowEmbeddedServletContainerFactory38.setSsl(ssl41);
        undertowEmbeddedServletContainerFactory38.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet45 = undertowEmbeddedServletContainerFactory38.getErrorPages();
        undertowEmbeddedServletContainerFactory38.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file50 = null;
        undertowEmbeddedServletContainerFactory49.setAccessLogDirectory(file50);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray52 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory49.addErrorPages(errorPageArray52);
        org.springframework.boot.context.embedded.Compression compression54 = undertowEmbeddedServletContainerFactory49.getCompression();
        org.springframework.boot.context.embedded.JspServlet jspServlet55 = undertowEmbeddedServletContainerFactory49.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file58 = null;
        undertowEmbeddedServletContainerFactory57.setAccessLogDirectory(file58);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray60 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory57.addErrorPages(errorPageArray60);
        undertowEmbeddedServletContainerFactory49.addErrorPages(errorPageArray60);
        undertowEmbeddedServletContainerFactory38.addErrorPages(errorPageArray60);
        org.springframework.boot.context.embedded.Compression compression64 = null;
        undertowEmbeddedServletContainerFactory38.setCompression(compression64);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet66 = undertowEmbeddedServletContainerFactory38.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet66);
        java.io.File file68 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(errorPageArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1800 + "'", int31 == 1800);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray39);
        org.junit.Assert.assertNotNull(errorPageSet45);
        org.junit.Assert.assertNotNull(errorPageArray52);
        org.junit.Assert.assertNull(compression54);
        org.junit.Assert.assertNotNull(jspServlet55);
        org.junit.Assert.assertNotNull(errorPageArray60);
        org.junit.Assert.assertNotNull(errorPageSet66);
        org.junit.Assert.assertNull(file68);
    }

    @Test
    public void test09744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09744");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        int int8 = undertowEmbeddedServletContainerFactory1.getPort();
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray12 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory11.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray12);
        org.springframework.boot.context.embedded.Ssl ssl14 = null;
        undertowEmbeddedServletContainerFactory11.setSsl(ssl14);
        undertowEmbeddedServletContainerFactory11.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet18 = undertowEmbeddedServletContainerFactory11.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader19 = null;
        undertowEmbeddedServletContainerFactory11.setResourceLoader(resourceLoader19);
        java.io.File file21 = undertowEmbeddedServletContainerFactory11.getDocumentRoot();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection22 = undertowEmbeddedServletContainerFactory11.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory11.setBuffersPerRegion((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.JspServlet jspServlet25 = undertowEmbeddedServletContainerFactory11.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) 'a');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray31 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory30.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray31);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray35 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory34.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray35);
        undertowEmbeddedServletContainerFactory30.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray35);
        undertowEmbeddedServletContainerFactory28.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray35);
        java.lang.String str39 = undertowEmbeddedServletContainerFactory28.getContextPath();
        undertowEmbeddedServletContainerFactory28.setDisplayName("");
        undertowEmbeddedServletContainerFactory28.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file46 = undertowEmbeddedServletContainerFactory45.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory45.setPersistSession(false);
        java.lang.String str49 = undertowEmbeddedServletContainerFactory45.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory51.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory51.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl56 = undertowEmbeddedServletContainerFactory51.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer58 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap57);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer60 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap59);
        java.util.Map<java.lang.String, java.lang.String> strMap61 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer62 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap61);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray63 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer58, initParameterConfiguringServletContextInitializer60, initParameterConfiguringServletContextInitializer62 };
        undertowEmbeddedServletContainerFactory51.addInitializers(servletContextInitializerArray63);
        undertowEmbeddedServletContainerFactory51.setJspServletClassName("hi!");
        int int67 = undertowEmbeddedServletContainerFactory51.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet68 = undertowEmbeddedServletContainerFactory51.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory70.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray75 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory74.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray75);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory78 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray79 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory78.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray79);
        undertowEmbeddedServletContainerFactory74.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray79);
        undertowEmbeddedServletContainerFactory70.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray79);
        java.lang.String str83 = undertowEmbeddedServletContainerFactory70.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory85 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory85.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory85.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray90 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer91 = undertowEmbeddedServletContainerFactory85.getEmbeddedServletContainer(servletContextInitializerArray90);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer92 = undertowEmbeddedServletContainerFactory70.getEmbeddedServletContainer(servletContextInitializerArray90);
        undertowEmbeddedServletContainerFactory51.addInitializers(servletContextInitializerArray90);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer94 = undertowEmbeddedServletContainerFactory45.getEmbeddedServletContainer(servletContextInitializerArray90);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer95 = undertowEmbeddedServletContainerFactory28.getEmbeddedServletContainer(servletContextInitializerArray90);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer96 = undertowEmbeddedServletContainerFactory11.getEmbeddedServletContainer(servletContextInitializerArray90);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray90);
        java.io.File file98 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file98);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray12);
        org.junit.Assert.assertNotNull(errorPageSet18);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection22);
        org.junit.Assert.assertNotNull(jspServlet25);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray31);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNull(ssl56);
        org.junit.Assert.assertNotNull(servletContextInitializerArray63);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet68);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray75);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray79);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(servletContextInitializerArray90);
        org.junit.Assert.assertNotNull(embeddedServletContainer91);
        org.junit.Assert.assertNotNull(embeddedServletContainer92);
        org.junit.Assert.assertNotNull(embeddedServletContainer94);
        org.junit.Assert.assertNotNull(embeddedServletContainer95);
        org.junit.Assert.assertNotNull(embeddedServletContainer96);
    }

    @Test
    public void test09745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09745");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file8);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray10 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11, errorPageArray10);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        java.net.InetAddress inetAddress16 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setPort(97);
        int int21 = undertowEmbeddedServletContainerFactory1.getPort();
        boolean boolean22 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/' and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(errorPageArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(inetAddress16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 97 + "'", int21 == 97);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test09746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09746");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory12.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory12.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory12.getSsl();
        boolean boolean18 = undertowEmbeddedServletContainerFactory12.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = null;
        undertowEmbeddedServletContainerFactory12.setJspServlet(jspServlet19);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings21);
        java.net.InetAddress inetAddress23 = undertowEmbeddedServletContainerFactory1.getAddress();
        boolean boolean24 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        int int25 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory27.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory27.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl32 = null;
        undertowEmbeddedServletContainerFactory27.setSsl(ssl32);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file36 = undertowEmbeddedServletContainerFactory35.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory35.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory40.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory40.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl45 = undertowEmbeddedServletContainerFactory40.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer47 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap46);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer49 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap48);
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer51 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap50);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray52 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer47, initParameterConfiguringServletContextInitializer49, initParameterConfiguringServletContextInitializer51 };
        undertowEmbeddedServletContainerFactory40.addInitializers(servletContextInitializerArray52);
        undertowEmbeddedServletContainerFactory35.addInitializers(servletContextInitializerArray52);
        undertowEmbeddedServletContainerFactory27.addInitializers(servletContextInitializerArray52);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory57.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory57.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl62 = undertowEmbeddedServletContainerFactory57.getSsl();
        boolean boolean63 = undertowEmbeddedServletContainerFactory57.isAccessLogEnabled();
        java.io.File file64 = null;
        undertowEmbeddedServletContainerFactory57.setAccessLogDirectory(file64);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray66 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet67 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet67, errorPageArray66);
        undertowEmbeddedServletContainerFactory57.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet67);
        undertowEmbeddedServletContainerFactory57.setAccessLogPattern("");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings72 = undertowEmbeddedServletContainerFactory57.getMimeMappings();
        undertowEmbeddedServletContainerFactory27.setMimeMappings(mimeMappings72);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings74 = undertowEmbeddedServletContainerFactory27.getMimeMappings();
        java.io.File file75 = null;
        undertowEmbeddedServletContainerFactory27.setSessionStoreDir(file75);
        java.lang.String str77 = undertowEmbeddedServletContainerFactory27.getDisplayName();
        undertowEmbeddedServletContainerFactory27.setAccessLogEnabled(true);
        int int80 = undertowEmbeddedServletContainerFactory27.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory82 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file83 = undertowEmbeddedServletContainerFactory82.getSessionStoreDir();
        boolean boolean84 = undertowEmbeddedServletContainerFactory82.isAccessLogEnabled();
        java.io.File file85 = null;
        undertowEmbeddedServletContainerFactory82.setAccessLogDirectory(file85);
        undertowEmbeddedServletContainerFactory82.setRegisterDefaultServlet(true);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection89 = undertowEmbeddedServletContainerFactory82.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory82.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory82.setSessionTimeout(0);
        undertowEmbeddedServletContainerFactory82.setJspServletClassName("");
        org.springframework.boot.context.embedded.JspServlet jspServlet96 = undertowEmbeddedServletContainerFactory82.getJspServlet();
        undertowEmbeddedServletContainerFactory27.setJspServlet(jspServlet96);
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet96);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNull(inetAddress23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(ssl45);
        org.junit.Assert.assertNotNull(servletContextInitializerArray52);
        org.junit.Assert.assertNull(ssl62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(errorPageArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(mimeMappings72);
        org.junit.Assert.assertNotNull(mimeMappings74);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection89);
        org.junit.Assert.assertNotNull(jspServlet96);
    }

    @Test
    public void test09747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09747");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) '#');
        undertowEmbeddedServletContainerFactory2.setWorkerThreads((java.lang.Integer) 32);
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory2.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory2.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.Compression compression11 = undertowEmbeddedServletContainerFactory2.getCompression();
        org.junit.Assert.assertNull(compression11);
    }

    @Test
    public void test09748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09748");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection11 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        java.net.InetAddress inetAddress14 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file17);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
        java.io.File file21 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file21);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file25 = undertowEmbeddedServletContainerFactory24.getSessionStoreDir();
        boolean boolean26 = undertowEmbeddedServletContainerFactory24.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory24.setSessionTimeout((int) (byte) 0);
        undertowEmbeddedServletContainerFactory24.setJspServletClassName("hi!");
        int int31 = undertowEmbeddedServletContainerFactory24.getPort();
        undertowEmbeddedServletContainerFactory24.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory37.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray40 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory37.addBuilderCustomizers(undertowBuilderCustomizerArray40);
        undertowEmbeddedServletContainerFactory35.addBuilderCustomizers(undertowBuilderCustomizerArray40);
        org.springframework.boot.context.embedded.Ssl ssl43 = null;
        undertowEmbeddedServletContainerFactory35.setSsl(ssl43);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory46.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory46.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl51 = undertowEmbeddedServletContainerFactory46.getSsl();
        boolean boolean52 = undertowEmbeddedServletContainerFactory46.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet53 = null;
        undertowEmbeddedServletContainerFactory46.setJspServlet(jspServlet53);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings55 = undertowEmbeddedServletContainerFactory46.getMimeMappings();
        undertowEmbeddedServletContainerFactory35.setMimeMappings(mimeMappings55);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection57 = undertowEmbeddedServletContainerFactory35.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory35.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory61.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory61.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl66 = null;
        undertowEmbeddedServletContainerFactory61.setSsl(ssl66);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray68 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory61.addErrorPages(errorPageArray68);
        undertowEmbeddedServletContainerFactory35.addErrorPages(errorPageArray68);
        undertowEmbeddedServletContainerFactory24.addErrorPages(errorPageArray68);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory73 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file74 = undertowEmbeddedServletContainerFactory73.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory73.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory78 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory78.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory78.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl83 = undertowEmbeddedServletContainerFactory78.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap84 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer85 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap84);
        java.util.Map<java.lang.String, java.lang.String> strMap86 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer87 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap86);
        java.util.Map<java.lang.String, java.lang.String> strMap88 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer89 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap88);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray90 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer85, initParameterConfiguringServletContextInitializer87, initParameterConfiguringServletContextInitializer89 };
        undertowEmbeddedServletContainerFactory78.addInitializers(servletContextInitializerArray90);
        undertowEmbeddedServletContainerFactory73.addInitializers(servletContextInitializerArray90);
        undertowEmbeddedServletContainerFactory24.addInitializers(servletContextInitializerArray90);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray90);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection11);
        org.junit.Assert.assertNull(inetAddress14);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray40);
        org.junit.Assert.assertNull(ssl51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(mimeMappings55);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection57);
        org.junit.Assert.assertNotNull(errorPageArray68);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(ssl83);
        org.junit.Assert.assertNotNull(servletContextInitializerArray90);
    }

    @Test
    public void test09749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09749");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file4);
        undertowEmbeddedServletContainerFactory1.setPort(0);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray8 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray8);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        boolean boolean14 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory20.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory20.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl25 = undertowEmbeddedServletContainerFactory20.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer27 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap26);
        java.util.Map<java.lang.String, java.lang.String> strMap28 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer29 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap28);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer31 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap30);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray32 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer27, initParameterConfiguringServletContextInitializer29, initParameterConfiguringServletContextInitializer31 };
        undertowEmbeddedServletContainerFactory20.addInitializers(servletContextInitializerArray32);
        undertowEmbeddedServletContainerFactory20.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str36 = undertowEmbeddedServletContainerFactory20.getContextPath();
        org.springframework.boot.context.embedded.Ssl ssl37 = undertowEmbeddedServletContainerFactory20.getSsl();
        undertowEmbeddedServletContainerFactory20.setIoThreads((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.Ssl ssl40 = undertowEmbeddedServletContainerFactory20.getSsl();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection41 = undertowEmbeddedServletContainerFactory20.getBuilderCustomizers();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet42 = undertowEmbeddedServletContainerFactory20.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet42);
        org.springframework.boot.context.embedded.Compression compression44 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression44);
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray8);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(ssl25);
        org.junit.Assert.assertNotNull(servletContextInitializerArray32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNull(ssl37);
        org.junit.Assert.assertNull(ssl40);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection41);
        org.junit.Assert.assertNotNull(errorPageSet42);
    }

    @Test
    public void test09750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09750");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        undertowEmbeddedServletContainerFactory1.setPort(0);
        org.springframework.boot.context.embedded.Ssl ssl8 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        org.springframework.boot.context.embedded.Compression compression11 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression11);
        java.io.File file13 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file13);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl8);
    }

    @Test
    public void test09751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09751");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader9);
        java.lang.String str11 = undertowEmbeddedServletContainerFactory1.getContextPath();
        boolean boolean12 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        org.springframework.boot.context.embedded.Compression compression13 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression13);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test09752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09752");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file4);
        undertowEmbeddedServletContainerFactory1.setPort(0);
        int int8 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        int int9 = undertowEmbeddedServletContainerFactory1.getPort();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 97);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory15.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory15.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl20 = undertowEmbeddedServletContainerFactory15.getSsl();
        boolean boolean21 = undertowEmbeddedServletContainerFactory15.isAccessLogEnabled();
        java.io.File file22 = null;
        undertowEmbeddedServletContainerFactory15.setAccessLogDirectory(file22);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray24 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet25 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet25, errorPageArray24);
        undertowEmbeddedServletContainerFactory15.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet25);
        undertowEmbeddedServletContainerFactory15.setSessionTimeout((int) (byte) -1);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection30 = undertowEmbeddedServletContainerFactory15.getBuilderCustomizers();
        org.springframework.boot.context.embedded.JspServlet jspServlet31 = undertowEmbeddedServletContainerFactory15.getJspServlet();
        org.springframework.boot.context.embedded.Ssl ssl32 = undertowEmbeddedServletContainerFactory15.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray35 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory34.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray35);
        org.springframework.boot.context.embedded.Ssl ssl37 = null;
        undertowEmbeddedServletContainerFactory34.setSsl(ssl37);
        undertowEmbeddedServletContainerFactory34.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet41 = undertowEmbeddedServletContainerFactory34.getErrorPages();
        undertowEmbeddedServletContainerFactory34.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory34.setIoThreads((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file48 = null;
        undertowEmbeddedServletContainerFactory47.setAccessLogDirectory(file48);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray50 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory47.addErrorPages(errorPageArray50);
        undertowEmbeddedServletContainerFactory34.addErrorPages(errorPageArray50);
        undertowEmbeddedServletContainerFactory15.addErrorPages(errorPageArray50);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray50);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        java.net.InetAddress inetAddress57 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress57);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(ssl20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(errorPageArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection30);
        org.junit.Assert.assertNotNull(jspServlet31);
        org.junit.Assert.assertNull(ssl32);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray35);
        org.junit.Assert.assertNotNull(errorPageSet41);
        org.junit.Assert.assertNotNull(errorPageArray50);
    }

    @Test
    public void test09753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09753");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer8 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap7);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer10 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer12 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap11);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer8, initParameterConfiguringServletContextInitializer10, initParameterConfiguringServletContextInitializer12 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray13);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str17 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory21.setPort((int) (byte) -1);
        java.io.File file24 = null;
        undertowEmbeddedServletContainerFactory21.setSessionStoreDir(file24);
        org.springframework.boot.context.embedded.ErrorPage errorPage26 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray27 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage26 };
        undertowEmbeddedServletContainerFactory21.addErrorPages(errorPageArray27);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray27);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        int int32 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings35 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.Ssl ssl36 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.Compression compression37 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression37);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(errorPageArray27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1800 + "'", int32 == 1800);
        org.junit.Assert.assertNotNull(mimeMappings35);
        org.junit.Assert.assertNull(ssl36);
        org.junit.Assert.assertNotNull(mimeMappings39);
    }

    @Test
    public void test09754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09754");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test09755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09755");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        int int11 = undertowEmbeddedServletContainerFactory1.getPort();
        undertowEmbeddedServletContainerFactory1.setPort(0);
        int int14 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.springframework.boot.context.embedded.Ssl ssl15 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file18 = undertowEmbeddedServletContainerFactory17.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory17.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory22.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory22.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl27 = undertowEmbeddedServletContainerFactory22.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer29 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap28);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer31 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap30);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer33 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap32);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray34 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer29, initParameterConfiguringServletContextInitializer31, initParameterConfiguringServletContextInitializer33 };
        undertowEmbeddedServletContainerFactory22.addInitializers(servletContextInitializerArray34);
        undertowEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray34);
        undertowEmbeddedServletContainerFactory17.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory17.setPersistSession(false);
        undertowEmbeddedServletContainerFactory17.setBuffersPerRegion((java.lang.Integer) 10);
        java.io.File file43 = null;
        undertowEmbeddedServletContainerFactory17.setDocumentRoot(file43);
        org.springframework.boot.context.embedded.Compression compression45 = undertowEmbeddedServletContainerFactory17.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory47.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory47.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl52 = undertowEmbeddedServletContainerFactory47.getSsl();
        boolean boolean53 = undertowEmbeddedServletContainerFactory47.isAccessLogEnabled();
        java.io.File file54 = null;
        undertowEmbeddedServletContainerFactory47.setAccessLogDirectory(file54);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection56 = undertowEmbeddedServletContainerFactory47.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory47.setSessionTimeout(32);
        undertowEmbeddedServletContainerFactory47.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray63 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory62.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray63);
        java.io.File file65 = null;
        undertowEmbeddedServletContainerFactory62.setSessionStoreDir(file65);
        undertowEmbeddedServletContainerFactory62.setPort(0);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray69 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        undertowEmbeddedServletContainerFactory62.addInitializers(servletContextInitializerArray69);
        org.springframework.core.io.ResourceLoader resourceLoader71 = null;
        undertowEmbeddedServletContainerFactory62.setResourceLoader(resourceLoader71);
        undertowEmbeddedServletContainerFactory62.setDisplayName("hi!");
        java.io.File file75 = null;
        undertowEmbeddedServletContainerFactory62.setDocumentRoot(file75);
        org.springframework.boot.context.embedded.JspServlet jspServlet77 = undertowEmbeddedServletContainerFactory62.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory79 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory81 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory81.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray84 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory81.addBuilderCustomizers(undertowBuilderCustomizerArray84);
        undertowEmbeddedServletContainerFactory79.addBuilderCustomizers(undertowBuilderCustomizerArray84);
        undertowEmbeddedServletContainerFactory62.addBuilderCustomizers(undertowBuilderCustomizerArray84);
        undertowEmbeddedServletContainerFactory47.addBuilderCustomizers(undertowBuilderCustomizerArray84);
        undertowEmbeddedServletContainerFactory17.addBuilderCustomizers(undertowBuilderCustomizerArray84);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray84);
        int int91 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1800 + "'", int14 == 1800);
        org.junit.Assert.assertNull(ssl15);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(ssl27);
        org.junit.Assert.assertNotNull(servletContextInitializerArray34);
        org.junit.Assert.assertNull(compression45);
        org.junit.Assert.assertNull(ssl52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection56);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray63);
        org.junit.Assert.assertNotNull(servletContextInitializerArray69);
        org.junit.Assert.assertNotNull(jspServlet77);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray84);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1800 + "'", int91 == 1800);
    }

    @Test
    public void test09756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09756");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory9.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray12 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory9.addBuilderCustomizers(undertowBuilderCustomizerArray12);
        undertowEmbeddedServletContainerFactory7.addBuilderCustomizers(undertowBuilderCustomizerArray12);
        org.springframework.boot.context.embedded.Ssl ssl15 = null;
        undertowEmbeddedServletContainerFactory7.setSsl(ssl15);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory18.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory18.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl23 = undertowEmbeddedServletContainerFactory18.getSsl();
        boolean boolean24 = undertowEmbeddedServletContainerFactory18.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet25 = null;
        undertowEmbeddedServletContainerFactory18.setJspServlet(jspServlet25);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = undertowEmbeddedServletContainerFactory18.getMimeMappings();
        undertowEmbeddedServletContainerFactory7.setMimeMappings(mimeMappings27);
        java.net.InetAddress inetAddress29 = undertowEmbeddedServletContainerFactory7.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 0);
        undertowEmbeddedServletContainerFactory32.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory36.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray39 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory36.addBuilderCustomizers(undertowBuilderCustomizerArray39);
        undertowEmbeddedServletContainerFactory32.addBuilderCustomizers(undertowBuilderCustomizerArray39);
        undertowEmbeddedServletContainerFactory7.addBuilderCustomizers(undertowBuilderCustomizerArray39);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray39);
        org.springframework.boot.context.embedded.Ssl ssl44 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl44);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray12);
        org.junit.Assert.assertNull(ssl23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNull(inetAddress29);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray39);
    }

    @Test
    public void test09757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09757");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.net.InetAddress inetAddress2 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress2);
        java.net.InetAddress inetAddress4 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory6.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13, initParameterConfiguringServletContextInitializer15, initParameterConfiguringServletContextInitializer17 };
        undertowEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory6.setJspServletClassName("hi!");
        int int22 = undertowEmbeddedServletContainerFactory6.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = undertowEmbeddedServletContainerFactory6.getErrorPages();
        org.springframework.boot.context.embedded.JspServlet jspServlet24 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet24);
        java.lang.String str26 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        boolean boolean37 = undertowEmbeddedServletContainerFactory36.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray40 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory39.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray40);
        org.springframework.boot.context.embedded.Ssl ssl42 = null;
        undertowEmbeddedServletContainerFactory39.setSsl(ssl42);
        undertowEmbeddedServletContainerFactory39.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet46 = undertowEmbeddedServletContainerFactory39.getErrorPages();
        undertowEmbeddedServletContainerFactory39.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file51 = null;
        undertowEmbeddedServletContainerFactory50.setAccessLogDirectory(file51);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray53 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory50.addErrorPages(errorPageArray53);
        org.springframework.boot.context.embedded.Compression compression55 = undertowEmbeddedServletContainerFactory50.getCompression();
        org.springframework.boot.context.embedded.JspServlet jspServlet56 = undertowEmbeddedServletContainerFactory50.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file59 = null;
        undertowEmbeddedServletContainerFactory58.setAccessLogDirectory(file59);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray61 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory58.addErrorPages(errorPageArray61);
        undertowEmbeddedServletContainerFactory50.addErrorPages(errorPageArray61);
        undertowEmbeddedServletContainerFactory39.addErrorPages(errorPageArray61);
        undertowEmbeddedServletContainerFactory36.addErrorPages(errorPageArray61);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray61);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.junit.Assert.assertNull(inetAddress4);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet23);
        org.junit.Assert.assertNotNull(jspServlet24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray40);
        org.junit.Assert.assertNotNull(errorPageSet46);
        org.junit.Assert.assertNotNull(errorPageArray53);
        org.junit.Assert.assertNull(compression55);
        org.junit.Assert.assertNotNull(jspServlet56);
        org.junit.Assert.assertNotNull(errorPageArray61);
    }

    @Test
    public void test09758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09758");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl6 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl6);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file10 = undertowEmbeddedServletContainerFactory9.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory9.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory14.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory14.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory14.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer21 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap20);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer23 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap22);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer25 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap24);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer21, initParameterConfiguringServletContextInitializer23, initParameterConfiguringServletContextInitializer25 };
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray26);
        undertowEmbeddedServletContainerFactory9.addInitializers(servletContextInitializerArray26);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray26);
        java.lang.String str30 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory34.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory34.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl39 = undertowEmbeddedServletContainerFactory34.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer41 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap40);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer43 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap42);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer45 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap44);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray46 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer41, initParameterConfiguringServletContextInitializer43, initParameterConfiguringServletContextInitializer45 };
        undertowEmbeddedServletContainerFactory34.addInitializers(servletContextInitializerArray46);
        undertowEmbeddedServletContainerFactory34.setJspServletClassName("hi!");
        int int50 = undertowEmbeddedServletContainerFactory34.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file53 = undertowEmbeddedServletContainerFactory52.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory52.setPersistSession(false);
        undertowEmbeddedServletContainerFactory52.setJspServletClassName("");
        java.io.File file58 = undertowEmbeddedServletContainerFactory52.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory52.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory52.setBufferSize((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.JspServlet jspServlet63 = undertowEmbeddedServletContainerFactory52.getJspServlet();
        undertowEmbeddedServletContainerFactory34.setJspServlet(jspServlet63);
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet63);
        undertowEmbeddedServletContainerFactory1.setPort((int) '4');
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((-1));
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertNotNull(servletContextInitializerArray26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(ssl39);
        org.junit.Assert.assertNotNull(servletContextInitializerArray46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(jspServlet63);
    }

    @Test
    public void test09759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09759");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl6 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl6);
        undertowEmbeddedServletContainerFactory1.setPersistSession(true);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory14.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray15);
        org.springframework.boot.context.embedded.Ssl ssl17 = null;
        undertowEmbeddedServletContainerFactory14.setSsl(ssl17);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory14.getSsl();
        undertowEmbeddedServletContainerFactory14.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory14.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection24 = undertowEmbeddedServletContainerFactory14.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray27 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory26.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        java.io.File file29 = null;
        undertowEmbeddedServletContainerFactory26.setSessionStoreDir(file29);
        undertowEmbeddedServletContainerFactory26.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory36.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray39 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory36.addBuilderCustomizers(undertowBuilderCustomizerArray39);
        undertowEmbeddedServletContainerFactory34.addBuilderCustomizers(undertowBuilderCustomizerArray39);
        org.springframework.boot.context.embedded.Ssl ssl42 = null;
        undertowEmbeddedServletContainerFactory34.setSsl(ssl42);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory45.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory45.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl50 = undertowEmbeddedServletContainerFactory45.getSsl();
        boolean boolean51 = undertowEmbeddedServletContainerFactory45.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet52 = null;
        undertowEmbeddedServletContainerFactory45.setJspServlet(jspServlet52);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings54 = undertowEmbeddedServletContainerFactory45.getMimeMappings();
        undertowEmbeddedServletContainerFactory34.setMimeMappings(mimeMappings54);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection56 = undertowEmbeddedServletContainerFactory34.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory34.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory60.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory60.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl65 = null;
        undertowEmbeddedServletContainerFactory60.setSsl(ssl65);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray67 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory60.addErrorPages(errorPageArray67);
        undertowEmbeddedServletContainerFactory34.addErrorPages(errorPageArray67);
        undertowEmbeddedServletContainerFactory26.addErrorPages(errorPageArray67);
        undertowEmbeddedServletContainerFactory14.addErrorPages(errorPageArray67);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet72 = undertowEmbeddedServletContainerFactory14.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet72);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection74 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.Compression compression75 = undertowEmbeddedServletContainerFactory1.getCompression();
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray15);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection24);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray27);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray39);
        org.junit.Assert.assertNull(ssl50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(mimeMappings54);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection56);
        org.junit.Assert.assertNotNull(errorPageArray67);
        org.junit.Assert.assertNotNull(errorPageSet72);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection74);
        org.junit.Assert.assertNull(compression75);
    }

    @Test
    public void test09760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09760");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        java.net.InetAddress inetAddress11 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.Compression compression12 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression12);
        java.io.File file14 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file14);
        java.lang.String str16 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        boolean boolean17 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        java.io.File file18 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file18);
        java.io.File file20 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file20);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNull(inetAddress11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test09761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09761");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Compression compression6 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file7);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 32);
        org.springframework.core.io.ResourceLoader resourceLoader16 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader16);
        org.junit.Assert.assertNull(compression6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection13);
    }

    @Test
    public void test09762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09762");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 100);
        undertowEmbeddedServletContainerFactory2.setPort(1800);
        java.lang.String str5 = undertowEmbeddedServletContainerFactory2.getContextPath();
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file6);
        java.net.InetAddress inetAddress8 = null;
        undertowEmbeddedServletContainerFactory2.setAddress(inetAddress8);
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory2.setAccessLogDirectory(file10);
        java.net.InetAddress inetAddress12 = undertowEmbeddedServletContainerFactory2.getAddress();
        undertowEmbeddedServletContainerFactory2.setBufferSize((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory2.setSessionTimeout((int) (byte) 1);
        boolean boolean17 = undertowEmbeddedServletContainerFactory2.isPersistSession();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(inetAddress12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test09763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09763");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file10);
        org.springframework.boot.context.embedded.Ssl ssl12 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl12);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet14 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection15 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        int int16 = undertowEmbeddedServletContainerFactory1.getPort();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(errorPageSet14);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test09764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09764");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) 'a');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray5 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory4.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray5);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray9 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory8.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray9);
        undertowEmbeddedServletContainerFactory4.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray9);
        undertowEmbeddedServletContainerFactory2.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray9);
        java.lang.String str13 = undertowEmbeddedServletContainerFactory2.getContextPath();
        undertowEmbeddedServletContainerFactory2.setDisplayName("");
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file21 = undertowEmbeddedServletContainerFactory20.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory20.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl24 = null;
        undertowEmbeddedServletContainerFactory20.setSsl(ssl24);
        java.lang.String str26 = undertowEmbeddedServletContainerFactory20.getContextPath();
        org.springframework.boot.context.embedded.Ssl ssl27 = null;
        undertowEmbeddedServletContainerFactory20.setSsl(ssl27);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory30.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory30.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader35 = null;
        undertowEmbeddedServletContainerFactory30.setResourceLoader(resourceLoader35);
        org.springframework.boot.context.embedded.Compression compression37 = null;
        undertowEmbeddedServletContainerFactory30.setCompression(compression37);
        undertowEmbeddedServletContainerFactory30.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.Ssl ssl41 = undertowEmbeddedServletContainerFactory30.getSsl();
        java.io.File file42 = undertowEmbeddedServletContainerFactory30.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory46.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray49 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory46.addBuilderCustomizers(undertowBuilderCustomizerArray49);
        undertowEmbeddedServletContainerFactory44.addBuilderCustomizers(undertowBuilderCustomizerArray49);
        undertowEmbeddedServletContainerFactory30.addBuilderCustomizers(undertowBuilderCustomizerArray49);
        undertowEmbeddedServletContainerFactory20.addBuilderCustomizers(undertowBuilderCustomizerArray49);
        undertowEmbeddedServletContainerFactory2.addBuilderCustomizers(undertowBuilderCustomizerArray49);
        boolean boolean55 = undertowEmbeddedServletContainerFactory2.isPersistSession();
        undertowEmbeddedServletContainerFactory2.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings58 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        int int59 = undertowEmbeddedServletContainerFactory2.getSessionTimeout();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray5);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(ssl41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray49);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(mimeMappings58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1800 + "'", int59 == 1800);
    }

    @Test
    public void test09765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09765");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.springframework.boot.context.embedded.Compression compression3 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression3);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        java.net.InetAddress inetAddress9 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray12 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory11.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray12);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory15.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory15.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader20 = null;
        undertowEmbeddedServletContainerFactory15.setResourceLoader(resourceLoader20);
        org.springframework.boot.context.embedded.Compression compression22 = null;
        undertowEmbeddedServletContainerFactory15.setCompression(compression22);
        undertowEmbeddedServletContainerFactory15.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory27.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory27.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl32 = undertowEmbeddedServletContainerFactory27.getSsl();
        boolean boolean33 = undertowEmbeddedServletContainerFactory27.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet34 = null;
        undertowEmbeddedServletContainerFactory27.setJspServlet(jspServlet34);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = undertowEmbeddedServletContainerFactory27.getMimeMappings();
        undertowEmbeddedServletContainerFactory15.setMimeMappings(mimeMappings36);
        undertowEmbeddedServletContainerFactory11.setMimeMappings(mimeMappings36);
        boolean boolean39 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        undertowEmbeddedServletContainerFactory11.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory43.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory43.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl48 = undertowEmbeddedServletContainerFactory43.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer50 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap49);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer52 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap51);
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer54 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap53);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray55 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer50, initParameterConfiguringServletContextInitializer52, initParameterConfiguringServletContextInitializer54 };
        undertowEmbeddedServletContainerFactory43.addInitializers(servletContextInitializerArray55);
        undertowEmbeddedServletContainerFactory43.setJspServletClassName("hi!");
        int int59 = undertowEmbeddedServletContainerFactory43.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet60 = undertowEmbeddedServletContainerFactory43.getErrorPages();
        undertowEmbeddedServletContainerFactory11.setErrorPages(errorPageSet60);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        org.springframework.boot.context.embedded.JspServlet jspServlet64 = undertowEmbeddedServletContainerFactory63.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file67 = null;
        undertowEmbeddedServletContainerFactory66.setAccessLogDirectory(file67);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray69 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory66.addErrorPages(errorPageArray69);
        undertowEmbeddedServletContainerFactory63.addErrorPages(errorPageArray69);
        undertowEmbeddedServletContainerFactory11.addErrorPages(errorPageArray69);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray69);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 97);
        java.io.File file76 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(inetAddress9);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray12);
        org.junit.Assert.assertNull(ssl32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(ssl48);
        org.junit.Assert.assertNotNull(servletContextInitializerArray55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet60);
        org.junit.Assert.assertNotNull(jspServlet64);
        org.junit.Assert.assertNotNull(errorPageArray69);
        org.junit.Assert.assertNull(file76);
    }

    @Test
    public void test09766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09766");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection3 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.lang.String str4 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        java.lang.String str5 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray8 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory7.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray8);
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        undertowEmbeddedServletContainerFactory7.setSsl(ssl10);
        org.springframework.boot.context.embedded.Ssl ssl12 = undertowEmbeddedServletContainerFactory7.getSsl();
        undertowEmbeddedServletContainerFactory7.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory7.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection17 = undertowEmbeddedServletContainerFactory7.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory7.setAccessLogEnabled(true);
        java.net.InetAddress inetAddress20 = undertowEmbeddedServletContainerFactory7.getAddress();
        org.springframework.boot.context.embedded.Compression compression21 = undertowEmbeddedServletContainerFactory7.getCompression();
        boolean boolean22 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory24.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory24.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl29 = undertowEmbeddedServletContainerFactory24.getSsl();
        boolean boolean30 = undertowEmbeddedServletContainerFactory24.isAccessLogEnabled();
        java.io.File file31 = null;
        undertowEmbeddedServletContainerFactory24.setAccessLogDirectory(file31);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray33 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet34 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet34, errorPageArray33);
        undertowEmbeddedServletContainerFactory24.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet34);
        undertowEmbeddedServletContainerFactory24.setAccessLogPattern("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings41 = undertowEmbeddedServletContainerFactory40.getMimeMappings();
        undertowEmbeddedServletContainerFactory24.setMimeMappings(mimeMappings41);
        undertowEmbeddedServletContainerFactory7.setMimeMappings(mimeMappings41);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings41);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 32);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray8);
        org.junit.Assert.assertNull(ssl12);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection17);
        org.junit.Assert.assertNull(inetAddress20);
        org.junit.Assert.assertNull(compression21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(ssl29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(errorPageArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(mimeMappings41);
    }

    @Test
    public void test09767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09767");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet14 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection15 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection13);
        org.junit.Assert.assertNotNull(errorPageSet14);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection15);
    }

    @Test
    public void test09768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09768");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet8 = null;
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet8);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray10 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11, errorPageArray10);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11);
        org.springframework.boot.context.embedded.JspServlet jspServlet14 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        org.springframework.boot.context.embedded.Compression compression15 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.io.File file16 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file16);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/' and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(errorPageArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(jspServlet14);
        org.junit.Assert.assertNull(compression15);
    }

    @Test
    public void test09769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09769");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory10.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory10.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl15 = undertowEmbeddedServletContainerFactory10.getSsl();
        boolean boolean16 = undertowEmbeddedServletContainerFactory10.isAccessLogEnabled();
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory10.setAccessLogDirectory(file17);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray19 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20, errorPageArray19);
        undertowEmbeddedServletContainerFactory10.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory25.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray28 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory25.addBuilderCustomizers(undertowBuilderCustomizerArray28);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray28);
        undertowEmbeddedServletContainerFactory1.setPort(32);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory36.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray41 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory40.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray41);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray45 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory44.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray45);
        undertowEmbeddedServletContainerFactory40.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray45);
        undertowEmbeddedServletContainerFactory36.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray45);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray45);
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        org.springframework.boot.context.embedded.JspServlet jspServlet52 = null;
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet52);
        org.springframework.boot.context.embedded.Ssl ssl54 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl54);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(ssl15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(errorPageArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray28);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray41);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray45);
    }

    @Test
    public void test09770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09770");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory5.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray6);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory9.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        undertowEmbeddedServletContainerFactory5.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.lang.String str14 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str15 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 0);
        undertowEmbeddedServletContainerFactory20.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory24.setPort((int) (byte) -1);
        java.io.File file27 = null;
        undertowEmbeddedServletContainerFactory24.setSessionStoreDir(file27);
        org.springframework.boot.context.embedded.ErrorPage errorPage29 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray30 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage29 };
        undertowEmbeddedServletContainerFactory24.addErrorPages(errorPageArray30);
        org.springframework.core.io.ResourceLoader resourceLoader32 = null;
        undertowEmbeddedServletContainerFactory24.setResourceLoader(resourceLoader32);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory35.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory35.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader40 = null;
        undertowEmbeddedServletContainerFactory35.setResourceLoader(resourceLoader40);
        org.springframework.boot.context.embedded.Compression compression42 = null;
        undertowEmbeddedServletContainerFactory35.setCompression(compression42);
        undertowEmbeddedServletContainerFactory35.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.Ssl ssl46 = undertowEmbeddedServletContainerFactory35.getSsl();
        java.io.File file47 = undertowEmbeddedServletContainerFactory35.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray50 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory49.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray50);
        org.springframework.boot.context.embedded.Ssl ssl52 = null;
        undertowEmbeddedServletContainerFactory49.setSsl(ssl52);
        org.springframework.boot.context.embedded.Ssl ssl54 = undertowEmbeddedServletContainerFactory49.getSsl();
        undertowEmbeddedServletContainerFactory49.setDisplayName("");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings57 = undertowEmbeddedServletContainerFactory49.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer undertowDeploymentInfoCustomizer58 = null;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray59 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] { undertowDeploymentInfoCustomizer58 };
        undertowEmbeddedServletContainerFactory49.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray59);
        undertowEmbeddedServletContainerFactory35.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray59);
        undertowEmbeddedServletContainerFactory24.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray59);
        undertowEmbeddedServletContainerFactory20.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray59);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray59);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings65 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Mappings must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(errorPageArray30);
        org.junit.Assert.assertNull(ssl46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray50);
        org.junit.Assert.assertNull(ssl54);
        org.junit.Assert.assertNotNull(mimeMappings57);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray59);
    }

    @Test
    public void test09771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09771");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection11 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        java.net.InetAddress inetAddress14 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.Compression compression15 = undertowEmbeddedServletContainerFactory1.getCompression();
        boolean boolean16 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory18.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory18.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl23 = undertowEmbeddedServletContainerFactory18.getSsl();
        boolean boolean24 = undertowEmbeddedServletContainerFactory18.isAccessLogEnabled();
        java.io.File file25 = null;
        undertowEmbeddedServletContainerFactory18.setAccessLogDirectory(file25);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray27 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet28 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet28, errorPageArray27);
        undertowEmbeddedServletContainerFactory18.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet28);
        undertowEmbeddedServletContainerFactory18.setAccessLogPattern("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings35 = undertowEmbeddedServletContainerFactory34.getMimeMappings();
        undertowEmbeddedServletContainerFactory18.setMimeMappings(mimeMappings35);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings35);
        boolean boolean38 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.io.File file39 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file39);
        org.springframework.boot.context.embedded.Ssl ssl41 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl41);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection11);
        org.junit.Assert.assertNull(inetAddress14);
        org.junit.Assert.assertNull(compression15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(ssl23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(errorPageArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(mimeMappings35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test09772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09772");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.core.io.ResourceLoader resourceLoader2 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection6 = undertowEmbeddedServletContainerFactory5.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory5.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory5.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory5.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings11);
        int int13 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory15.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray16);
        org.springframework.boot.context.embedded.Ssl ssl18 = null;
        undertowEmbeddedServletContainerFactory15.setSsl(ssl18);
        org.springframework.boot.context.embedded.Ssl ssl20 = undertowEmbeddedServletContainerFactory15.getSsl();
        java.net.InetAddress inetAddress21 = undertowEmbeddedServletContainerFactory15.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory15.addBuilderCustomizers(undertowBuilderCustomizerArray22);
        java.net.InetAddress inetAddress24 = undertowEmbeddedServletContainerFactory15.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) -1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory29.setPort((int) (byte) -1);
        boolean boolean32 = undertowEmbeddedServletContainerFactory29.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory34.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory34.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl39 = null;
        undertowEmbeddedServletContainerFactory34.setSsl(ssl39);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray41 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory34.addErrorPages(errorPageArray41);
        undertowEmbeddedServletContainerFactory29.addErrorPages(errorPageArray41);
        boolean boolean44 = undertowEmbeddedServletContainerFactory29.isRegisterDefaultServlet();
        java.io.File file45 = null;
        undertowEmbeddedServletContainerFactory29.setAccessLogDirectory(file45);
        boolean boolean47 = undertowEmbeddedServletContainerFactory29.isPersistSession();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet48 = undertowEmbeddedServletContainerFactory29.getErrorPages();
        undertowEmbeddedServletContainerFactory29.setRegisterDefaultServlet(false);
        java.io.File file51 = undertowEmbeddedServletContainerFactory29.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory29.setSessionTimeout((int) (byte) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory55.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray58 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory55.addBuilderCustomizers(undertowBuilderCustomizerArray58);
        undertowEmbeddedServletContainerFactory29.addBuilderCustomizers(undertowBuilderCustomizerArray58);
        org.springframework.boot.context.embedded.Ssl ssl61 = undertowEmbeddedServletContainerFactory29.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory63.setPort((int) (byte) -1);
        boolean boolean66 = undertowEmbeddedServletContainerFactory63.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory68.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory68.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl73 = null;
        undertowEmbeddedServletContainerFactory68.setSsl(ssl73);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray75 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory68.addErrorPages(errorPageArray75);
        undertowEmbeddedServletContainerFactory63.addErrorPages(errorPageArray75);
        undertowEmbeddedServletContainerFactory29.addErrorPages(errorPageArray75);
        undertowEmbeddedServletContainerFactory27.addErrorPages(errorPageArray75);
        undertowEmbeddedServletContainerFactory15.addErrorPages(errorPageArray75);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray75);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection6);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray16);
        org.junit.Assert.assertNull(ssl20);
        org.junit.Assert.assertNull(inetAddress21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray22);
        org.junit.Assert.assertNull(inetAddress24);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(errorPageArray41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(errorPageSet48);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray58);
        org.junit.Assert.assertNull(ssl61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(errorPageArray75);
    }

    @Test
    public void test09773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09773");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader9);
        org.springframework.boot.context.embedded.Compression compression11 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.io.File file12 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file12);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        java.io.File file16 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 32);
        java.net.InetAddress inetAddress22 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress22);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 35);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNull(compression11);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(ssl17);
    }

    @Test
    public void test09774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09774");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file10 = undertowEmbeddedServletContainerFactory9.getSessionStoreDir();
        java.lang.String str11 = undertowEmbeddedServletContainerFactory9.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        undertowEmbeddedServletContainerFactory9.setMimeMappings(mimeMappings14);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings14);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        java.io.File file19 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file19);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 10);
        java.lang.String str23 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray28 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory27.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray28);
        java.io.File file30 = null;
        undertowEmbeddedServletContainerFactory27.setSessionStoreDir(file30);
        undertowEmbeddedServletContainerFactory27.setPort(0);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray34 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        undertowEmbeddedServletContainerFactory27.addInitializers(servletContextInitializerArray34);
        org.springframework.core.io.ResourceLoader resourceLoader36 = null;
        undertowEmbeddedServletContainerFactory27.setResourceLoader(resourceLoader36);
        undertowEmbeddedServletContainerFactory27.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory27.setPort((int) (byte) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file44 = undertowEmbeddedServletContainerFactory43.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory43.setPersistSession(false);
        java.lang.String str47 = undertowEmbeddedServletContainerFactory43.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory49.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory49.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl54 = undertowEmbeddedServletContainerFactory49.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer56 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap55);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer58 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap57);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer60 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap59);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray61 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer56, initParameterConfiguringServletContextInitializer58, initParameterConfiguringServletContextInitializer60 };
        undertowEmbeddedServletContainerFactory49.addInitializers(servletContextInitializerArray61);
        undertowEmbeddedServletContainerFactory49.setJspServletClassName("hi!");
        int int65 = undertowEmbeddedServletContainerFactory49.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet66 = undertowEmbeddedServletContainerFactory49.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory68.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray73 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory72.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray73);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray77 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory76.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray77);
        undertowEmbeddedServletContainerFactory72.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray77);
        undertowEmbeddedServletContainerFactory68.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray77);
        java.lang.String str81 = undertowEmbeddedServletContainerFactory68.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory83 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory83.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory83.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray88 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer89 = undertowEmbeddedServletContainerFactory83.getEmbeddedServletContainer(servletContextInitializerArray88);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer90 = undertowEmbeddedServletContainerFactory68.getEmbeddedServletContainer(servletContextInitializerArray88);
        undertowEmbeddedServletContainerFactory49.addInitializers(servletContextInitializerArray88);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer92 = undertowEmbeddedServletContainerFactory43.getEmbeddedServletContainer(servletContextInitializerArray88);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer93 = undertowEmbeddedServletContainerFactory27.getEmbeddedServletContainer(servletContextInitializerArray88);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer94 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray88);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray28);
        org.junit.Assert.assertNotNull(servletContextInitializerArray34);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(ssl54);
        org.junit.Assert.assertNotNull(servletContextInitializerArray61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet66);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray73);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray77);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(servletContextInitializerArray88);
        org.junit.Assert.assertNotNull(embeddedServletContainer89);
        org.junit.Assert.assertNotNull(embeddedServletContainer90);
        org.junit.Assert.assertNotNull(embeddedServletContainer92);
        org.junit.Assert.assertNotNull(embeddedServletContainer93);
        org.junit.Assert.assertNotNull(embeddedServletContainer94);
    }

    @Test
    public void test09775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09775");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file4);
        undertowEmbeddedServletContainerFactory1.setPort(0);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray8 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray8);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        int int13 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = undertowEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.boot.context.embedded.JspServlet jspServlet21 = undertowEmbeddedServletContainerFactory19.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet21);
        boolean boolean23 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray8);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(jspServlet21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test09776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09776");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) '#');
        java.io.File file3 = undertowEmbeddedServletContainerFactory2.getDocumentRoot();
        boolean boolean4 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file7 = undertowEmbeddedServletContainerFactory6.getSessionStoreDir();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory6.getContextPath();
        java.net.InetAddress inetAddress9 = undertowEmbeddedServletContainerFactory6.getAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = undertowEmbeddedServletContainerFactory6.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory12.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray13);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory16.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray17);
        undertowEmbeddedServletContainerFactory12.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray17);
        undertowEmbeddedServletContainerFactory6.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray17);
        undertowEmbeddedServletContainerFactory2.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray17);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 0);
        java.lang.String str25 = undertowEmbeddedServletContainerFactory24.getDisplayName();
        undertowEmbeddedServletContainerFactory24.setBufferSize((java.lang.Integer) 32);
        boolean boolean28 = undertowEmbeddedServletContainerFactory24.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet29 = undertowEmbeddedServletContainerFactory24.getJspServlet();
        undertowEmbeddedServletContainerFactory2.setJspServlet(jspServlet29);
        boolean boolean31 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(inetAddress9);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray13);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray17);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(jspServlet29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test09777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09777");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) 'a');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray5 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory4.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray5);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray9 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory8.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray9);
        undertowEmbeddedServletContainerFactory4.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray9);
        undertowEmbeddedServletContainerFactory2.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory14.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory14.setPersistSession(false);
        boolean boolean19 = undertowEmbeddedServletContainerFactory14.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory21.setPort((int) (byte) -1);
        boolean boolean24 = undertowEmbeddedServletContainerFactory21.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory26.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory26.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl31 = null;
        undertowEmbeddedServletContainerFactory26.setSsl(ssl31);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray33 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory26.addErrorPages(errorPageArray33);
        undertowEmbeddedServletContainerFactory21.addErrorPages(errorPageArray33);
        undertowEmbeddedServletContainerFactory14.addErrorPages(errorPageArray33);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer37 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray38 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer37 };
        undertowEmbeddedServletContainerFactory14.addBuilderCustomizers(undertowBuilderCustomizerArray38);
        org.springframework.boot.context.embedded.Compression compression40 = undertowEmbeddedServletContainerFactory14.getCompression();
        org.springframework.boot.context.embedded.JspServlet jspServlet41 = undertowEmbeddedServletContainerFactory14.getJspServlet();
        undertowEmbeddedServletContainerFactory2.setJspServlet(jspServlet41);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray45 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory44.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray45);
        org.springframework.boot.context.embedded.Ssl ssl47 = null;
        undertowEmbeddedServletContainerFactory44.setSsl(ssl47);
        undertowEmbeddedServletContainerFactory44.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file53 = null;
        undertowEmbeddedServletContainerFactory52.setAccessLogDirectory(file53);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray55 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory52.addErrorPages(errorPageArray55);
        org.springframework.boot.context.embedded.Compression compression57 = undertowEmbeddedServletContainerFactory52.getCompression();
        org.springframework.boot.context.embedded.JspServlet jspServlet58 = undertowEmbeddedServletContainerFactory52.getJspServlet();
        undertowEmbeddedServletContainerFactory44.setJspServlet(jspServlet58);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection60 = undertowEmbeddedServletContainerFactory44.getBuilderCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings61 = undertowEmbeddedServletContainerFactory44.getMimeMappings();
        undertowEmbeddedServletContainerFactory2.setMimeMappings(mimeMappings61);
        undertowEmbeddedServletContainerFactory2.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl65 = null;
        undertowEmbeddedServletContainerFactory2.setSsl(ssl65);
        java.net.InetAddress inetAddress67 = undertowEmbeddedServletContainerFactory2.getAddress();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray5);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray9);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(errorPageArray33);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray38);
        org.junit.Assert.assertNull(compression40);
        org.junit.Assert.assertNotNull(jspServlet41);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray45);
        org.junit.Assert.assertNotNull(errorPageArray55);
        org.junit.Assert.assertNull(compression57);
        org.junit.Assert.assertNotNull(jspServlet58);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection60);
        org.junit.Assert.assertNotNull(mimeMappings61);
        org.junit.Assert.assertNull(inetAddress67);
    }

    @Test
    public void test09778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09778");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        java.lang.String str11 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        int int12 = undertowEmbeddedServletContainerFactory1.getPort();
        java.lang.String str13 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test09779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09779");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file2 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.Ssl ssl7 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file8);
        int int10 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(ssl7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
    }

    @Test
    public void test09780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09780");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 35);
    }

    @Test
    public void test09781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09781");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        boolean boolean8 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory10.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray11);
        org.springframework.boot.context.embedded.Ssl ssl13 = null;
        undertowEmbeddedServletContainerFactory10.setSsl(ssl13);
        undertowEmbeddedServletContainerFactory10.setAccessLogPattern("hi!");
        undertowEmbeddedServletContainerFactory10.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory10.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory10.setIoThreads((java.lang.Integer) 32);
        undertowEmbeddedServletContainerFactory10.setContextPath("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file27 = undertowEmbeddedServletContainerFactory26.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory26.setPersistSession(false);
        undertowEmbeddedServletContainerFactory26.setJspServletClassName("");
        java.io.File file32 = undertowEmbeddedServletContainerFactory26.getSessionStoreDir();
        java.lang.String str33 = undertowEmbeddedServletContainerFactory26.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory37.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray40 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory37.addBuilderCustomizers(undertowBuilderCustomizerArray40);
        undertowEmbeddedServletContainerFactory35.addBuilderCustomizers(undertowBuilderCustomizerArray40);
        undertowEmbeddedServletContainerFactory26.addBuilderCustomizers(undertowBuilderCustomizerArray40);
        undertowEmbeddedServletContainerFactory10.addBuilderCustomizers(undertowBuilderCustomizerArray40);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray40);
        int int46 = undertowEmbeddedServletContainerFactory1.getPort();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.io.File file49 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file49);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray11);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray40);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
    }

    @Test
    public void test09782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09782");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 100);
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory2.setSessionTimeout(10);
        boolean boolean7 = undertowEmbeddedServletContainerFactory2.isPersistSession();
        boolean boolean8 = undertowEmbeddedServletContainerFactory2.isPersistSession();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test09783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09783");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer8 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap7);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer10 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer12 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap11);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer8, initParameterConfiguringServletContextInitializer10, initParameterConfiguringServletContextInitializer12 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray13);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str17 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1);
        java.net.InetAddress inetAddress24 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress24);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertNull(ssl19);
    }

    @Test
    public void test09784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09784");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        int int9 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
    }

    @Test
    public void test09785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09785");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.io.File file2 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file2);
        java.net.InetAddress inetAddress4 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory6.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13, initParameterConfiguringServletContextInitializer15, initParameterConfiguringServletContextInitializer17 };
        undertowEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory6.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str22 = undertowEmbeddedServletContainerFactory6.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory24.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory24.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl29 = undertowEmbeddedServletContainerFactory24.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer31 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap30);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer33 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap32);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer35 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap34);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray36 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer31, initParameterConfiguringServletContextInitializer33, initParameterConfiguringServletContextInitializer35 };
        undertowEmbeddedServletContainerFactory24.addInitializers(servletContextInitializerArray36);
        undertowEmbeddedServletContainerFactory24.setJspServletClassName("hi!");
        int int40 = undertowEmbeddedServletContainerFactory24.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet41 = undertowEmbeddedServletContainerFactory24.getErrorPages();
        undertowEmbeddedServletContainerFactory6.setErrorPages(errorPageSet41);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray45 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory44.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray45);
        org.springframework.boot.context.embedded.Ssl ssl47 = null;
        undertowEmbeddedServletContainerFactory44.setSsl(ssl47);
        undertowEmbeddedServletContainerFactory44.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet51 = undertowEmbeddedServletContainerFactory44.getErrorPages();
        undertowEmbeddedServletContainerFactory44.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory44.setIoThreads((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file58 = null;
        undertowEmbeddedServletContainerFactory57.setAccessLogDirectory(file58);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray60 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory57.addErrorPages(errorPageArray60);
        undertowEmbeddedServletContainerFactory44.addErrorPages(errorPageArray60);
        undertowEmbeddedServletContainerFactory6.addErrorPages(errorPageArray60);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray60);
        int int65 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.io.File file68 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file68);
        int int70 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.junit.Assert.assertNull(inetAddress4);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(ssl29);
        org.junit.Assert.assertNotNull(servletContextInitializerArray36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet41);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray45);
        org.junit.Assert.assertNotNull(errorPageSet51);
        org.junit.Assert.assertNotNull(errorPageArray60);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1800 + "'", int65 == 1800);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1800 + "'", int70 == 1800);
    }

    @Test
    public void test09786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09786");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        boolean boolean4 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory6.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl11 = null;
        undertowEmbeddedServletContainerFactory6.setSsl(ssl11);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray13 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory6.addErrorPages(errorPageArray13);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray13);
        boolean boolean16 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file17);
        boolean boolean19 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 10);
        undertowEmbeddedServletContainerFactory1.setPersistSession(true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(errorPageArray13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(errorPageSet20);
    }

    @Test
    public void test09787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09787");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        java.net.InetAddress inetAddress10 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress10);
        int int12 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file15);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.Compression compression19 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.util.concurrent.TimeUnit timeUnit21 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 100, timeUnit21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertNull(compression19);
    }

    @Test
    public void test09788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09788");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection11 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        java.net.InetAddress inetAddress14 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        java.lang.String str17 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.Ssl ssl18 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.io.File file19 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file19);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 52);
        java.lang.String str23 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection11);
        org.junit.Assert.assertNull(inetAddress14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNull(ssl18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test09789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09789");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl6 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl6);
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file8);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.net.InetAddress inetAddress11 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress11);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file17 = undertowEmbeddedServletContainerFactory16.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory16.setPersistSession(false);
        undertowEmbeddedServletContainerFactory16.setJspServletClassName("");
        boolean boolean22 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        org.springframework.core.io.ResourceLoader resourceLoader23 = null;
        undertowEmbeddedServletContainerFactory16.setResourceLoader(resourceLoader23);
        org.springframework.core.io.ResourceLoader resourceLoader25 = null;
        undertowEmbeddedServletContainerFactory16.setResourceLoader(resourceLoader25);
        java.net.InetAddress inetAddress27 = null;
        undertowEmbeddedServletContainerFactory16.setAddress(inetAddress27);
        undertowEmbeddedServletContainerFactory16.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory16.setSessionTimeout((int) (byte) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file35 = null;
        undertowEmbeddedServletContainerFactory34.setDocumentRoot(file35);
        org.springframework.boot.context.embedded.Ssl ssl37 = null;
        undertowEmbeddedServletContainerFactory34.setSsl(ssl37);
        boolean boolean39 = undertowEmbeddedServletContainerFactory34.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.Ssl ssl40 = undertowEmbeddedServletContainerFactory34.getSsl();
        org.springframework.boot.context.embedded.JspServlet jspServlet41 = undertowEmbeddedServletContainerFactory34.getJspServlet();
        undertowEmbeddedServletContainerFactory16.setJspServlet(jspServlet41);
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet41);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(ssl40);
        org.junit.Assert.assertNotNull(jspServlet41);
    }

    @Test
    public void test09790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09790");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.lang.String str3 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.net.InetAddress inetAddress4 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory6.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader11 = null;
        undertowEmbeddedServletContainerFactory6.setResourceLoader(resourceLoader11);
        java.net.InetAddress inetAddress13 = null;
        undertowEmbeddedServletContainerFactory6.setAddress(inetAddress13);
        undertowEmbeddedServletContainerFactory6.setSessionTimeout((int) 'a');
        org.springframework.boot.context.embedded.JspServlet jspServlet17 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory19.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory23.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory23.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl28 = undertowEmbeddedServletContainerFactory23.getSsl();
        boolean boolean29 = undertowEmbeddedServletContainerFactory23.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet30 = null;
        undertowEmbeddedServletContainerFactory23.setJspServlet(jspServlet30);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray32 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet33 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet33, errorPageArray32);
        undertowEmbeddedServletContainerFactory23.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet33);
        undertowEmbeddedServletContainerFactory19.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet33);
        undertowEmbeddedServletContainerFactory6.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet33);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet33);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(inetAddress4);
        org.junit.Assert.assertNotNull(jspServlet17);
        org.junit.Assert.assertNull(ssl28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(errorPageArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test09791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09791");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file2 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        int int6 = undertowEmbeddedServletContainerFactory1.getPort();
        java.net.InetAddress inetAddress7 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1800);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 97 + "'", int6 == 97);
        org.junit.Assert.assertNull(inetAddress7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test09792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09792");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file4);
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file6);
        boolean boolean8 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet9 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        boolean boolean10 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        java.net.InetAddress inetAddress11 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(errorPageSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(inetAddress11);
    }

    @Test
    public void test09793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09793");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file13 = null;
        undertowEmbeddedServletContainerFactory12.setAccessLogDirectory(file13);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray15 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory12.addErrorPages(errorPageArray15);
        org.springframework.boot.context.embedded.Compression compression17 = undertowEmbeddedServletContainerFactory12.getCompression();
        org.springframework.boot.context.embedded.JspServlet jspServlet18 = undertowEmbeddedServletContainerFactory12.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file21 = null;
        undertowEmbeddedServletContainerFactory20.setAccessLogDirectory(file21);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray23 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory20.addErrorPages(errorPageArray23);
        undertowEmbeddedServletContainerFactory12.addErrorPages(errorPageArray23);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray23);
        org.springframework.boot.context.embedded.Compression compression27 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression27);
        org.springframework.boot.context.embedded.Ssl ssl29 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl29);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection31 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(errorPageArray15);
        org.junit.Assert.assertNull(compression17);
        org.junit.Assert.assertNotNull(jspServlet18);
        org.junit.Assert.assertNotNull(errorPageArray23);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection31);
    }

    @Test
    public void test09794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09794");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet9 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        boolean boolean10 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertNotNull(errorPageSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test09795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09795");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 10);
        undertowEmbeddedServletContainerFactory2.setPort((int) (short) 0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet5 = undertowEmbeddedServletContainerFactory2.getErrorPages();
        org.junit.Assert.assertNotNull(errorPageSet5);
    }

    @Test
    public void test09796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09796");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file4);
        undertowEmbeddedServletContainerFactory1.setPort(0);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray8 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file13 = undertowEmbeddedServletContainerFactory12.getSessionStoreDir();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isAccessLogEnabled();
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory12.setAccessLogDirectory(file15);
        undertowEmbeddedServletContainerFactory12.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory20.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray21);
        org.springframework.boot.context.embedded.Ssl ssl23 = null;
        undertowEmbeddedServletContainerFactory20.setSsl(ssl23);
        org.springframework.boot.context.embedded.Ssl ssl25 = undertowEmbeddedServletContainerFactory20.getSsl();
        undertowEmbeddedServletContainerFactory20.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory20.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection30 = undertowEmbeddedServletContainerFactory20.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory20.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory34.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray39 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory38.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray39);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray43 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory42.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray43);
        undertowEmbeddedServletContainerFactory38.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray43);
        undertowEmbeddedServletContainerFactory34.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray43);
        java.lang.String str47 = undertowEmbeddedServletContainerFactory34.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory49.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory49.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray54 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer55 = undertowEmbeddedServletContainerFactory49.getEmbeddedServletContainer(servletContextInitializerArray54);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer56 = undertowEmbeddedServletContainerFactory34.getEmbeddedServletContainer(servletContextInitializerArray54);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer57 = undertowEmbeddedServletContainerFactory20.getEmbeddedServletContainer(servletContextInitializerArray54);
        undertowEmbeddedServletContainerFactory12.addInitializers(servletContextInitializerArray54);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray54);
        java.io.File file60 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.springframework.boot.context.embedded.Compression compression61 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression61);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.core.io.ResourceLoader resourceLoader65 = null;
        undertowEmbeddedServletContainerFactory64.setResourceLoader(resourceLoader65);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection69 = undertowEmbeddedServletContainerFactory68.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory68.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory68.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings74 = undertowEmbeddedServletContainerFactory68.getMimeMappings();
        undertowEmbeddedServletContainerFactory64.setMimeMappings(mimeMappings74);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings74);
        java.io.File file77 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file77);
        java.io.File file79 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file79);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray8);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray21);
        org.junit.Assert.assertNull(ssl25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection30);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray39);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray43);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(servletContextInitializerArray54);
        org.junit.Assert.assertNotNull(embeddedServletContainer55);
        org.junit.Assert.assertNotNull(embeddedServletContainer56);
        org.junit.Assert.assertNotNull(embeddedServletContainer57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection69);
        org.junit.Assert.assertNotNull(mimeMappings74);
    }

    @Test
    public void test09797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09797");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression8);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.Ssl ssl12 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.io.File file13 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory17.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray20 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory17.addBuilderCustomizers(undertowBuilderCustomizerArray20);
        undertowEmbeddedServletContainerFactory15.addBuilderCustomizers(undertowBuilderCustomizerArray20);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray20);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file26 = null;
        undertowEmbeddedServletContainerFactory25.setAccessLogDirectory(file26);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray28 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory25.addErrorPages(errorPageArray28);
        org.springframework.boot.context.embedded.Compression compression30 = undertowEmbeddedServletContainerFactory25.getCompression();
        java.lang.String str31 = undertowEmbeddedServletContainerFactory25.getContextPath();
        org.springframework.boot.context.embedded.JspServlet jspServlet32 = undertowEmbeddedServletContainerFactory25.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet32);
        org.springframework.boot.context.embedded.Ssl ssl34 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.io.File file35 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file35);
        org.junit.Assert.assertNull(ssl12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray20);
        org.junit.Assert.assertNotNull(errorPageArray28);
        org.junit.Assert.assertNull(compression30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(jspServlet32);
        org.junit.Assert.assertNull(ssl34);
    }

    @Test
    public void test09798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09798");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory6.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13, initParameterConfiguringServletContextInitializer15, initParameterConfiguringServletContextInitializer17 };
        undertowEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray18);
        java.io.File file21 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file21);
        int int23 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        undertowEmbeddedServletContainerFactory1.setPort(0);
        boolean boolean28 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet29 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection30 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1800 + "'", int23 == 1800);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(errorPageSet29);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection30);
    }

    @Test
    public void test09799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09799");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 0);
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray9 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory6.addBuilderCustomizers(undertowBuilderCustomizerArray9);
        undertowEmbeddedServletContainerFactory2.addBuilderCustomizers(undertowBuilderCustomizerArray9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory13.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory17.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory21.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray22);
        undertowEmbeddedServletContainerFactory17.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray22);
        undertowEmbeddedServletContainerFactory13.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray22);
        undertowEmbeddedServletContainerFactory2.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray22);
        org.springframework.boot.context.embedded.Compression compression27 = null;
        undertowEmbeddedServletContainerFactory2.setCompression(compression27);
        org.springframework.boot.context.embedded.JspServlet jspServlet29 = undertowEmbeddedServletContainerFactory2.getJspServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection30 = undertowEmbeddedServletContainerFactory2.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.Ssl ssl31 = undertowEmbeddedServletContainerFactory2.getSsl();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray9);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray22);
        org.junit.Assert.assertNotNull(jspServlet29);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection30);
        org.junit.Assert.assertNull(ssl31);
    }

    @Test
    public void test09800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09800");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader3);
        java.lang.String str5 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray8 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory7.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray8);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory11.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory11.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader16 = null;
        undertowEmbeddedServletContainerFactory11.setResourceLoader(resourceLoader16);
        org.springframework.boot.context.embedded.Compression compression18 = null;
        undertowEmbeddedServletContainerFactory11.setCompression(compression18);
        undertowEmbeddedServletContainerFactory11.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory23.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory23.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl28 = undertowEmbeddedServletContainerFactory23.getSsl();
        boolean boolean29 = undertowEmbeddedServletContainerFactory23.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet30 = null;
        undertowEmbeddedServletContainerFactory23.setJspServlet(jspServlet30);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = undertowEmbeddedServletContainerFactory23.getMimeMappings();
        undertowEmbeddedServletContainerFactory11.setMimeMappings(mimeMappings32);
        undertowEmbeddedServletContainerFactory7.setMimeMappings(mimeMappings32);
        boolean boolean35 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        undertowEmbeddedServletContainerFactory7.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory7.setSessionTimeout((int) ' ');
        java.io.File file40 = null;
        undertowEmbeddedServletContainerFactory7.setDocumentRoot(file40);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = undertowEmbeddedServletContainerFactory7.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings42);
        java.io.File file44 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray8);
        org.junit.Assert.assertNull(ssl28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertNull(file44);
    }

    @Test
    public void test09801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09801");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression8);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.Ssl ssl12 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.io.File file13 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory15.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray16);
        org.springframework.boot.context.embedded.Ssl ssl18 = null;
        undertowEmbeddedServletContainerFactory15.setSsl(ssl18);
        undertowEmbeddedServletContainerFactory15.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = undertowEmbeddedServletContainerFactory15.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet22);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 97);
        int int26 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.junit.Assert.assertNull(ssl12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray16);
        org.junit.Assert.assertNotNull(errorPageSet22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1800 + "'", int26 == 1800);
    }

    @Test
    public void test09802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09802");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) '#');
        java.io.File file3 = undertowEmbeddedServletContainerFactory2.getDocumentRoot();
        boolean boolean4 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory2.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory2.setSessionTimeout((int) (byte) 1);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test09803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09803");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection4 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.Compression compression7 = undertowEmbeddedServletContainerFactory1.getCompression();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection4);
        org.junit.Assert.assertNull(compression7);
    }

    @Test
    public void test09804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09804");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 97);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory7.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory7.setPersistSession(false);
        boolean boolean12 = undertowEmbeddedServletContainerFactory7.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory14.setPort((int) (byte) -1);
        boolean boolean17 = undertowEmbeddedServletContainerFactory14.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory19.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory19.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl24 = null;
        undertowEmbeddedServletContainerFactory19.setSsl(ssl24);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray26 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory19.addErrorPages(errorPageArray26);
        undertowEmbeddedServletContainerFactory14.addErrorPages(errorPageArray26);
        undertowEmbeddedServletContainerFactory7.addErrorPages(errorPageArray26);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray26);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        java.net.InetAddress inetAddress33 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress33);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(errorPageArray26);
    }

    @Test
    public void test09805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09805");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 97);
        java.io.File file3 = undertowEmbeddedServletContainerFactory2.getDocumentRoot();
        boolean boolean4 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory2.isAccessLogEnabled();
        org.springframework.boot.context.embedded.Compression compression6 = undertowEmbeddedServletContainerFactory2.getCompression();
        undertowEmbeddedServletContainerFactory2.setSessionTimeout((int) (short) 100);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(compression6);
    }

    @Test
    public void test09806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09806");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory12.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory12.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        undertowEmbeddedServletContainerFactory10.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(ssl19);
    }

    @Test
    public void test09807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09807");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        boolean boolean3 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 0);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.Compression compression8 = undertowEmbeddedServletContainerFactory1.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory10.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory10.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl15 = undertowEmbeddedServletContainerFactory10.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer19 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap18);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer21 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap20);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray22 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer17, initParameterConfiguringServletContextInitializer19, initParameterConfiguringServletContextInitializer21 };
        undertowEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray22);
        undertowEmbeddedServletContainerFactory10.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory10.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory10.setJspServletClassName("hi!");
        int int30 = undertowEmbeddedServletContainerFactory10.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet31 = undertowEmbeddedServletContainerFactory10.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet31);
        org.springframework.boot.context.embedded.Ssl ssl33 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl33);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(compression8);
        org.junit.Assert.assertNull(ssl15);
        org.junit.Assert.assertNotNull(servletContextInitializerArray22);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet31);
    }

    @Test
    public void test09808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09808");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) ' ');
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection6 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection6);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNotNull(errorPageSet8);
    }

    @Test
    public void test09809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09809");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory12.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory12.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory12.getSsl();
        boolean boolean18 = undertowEmbeddedServletContainerFactory12.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = null;
        undertowEmbeddedServletContainerFactory12.setJspServlet(jspServlet19);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings21);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection23 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory27.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory27.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl32 = null;
        undertowEmbeddedServletContainerFactory27.setSsl(ssl32);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray34 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory27.addErrorPages(errorPageArray34);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray34);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        boolean boolean39 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        int int40 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.Compression compression41 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression41);
        java.io.File file43 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file43);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection23);
        org.junit.Assert.assertNotNull(errorPageArray34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 32 + "'", int40 == 32);
    }

    @Test
    public void test09810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09810");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer8 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap7);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer10 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer12 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap11);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer8, initParameterConfiguringServletContextInitializer10, initParameterConfiguringServletContextInitializer12 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray13);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str17 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 97);
        java.io.File file22 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file22);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) 'a');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray29 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory28.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray29);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray33 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory32.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray33);
        undertowEmbeddedServletContainerFactory28.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray33);
        undertowEmbeddedServletContainerFactory26.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray33);
        java.lang.String str37 = undertowEmbeddedServletContainerFactory26.getContextPath();
        undertowEmbeddedServletContainerFactory26.setDisplayName("");
        undertowEmbeddedServletContainerFactory26.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = undertowEmbeddedServletContainerFactory26.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings42);
        java.lang.String str44 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        int int47 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray29);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1800 + "'", int47 == 1800);
    }

    @Test
    public void test09811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09811");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 10);
        undertowEmbeddedServletContainerFactory2.setPort((int) (short) 0);
        boolean boolean5 = undertowEmbeddedServletContainerFactory2.isPersistSession();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory2.getContextPath();
        int int7 = undertowEmbeddedServletContainerFactory2.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file10 = undertowEmbeddedServletContainerFactory9.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory9.setPersistSession(false);
        undertowEmbeddedServletContainerFactory9.setJspServletClassName("");
        boolean boolean15 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        boolean boolean16 = undertowEmbeddedServletContainerFactory9.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray19 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory18.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray19);
        org.springframework.boot.context.embedded.Ssl ssl21 = null;
        undertowEmbeddedServletContainerFactory18.setSsl(ssl21);
        undertowEmbeddedServletContainerFactory18.setAccessLogPattern("hi!");
        undertowEmbeddedServletContainerFactory18.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory18.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory18.setIoThreads((java.lang.Integer) 32);
        undertowEmbeddedServletContainerFactory18.setContextPath("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file35 = undertowEmbeddedServletContainerFactory34.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory34.setPersistSession(false);
        undertowEmbeddedServletContainerFactory34.setJspServletClassName("");
        java.io.File file40 = undertowEmbeddedServletContainerFactory34.getSessionStoreDir();
        java.lang.String str41 = undertowEmbeddedServletContainerFactory34.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory45.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray48 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory45.addBuilderCustomizers(undertowBuilderCustomizerArray48);
        undertowEmbeddedServletContainerFactory43.addBuilderCustomizers(undertowBuilderCustomizerArray48);
        undertowEmbeddedServletContainerFactory34.addBuilderCustomizers(undertowBuilderCustomizerArray48);
        undertowEmbeddedServletContainerFactory18.addBuilderCustomizers(undertowBuilderCustomizerArray48);
        undertowEmbeddedServletContainerFactory9.addBuilderCustomizers(undertowBuilderCustomizerArray48);
        undertowEmbeddedServletContainerFactory2.addBuilderCustomizers(undertowBuilderCustomizerArray48);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray19);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray48);
    }

    @Test
    public void test09812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09812");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray6 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer7 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray6);
        org.springframework.boot.context.embedded.Ssl ssl8 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl8);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection12 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        java.io.File file15 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.junit.Assert.assertNotNull(servletContextInitializerArray6);
        org.junit.Assert.assertNotNull(embeddedServletContainer7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection12);
        org.junit.Assert.assertNull(file15);
    }

    @Test
    public void test09813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09813");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl6 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl6);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file10 = undertowEmbeddedServletContainerFactory9.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory9.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory14.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory14.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory14.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer21 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap20);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer23 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap22);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer25 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap24);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer21, initParameterConfiguringServletContextInitializer23, initParameterConfiguringServletContextInitializer25 };
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray26);
        undertowEmbeddedServletContainerFactory9.addInitializers(servletContextInitializerArray26);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray26);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory31.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory31.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl36 = undertowEmbeddedServletContainerFactory31.getSsl();
        boolean boolean37 = undertowEmbeddedServletContainerFactory31.isAccessLogEnabled();
        java.io.File file38 = null;
        undertowEmbeddedServletContainerFactory31.setAccessLogDirectory(file38);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray40 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet41 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet41, errorPageArray40);
        undertowEmbeddedServletContainerFactory31.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet41);
        undertowEmbeddedServletContainerFactory31.setAccessLogPattern("");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings46 = undertowEmbeddedServletContainerFactory31.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings46);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings48 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.io.File file49 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file49);
        java.lang.String str51 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet54 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.io.File file55 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertNotNull(servletContextInitializerArray26);
        org.junit.Assert.assertNull(ssl36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(errorPageArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(mimeMappings46);
        org.junit.Assert.assertNotNull(mimeMappings48);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(errorPageSet54);
        org.junit.Assert.assertNull(file55);
    }

    @Test
    public void test09814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09814");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory12.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory12.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory12.getSsl();
        boolean boolean18 = undertowEmbeddedServletContainerFactory12.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = null;
        undertowEmbeddedServletContainerFactory12.setJspServlet(jspServlet19);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings21);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        org.springframework.core.io.ResourceLoader resourceLoader25 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader25);
        int int27 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray33 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory32.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray33);
        java.io.File file35 = null;
        undertowEmbeddedServletContainerFactory32.setSessionStoreDir(file35);
        undertowEmbeddedServletContainerFactory32.setPort(0);
        int int39 = undertowEmbeddedServletContainerFactory32.getSessionTimeout();
        int int40 = undertowEmbeddedServletContainerFactory32.getPort();
        boolean boolean41 = undertowEmbeddedServletContainerFactory32.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory43.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory43.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl48 = undertowEmbeddedServletContainerFactory43.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer50 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap49);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer52 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap51);
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer54 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap53);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray55 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer50, initParameterConfiguringServletContextInitializer52, initParameterConfiguringServletContextInitializer54 };
        undertowEmbeddedServletContainerFactory43.addInitializers(servletContextInitializerArray55);
        undertowEmbeddedServletContainerFactory43.setJspServletClassName("hi!");
        int int59 = undertowEmbeddedServletContainerFactory43.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet60 = undertowEmbeddedServletContainerFactory43.getErrorPages();
        org.springframework.boot.context.embedded.JspServlet jspServlet61 = undertowEmbeddedServletContainerFactory43.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray62 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory43.addBuilderCustomizers(undertowBuilderCustomizerArray62);
        undertowEmbeddedServletContainerFactory32.addBuilderCustomizers(undertowBuilderCustomizerArray62);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray62);
        java.lang.String str66 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.Class<?> wildcardClass67 = undertowEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 32 + "'", int27 == 32);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray33);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1800 + "'", int39 == 1800);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(ssl48);
        org.junit.Assert.assertNotNull(servletContextInitializerArray55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet60);
        org.junit.Assert.assertNotNull(jspServlet61);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test09815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09815");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 100);
        undertowEmbeddedServletContainerFactory2.setPort(1800);
        undertowEmbeddedServletContainerFactory2.setIoThreads((java.lang.Integer) 97);
        undertowEmbeddedServletContainerFactory2.setPort((int) (byte) 100);
        java.lang.String str9 = undertowEmbeddedServletContainerFactory2.getDisplayName();
        undertowEmbeddedServletContainerFactory2.setBufferSize((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.Compression compression12 = null;
        undertowEmbeddedServletContainerFactory2.setCompression(compression12);
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test09816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09816");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory6.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13, initParameterConfiguringServletContextInitializer15, initParameterConfiguringServletContextInitializer17 };
        undertowEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray18);
        boolean boolean21 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        boolean boolean22 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress23 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        int int25 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.springframework.boot.context.embedded.JspServlet jspServlet26 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(inetAddress23);
        org.junit.Assert.assertNotNull(errorPageSet24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1800 + "'", int25 == 1800);
        org.junit.Assert.assertNotNull(jspServlet26);
    }

    @Test
    public void test09817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09817");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory5.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory5.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory5.setResourceLoader(resourceLoader10);
        org.springframework.boot.context.embedded.Compression compression12 = null;
        undertowEmbeddedServletContainerFactory5.setCompression(compression12);
        undertowEmbeddedServletContainerFactory5.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory17.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory17.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl22 = undertowEmbeddedServletContainerFactory17.getSsl();
        boolean boolean23 = undertowEmbeddedServletContainerFactory17.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet24 = null;
        undertowEmbeddedServletContainerFactory17.setJspServlet(jspServlet24);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        undertowEmbeddedServletContainerFactory5.setMimeMappings(mimeMappings26);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings26);
        boolean boolean29 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray34 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory33.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray34);
        java.io.File file36 = null;
        undertowEmbeddedServletContainerFactory33.setSessionStoreDir(file36);
        undertowEmbeddedServletContainerFactory33.setPort(0);
        int int40 = undertowEmbeddedServletContainerFactory33.getSessionTimeout();
        int int41 = undertowEmbeddedServletContainerFactory33.getPort();
        undertowEmbeddedServletContainerFactory33.setAccessLogEnabled(true);
        undertowEmbeddedServletContainerFactory33.setBuffersPerRegion((java.lang.Integer) 97);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory47.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory47.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl52 = undertowEmbeddedServletContainerFactory47.getSsl();
        boolean boolean53 = undertowEmbeddedServletContainerFactory47.isAccessLogEnabled();
        java.io.File file54 = null;
        undertowEmbeddedServletContainerFactory47.setAccessLogDirectory(file54);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray56 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet57 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet57, errorPageArray56);
        undertowEmbeddedServletContainerFactory47.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet57);
        undertowEmbeddedServletContainerFactory47.setSessionTimeout((int) (byte) -1);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection62 = undertowEmbeddedServletContainerFactory47.getBuilderCustomizers();
        org.springframework.boot.context.embedded.JspServlet jspServlet63 = undertowEmbeddedServletContainerFactory47.getJspServlet();
        org.springframework.boot.context.embedded.Ssl ssl64 = undertowEmbeddedServletContainerFactory47.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray67 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory66.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray67);
        org.springframework.boot.context.embedded.Ssl ssl69 = null;
        undertowEmbeddedServletContainerFactory66.setSsl(ssl69);
        undertowEmbeddedServletContainerFactory66.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet73 = undertowEmbeddedServletContainerFactory66.getErrorPages();
        undertowEmbeddedServletContainerFactory66.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory66.setIoThreads((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory79 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file80 = null;
        undertowEmbeddedServletContainerFactory79.setAccessLogDirectory(file80);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray82 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory79.addErrorPages(errorPageArray82);
        undertowEmbeddedServletContainerFactory66.addErrorPages(errorPageArray82);
        undertowEmbeddedServletContainerFactory47.addErrorPages(errorPageArray82);
        undertowEmbeddedServletContainerFactory33.addErrorPages(errorPageArray82);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray82);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray34);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1800 + "'", int40 == 1800);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNull(ssl52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(errorPageArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection62);
        org.junit.Assert.assertNotNull(jspServlet63);
        org.junit.Assert.assertNull(ssl64);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray67);
        org.junit.Assert.assertNotNull(errorPageSet73);
        org.junit.Assert.assertNotNull(errorPageArray82);
    }

    @Test
    public void test09818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09818");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (short) -1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory15.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory15.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl20 = undertowEmbeddedServletContainerFactory15.getSsl();
        boolean boolean21 = undertowEmbeddedServletContainerFactory15.isAccessLogEnabled();
        java.io.File file22 = null;
        undertowEmbeddedServletContainerFactory15.setAccessLogDirectory(file22);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray24 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet25 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet25, errorPageArray24);
        undertowEmbeddedServletContainerFactory15.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet25);
        undertowEmbeddedServletContainerFactory15.setSessionTimeout((int) (byte) -1);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection30 = undertowEmbeddedServletContainerFactory15.getBuilderCustomizers();
        org.springframework.boot.context.embedded.JspServlet jspServlet31 = undertowEmbeddedServletContainerFactory15.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet31);
        org.springframework.boot.context.embedded.Ssl ssl33 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(errorPageArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection30);
        org.junit.Assert.assertNotNull(jspServlet31);
        org.junit.Assert.assertNull(ssl33);
    }

    @Test
    public void test09819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09819");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        boolean boolean8 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.Ssl ssl9 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        java.net.InetAddress inetAddress12 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress12);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(ssl9);
    }

    @Test
    public void test09820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09820");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory10.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory10.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl15 = undertowEmbeddedServletContainerFactory10.getSsl();
        boolean boolean16 = undertowEmbeddedServletContainerFactory10.isAccessLogEnabled();
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory10.setAccessLogDirectory(file17);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray19 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20, errorPageArray19);
        undertowEmbeddedServletContainerFactory10.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory25.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray28 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory25.addBuilderCustomizers(undertowBuilderCustomizerArray28);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray28);
        int int31 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        int int32 = undertowEmbeddedServletContainerFactory1.getPort();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection37 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        boolean boolean39 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        boolean boolean40 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.Compression compression41 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression41);
        java.io.File file43 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(ssl15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(errorPageArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1800 + "'", int31 == 1800);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection37);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(file43);
    }

    @Test
    public void test09821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09821");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection11 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        java.net.InetAddress inetAddress14 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        java.lang.String str17 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.Ssl ssl18 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 52);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray25 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory24.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray25);
        org.springframework.boot.context.embedded.Ssl ssl27 = null;
        undertowEmbeddedServletContainerFactory24.setSsl(ssl27);
        undertowEmbeddedServletContainerFactory24.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet31 = undertowEmbeddedServletContainerFactory24.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader32 = null;
        undertowEmbeddedServletContainerFactory24.setResourceLoader(resourceLoader32);
        java.lang.String str34 = undertowEmbeddedServletContainerFactory24.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray37 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory36.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray37);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray41 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory40.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray41);
        undertowEmbeddedServletContainerFactory36.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray41);
        undertowEmbeddedServletContainerFactory24.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray41);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray41);
        int int46 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection11);
        org.junit.Assert.assertNull(inetAddress14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNull(ssl18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray25);
        org.junit.Assert.assertNotNull(errorPageSet31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray37);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray41);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1800 + "'", int46 == 1800);
    }

    @Test
    public void test09822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09822");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer8 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap7);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer10 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer12 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap11);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer8, initParameterConfiguringServletContextInitializer10, initParameterConfiguringServletContextInitializer12 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray13);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection17 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.io.File file18 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file18);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        org.springframework.boot.context.embedded.JspServlet jspServlet26 = undertowEmbeddedServletContainerFactory25.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet26);
        org.springframework.core.io.ResourceLoader resourceLoader28 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader28);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        int int32 = undertowEmbeddedServletContainerFactory1.getPort();
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection17);
        org.junit.Assert.assertNotNull(jspServlet26);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test09823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09823");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer8 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap7);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer10 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer12 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap11);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer8, initParameterConfiguringServletContextInitializer10, initParameterConfiguringServletContextInitializer12 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray13);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.io.File file19 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file19);
        boolean boolean21 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection22 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        int int23 = undertowEmbeddedServletContainerFactory1.getPort();
        java.io.File file24 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(file24);
    }

    @Test
    public void test09824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09824");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 100);
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory2.setBuffersPerRegion((java.lang.Integer) 32);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory2.getDeploymentInfoCustomizers();
        java.net.InetAddress inetAddress8 = undertowEmbeddedServletContainerFactory2.getAddress();
        undertowEmbeddedServletContainerFactory2.setWorkerThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory2.getJspServlet();
        java.io.File file12 = undertowEmbeddedServletContainerFactory2.getSessionStoreDir();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNull(inetAddress8);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test09825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09825");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file7);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1);
        int int13 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 100);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
    }

    @Test
    public void test09826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09826");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) '#');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory3.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray8 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory7.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray8);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray12 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory11.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray12);
        undertowEmbeddedServletContainerFactory7.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray12);
        undertowEmbeddedServletContainerFactory3.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray12);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray12);
        boolean boolean17 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        java.io.File file18 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file18);
        java.io.File file20 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass21 = file20.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(file20);
    }

    @Test
    public void test09827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09827");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader3);
        org.springframework.boot.context.embedded.Ssl ssl5 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl5);
        org.springframework.core.io.ResourceLoader resourceLoader7 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader7);
        org.springframework.boot.context.embedded.Compression compression9 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression9);
        org.springframework.boot.context.embedded.Ssl ssl11 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl11);
        org.junit.Assert.assertNull(file2);
    }

    @Test
    public void test09828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09828");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        undertowEmbeddedServletContainerFactory1.setPort(0);
        org.springframework.boot.context.embedded.Compression compression8 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file9);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(compression8);
    }

    @Test
    public void test09829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09829");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory12.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory12.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory12.getSsl();
        boolean boolean18 = undertowEmbeddedServletContainerFactory12.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = null;
        undertowEmbeddedServletContainerFactory12.setJspServlet(jspServlet19);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings21);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection23 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory27.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory27.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl32 = null;
        undertowEmbeddedServletContainerFactory27.setSsl(ssl32);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray34 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory27.addErrorPages(errorPageArray34);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray34);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        int int39 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.JspServlet jspServlet40 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        org.springframework.boot.context.embedded.Compression compression41 = undertowEmbeddedServletContainerFactory1.getCompression();
        int int42 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection23);
        org.junit.Assert.assertNotNull(errorPageArray34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 32 + "'", int39 == 32);
        org.junit.Assert.assertNotNull(jspServlet40);
        org.junit.Assert.assertNull(compression41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1800 + "'", int42 == 1800);
    }

    @Test
    public void test09830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09830");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 0);
        java.lang.String str3 = undertowEmbeddedServletContainerFactory2.getDisplayName();
        java.lang.String str4 = undertowEmbeddedServletContainerFactory2.getDisplayName();
        undertowEmbeddedServletContainerFactory2.setDisplayName("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory8.setDocumentRoot(file9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file13 = undertowEmbeddedServletContainerFactory12.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory12.setPersistSession(false);
        undertowEmbeddedServletContainerFactory12.setJspServletClassName("");
        java.io.File file18 = undertowEmbeddedServletContainerFactory12.getSessionStoreDir();
        java.lang.String str19 = undertowEmbeddedServletContainerFactory12.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory21.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory21.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl26 = undertowEmbeddedServletContainerFactory21.getSsl();
        boolean boolean27 = undertowEmbeddedServletContainerFactory21.isAccessLogEnabled();
        java.io.File file28 = null;
        undertowEmbeddedServletContainerFactory21.setAccessLogDirectory(file28);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray30 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet31 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet31, errorPageArray30);
        undertowEmbeddedServletContainerFactory21.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet31);
        undertowEmbeddedServletContainerFactory12.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet31);
        undertowEmbeddedServletContainerFactory8.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet31);
        boolean boolean36 = undertowEmbeddedServletContainerFactory8.isAccessLogEnabled();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet37 = undertowEmbeddedServletContainerFactory8.getErrorPages();
        undertowEmbeddedServletContainerFactory2.setErrorPages(errorPageSet37);
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(ssl26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(errorPageArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(errorPageSet37);
    }

    @Test
    public void test09831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09831");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader3);
        java.lang.String str5 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray8 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory7.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray8);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory11.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory11.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader16 = null;
        undertowEmbeddedServletContainerFactory11.setResourceLoader(resourceLoader16);
        org.springframework.boot.context.embedded.Compression compression18 = null;
        undertowEmbeddedServletContainerFactory11.setCompression(compression18);
        undertowEmbeddedServletContainerFactory11.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory23.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory23.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl28 = undertowEmbeddedServletContainerFactory23.getSsl();
        boolean boolean29 = undertowEmbeddedServletContainerFactory23.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet30 = null;
        undertowEmbeddedServletContainerFactory23.setJspServlet(jspServlet30);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = undertowEmbeddedServletContainerFactory23.getMimeMappings();
        undertowEmbeddedServletContainerFactory11.setMimeMappings(mimeMappings32);
        undertowEmbeddedServletContainerFactory7.setMimeMappings(mimeMappings32);
        boolean boolean35 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        undertowEmbeddedServletContainerFactory7.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory7.setSessionTimeout((int) ' ');
        java.io.File file40 = null;
        undertowEmbeddedServletContainerFactory7.setDocumentRoot(file40);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = undertowEmbeddedServletContainerFactory7.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings42);
        java.io.File file44 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        boolean boolean47 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.JspServlet jspServlet48 = null;
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet48);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray8);
        org.junit.Assert.assertNull(ssl28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test09832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09832");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        undertowEmbeddedServletContainerFactory1.setPort(0);
        org.springframework.boot.context.embedded.Compression compression8 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file9);
        java.io.File file11 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file11);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 97);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        int int17 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(compression8);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
    }

    @Test
    public void test09833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09833");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory10.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray11);
        org.springframework.boot.context.embedded.Ssl ssl13 = null;
        undertowEmbeddedServletContainerFactory10.setSsl(ssl13);
        undertowEmbeddedServletContainerFactory10.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = undertowEmbeddedServletContainerFactory10.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader18 = null;
        undertowEmbeddedServletContainerFactory10.setResourceLoader(resourceLoader18);
        java.lang.String str20 = undertowEmbeddedServletContainerFactory10.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray23 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory22.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray23);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray27 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory26.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        undertowEmbeddedServletContainerFactory22.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        undertowEmbeddedServletContainerFactory10.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        org.springframework.boot.context.embedded.Ssl ssl32 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet37 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.lang.String str38 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray11);
        org.junit.Assert.assertNotNull(errorPageSet17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray23);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray27);
        org.junit.Assert.assertNull(ssl32);
        org.junit.Assert.assertNotNull(errorPageSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
    }

    @Test
    public void test09834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09834");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection11 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory15.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray20 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory19.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray20);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray24 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory23.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray24);
        undertowEmbeddedServletContainerFactory19.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray24);
        undertowEmbeddedServletContainerFactory15.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray24);
        java.lang.String str28 = undertowEmbeddedServletContainerFactory15.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory30.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory30.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray35 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer36 = undertowEmbeddedServletContainerFactory30.getEmbeddedServletContainer(servletContextInitializerArray35);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer37 = undertowEmbeddedServletContainerFactory15.getEmbeddedServletContainer(servletContextInitializerArray35);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer38 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray35);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray41 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory40.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray41);
        org.springframework.boot.context.embedded.Ssl ssl43 = null;
        undertowEmbeddedServletContainerFactory40.setSsl(ssl43);
        org.springframework.boot.context.embedded.Ssl ssl45 = undertowEmbeddedServletContainerFactory40.getSsl();
        undertowEmbeddedServletContainerFactory40.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory40.setDisplayName("hi!");
        java.net.InetAddress inetAddress50 = undertowEmbeddedServletContainerFactory40.getAddress();
        org.springframework.boot.context.embedded.Compression compression51 = null;
        undertowEmbeddedServletContainerFactory40.setCompression(compression51);
        java.io.File file53 = null;
        undertowEmbeddedServletContainerFactory40.setAccessLogDirectory(file53);
        java.lang.String str55 = undertowEmbeddedServletContainerFactory40.getDisplayName();
        boolean boolean56 = undertowEmbeddedServletContainerFactory40.isPersistSession();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings57 = undertowEmbeddedServletContainerFactory40.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings57);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection11);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray20);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(servletContextInitializerArray35);
        org.junit.Assert.assertNotNull(embeddedServletContainer36);
        org.junit.Assert.assertNotNull(embeddedServletContainer37);
        org.junit.Assert.assertNotNull(embeddedServletContainer38);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray41);
        org.junit.Assert.assertNull(ssl45);
        org.junit.Assert.assertNull(inetAddress50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(mimeMappings57);
    }

    @Test
    public void test09835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09835");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        java.io.File file2 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file2);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.setPort((int) '#');
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection14 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection14);
    }

    @Test
    public void test09836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09836");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory12.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory12.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory12.getSsl();
        boolean boolean18 = undertowEmbeddedServletContainerFactory12.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = null;
        undertowEmbeddedServletContainerFactory12.setJspServlet(jspServlet19);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings21);
        java.net.InetAddress inetAddress23 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setPersistSession(true);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory34.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray37 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory34.addBuilderCustomizers(undertowBuilderCustomizerArray37);
        undertowEmbeddedServletContainerFactory32.addBuilderCustomizers(undertowBuilderCustomizerArray37);
        org.springframework.boot.context.embedded.Ssl ssl40 = null;
        undertowEmbeddedServletContainerFactory32.setSsl(ssl40);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory43.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory43.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl48 = undertowEmbeddedServletContainerFactory43.getSsl();
        boolean boolean49 = undertowEmbeddedServletContainerFactory43.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet50 = null;
        undertowEmbeddedServletContainerFactory43.setJspServlet(jspServlet50);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings52 = undertowEmbeddedServletContainerFactory43.getMimeMappings();
        undertowEmbeddedServletContainerFactory32.setMimeMappings(mimeMappings52);
        undertowEmbeddedServletContainerFactory32.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.Ssl ssl56 = undertowEmbeddedServletContainerFactory32.getSsl();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection57 = undertowEmbeddedServletContainerFactory32.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory59.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory59.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl64 = null;
        undertowEmbeddedServletContainerFactory59.setSsl(ssl64);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray66 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory59.addErrorPages(errorPageArray66);
        undertowEmbeddedServletContainerFactory32.addErrorPages(errorPageArray66);
        undertowEmbeddedServletContainerFactory30.addErrorPages(errorPageArray66);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray66);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file75 = null;
        undertowEmbeddedServletContainerFactory74.setDocumentRoot(file75);
        org.springframework.boot.context.embedded.Ssl ssl77 = null;
        undertowEmbeddedServletContainerFactory74.setSsl(ssl77);
        boolean boolean79 = undertowEmbeddedServletContainerFactory74.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory74.setPersistSession(false);
        java.lang.String str82 = undertowEmbeddedServletContainerFactory74.getContextPath();
        org.springframework.boot.context.embedded.JspServlet jspServlet83 = undertowEmbeddedServletContainerFactory74.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet83);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 32);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNull(inetAddress23);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray37);
        org.junit.Assert.assertNull(ssl48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(mimeMappings52);
        org.junit.Assert.assertNull(ssl56);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection57);
        org.junit.Assert.assertNotNull(errorPageArray66);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertNotNull(jspServlet83);
    }

    @Test
    public void test09837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09837");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 0);
        java.lang.String str3 = undertowEmbeddedServletContainerFactory2.getDisplayName();
        undertowEmbeddedServletContainerFactory2.setBufferSize((java.lang.Integer) 32);
        boolean boolean6 = undertowEmbeddedServletContainerFactory2.isAccessLogEnabled();
        boolean boolean7 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        boolean boolean8 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection9 = undertowEmbeddedServletContainerFactory2.getDeploymentInfoCustomizers();
        int int10 = undertowEmbeddedServletContainerFactory2.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 97);
        java.lang.String str14 = undertowEmbeddedServletContainerFactory13.getDisplayName();
        java.lang.String str15 = undertowEmbeddedServletContainerFactory13.getContextPath();
        java.net.InetAddress inetAddress16 = null;
        undertowEmbeddedServletContainerFactory13.setAddress(inetAddress16);
        undertowEmbeddedServletContainerFactory13.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory21.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray22);
        org.springframework.boot.context.embedded.Ssl ssl24 = null;
        undertowEmbeddedServletContainerFactory21.setSsl(ssl24);
        undertowEmbeddedServletContainerFactory21.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file30 = null;
        undertowEmbeddedServletContainerFactory29.setAccessLogDirectory(file30);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray32 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory29.addErrorPages(errorPageArray32);
        org.springframework.boot.context.embedded.Compression compression34 = undertowEmbeddedServletContainerFactory29.getCompression();
        org.springframework.boot.context.embedded.JspServlet jspServlet35 = undertowEmbeddedServletContainerFactory29.getJspServlet();
        undertowEmbeddedServletContainerFactory21.setJspServlet(jspServlet35);
        java.io.File file37 = undertowEmbeddedServletContainerFactory21.getDocumentRoot();
        undertowEmbeddedServletContainerFactory21.setIoThreads((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory21.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = undertowEmbeddedServletContainerFactory21.getMimeMappings();
        undertowEmbeddedServletContainerFactory13.setMimeMappings(mimeMappings42);
        undertowEmbeddedServletContainerFactory2.setMimeMappings(mimeMappings42);
        java.lang.String str45 = undertowEmbeddedServletContainerFactory2.getContextPath();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray22);
        org.junit.Assert.assertNotNull(errorPageArray32);
        org.junit.Assert.assertNull(compression34);
        org.junit.Assert.assertNotNull(jspServlet35);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
    }

    @Test
    public void test09838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09838");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Compression compression6 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression6);
        org.springframework.boot.context.embedded.JspServlet jspServlet8 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        int int10 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.springframework.boot.context.embedded.Compression compression11 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression11);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
        org.junit.Assert.assertNotNull(jspServlet8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
    }

    @Test
    public void test09839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09839");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet8 = null;
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet8);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory14.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory14.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory14.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer21 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap20);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer23 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap22);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer25 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap24);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer21, initParameterConfiguringServletContextInitializer23, initParameterConfiguringServletContextInitializer25 };
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray26);
        undertowEmbeddedServletContainerFactory14.setJspServletClassName("hi!");
        int int30 = undertowEmbeddedServletContainerFactory14.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet31 = undertowEmbeddedServletContainerFactory14.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet31);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file35 = null;
        undertowEmbeddedServletContainerFactory34.setDocumentRoot(file35);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory38.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory38.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl43 = undertowEmbeddedServletContainerFactory38.getSsl();
        boolean boolean44 = undertowEmbeddedServletContainerFactory38.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory46.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory46.setPersistSession(false);
        boolean boolean51 = undertowEmbeddedServletContainerFactory46.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory53.setPort((int) (byte) -1);
        boolean boolean56 = undertowEmbeddedServletContainerFactory53.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory58.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory58.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl63 = null;
        undertowEmbeddedServletContainerFactory58.setSsl(ssl63);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray65 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory58.addErrorPages(errorPageArray65);
        undertowEmbeddedServletContainerFactory53.addErrorPages(errorPageArray65);
        undertowEmbeddedServletContainerFactory46.addErrorPages(errorPageArray65);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer69 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray70 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer69 };
        undertowEmbeddedServletContainerFactory46.addBuilderCustomizers(undertowBuilderCustomizerArray70);
        undertowEmbeddedServletContainerFactory38.addBuilderCustomizers(undertowBuilderCustomizerArray70);
        undertowEmbeddedServletContainerFactory34.addBuilderCustomizers(undertowBuilderCustomizerArray70);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray70);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) -1);
        org.springframework.core.io.ResourceLoader resourceLoader79 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader79);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 0);
        java.net.InetAddress inetAddress83 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection84 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertNotNull(servletContextInitializerArray26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet31);
        org.junit.Assert.assertNull(ssl43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(errorPageArray65);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray70);
        org.junit.Assert.assertNull(inetAddress83);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection84);
    }

    @Test
    public void test09840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09840");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        java.lang.String str11 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
        java.lang.String str14 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test09841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09841");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.lang.String str3 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.boot.context.embedded.Compression compression4 = undertowEmbeddedServletContainerFactory1.getCompression();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        int int7 = undertowEmbeddedServletContainerFactory1.getPort();
        int int8 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        org.springframework.boot.context.embedded.Compression compression11 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression11);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(compression4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
    }

    @Test
    public void test09842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09842");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer8 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap7);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer10 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer12 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap11);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer8, initParameterConfiguringServletContextInitializer10, initParameterConfiguringServletContextInitializer12 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray13);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str17 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory21.setPort((int) (byte) -1);
        java.io.File file24 = null;
        undertowEmbeddedServletContainerFactory21.setSessionStoreDir(file24);
        org.springframework.boot.context.embedded.ErrorPage errorPage26 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray27 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage26 };
        undertowEmbeddedServletContainerFactory21.addErrorPages(errorPageArray27);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray27);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        int int32 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.io.File file35 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(errorPageArray27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1800 + "'", int32 == 1800);
        org.junit.Assert.assertNull(file35);
    }

    @Test
    public void test09843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09843");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.net.InetAddress inetAddress2 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress2);
        java.net.InetAddress inetAddress4 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory6.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13, initParameterConfiguringServletContextInitializer15, initParameterConfiguringServletContextInitializer17 };
        undertowEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory6.setJspServletClassName("hi!");
        int int22 = undertowEmbeddedServletContainerFactory6.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = undertowEmbeddedServletContainerFactory6.getErrorPages();
        org.springframework.boot.context.embedded.JspServlet jspServlet24 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet24);
        java.lang.String str26 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.setPort(97);
        java.io.File file31 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file31);
        org.junit.Assert.assertNull(inetAddress4);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet23);
        org.junit.Assert.assertNotNull(jspServlet24);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test09844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09844");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 0);
        java.lang.String str3 = undertowEmbeddedServletContainerFactory2.getDisplayName();
        java.lang.String str4 = undertowEmbeddedServletContainerFactory2.getDisplayName();
        undertowEmbeddedServletContainerFactory2.setPersistSession(true);
        java.io.File file7 = undertowEmbeddedServletContainerFactory2.getDocumentRoot();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory2.getDisplayName();
        undertowEmbeddedServletContainerFactory2.setSessionTimeout((int) '#');
        java.net.InetAddress inetAddress11 = undertowEmbeddedServletContainerFactory2.getAddress();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(inetAddress11);
    }

    @Test
    public void test09845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09845");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet5 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet6 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        int int9 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.net.InetAddress inetAddress14 = null;
        undertowEmbeddedServletContainerFactory13.setAddress(inetAddress14);
        java.net.InetAddress inetAddress16 = undertowEmbeddedServletContainerFactory13.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file19 = undertowEmbeddedServletContainerFactory18.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory18.setPersistSession(false);
        java.lang.String str22 = undertowEmbeddedServletContainerFactory18.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory24.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory24.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl29 = undertowEmbeddedServletContainerFactory24.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer31 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap30);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer33 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap32);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer35 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap34);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray36 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer31, initParameterConfiguringServletContextInitializer33, initParameterConfiguringServletContextInitializer35 };
        undertowEmbeddedServletContainerFactory24.addInitializers(servletContextInitializerArray36);
        undertowEmbeddedServletContainerFactory24.setJspServletClassName("hi!");
        int int40 = undertowEmbeddedServletContainerFactory24.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet41 = undertowEmbeddedServletContainerFactory24.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory43.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray48 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory47.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray48);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray52 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory51.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray52);
        undertowEmbeddedServletContainerFactory47.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray52);
        undertowEmbeddedServletContainerFactory43.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray52);
        java.lang.String str56 = undertowEmbeddedServletContainerFactory43.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory58.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory58.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray63 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer64 = undertowEmbeddedServletContainerFactory58.getEmbeddedServletContainer(servletContextInitializerArray63);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer65 = undertowEmbeddedServletContainerFactory43.getEmbeddedServletContainer(servletContextInitializerArray63);
        undertowEmbeddedServletContainerFactory24.addInitializers(servletContextInitializerArray63);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer67 = undertowEmbeddedServletContainerFactory18.getEmbeddedServletContainer(servletContextInitializerArray63);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer68 = undertowEmbeddedServletContainerFactory13.getEmbeddedServletContainer(servletContextInitializerArray63);
        undertowEmbeddedServletContainerFactory11.addInitializers(servletContextInitializerArray63);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer70 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray63);
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        boolean boolean73 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(errorPageSet5);
        org.junit.Assert.assertNotNull(errorPageSet6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertNull(inetAddress16);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(ssl29);
        org.junit.Assert.assertNotNull(servletContextInitializerArray36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet41);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray48);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray52);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(servletContextInitializerArray63);
        org.junit.Assert.assertNotNull(embeddedServletContainer64);
        org.junit.Assert.assertNotNull(embeddedServletContainer65);
        org.junit.Assert.assertNotNull(embeddedServletContainer67);
        org.junit.Assert.assertNotNull(embeddedServletContainer68);
        org.junit.Assert.assertNotNull(embeddedServletContainer70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test09846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09846");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection11 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        java.net.InetAddress inetAddress14 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file17);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 100);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection11);
        org.junit.Assert.assertNull(inetAddress14);
    }

    @Test
    public void test09847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09847");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 0);
        java.lang.String str3 = undertowEmbeddedServletContainerFactory2.getDisplayName();
        undertowEmbeddedServletContainerFactory2.setBuffersPerRegion((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory2.setAccessLogPattern("");
        org.springframework.boot.context.embedded.Ssl ssl8 = null;
        undertowEmbeddedServletContainerFactory2.setSsl(ssl8);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test09848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09848");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) (-1));
        java.lang.String str4 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader5);
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test09849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09849");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file8);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray10 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11, errorPageArray10);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) -1);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection16 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.JspServlet jspServlet17 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        org.springframework.boot.context.embedded.Ssl ssl18 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        java.lang.String str20 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray25 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory24.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray25);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory28.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory28.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader33 = null;
        undertowEmbeddedServletContainerFactory28.setResourceLoader(resourceLoader33);
        org.springframework.boot.context.embedded.Compression compression35 = null;
        undertowEmbeddedServletContainerFactory28.setCompression(compression35);
        undertowEmbeddedServletContainerFactory28.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory40.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory40.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl45 = undertowEmbeddedServletContainerFactory40.getSsl();
        boolean boolean46 = undertowEmbeddedServletContainerFactory40.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet47 = null;
        undertowEmbeddedServletContainerFactory40.setJspServlet(jspServlet47);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings49 = undertowEmbeddedServletContainerFactory40.getMimeMappings();
        undertowEmbeddedServletContainerFactory28.setMimeMappings(mimeMappings49);
        undertowEmbeddedServletContainerFactory24.setMimeMappings(mimeMappings49);
        boolean boolean52 = undertowEmbeddedServletContainerFactory24.isPersistSession();
        undertowEmbeddedServletContainerFactory24.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory56.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory56.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl61 = undertowEmbeddedServletContainerFactory56.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap62 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer63 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap62);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer65 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap64);
        java.util.Map<java.lang.String, java.lang.String> strMap66 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer67 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap66);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray68 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer63, initParameterConfiguringServletContextInitializer65, initParameterConfiguringServletContextInitializer67 };
        undertowEmbeddedServletContainerFactory56.addInitializers(servletContextInitializerArray68);
        undertowEmbeddedServletContainerFactory56.setJspServletClassName("hi!");
        int int72 = undertowEmbeddedServletContainerFactory56.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet73 = undertowEmbeddedServletContainerFactory56.getErrorPages();
        undertowEmbeddedServletContainerFactory24.setErrorPages(errorPageSet73);
        boolean boolean75 = undertowEmbeddedServletContainerFactory24.isAccessLogEnabled();
        java.io.File file76 = null;
        undertowEmbeddedServletContainerFactory24.setSessionStoreDir(file76);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings78 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings78);
        java.net.InetAddress inetAddress80 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress80);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(errorPageArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection16);
        org.junit.Assert.assertNotNull(jspServlet17);
        org.junit.Assert.assertNull(ssl18);
        org.junit.Assert.assertNotNull(jspServlet19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray25);
        org.junit.Assert.assertNull(ssl45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(mimeMappings49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(ssl61);
        org.junit.Assert.assertNotNull(servletContextInitializerArray68);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(mimeMappings78);
    }

    @Test
    public void test09850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09850");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        boolean boolean4 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory6.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl11 = null;
        undertowEmbeddedServletContainerFactory6.setSsl(ssl11);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray13 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory6.addErrorPages(errorPageArray13);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray13);
        boolean boolean16 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file17);
        boolean boolean19 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        java.io.File file23 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        boolean boolean24 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.Ssl ssl25 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet26 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.lang.Class<?> wildcardClass27 = undertowEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(errorPageArray13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(errorPageSet20);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(ssl25);
        org.junit.Assert.assertNotNull(errorPageSet26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test09851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09851");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) 'a');
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(true);
        undertowEmbeddedServletContainerFactory2.setBuffersPerRegion((java.lang.Integer) 1800);
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file7);
        java.net.InetAddress inetAddress9 = undertowEmbeddedServletContainerFactory2.getAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection11 = undertowEmbeddedServletContainerFactory2.getBuilderCustomizers();
        org.junit.Assert.assertNull(inetAddress9);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection11);
    }

    @Test
    public void test09852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09852");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection2 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file3);
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file5);
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file7);
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file9);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection2);
    }

    @Test
    public void test09853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09853");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory6.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13, initParameterConfiguringServletContextInitializer15, initParameterConfiguringServletContextInitializer17 };
        undertowEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray18);
        boolean boolean21 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        org.springframework.boot.context.embedded.Ssl ssl25 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl25);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        org.springframework.boot.context.embedded.JspServlet jspServlet29 = undertowEmbeddedServletContainerFactory28.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file32 = null;
        undertowEmbeddedServletContainerFactory31.setAccessLogDirectory(file32);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray34 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory31.addErrorPages(errorPageArray34);
        undertowEmbeddedServletContainerFactory28.addErrorPages(errorPageArray34);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory38.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory42.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory42.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl47 = undertowEmbeddedServletContainerFactory42.getSsl();
        boolean boolean48 = undertowEmbeddedServletContainerFactory42.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet49 = null;
        undertowEmbeddedServletContainerFactory42.setJspServlet(jspServlet49);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray51 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet52 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet52, errorPageArray51);
        undertowEmbeddedServletContainerFactory42.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet52);
        undertowEmbeddedServletContainerFactory38.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet52);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet56 = undertowEmbeddedServletContainerFactory38.getErrorPages();
        boolean boolean57 = undertowEmbeddedServletContainerFactory38.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory59.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory59.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray64 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer65 = undertowEmbeddedServletContainerFactory59.getEmbeddedServletContainer(servletContextInitializerArray64);
        undertowEmbeddedServletContainerFactory38.addInitializers(servletContextInitializerArray64);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer67 = undertowEmbeddedServletContainerFactory28.getEmbeddedServletContainer(servletContextInitializerArray64);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray64);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 0);
        boolean boolean73 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(errorPageSet22);
        org.junit.Assert.assertNotNull(jspServlet29);
        org.junit.Assert.assertNotNull(errorPageArray34);
        org.junit.Assert.assertNull(ssl47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(errorPageArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(errorPageSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray64);
        org.junit.Assert.assertNotNull(embeddedServletContainer65);
        org.junit.Assert.assertNotNull(embeddedServletContainer67);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test09854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09854");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
        int int19 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        boolean boolean22 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test09855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09855");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        java.net.InetAddress inetAddress8 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress8);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) 'a');
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet16 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection17 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
        org.junit.Assert.assertNotNull(errorPageSet16);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection17);
    }

    @Test
    public void test09856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09856");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file2 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file6 = undertowEmbeddedServletContainerFactory5.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory5.setPersistSession(false);
        undertowEmbeddedServletContainerFactory5.setJspServletClassName("");
        java.io.File file11 = undertowEmbeddedServletContainerFactory5.getSessionStoreDir();
        java.lang.String str12 = undertowEmbeddedServletContainerFactory5.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory14.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory14.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory14.getSsl();
        boolean boolean20 = undertowEmbeddedServletContainerFactory14.isAccessLogEnabled();
        java.io.File file21 = null;
        undertowEmbeddedServletContainerFactory14.setAccessLogDirectory(file21);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray23 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24, errorPageArray23);
        undertowEmbeddedServletContainerFactory14.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24);
        undertowEmbeddedServletContainerFactory5.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24);
        boolean boolean29 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        org.springframework.boot.context.embedded.Compression compression32 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression32);
        java.io.File file34 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.net.InetAddress inetAddress35 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress35);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(errorPageArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(file34);
    }

    @Test
    public void test09857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09857");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory5.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory5.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory5.setResourceLoader(resourceLoader10);
        org.springframework.boot.context.embedded.Compression compression12 = null;
        undertowEmbeddedServletContainerFactory5.setCompression(compression12);
        undertowEmbeddedServletContainerFactory5.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.Ssl ssl16 = undertowEmbeddedServletContainerFactory5.getSsl();
        java.io.File file17 = undertowEmbeddedServletContainerFactory5.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray20 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory19.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray20);
        org.springframework.boot.context.embedded.Ssl ssl22 = null;
        undertowEmbeddedServletContainerFactory19.setSsl(ssl22);
        org.springframework.boot.context.embedded.Ssl ssl24 = undertowEmbeddedServletContainerFactory19.getSsl();
        undertowEmbeddedServletContainerFactory19.setDisplayName("");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = undertowEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer undertowDeploymentInfoCustomizer28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray29 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] { undertowDeploymentInfoCustomizer28 };
        undertowEmbeddedServletContainerFactory19.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray29);
        undertowEmbeddedServletContainerFactory5.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray29);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray29);
        boolean boolean33 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        org.junit.Assert.assertNull(ssl16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray20);
        org.junit.Assert.assertNull(ssl24);
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test09858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09858");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory6.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13, initParameterConfiguringServletContextInitializer15, initParameterConfiguringServletContextInitializer17 };
        undertowEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.Compression compression27 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.io.File file28 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file28);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 32);
        java.net.InetAddress inetAddress32 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertNull(compression27);
        org.junit.Assert.assertNull(inetAddress32);
    }

    @Test
    public void test09859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09859");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory5.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory5.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory5.getSsl();
        boolean boolean11 = undertowEmbeddedServletContainerFactory5.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet12 = null;
        undertowEmbeddedServletContainerFactory5.setJspServlet(jspServlet12);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray14 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet15 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet15, errorPageArray14);
        undertowEmbeddedServletContainerFactory5.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet15);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet15);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1800);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray26 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory25.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray26);
        org.springframework.boot.context.embedded.Ssl ssl28 = null;
        undertowEmbeddedServletContainerFactory25.setSsl(ssl28);
        org.springframework.boot.context.embedded.Ssl ssl30 = undertowEmbeddedServletContainerFactory25.getSsl();
        undertowEmbeddedServletContainerFactory25.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory25.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection35 = undertowEmbeddedServletContainerFactory25.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory25.setPersistSession(false);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection38 = undertowEmbeddedServletContainerFactory25.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory40.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory40.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl45 = undertowEmbeddedServletContainerFactory40.getSsl();
        boolean boolean46 = undertowEmbeddedServletContainerFactory40.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet47 = null;
        undertowEmbeddedServletContainerFactory40.setJspServlet(jspServlet47);
        java.net.InetAddress inetAddress49 = undertowEmbeddedServletContainerFactory40.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory51.setPort((int) (byte) -1);
        boolean boolean54 = undertowEmbeddedServletContainerFactory51.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory56.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory56.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl61 = null;
        undertowEmbeddedServletContainerFactory56.setSsl(ssl61);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray63 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory56.addErrorPages(errorPageArray63);
        undertowEmbeddedServletContainerFactory51.addErrorPages(errorPageArray63);
        java.lang.String str66 = undertowEmbeddedServletContainerFactory51.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory68.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray73 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory72.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray73);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray77 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory76.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray77);
        undertowEmbeddedServletContainerFactory72.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray77);
        undertowEmbeddedServletContainerFactory68.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray77);
        java.lang.String str81 = undertowEmbeddedServletContainerFactory68.getContextPath();
        java.lang.String str82 = undertowEmbeddedServletContainerFactory68.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory84 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory84.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory84.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray89 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer90 = undertowEmbeddedServletContainerFactory84.getEmbeddedServletContainer(servletContextInitializerArray89);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer91 = undertowEmbeddedServletContainerFactory68.getEmbeddedServletContainer(servletContextInitializerArray89);
        undertowEmbeddedServletContainerFactory51.addInitializers(servletContextInitializerArray89);
        undertowEmbeddedServletContainerFactory40.addInitializers(servletContextInitializerArray89);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer94 = undertowEmbeddedServletContainerFactory25.getEmbeddedServletContainer(servletContextInitializerArray89);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray89);
        org.springframework.boot.context.embedded.Ssl ssl96 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl96);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings98 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(errorPageArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray26);
        org.junit.Assert.assertNull(ssl30);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection35);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection38);
        org.junit.Assert.assertNull(ssl45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(inetAddress49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(errorPageArray63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray73);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray77);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(servletContextInitializerArray89);
        org.junit.Assert.assertNotNull(embeddedServletContainer90);
        org.junit.Assert.assertNotNull(embeddedServletContainer91);
        org.junit.Assert.assertNotNull(embeddedServletContainer94);
        org.junit.Assert.assertNotNull(mimeMappings98);
    }

    @Test
    public void test09860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09860");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer8 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap7);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer10 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer12 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap11);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer8, initParameterConfiguringServletContextInitializer10, initParameterConfiguringServletContextInitializer12 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray13);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str17 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 97);
        org.springframework.boot.context.embedded.Compression compression22 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.net.InetAddress inetAddress24 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 97);
        int int27 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        java.lang.Class<?> wildcardClass28 = undertowEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertNull(compression22);
        org.junit.Assert.assertNotNull(errorPageSet23);
        org.junit.Assert.assertNull(inetAddress24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1800 + "'", int27 == 1800);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test09861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09861");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 32);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 97);
        java.io.File file14 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file14);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.JspServlet jspServlet18 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 32);
        java.io.File file21 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file21);
        java.io.File file23 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file23);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(jspServlet18);
    }

    @Test
    public void test09862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09862");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer8 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap7);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer10 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer12 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap11);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer8, initParameterConfiguringServletContextInitializer10, initParameterConfiguringServletContextInitializer12 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray13);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str17 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory19.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory19.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl24 = undertowEmbeddedServletContainerFactory19.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer26 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap25);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer28 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap27);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer30 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap29);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray31 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer26, initParameterConfiguringServletContextInitializer28, initParameterConfiguringServletContextInitializer30 };
        undertowEmbeddedServletContainerFactory19.addInitializers(servletContextInitializerArray31);
        undertowEmbeddedServletContainerFactory19.setJspServletClassName("hi!");
        int int35 = undertowEmbeddedServletContainerFactory19.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet36 = undertowEmbeddedServletContainerFactory19.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet36);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray40 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory39.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray40);
        org.springframework.boot.context.embedded.Ssl ssl42 = null;
        undertowEmbeddedServletContainerFactory39.setSsl(ssl42);
        undertowEmbeddedServletContainerFactory39.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet46 = undertowEmbeddedServletContainerFactory39.getErrorPages();
        undertowEmbeddedServletContainerFactory39.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory39.setIoThreads((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file53 = null;
        undertowEmbeddedServletContainerFactory52.setAccessLogDirectory(file53);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray55 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory52.addErrorPages(errorPageArray55);
        undertowEmbeddedServletContainerFactory39.addErrorPages(errorPageArray55);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray55);
        org.springframework.boot.context.embedded.Ssl ssl59 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl59);
        org.springframework.boot.context.embedded.Ssl ssl61 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(ssl24);
        org.junit.Assert.assertNotNull(servletContextInitializerArray31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet36);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray40);
        org.junit.Assert.assertNotNull(errorPageSet46);
        org.junit.Assert.assertNotNull(errorPageArray55);
        org.junit.Assert.assertNull(ssl61);
    }

    @Test
    public void test09863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09863");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer8 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap7);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer10 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer12 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap11);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer8, initParameterConfiguringServletContextInitializer10, initParameterConfiguringServletContextInitializer12 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray13);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str17 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.boot.context.embedded.Ssl ssl18 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.Ssl ssl21 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection22 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.JspServlet jspServlet23 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        java.lang.String str24 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(ssl18);
        org.junit.Assert.assertNull(ssl21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection22);
        org.junit.Assert.assertNotNull(jspServlet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
    }

    @Test
    public void test09864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09864");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory10.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory10.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl15 = undertowEmbeddedServletContainerFactory10.getSsl();
        boolean boolean16 = undertowEmbeddedServletContainerFactory10.isAccessLogEnabled();
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory10.setAccessLogDirectory(file17);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray19 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20, errorPageArray19);
        undertowEmbeddedServletContainerFactory10.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory25.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray28 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory25.addBuilderCustomizers(undertowBuilderCustomizerArray28);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray28);
        undertowEmbeddedServletContainerFactory1.setPort(32);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.Ssl ssl37 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl37);
        boolean boolean39 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        int int40 = undertowEmbeddedServletContainerFactory1.getPort();
        java.io.File file41 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file41);
        java.lang.String str43 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(ssl15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(errorPageArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray28);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 32 + "'", int40 == 32);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test09865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09865");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        org.springframework.boot.context.embedded.JspServlet jspServlet2 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory4.setAccessLogDirectory(file5);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray7 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory4.addErrorPages(errorPageArray7);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray7);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(97);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray14 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory13.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray14);
        org.springframework.boot.context.embedded.Ssl ssl16 = null;
        undertowEmbeddedServletContainerFactory13.setSsl(ssl16);
        org.springframework.boot.context.embedded.Ssl ssl18 = undertowEmbeddedServletContainerFactory13.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory20.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray21);
        org.springframework.boot.context.embedded.Ssl ssl23 = null;
        undertowEmbeddedServletContainerFactory20.setSsl(ssl23);
        org.springframework.boot.context.embedded.Ssl ssl25 = undertowEmbeddedServletContainerFactory20.getSsl();
        undertowEmbeddedServletContainerFactory20.setDisplayName("");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = undertowEmbeddedServletContainerFactory20.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer undertowDeploymentInfoCustomizer29 = null;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray30 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] { undertowDeploymentInfoCustomizer29 };
        undertowEmbeddedServletContainerFactory20.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray30);
        undertowEmbeddedServletContainerFactory13.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray30);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray30);
        java.net.InetAddress inetAddress34 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress34);
        java.lang.Class<?> wildcardClass36 = undertowEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertNotNull(jspServlet2);
        org.junit.Assert.assertNotNull(errorPageArray7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray14);
        org.junit.Assert.assertNull(ssl18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray21);
        org.junit.Assert.assertNull(ssl25);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray30);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test09866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09866");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.io.File file1 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file1);
        boolean boolean3 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        boolean boolean4 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory6.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13, initParameterConfiguringServletContextInitializer15, initParameterConfiguringServletContextInitializer17 };
        undertowEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory6.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str22 = undertowEmbeddedServletContainerFactory6.getContextPath();
        java.net.InetAddress inetAddress23 = undertowEmbeddedServletContainerFactory6.getAddress();
        org.springframework.boot.context.embedded.Ssl ssl24 = undertowEmbeddedServletContainerFactory6.getSsl();
        undertowEmbeddedServletContainerFactory6.setBuffersPerRegion((java.lang.Integer) 97);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 0);
        java.lang.String str30 = undertowEmbeddedServletContainerFactory29.getDisplayName();
        undertowEmbeddedServletContainerFactory29.setBufferSize((java.lang.Integer) 32);
        undertowEmbeddedServletContainerFactory29.setBuffersPerRegion((java.lang.Integer) 1);
        java.io.File file35 = undertowEmbeddedServletContainerFactory29.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray38 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory37.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray38);
        org.springframework.boot.context.embedded.Ssl ssl40 = null;
        undertowEmbeddedServletContainerFactory37.setSsl(ssl40);
        org.springframework.boot.context.embedded.Ssl ssl42 = undertowEmbeddedServletContainerFactory37.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray45 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory44.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray45);
        org.springframework.boot.context.embedded.Ssl ssl47 = null;
        undertowEmbeddedServletContainerFactory44.setSsl(ssl47);
        org.springframework.boot.context.embedded.Ssl ssl49 = undertowEmbeddedServletContainerFactory44.getSsl();
        undertowEmbeddedServletContainerFactory44.setDisplayName("");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings52 = undertowEmbeddedServletContainerFactory44.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer undertowDeploymentInfoCustomizer53 = null;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray54 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] { undertowDeploymentInfoCustomizer53 };
        undertowEmbeddedServletContainerFactory44.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray54);
        undertowEmbeddedServletContainerFactory37.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray54);
        undertowEmbeddedServletContainerFactory29.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray54);
        undertowEmbeddedServletContainerFactory6.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray54);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray54);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(inetAddress23);
        org.junit.Assert.assertNull(ssl24);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray38);
        org.junit.Assert.assertNull(ssl42);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray45);
        org.junit.Assert.assertNull(ssl49);
        org.junit.Assert.assertNotNull(mimeMappings52);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray54);
    }

    @Test
    public void test09867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09867");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer8 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap7);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer10 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer12 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap11);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer8, initParameterConfiguringServletContextInitializer10, initParameterConfiguringServletContextInitializer12 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray13);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str17 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 97);
        org.springframework.boot.context.embedded.Compression compression22 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file28 = undertowEmbeddedServletContainerFactory27.getSessionStoreDir();
        java.lang.String str29 = undertowEmbeddedServletContainerFactory27.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = undertowEmbeddedServletContainerFactory31.getMimeMappings();
        undertowEmbeddedServletContainerFactory27.setMimeMappings(mimeMappings32);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings32);
        java.io.File file35 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.net.InetAddress inetAddress36 = undertowEmbeddedServletContainerFactory1.getAddress();
        boolean boolean37 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertNull(compression22);
        org.junit.Assert.assertNotNull(errorPageSet23);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(inetAddress36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test09868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09868");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.lang.String str3 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = undertowEmbeddedServletContainerFactory5.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings6);
        boolean boolean8 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader9);
        java.io.File file11 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file11);
        boolean boolean13 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.JspServlet jspServlet14 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 100);
        undertowEmbeddedServletContainerFactory19.setPort(1800);
        java.lang.String str22 = undertowEmbeddedServletContainerFactory19.getContextPath();
        java.io.File file23 = null;
        undertowEmbeddedServletContainerFactory19.setDocumentRoot(file23);
        java.net.InetAddress inetAddress25 = null;
        undertowEmbeddedServletContainerFactory19.setAddress(inetAddress25);
        java.net.InetAddress inetAddress27 = undertowEmbeddedServletContainerFactory19.getAddress();
        undertowEmbeddedServletContainerFactory19.setPersistSession(true);
        int int30 = undertowEmbeddedServletContainerFactory19.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray33 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory32.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray33);
        java.io.File file35 = null;
        undertowEmbeddedServletContainerFactory32.setSessionStoreDir(file35);
        undertowEmbeddedServletContainerFactory32.setBufferSize((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory32.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray43 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory42.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray43);
        org.springframework.boot.context.embedded.Ssl ssl45 = null;
        undertowEmbeddedServletContainerFactory42.setSsl(ssl45);
        undertowEmbeddedServletContainerFactory42.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet49 = undertowEmbeddedServletContainerFactory42.getErrorPages();
        undertowEmbeddedServletContainerFactory42.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) 'a');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray57 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory56.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray57);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray61 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory60.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray61);
        undertowEmbeddedServletContainerFactory56.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray61);
        undertowEmbeddedServletContainerFactory54.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray61);
        undertowEmbeddedServletContainerFactory42.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray61);
        undertowEmbeddedServletContainerFactory32.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray61);
        undertowEmbeddedServletContainerFactory19.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray61);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray61);
        org.springframework.core.io.ResourceLoader resourceLoader69 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader69);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(jspServlet14);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(inetAddress27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1800 + "'", int30 == 1800);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray33);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray43);
        org.junit.Assert.assertNotNull(errorPageSet49);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray57);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray61);
    }

    @Test
    public void test09869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09869");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file4);
        undertowEmbeddedServletContainerFactory1.setPort(0);
        int int8 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1800);
        java.net.InetAddress inetAddress13 = undertowEmbeddedServletContainerFactory1.getAddress();
        boolean boolean14 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory16.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory16.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl21 = undertowEmbeddedServletContainerFactory16.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer23 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap22);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer25 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap24);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer27 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap26);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray28 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer23, initParameterConfiguringServletContextInitializer25, initParameterConfiguringServletContextInitializer27 };
        undertowEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray28);
        undertowEmbeddedServletContainerFactory16.setJspServletClassName("hi!");
        int int32 = undertowEmbeddedServletContainerFactory16.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet33 = undertowEmbeddedServletContainerFactory16.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory35.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray40 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory39.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray40);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray44 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory43.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray44);
        undertowEmbeddedServletContainerFactory39.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray44);
        undertowEmbeddedServletContainerFactory35.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray44);
        java.lang.String str48 = undertowEmbeddedServletContainerFactory35.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory50.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory50.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray55 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer56 = undertowEmbeddedServletContainerFactory50.getEmbeddedServletContainer(servletContextInitializerArray55);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer57 = undertowEmbeddedServletContainerFactory35.getEmbeddedServletContainer(servletContextInitializerArray55);
        undertowEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray55);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer59 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray55);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass62 = undertowEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(ssl21);
        org.junit.Assert.assertNotNull(servletContextInitializerArray28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet33);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray40);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray44);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(servletContextInitializerArray55);
        org.junit.Assert.assertNotNull(embeddedServletContainer56);
        org.junit.Assert.assertNotNull(embeddedServletContainer57);
        org.junit.Assert.assertNotNull(embeddedServletContainer59);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test09870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09870");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory12.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory12.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory12.getSsl();
        boolean boolean18 = undertowEmbeddedServletContainerFactory12.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = null;
        undertowEmbeddedServletContainerFactory12.setJspServlet(jspServlet19);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings21);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        org.springframework.core.io.ResourceLoader resourceLoader25 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader25);
        int int27 = undertowEmbeddedServletContainerFactory1.getPort();
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        java.io.File file30 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file30);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection32 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection33 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.Compression compression34 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression34);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 32 + "'", int27 == 32);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection32);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection33);
    }

    @Test
    public void test09871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09871");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        java.io.File file2 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file2);
        org.springframework.boot.context.embedded.Compression compression4 = undertowEmbeddedServletContainerFactory1.getCompression();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) 'a');
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        org.junit.Assert.assertNull(compression4);
    }

    @Test
    public void test09872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09872");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory5.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray6);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory9.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        undertowEmbeddedServletContainerFactory5.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.lang.String str14 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str15 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 10);
        int int20 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory24.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray27 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory24.addBuilderCustomizers(undertowBuilderCustomizerArray27);
        undertowEmbeddedServletContainerFactory22.addBuilderCustomizers(undertowBuilderCustomizerArray27);
        org.springframework.boot.context.embedded.Ssl ssl30 = null;
        undertowEmbeddedServletContainerFactory22.setSsl(ssl30);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory33.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory33.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl38 = undertowEmbeddedServletContainerFactory33.getSsl();
        boolean boolean39 = undertowEmbeddedServletContainerFactory33.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet40 = null;
        undertowEmbeddedServletContainerFactory33.setJspServlet(jspServlet40);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = undertowEmbeddedServletContainerFactory33.getMimeMappings();
        undertowEmbeddedServletContainerFactory22.setMimeMappings(mimeMappings42);
        undertowEmbeddedServletContainerFactory22.setAccessLogEnabled(false);
        org.springframework.core.io.ResourceLoader resourceLoader46 = null;
        undertowEmbeddedServletContainerFactory22.setResourceLoader(resourceLoader46);
        int int48 = undertowEmbeddedServletContainerFactory22.getPort();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings49 = undertowEmbeddedServletContainerFactory22.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings49);
        java.io.File file51 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray27);
        org.junit.Assert.assertNull(ssl38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 32 + "'", int48 == 32);
        org.junit.Assert.assertNotNull(mimeMappings49);
        org.junit.Assert.assertNull(file51);
    }

    @Test
    public void test09873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09873");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory12.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray13);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory12.setSessionStoreDir(file15);
        undertowEmbeddedServletContainerFactory12.setPort(0);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        undertowEmbeddedServletContainerFactory12.addInitializers(servletContextInitializerArray19);
        org.springframework.core.io.ResourceLoader resourceLoader21 = null;
        undertowEmbeddedServletContainerFactory12.setResourceLoader(resourceLoader21);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        int int24 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray27 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory26.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        org.springframework.boot.context.embedded.Ssl ssl29 = null;
        undertowEmbeddedServletContainerFactory26.setSsl(ssl29);
        undertowEmbeddedServletContainerFactory26.setPort(0);
        java.io.File file33 = null;
        undertowEmbeddedServletContainerFactory26.setSessionStoreDir(file33);
        org.springframework.boot.context.embedded.Compression compression35 = null;
        undertowEmbeddedServletContainerFactory26.setCompression(compression35);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray37 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory26.addErrorPages(errorPageArray37);
        org.springframework.boot.context.embedded.JspServlet jspServlet39 = undertowEmbeddedServletContainerFactory26.getJspServlet();
        undertowEmbeddedServletContainerFactory12.setJspServlet(jspServlet39);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory42.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory42.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl47 = undertowEmbeddedServletContainerFactory42.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer49 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap48);
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer51 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap50);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer53 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap52);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray54 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer49, initParameterConfiguringServletContextInitializer51, initParameterConfiguringServletContextInitializer53 };
        undertowEmbeddedServletContainerFactory42.addInitializers(servletContextInitializerArray54);
        undertowEmbeddedServletContainerFactory42.setJspServletClassName("hi!");
        int int58 = undertowEmbeddedServletContainerFactory42.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet59 = undertowEmbeddedServletContainerFactory42.getErrorPages();
        org.springframework.boot.context.embedded.JspServlet jspServlet60 = undertowEmbeddedServletContainerFactory42.getJspServlet();
        undertowEmbeddedServletContainerFactory42.setSessionTimeout((int) 'a');
        undertowEmbeddedServletContainerFactory42.setDisplayName("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet65 = undertowEmbeddedServletContainerFactory42.getErrorPages();
        undertowEmbeddedServletContainerFactory12.setErrorPages(errorPageSet65);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet65);
        java.util.concurrent.TimeUnit timeUnit69 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout(1800, timeUnit69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray13);
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1800 + "'", int24 == 1800);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray27);
        org.junit.Assert.assertNotNull(errorPageArray37);
        org.junit.Assert.assertNotNull(jspServlet39);
        org.junit.Assert.assertNull(ssl47);
        org.junit.Assert.assertNotNull(servletContextInitializerArray54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet59);
        org.junit.Assert.assertNotNull(jspServlet60);
        org.junit.Assert.assertNotNull(errorPageSet65);
    }

    @Test
    public void test09874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09874");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        java.io.File file11 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file11);
        org.springframework.boot.context.embedded.Ssl ssl13 = undertowEmbeddedServletContainerFactory1.getSsl();
        int int14 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory16.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory16.setUseForwardHeaders(true);
        undertowEmbeddedServletContainerFactory16.setIoThreads((java.lang.Integer) 1800);
        undertowEmbeddedServletContainerFactory16.setSessionTimeout(0);
        java.lang.String str25 = undertowEmbeddedServletContainerFactory16.getContextPath();
        java.io.File file26 = null;
        undertowEmbeddedServletContainerFactory16.setSessionStoreDir(file26);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.net.InetAddress inetAddress30 = null;
        undertowEmbeddedServletContainerFactory29.setAddress(inetAddress30);
        java.net.InetAddress inetAddress32 = undertowEmbeddedServletContainerFactory29.getAddress();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection33 = undertowEmbeddedServletContainerFactory29.getBuilderCustomizers();
        int int34 = undertowEmbeddedServletContainerFactory29.getSessionTimeout();
        undertowEmbeddedServletContainerFactory29.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.JspServlet jspServlet37 = undertowEmbeddedServletContainerFactory29.getJspServlet();
        undertowEmbeddedServletContainerFactory16.setJspServlet(jspServlet37);
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet37);
        org.springframework.boot.context.embedded.Compression compression40 = undertowEmbeddedServletContainerFactory1.getCompression();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNull(ssl13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1800 + "'", int14 == 1800);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(inetAddress32);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1800 + "'", int34 == 1800);
        org.junit.Assert.assertNotNull(jspServlet37);
        org.junit.Assert.assertNull(compression40);
    }

    @Test
    public void test09875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09875");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 100);
        undertowEmbeddedServletContainerFactory2.setPort(1800);
        java.lang.String str5 = undertowEmbeddedServletContainerFactory2.getContextPath();
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file6);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory9.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        org.springframework.boot.context.embedded.Ssl ssl12 = null;
        undertowEmbeddedServletContainerFactory9.setSsl(ssl12);
        org.springframework.boot.context.embedded.Ssl ssl14 = undertowEmbeddedServletContainerFactory9.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory16.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray17);
        org.springframework.boot.context.embedded.Ssl ssl19 = null;
        undertowEmbeddedServletContainerFactory16.setSsl(ssl19);
        undertowEmbeddedServletContainerFactory16.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file25 = null;
        undertowEmbeddedServletContainerFactory24.setAccessLogDirectory(file25);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray27 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory24.addErrorPages(errorPageArray27);
        org.springframework.boot.context.embedded.Compression compression29 = undertowEmbeddedServletContainerFactory24.getCompression();
        org.springframework.boot.context.embedded.JspServlet jspServlet30 = undertowEmbeddedServletContainerFactory24.getJspServlet();
        undertowEmbeddedServletContainerFactory16.setJspServlet(jspServlet30);
        undertowEmbeddedServletContainerFactory9.setJspServlet(jspServlet30);
        undertowEmbeddedServletContainerFactory2.setJspServlet(jspServlet30);
        boolean boolean34 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        java.io.File file35 = null;
        undertowEmbeddedServletContainerFactory2.setSessionStoreDir(file35);
        undertowEmbeddedServletContainerFactory2.setAccessLogPattern("");
        org.springframework.boot.context.embedded.Compression compression39 = undertowEmbeddedServletContainerFactory2.getCompression();
        undertowEmbeddedServletContainerFactory2.setBufferSize((java.lang.Integer) 32);
        java.net.InetAddress inetAddress42 = null;
        undertowEmbeddedServletContainerFactory2.setAddress(inetAddress42);
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertNull(ssl14);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray17);
        org.junit.Assert.assertNotNull(errorPageArray27);
        org.junit.Assert.assertNull(compression29);
        org.junit.Assert.assertNotNull(jspServlet30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(compression39);
    }

    @Test
    public void test09876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09876");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file4);
        undertowEmbeddedServletContainerFactory1.setPort(0);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray8 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray8);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.Compression compression16 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression16);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file20 = undertowEmbeddedServletContainerFactory19.getSessionStoreDir();
        boolean boolean21 = undertowEmbeddedServletContainerFactory19.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory19.setDisplayName("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory25.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory25.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl30 = undertowEmbeddedServletContainerFactory25.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer32 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap31);
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer34 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap33);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer36 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap35);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray37 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer32, initParameterConfiguringServletContextInitializer34, initParameterConfiguringServletContextInitializer36 };
        undertowEmbeddedServletContainerFactory25.addInitializers(servletContextInitializerArray37);
        undertowEmbeddedServletContainerFactory25.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory25.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file45 = undertowEmbeddedServletContainerFactory44.getSessionStoreDir();
        boolean boolean46 = undertowEmbeddedServletContainerFactory44.isAccessLogEnabled();
        java.io.File file47 = null;
        undertowEmbeddedServletContainerFactory44.setAccessLogDirectory(file47);
        undertowEmbeddedServletContainerFactory44.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray53 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory52.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray53);
        org.springframework.boot.context.embedded.Ssl ssl55 = null;
        undertowEmbeddedServletContainerFactory52.setSsl(ssl55);
        org.springframework.boot.context.embedded.Ssl ssl57 = undertowEmbeddedServletContainerFactory52.getSsl();
        undertowEmbeddedServletContainerFactory52.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory52.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection62 = undertowEmbeddedServletContainerFactory52.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory52.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory66.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray71 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory70.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray71);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray75 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory74.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray75);
        undertowEmbeddedServletContainerFactory70.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray75);
        undertowEmbeddedServletContainerFactory66.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray75);
        java.lang.String str79 = undertowEmbeddedServletContainerFactory66.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory81 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory81.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory81.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray86 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer87 = undertowEmbeddedServletContainerFactory81.getEmbeddedServletContainer(servletContextInitializerArray86);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer88 = undertowEmbeddedServletContainerFactory66.getEmbeddedServletContainer(servletContextInitializerArray86);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer89 = undertowEmbeddedServletContainerFactory52.getEmbeddedServletContainer(servletContextInitializerArray86);
        undertowEmbeddedServletContainerFactory44.addInitializers(servletContextInitializerArray86);
        undertowEmbeddedServletContainerFactory25.addInitializers(servletContextInitializerArray86);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer92 = undertowEmbeddedServletContainerFactory19.getEmbeddedServletContainer(servletContextInitializerArray86);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray86);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray8);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection13);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(ssl30);
        org.junit.Assert.assertNotNull(servletContextInitializerArray37);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray53);
        org.junit.Assert.assertNull(ssl57);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection62);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray71);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray75);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(servletContextInitializerArray86);
        org.junit.Assert.assertNotNull(embeddedServletContainer87);
        org.junit.Assert.assertNotNull(embeddedServletContainer88);
        org.junit.Assert.assertNotNull(embeddedServletContainer89);
        org.junit.Assert.assertNotNull(embeddedServletContainer92);
    }

    @Test
    public void test09877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09877");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory12.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory12.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory12.getSsl();
        boolean boolean18 = undertowEmbeddedServletContainerFactory12.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = null;
        undertowEmbeddedServletContainerFactory12.setJspServlet(jspServlet19);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings21);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        org.springframework.core.io.ResourceLoader resourceLoader25 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader25);
        int int27 = undertowEmbeddedServletContainerFactory1.getPort();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 97);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray32 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory31.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray32);
        org.springframework.boot.context.embedded.Ssl ssl34 = null;
        undertowEmbeddedServletContainerFactory31.setSsl(ssl34);
        org.springframework.boot.context.embedded.Ssl ssl36 = undertowEmbeddedServletContainerFactory31.getSsl();
        undertowEmbeddedServletContainerFactory31.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory31.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection41 = undertowEmbeddedServletContainerFactory31.getBuilderCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader42 = null;
        undertowEmbeddedServletContainerFactory31.setResourceLoader(resourceLoader42);
        org.springframework.boot.context.embedded.JspServlet jspServlet44 = undertowEmbeddedServletContainerFactory31.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file47 = undertowEmbeddedServletContainerFactory46.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory46.setPersistSession(false);
        undertowEmbeddedServletContainerFactory46.setJspServletClassName("");
        java.io.File file52 = undertowEmbeddedServletContainerFactory46.getSessionStoreDir();
        java.lang.String str53 = undertowEmbeddedServletContainerFactory46.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory55.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory55.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl60 = undertowEmbeddedServletContainerFactory55.getSsl();
        boolean boolean61 = undertowEmbeddedServletContainerFactory55.isAccessLogEnabled();
        java.io.File file62 = null;
        undertowEmbeddedServletContainerFactory55.setAccessLogDirectory(file62);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray64 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet65 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet65, errorPageArray64);
        undertowEmbeddedServletContainerFactory55.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet65);
        undertowEmbeddedServletContainerFactory46.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet65);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory70.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray73 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory70.addBuilderCustomizers(undertowBuilderCustomizerArray73);
        undertowEmbeddedServletContainerFactory46.addBuilderCustomizers(undertowBuilderCustomizerArray73);
        undertowEmbeddedServletContainerFactory31.addBuilderCustomizers(undertowBuilderCustomizerArray73);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray73);
        undertowEmbeddedServletContainerFactory1.setPersistSession(true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 32 + "'", int27 == 32);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray32);
        org.junit.Assert.assertNull(ssl36);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection41);
        org.junit.Assert.assertNotNull(jspServlet44);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(ssl60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(errorPageArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray73);
    }

    @Test
    public void test09878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09878");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        org.springframework.core.io.ResourceLoader resourceLoader8 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader8);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader10);
        java.net.InetAddress inetAddress12 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress12);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 97);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test09879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09879");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file4);
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file6);
        org.springframework.core.io.ResourceLoader resourceLoader8 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader8);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        java.io.File file12 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        int int15 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        java.io.File file16 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file16);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
    }

    @Test
    public void test09880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09880");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory9.setAccessLogDirectory(file10);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray12 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory9.addErrorPages(errorPageArray12);
        org.springframework.boot.context.embedded.Compression compression14 = undertowEmbeddedServletContainerFactory9.getCompression();
        org.springframework.boot.context.embedded.JspServlet jspServlet15 = undertowEmbeddedServletContainerFactory9.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet15);
        java.io.File file17 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) (-1));
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.Compression compression21 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression21);
        int int23 = undertowEmbeddedServletContainerFactory1.getPort();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(errorPageArray12);
        org.junit.Assert.assertNull(compression14);
        org.junit.Assert.assertNotNull(jspServlet15);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
    }

    @Test
    public void test09881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09881");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory2.setDisplayName("");
        undertowEmbeddedServletContainerFactory2.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory2.setDisplayName("");
        org.springframework.boot.context.embedded.Compression compression9 = undertowEmbeddedServletContainerFactory2.getCompression();
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(true);
        java.io.File file12 = undertowEmbeddedServletContainerFactory2.getSessionStoreDir();
        java.lang.String str13 = undertowEmbeddedServletContainerFactory2.getDisplayName();
        org.junit.Assert.assertNull(compression9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test09882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09882");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.Ssl ssl8 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl8);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(1);
        org.springframework.core.io.ResourceLoader resourceLoader12 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader12);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test09883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09883");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 32);
        int int19 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory20.setWorkerThreads((java.lang.Integer) (-1));
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 1);
        undertowEmbeddedServletContainerFactory24.setBufferSize((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory24.setPort((int) 'a');
        java.io.File file29 = null;
        undertowEmbeddedServletContainerFactory24.setAccessLogDirectory(file29);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) 'a');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray36 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory35.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray40 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory39.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray40);
        undertowEmbeddedServletContainerFactory35.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray40);
        undertowEmbeddedServletContainerFactory33.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray40);
        java.lang.String str44 = undertowEmbeddedServletContainerFactory33.getContextPath();
        undertowEmbeddedServletContainerFactory33.setDisplayName("");
        undertowEmbeddedServletContainerFactory33.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings49 = undertowEmbeddedServletContainerFactory33.getMimeMappings();
        undertowEmbeddedServletContainerFactory24.setMimeMappings(mimeMappings49);
        undertowEmbeddedServletContainerFactory20.setMimeMappings(mimeMappings49);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings49);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray36);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(mimeMappings49);
    }

    @Test
    public void test09884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09884");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 0);
        boolean boolean3 = undertowEmbeddedServletContainerFactory2.isPersistSession();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection4 = undertowEmbeddedServletContainerFactory2.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.Compression compression5 = null;
        undertowEmbeddedServletContainerFactory2.setCompression(compression5);
        boolean boolean7 = undertowEmbeddedServletContainerFactory2.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test09885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09885");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory12.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory12.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory12.getSsl();
        boolean boolean18 = undertowEmbeddedServletContainerFactory12.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = null;
        undertowEmbeddedServletContainerFactory12.setJspServlet(jspServlet19);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings21);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection23 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        int int26 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file29 = undertowEmbeddedServletContainerFactory28.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory28.setPersistSession(false);
        undertowEmbeddedServletContainerFactory28.setJspServletClassName("");
        java.io.File file34 = undertowEmbeddedServletContainerFactory28.getSessionStoreDir();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet35 = undertowEmbeddedServletContainerFactory28.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory37.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray42 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory41.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray42);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray46 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory45.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray46);
        undertowEmbeddedServletContainerFactory41.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray46);
        undertowEmbeddedServletContainerFactory37.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray46);
        java.lang.String str50 = undertowEmbeddedServletContainerFactory37.getContextPath();
        java.lang.String str51 = undertowEmbeddedServletContainerFactory37.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory53.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory53.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray58 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer59 = undertowEmbeddedServletContainerFactory53.getEmbeddedServletContainer(servletContextInitializerArray58);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer60 = undertowEmbeddedServletContainerFactory37.getEmbeddedServletContainer(servletContextInitializerArray58);
        undertowEmbeddedServletContainerFactory28.addInitializers(servletContextInitializerArray58);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray58);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        java.io.File file65 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(errorPageSet35);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray42);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray46);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(servletContextInitializerArray58);
        org.junit.Assert.assertNotNull(embeddedServletContainer59);
        org.junit.Assert.assertNotNull(embeddedServletContainer60);
        org.junit.Assert.assertNull(file65);
    }

    @Test
    public void test09886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09886");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 10);
        org.springframework.boot.context.embedded.Compression compression3 = undertowEmbeddedServletContainerFactory2.getCompression();
        java.net.InetAddress inetAddress4 = null;
        undertowEmbeddedServletContainerFactory2.setAddress(inetAddress4);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory2.getContextPath();
        org.junit.Assert.assertNull(compression3);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test09887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09887");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1800);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory11.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory15.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory15.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl20 = undertowEmbeddedServletContainerFactory15.getSsl();
        boolean boolean21 = undertowEmbeddedServletContainerFactory15.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet22 = null;
        undertowEmbeddedServletContainerFactory15.setJspServlet(jspServlet22);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray24 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet25 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet25, errorPageArray24);
        undertowEmbeddedServletContainerFactory15.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet25);
        undertowEmbeddedServletContainerFactory11.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet25);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) 'a');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray34 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory33.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray34);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray38 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory37.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray38);
        undertowEmbeddedServletContainerFactory33.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray38);
        undertowEmbeddedServletContainerFactory31.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray38);
        java.lang.String str42 = undertowEmbeddedServletContainerFactory31.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory44.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray49 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory48.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray49);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray53 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory52.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray53);
        undertowEmbeddedServletContainerFactory48.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray53);
        undertowEmbeddedServletContainerFactory44.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray53);
        java.lang.String str57 = undertowEmbeddedServletContainerFactory44.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory59.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory59.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray64 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer65 = undertowEmbeddedServletContainerFactory59.getEmbeddedServletContainer(servletContextInitializerArray64);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer66 = undertowEmbeddedServletContainerFactory44.getEmbeddedServletContainer(servletContextInitializerArray64);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer67 = undertowEmbeddedServletContainerFactory31.getEmbeddedServletContainer(servletContextInitializerArray64);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer68 = undertowEmbeddedServletContainerFactory11.getEmbeddedServletContainer(servletContextInitializerArray64);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer69 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray64);
        undertowEmbeddedServletContainerFactory1.setPort((int) ' ');
        org.junit.Assert.assertNull(ssl20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(errorPageArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray34);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray49);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray53);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(servletContextInitializerArray64);
        org.junit.Assert.assertNotNull(embeddedServletContainer65);
        org.junit.Assert.assertNotNull(embeddedServletContainer66);
        org.junit.Assert.assertNotNull(embeddedServletContainer67);
        org.junit.Assert.assertNotNull(embeddedServletContainer68);
        org.junit.Assert.assertNotNull(embeddedServletContainer69);
    }

    @Test
    public void test09888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09888");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 0);
        int int12 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.lang.String str14 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test09889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09889");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.Compression compression7 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression7);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection9 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.Compression compression12 = undertowEmbeddedServletContainerFactory1.getCompression();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(97);
        java.lang.String str15 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        int int16 = undertowEmbeddedServletContainerFactory1.getPort();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection9);
        org.junit.Assert.assertNull(compression12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
    }

    @Test
    public void test09890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09890");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) '#');
        java.io.File file3 = undertowEmbeddedServletContainerFactory2.getDocumentRoot();
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory2.setSsl(ssl4);
        boolean boolean6 = undertowEmbeddedServletContainerFactory2.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory8.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory8.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl13 = undertowEmbeddedServletContainerFactory8.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer19 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap18);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray20 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer15, initParameterConfiguringServletContextInitializer17, initParameterConfiguringServletContextInitializer19 };
        undertowEmbeddedServletContainerFactory8.addInitializers(servletContextInitializerArray20);
        undertowEmbeddedServletContainerFactory8.setPort((int) (byte) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray26 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory25.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray26);
        org.springframework.boot.context.embedded.Ssl ssl28 = null;
        undertowEmbeddedServletContainerFactory25.setSsl(ssl28);
        undertowEmbeddedServletContainerFactory25.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet32 = undertowEmbeddedServletContainerFactory25.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file38 = undertowEmbeddedServletContainerFactory37.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory37.setPersistSession(false);
        undertowEmbeddedServletContainerFactory37.setJspServletClassName("");
        java.io.File file43 = undertowEmbeddedServletContainerFactory37.getSessionStoreDir();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet44 = undertowEmbeddedServletContainerFactory37.getErrorPages();
        undertowEmbeddedServletContainerFactory35.setErrorPages(errorPageSet44);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray48 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory47.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray48);
        org.springframework.boot.context.embedded.Ssl ssl50 = null;
        undertowEmbeddedServletContainerFactory47.setSsl(ssl50);
        undertowEmbeddedServletContainerFactory47.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet54 = undertowEmbeddedServletContainerFactory47.getErrorPages();
        undertowEmbeddedServletContainerFactory47.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) 'a');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray62 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory61.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray62);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray66 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory65.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray66);
        undertowEmbeddedServletContainerFactory61.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray66);
        undertowEmbeddedServletContainerFactory59.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray66);
        undertowEmbeddedServletContainerFactory47.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray66);
        undertowEmbeddedServletContainerFactory35.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray66);
        undertowEmbeddedServletContainerFactory25.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray66);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet73 = undertowEmbeddedServletContainerFactory25.getErrorPages();
        undertowEmbeddedServletContainerFactory8.setErrorPages(errorPageSet73);
        undertowEmbeddedServletContainerFactory2.setErrorPages(errorPageSet73);
        org.springframework.boot.context.embedded.Compression compression76 = null;
        undertowEmbeddedServletContainerFactory2.setCompression(compression76);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(ssl13);
        org.junit.Assert.assertNotNull(servletContextInitializerArray20);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray26);
        org.junit.Assert.assertNotNull(errorPageSet32);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(errorPageSet44);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray48);
        org.junit.Assert.assertNotNull(errorPageSet54);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray62);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray66);
        org.junit.Assert.assertNotNull(errorPageSet73);
    }

    @Test
    public void test09891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09891");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection11 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        java.net.InetAddress inetAddress14 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        java.lang.String str17 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        boolean boolean18 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory20.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray21);
        org.springframework.boot.context.embedded.Ssl ssl23 = null;
        undertowEmbeddedServletContainerFactory20.setSsl(ssl23);
        undertowEmbeddedServletContainerFactory20.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet27 = undertowEmbeddedServletContainerFactory20.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader28 = null;
        undertowEmbeddedServletContainerFactory20.setResourceLoader(resourceLoader28);
        java.io.File file30 = undertowEmbeddedServletContainerFactory20.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory32.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray37 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory36.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray37);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray41 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory40.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray41);
        undertowEmbeddedServletContainerFactory36.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray41);
        undertowEmbeddedServletContainerFactory32.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray41);
        java.lang.String str45 = undertowEmbeddedServletContainerFactory32.getContextPath();
        java.lang.String str46 = undertowEmbeddedServletContainerFactory32.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory48.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory48.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray53 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer54 = undertowEmbeddedServletContainerFactory48.getEmbeddedServletContainer(servletContextInitializerArray53);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer55 = undertowEmbeddedServletContainerFactory32.getEmbeddedServletContainer(servletContextInitializerArray53);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer56 = undertowEmbeddedServletContainerFactory20.getEmbeddedServletContainer(servletContextInitializerArray53);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray53);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 52);
        int int62 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection11);
        org.junit.Assert.assertNull(inetAddress14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray21);
        org.junit.Assert.assertNotNull(errorPageSet27);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray37);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(servletContextInitializerArray53);
        org.junit.Assert.assertNotNull(embeddedServletContainer54);
        org.junit.Assert.assertNotNull(embeddedServletContainer55);
        org.junit.Assert.assertNotNull(embeddedServletContainer56);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1800 + "'", int62 == 1800);
    }

    @Test
    public void test09892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09892");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file8);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection10 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.Compression compression11 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression11);
        undertowEmbeddedServletContainerFactory1.setPersistSession(true);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        int int17 = undertowEmbeddedServletContainerFactory1.getPort();
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection10);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test09893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09893");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression8);
        java.lang.String str10 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1800);
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        boolean boolean19 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test09894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09894");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        boolean boolean12 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory14.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory14.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Compression compression19 = undertowEmbeddedServletContainerFactory14.getCompression();
        java.io.File file20 = null;
        undertowEmbeddedServletContainerFactory14.setSessionStoreDir(file20);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory23.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory23.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl28 = undertowEmbeddedServletContainerFactory23.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer30 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap29);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer32 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap31);
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer34 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap33);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray35 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer30, initParameterConfiguringServletContextInitializer32, initParameterConfiguringServletContextInitializer34 };
        undertowEmbeddedServletContainerFactory23.addInitializers(servletContextInitializerArray35);
        undertowEmbeddedServletContainerFactory23.setJspServletClassName("hi!");
        int int39 = undertowEmbeddedServletContainerFactory23.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file42 = undertowEmbeddedServletContainerFactory41.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory41.setPersistSession(false);
        undertowEmbeddedServletContainerFactory41.setJspServletClassName("");
        java.io.File file47 = undertowEmbeddedServletContainerFactory41.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory41.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory41.setBufferSize((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.JspServlet jspServlet52 = undertowEmbeddedServletContainerFactory41.getJspServlet();
        undertowEmbeddedServletContainerFactory23.setJspServlet(jspServlet52);
        undertowEmbeddedServletContainerFactory14.setJspServlet(jspServlet52);
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet52);
        java.io.File file56 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.io.File file57 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file57);
        org.springframework.boot.context.embedded.Ssl ssl59 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl60 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 32);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(compression19);
        org.junit.Assert.assertNull(ssl28);
        org.junit.Assert.assertNotNull(servletContextInitializerArray35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(jspServlet52);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(ssl59);
        org.junit.Assert.assertNull(ssl60);
    }

    @Test
    public void test09895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09895");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression8);
        java.lang.String str10 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory14.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory14.setPersistSession(false);
        boolean boolean19 = undertowEmbeddedServletContainerFactory14.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory21.setPort((int) (byte) -1);
        boolean boolean24 = undertowEmbeddedServletContainerFactory21.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory26.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory26.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl31 = null;
        undertowEmbeddedServletContainerFactory26.setSsl(ssl31);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray33 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory26.addErrorPages(errorPageArray33);
        undertowEmbeddedServletContainerFactory21.addErrorPages(errorPageArray33);
        undertowEmbeddedServletContainerFactory14.addErrorPages(errorPageArray33);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray33);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.JspServlet jspServlet39 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(errorPageArray33);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNotNull(jspServlet39);
    }

    @Test
    public void test09896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09896");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file2 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file6 = undertowEmbeddedServletContainerFactory5.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory5.setPersistSession(false);
        undertowEmbeddedServletContainerFactory5.setJspServletClassName("");
        java.io.File file11 = undertowEmbeddedServletContainerFactory5.getSessionStoreDir();
        java.lang.String str12 = undertowEmbeddedServletContainerFactory5.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory14.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory14.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory14.getSsl();
        boolean boolean20 = undertowEmbeddedServletContainerFactory14.isAccessLogEnabled();
        java.io.File file21 = null;
        undertowEmbeddedServletContainerFactory14.setAccessLogDirectory(file21);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray23 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24, errorPageArray23);
        undertowEmbeddedServletContainerFactory14.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24);
        undertowEmbeddedServletContainerFactory5.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24);
        boolean boolean29 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        boolean boolean30 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        boolean boolean31 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.io.File file32 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        int int33 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.springframework.boot.context.embedded.Compression compression34 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression34);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(errorPageArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1800 + "'", int33 == 1800);
    }

    @Test
    public void test09897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09897");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet9 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setPort((-1));
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(1);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 35);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(errorPageSet9);
    }

    @Test
    public void test09898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09898");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) 'a');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray5 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory4.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray5);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray9 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory8.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray9);
        undertowEmbeddedServletContainerFactory4.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray9);
        undertowEmbeddedServletContainerFactory2.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory14.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray15);
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory14.setSessionStoreDir(file17);
        undertowEmbeddedServletContainerFactory14.setPort(0);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray21 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray21);
        org.springframework.core.io.ResourceLoader resourceLoader23 = null;
        undertowEmbeddedServletContainerFactory14.setResourceLoader(resourceLoader23);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory27.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory31.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory31.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl36 = undertowEmbeddedServletContainerFactory31.getSsl();
        boolean boolean37 = undertowEmbeddedServletContainerFactory31.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet38 = null;
        undertowEmbeddedServletContainerFactory31.setJspServlet(jspServlet38);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray40 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet41 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet41, errorPageArray40);
        undertowEmbeddedServletContainerFactory31.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet41);
        undertowEmbeddedServletContainerFactory27.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet41);
        undertowEmbeddedServletContainerFactory14.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet41);
        undertowEmbeddedServletContainerFactory2.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet41);
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(true);
        undertowEmbeddedServletContainerFactory2.setWorkerThreads((java.lang.Integer) 97);
        undertowEmbeddedServletContainerFactory2.setDisplayName("hi!");
        org.springframework.core.io.ResourceLoader resourceLoader53 = null;
        undertowEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader53);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray5);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray9);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray15);
        org.junit.Assert.assertNotNull(servletContextInitializerArray21);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNull(ssl36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(errorPageArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test09899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09899");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory5.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray6);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory9.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        undertowEmbeddedServletContainerFactory5.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.lang.String str14 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory16.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory16.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray21 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer22 = undertowEmbeddedServletContainerFactory16.getEmbeddedServletContainer(servletContextInitializerArray21);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer23 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray21);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        java.io.File file26 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file26);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory29.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory29.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader34 = null;
        undertowEmbeddedServletContainerFactory29.setResourceLoader(resourceLoader34);
        org.springframework.boot.context.embedded.Compression compression36 = null;
        undertowEmbeddedServletContainerFactory29.setCompression(compression36);
        java.lang.String str38 = undertowEmbeddedServletContainerFactory29.getContextPath();
        undertowEmbeddedServletContainerFactory29.setUseForwardHeaders(true);
        java.lang.String str41 = undertowEmbeddedServletContainerFactory29.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory43.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory43.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl48 = undertowEmbeddedServletContainerFactory43.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer50 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap49);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer52 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap51);
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer54 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap53);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray55 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer50, initParameterConfiguringServletContextInitializer52, initParameterConfiguringServletContextInitializer54 };
        undertowEmbeddedServletContainerFactory43.addInitializers(servletContextInitializerArray55);
        undertowEmbeddedServletContainerFactory29.addInitializers(servletContextInitializerArray55);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray55);
        java.io.File file59 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file59);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(servletContextInitializerArray21);
        org.junit.Assert.assertNotNull(embeddedServletContainer22);
        org.junit.Assert.assertNotNull(embeddedServletContainer23);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(ssl48);
        org.junit.Assert.assertNotNull(servletContextInitializerArray55);
    }

    @Test
    public void test09900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09900");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression8);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.Ssl ssl12 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.io.File file13 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 97);
        java.io.File file20 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file20);
        org.junit.Assert.assertNull(ssl12);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test09901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09901");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.net.InetAddress inetAddress9 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection12 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        int int13 = undertowEmbeddedServletContainerFactory1.getPort();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNull(inetAddress9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
    }

    @Test
    public void test09902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09902");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        java.net.InetAddress inetAddress11 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.Compression compression12 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression12);
        java.io.File file14 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file14);
        java.lang.String str16 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        java.lang.String str17 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.Compression compression18 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNull(inetAddress11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test09903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09903");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection11 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader12 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader12);
        org.springframework.boot.context.embedded.JspServlet jspServlet14 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection11);
        org.junit.Assert.assertNotNull(jspServlet14);
    }

    @Test
    public void test09904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09904");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray4);
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 10);
        java.net.InetAddress inetAddress9 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test09905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09905");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file15 = undertowEmbeddedServletContainerFactory14.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory14.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory19.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory19.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl24 = undertowEmbeddedServletContainerFactory19.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer26 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap25);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer28 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap27);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer30 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap29);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray31 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer26, initParameterConfiguringServletContextInitializer28, initParameterConfiguringServletContextInitializer30 };
        undertowEmbeddedServletContainerFactory19.addInitializers(servletContextInitializerArray31);
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray31);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory35.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory35.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl40 = undertowEmbeddedServletContainerFactory35.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer42 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap41);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer44 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap43);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer46 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap45);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray47 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer42, initParameterConfiguringServletContextInitializer44, initParameterConfiguringServletContextInitializer46 };
        undertowEmbeddedServletContainerFactory35.addInitializers(servletContextInitializerArray47);
        undertowEmbeddedServletContainerFactory35.setJspServletClassName("hi!");
        int int51 = undertowEmbeddedServletContainerFactory35.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet52 = undertowEmbeddedServletContainerFactory35.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory54.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray59 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory58.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray59);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray63 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory62.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray63);
        undertowEmbeddedServletContainerFactory58.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray63);
        undertowEmbeddedServletContainerFactory54.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray63);
        java.lang.String str67 = undertowEmbeddedServletContainerFactory54.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory69.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory69.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray74 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer75 = undertowEmbeddedServletContainerFactory69.getEmbeddedServletContainer(servletContextInitializerArray74);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer76 = undertowEmbeddedServletContainerFactory54.getEmbeddedServletContainer(servletContextInitializerArray74);
        undertowEmbeddedServletContainerFactory35.addInitializers(servletContextInitializerArray74);
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray74);
        undertowEmbeddedServletContainerFactory12.addInitializers(servletContextInitializerArray74);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer80 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray74);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet81 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(32);
        org.springframework.boot.context.embedded.JspServlet jspServlet84 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(ssl24);
        org.junit.Assert.assertNotNull(servletContextInitializerArray31);
        org.junit.Assert.assertNull(ssl40);
        org.junit.Assert.assertNotNull(servletContextInitializerArray47);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet52);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray59);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray63);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(servletContextInitializerArray74);
        org.junit.Assert.assertNotNull(embeddedServletContainer75);
        org.junit.Assert.assertNotNull(embeddedServletContainer76);
        org.junit.Assert.assertNotNull(embeddedServletContainer80);
        org.junit.Assert.assertNotNull(errorPageSet81);
        org.junit.Assert.assertNotNull(jspServlet84);
    }

    @Test
    public void test09906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09906");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader9);
        org.springframework.boot.context.embedded.Compression compression11 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.io.File file12 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.io.File file13 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file13);
        org.springframework.boot.context.embedded.Compression compression15 = undertowEmbeddedServletContainerFactory1.getCompression();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNull(compression11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(compression15);
    }

    @Test
    public void test09907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09907");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer8 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap7);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer10 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer12 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap11);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer8, initParameterConfiguringServletContextInitializer10, initParameterConfiguringServletContextInitializer12 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray13);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        int int17 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file20 = undertowEmbeddedServletContainerFactory19.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory19.setPersistSession(false);
        undertowEmbeddedServletContainerFactory19.setJspServletClassName("");
        java.io.File file25 = undertowEmbeddedServletContainerFactory19.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory19.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory19.setBufferSize((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.JspServlet jspServlet30 = undertowEmbeddedServletContainerFactory19.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet30);
        java.net.InetAddress inetAddress32 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.Compression compression35 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression35);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.Compression compression39 = undertowEmbeddedServletContainerFactory1.getCompression();
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(jspServlet30);
        org.junit.Assert.assertNull(inetAddress32);
        org.junit.Assert.assertNull(compression39);
    }

    @Test
    public void test09908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09908");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory5.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) '4');
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory14.setPort((int) (byte) -1);
        boolean boolean17 = undertowEmbeddedServletContainerFactory14.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory19.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory19.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl24 = null;
        undertowEmbeddedServletContainerFactory19.setSsl(ssl24);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray26 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory19.addErrorPages(errorPageArray26);
        undertowEmbeddedServletContainerFactory14.addErrorPages(errorPageArray26);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray26);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection30 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory32.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory32.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl37 = undertowEmbeddedServletContainerFactory32.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer39 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer41 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap40);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer43 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap42);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray44 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer39, initParameterConfiguringServletContextInitializer41, initParameterConfiguringServletContextInitializer43 };
        undertowEmbeddedServletContainerFactory32.addInitializers(servletContextInitializerArray44);
        undertowEmbeddedServletContainerFactory32.setJspServletClassName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection48 = undertowEmbeddedServletContainerFactory32.getDeploymentInfoCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader49 = null;
        undertowEmbeddedServletContainerFactory32.setResourceLoader(resourceLoader49);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file53 = null;
        undertowEmbeddedServletContainerFactory52.setAccessLogDirectory(file53);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray55 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory52.addErrorPages(errorPageArray55);
        org.springframework.boot.context.embedded.Compression compression57 = undertowEmbeddedServletContainerFactory52.getCompression();
        undertowEmbeddedServletContainerFactory52.setDisplayName("hi!");
        int int60 = undertowEmbeddedServletContainerFactory52.getPort();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection61 = undertowEmbeddedServletContainerFactory52.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory52.setWorkerThreads((java.lang.Integer) 1800);
        java.io.File file64 = undertowEmbeddedServletContainerFactory52.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file67 = undertowEmbeddedServletContainerFactory66.getSessionStoreDir();
        java.lang.String str68 = undertowEmbeddedServletContainerFactory66.getContextPath();
        java.net.InetAddress inetAddress69 = undertowEmbeddedServletContainerFactory66.getAddress();
        undertowEmbeddedServletContainerFactory66.setIoThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory66.setRegisterDefaultServlet(true);
        boolean boolean74 = undertowEmbeddedServletContainerFactory66.isRegisterDefaultServlet();
        boolean boolean75 = undertowEmbeddedServletContainerFactory66.isAccessLogEnabled();
        java.lang.String str76 = undertowEmbeddedServletContainerFactory66.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory78 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray79 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory78.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray79);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory82 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray83 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory82.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray83);
        undertowEmbeddedServletContainerFactory78.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray83);
        undertowEmbeddedServletContainerFactory66.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray83);
        undertowEmbeddedServletContainerFactory52.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray83);
        undertowEmbeddedServletContainerFactory32.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray83);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray83);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(97);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray6);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(errorPageArray26);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection30);
        org.junit.Assert.assertNull(ssl37);
        org.junit.Assert.assertNotNull(servletContextInitializerArray44);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection48);
        org.junit.Assert.assertNotNull(errorPageArray55);
        org.junit.Assert.assertNull(compression57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection61);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNull(inetAddress69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray79);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray83);
    }

    @Test
    public void test09909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09909");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl12 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl12);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        int int16 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 100);
        undertowEmbeddedServletContainerFactory19.setPort(1800);
        java.lang.String str22 = undertowEmbeddedServletContainerFactory19.getContextPath();
        java.io.File file23 = null;
        undertowEmbeddedServletContainerFactory19.setDocumentRoot(file23);
        java.net.InetAddress inetAddress25 = null;
        undertowEmbeddedServletContainerFactory19.setAddress(inetAddress25);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory28.setPort((int) (byte) -1);
        boolean boolean31 = undertowEmbeddedServletContainerFactory28.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory33.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory33.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl38 = null;
        undertowEmbeddedServletContainerFactory33.setSsl(ssl38);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray40 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory33.addErrorPages(errorPageArray40);
        undertowEmbeddedServletContainerFactory28.addErrorPages(errorPageArray40);
        java.lang.String str43 = undertowEmbeddedServletContainerFactory28.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory45.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray50 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory49.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray50);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray54 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory53.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray54);
        undertowEmbeddedServletContainerFactory49.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray54);
        undertowEmbeddedServletContainerFactory45.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray54);
        java.lang.String str58 = undertowEmbeddedServletContainerFactory45.getContextPath();
        java.lang.String str59 = undertowEmbeddedServletContainerFactory45.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory61.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory61.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray66 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer67 = undertowEmbeddedServletContainerFactory61.getEmbeddedServletContainer(servletContextInitializerArray66);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer68 = undertowEmbeddedServletContainerFactory45.getEmbeddedServletContainer(servletContextInitializerArray66);
        undertowEmbeddedServletContainerFactory28.addInitializers(servletContextInitializerArray66);
        undertowEmbeddedServletContainerFactory19.addInitializers(servletContextInitializerArray66);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer71 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray66);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1800);
        org.springframework.core.io.ResourceLoader resourceLoader74 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader74);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(errorPageArray40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray50);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(servletContextInitializerArray66);
        org.junit.Assert.assertNotNull(embeddedServletContainer67);
        org.junit.Assert.assertNotNull(embeddedServletContainer68);
        org.junit.Assert.assertNotNull(embeddedServletContainer71);
    }

    @Test
    public void test09910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09910");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (-1));
        java.io.File file3 = undertowEmbeddedServletContainerFactory2.getDocumentRoot();
        undertowEmbeddedServletContainerFactory2.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory2.getSsl();
        undertowEmbeddedServletContainerFactory2.setSessionTimeout((int) '4');
        org.springframework.boot.context.embedded.Compression compression9 = undertowEmbeddedServletContainerFactory2.getCompression();
        org.springframework.boot.context.embedded.Compression compression10 = null;
        undertowEmbeddedServletContainerFactory2.setCompression(compression10);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNull(compression9);
    }

    @Test
    public void test09911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09911");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression8);
        java.lang.String str10 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        java.lang.String str13 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory15.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory15.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl20 = undertowEmbeddedServletContainerFactory15.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer22 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap21);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer24 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap23);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer26 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap25);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray27 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer22, initParameterConfiguringServletContextInitializer24, initParameterConfiguringServletContextInitializer26 };
        undertowEmbeddedServletContainerFactory15.addInitializers(servletContextInitializerArray27);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray27);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection32 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        int int33 = undertowEmbeddedServletContainerFactory1.getPort();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(ssl20);
        org.junit.Assert.assertNotNull(servletContextInitializerArray27);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test09912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09912");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory12.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory12.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory12.getSsl();
        boolean boolean18 = undertowEmbeddedServletContainerFactory12.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = null;
        undertowEmbeddedServletContainerFactory12.setJspServlet(jspServlet19);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings21);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        java.lang.String str25 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory29.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory29.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl34 = null;
        undertowEmbeddedServletContainerFactory29.setSsl(ssl34);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file38 = undertowEmbeddedServletContainerFactory37.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory37.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory42.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory42.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl47 = undertowEmbeddedServletContainerFactory42.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer49 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap48);
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer51 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap50);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer53 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap52);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray54 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer49, initParameterConfiguringServletContextInitializer51, initParameterConfiguringServletContextInitializer53 };
        undertowEmbeddedServletContainerFactory42.addInitializers(servletContextInitializerArray54);
        undertowEmbeddedServletContainerFactory37.addInitializers(servletContextInitializerArray54);
        undertowEmbeddedServletContainerFactory29.addInitializers(servletContextInitializerArray54);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory59.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory59.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl64 = undertowEmbeddedServletContainerFactory59.getSsl();
        boolean boolean65 = undertowEmbeddedServletContainerFactory59.isAccessLogEnabled();
        java.io.File file66 = null;
        undertowEmbeddedServletContainerFactory59.setAccessLogDirectory(file66);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray68 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet69 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet69, errorPageArray68);
        undertowEmbeddedServletContainerFactory59.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet69);
        undertowEmbeddedServletContainerFactory59.setAccessLogPattern("");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings74 = undertowEmbeddedServletContainerFactory59.getMimeMappings();
        undertowEmbeddedServletContainerFactory29.setMimeMappings(mimeMappings74);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings76 = undertowEmbeddedServletContainerFactory29.getMimeMappings();
        java.io.File file77 = null;
        undertowEmbeddedServletContainerFactory29.setSessionStoreDir(file77);
        java.lang.String str79 = undertowEmbeddedServletContainerFactory29.getDisplayName();
        undertowEmbeddedServletContainerFactory29.setSessionTimeout((int) (short) 1);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet82 = undertowEmbeddedServletContainerFactory29.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet82);
        java.net.InetAddress inetAddress84 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress84);
        java.io.File file86 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file86);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(ssl47);
        org.junit.Assert.assertNotNull(servletContextInitializerArray54);
        org.junit.Assert.assertNull(ssl64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(errorPageArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(mimeMappings74);
        org.junit.Assert.assertNotNull(mimeMappings76);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(errorPageSet82);
    }

    @Test
    public void test09913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09913");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        boolean boolean11 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        int int12 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 0);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file15);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 0);
        java.lang.String str22 = undertowEmbeddedServletContainerFactory21.getDisplayName();
        java.lang.String str23 = undertowEmbeddedServletContainerFactory21.getDisplayName();
        undertowEmbeddedServletContainerFactory21.setPersistSession(true);
        java.lang.String str26 = undertowEmbeddedServletContainerFactory21.getDisplayName();
        undertowEmbeddedServletContainerFactory21.setPersistSession(true);
        java.io.File file29 = null;
        undertowEmbeddedServletContainerFactory21.setAccessLogDirectory(file29);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = undertowEmbeddedServletContainerFactory21.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings31);
        java.io.File file33 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file33);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(mimeMappings31);
    }

    @Test
    public void test09914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09914");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression8);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory13.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory13.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl18 = undertowEmbeddedServletContainerFactory13.getSsl();
        boolean boolean19 = undertowEmbeddedServletContainerFactory13.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet20 = null;
        undertowEmbeddedServletContainerFactory13.setJspServlet(jspServlet20);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings22);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.Compression compression26 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression26);
        java.lang.Class<?> wildcardClass28 = undertowEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertNull(ssl18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test09915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09915");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression8);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray14 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory13.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray14);
        org.springframework.boot.context.embedded.Ssl ssl16 = null;
        undertowEmbeddedServletContainerFactory13.setSsl(ssl16);
        undertowEmbeddedServletContainerFactory13.setPort(0);
        org.springframework.boot.context.embedded.Compression compression20 = undertowEmbeddedServletContainerFactory13.getCompression();
        java.io.File file21 = undertowEmbeddedServletContainerFactory13.getSessionStoreDir();
        java.io.File file22 = undertowEmbeddedServletContainerFactory13.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(97);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory26.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray31 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory30.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray31);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray35 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory34.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray35);
        undertowEmbeddedServletContainerFactory30.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray35);
        undertowEmbeddedServletContainerFactory26.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray35);
        java.lang.String str39 = undertowEmbeddedServletContainerFactory26.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray42 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory41.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray42);
        org.springframework.boot.context.embedded.Ssl ssl44 = null;
        undertowEmbeddedServletContainerFactory41.setSsl(ssl44);
        undertowEmbeddedServletContainerFactory41.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file50 = null;
        undertowEmbeddedServletContainerFactory49.setAccessLogDirectory(file50);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray52 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory49.addErrorPages(errorPageArray52);
        org.springframework.boot.context.embedded.Compression compression54 = undertowEmbeddedServletContainerFactory49.getCompression();
        org.springframework.boot.context.embedded.JspServlet jspServlet55 = undertowEmbeddedServletContainerFactory49.getJspServlet();
        undertowEmbeddedServletContainerFactory41.setJspServlet(jspServlet55);
        undertowEmbeddedServletContainerFactory26.setJspServlet(jspServlet55);
        undertowEmbeddedServletContainerFactory24.setJspServlet(jspServlet55);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file61 = undertowEmbeddedServletContainerFactory60.getSessionStoreDir();
        java.lang.String str62 = undertowEmbeddedServletContainerFactory60.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings65 = undertowEmbeddedServletContainerFactory64.getMimeMappings();
        undertowEmbeddedServletContainerFactory60.setMimeMappings(mimeMappings65);
        boolean boolean67 = undertowEmbeddedServletContainerFactory60.isPersistSession();
        undertowEmbeddedServletContainerFactory60.setWorkerThreads((java.lang.Integer) (-1));
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory73 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray74 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory73.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray74);
        org.springframework.boot.context.embedded.Ssl ssl76 = null;
        undertowEmbeddedServletContainerFactory73.setSsl(ssl76);
        org.springframework.boot.context.embedded.Ssl ssl78 = undertowEmbeddedServletContainerFactory73.getSsl();
        undertowEmbeddedServletContainerFactory73.setDisplayName("");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings81 = undertowEmbeddedServletContainerFactory73.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer undertowDeploymentInfoCustomizer82 = null;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray83 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] { undertowDeploymentInfoCustomizer82 };
        undertowEmbeddedServletContainerFactory73.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray83);
        undertowEmbeddedServletContainerFactory71.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray83);
        undertowEmbeddedServletContainerFactory60.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray83);
        undertowEmbeddedServletContainerFactory24.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray83);
        undertowEmbeddedServletContainerFactory13.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray83);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray83);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray14);
        org.junit.Assert.assertNull(compression20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray31);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray42);
        org.junit.Assert.assertNotNull(errorPageArray52);
        org.junit.Assert.assertNull(compression54);
        org.junit.Assert.assertNotNull(jspServlet55);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNotNull(mimeMappings65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray74);
        org.junit.Assert.assertNull(ssl78);
        org.junit.Assert.assertNotNull(mimeMappings81);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray83);
    }

    @Test
    public void test09916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09916");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray6 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer7 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray6);
        org.springframework.boot.context.embedded.Ssl ssl8 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl8);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file12 = null;
        undertowEmbeddedServletContainerFactory11.setDocumentRoot(file12);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory15.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory15.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl20 = undertowEmbeddedServletContainerFactory15.getSsl();
        boolean boolean21 = undertowEmbeddedServletContainerFactory15.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory23.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory23.setPersistSession(false);
        boolean boolean28 = undertowEmbeddedServletContainerFactory23.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory30.setPort((int) (byte) -1);
        boolean boolean33 = undertowEmbeddedServletContainerFactory30.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory35.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory35.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl40 = null;
        undertowEmbeddedServletContainerFactory35.setSsl(ssl40);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray42 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory35.addErrorPages(errorPageArray42);
        undertowEmbeddedServletContainerFactory30.addErrorPages(errorPageArray42);
        undertowEmbeddedServletContainerFactory23.addErrorPages(errorPageArray42);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer46 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray47 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer46 };
        undertowEmbeddedServletContainerFactory23.addBuilderCustomizers(undertowBuilderCustomizerArray47);
        undertowEmbeddedServletContainerFactory15.addBuilderCustomizers(undertowBuilderCustomizerArray47);
        undertowEmbeddedServletContainerFactory11.addBuilderCustomizers(undertowBuilderCustomizerArray47);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray47);
        int int52 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray55 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory54.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray55);
        org.springframework.boot.context.embedded.Ssl ssl57 = null;
        undertowEmbeddedServletContainerFactory54.setSsl(ssl57);
        undertowEmbeddedServletContainerFactory54.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet61 = undertowEmbeddedServletContainerFactory54.getErrorPages();
        undertowEmbeddedServletContainerFactory54.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) 'a');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray69 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory68.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray69);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray73 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory72.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray73);
        undertowEmbeddedServletContainerFactory68.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray73);
        undertowEmbeddedServletContainerFactory66.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray73);
        undertowEmbeddedServletContainerFactory54.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray73);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray73);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet79 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(servletContextInitializerArray6);
        org.junit.Assert.assertNotNull(embeddedServletContainer7);
        org.junit.Assert.assertNull(ssl20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(errorPageArray42);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray47);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1800 + "'", int52 == 1800);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray55);
        org.junit.Assert.assertNotNull(errorPageSet61);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray69);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray73);
        org.junit.Assert.assertNotNull(errorPageSet79);
    }

    @Test
    public void test09917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09917");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file4);
        undertowEmbeddedServletContainerFactory1.setPort(0);
        int int8 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1800);
        java.io.File file13 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file13);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file17);
        undertowEmbeddedServletContainerFactory1.setPersistSession(true);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        int int23 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.springframework.boot.context.embedded.JspServlet jspServlet24 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1800 + "'", int23 == 1800);
        org.junit.Assert.assertNotNull(jspServlet24);
    }

    @Test
    public void test09918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09918");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory6.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13, initParameterConfiguringServletContextInitializer15, initParameterConfiguringServletContextInitializer17 };
        undertowEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray18);
        boolean boolean21 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        boolean boolean22 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray27 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory26.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        org.springframework.boot.context.embedded.Ssl ssl29 = null;
        undertowEmbeddedServletContainerFactory26.setSsl(ssl29);
        undertowEmbeddedServletContainerFactory26.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet33 = undertowEmbeddedServletContainerFactory26.getErrorPages();
        boolean boolean34 = undertowEmbeddedServletContainerFactory26.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory26.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.net.InetAddress inetAddress39 = null;
        undertowEmbeddedServletContainerFactory38.setAddress(inetAddress39);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray43 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory42.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray43);
        org.springframework.boot.context.embedded.Ssl ssl45 = null;
        undertowEmbeddedServletContainerFactory42.setSsl(ssl45);
        org.springframework.boot.context.embedded.Ssl ssl47 = undertowEmbeddedServletContainerFactory42.getSsl();
        undertowEmbeddedServletContainerFactory42.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory42.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection52 = undertowEmbeddedServletContainerFactory42.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory42.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory56.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray61 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory60.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray61);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray65 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory64.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray65);
        undertowEmbeddedServletContainerFactory60.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray65);
        undertowEmbeddedServletContainerFactory56.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray65);
        java.lang.String str69 = undertowEmbeddedServletContainerFactory56.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory71.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory71.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray76 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer77 = undertowEmbeddedServletContainerFactory71.getEmbeddedServletContainer(servletContextInitializerArray76);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer78 = undertowEmbeddedServletContainerFactory56.getEmbeddedServletContainer(servletContextInitializerArray76);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer79 = undertowEmbeddedServletContainerFactory42.getEmbeddedServletContainer(servletContextInitializerArray76);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer80 = undertowEmbeddedServletContainerFactory38.getEmbeddedServletContainer(servletContextInitializerArray76);
        undertowEmbeddedServletContainerFactory38.setAccessLogPattern("");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet83 = undertowEmbeddedServletContainerFactory38.getErrorPages();
        undertowEmbeddedServletContainerFactory26.setErrorPages(errorPageSet83);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet83);
        java.lang.Class<?> wildcardClass86 = undertowEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray27);
        org.junit.Assert.assertNotNull(errorPageSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray43);
        org.junit.Assert.assertNull(ssl47);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection52);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray61);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray65);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(servletContextInitializerArray76);
        org.junit.Assert.assertNotNull(embeddedServletContainer77);
        org.junit.Assert.assertNotNull(embeddedServletContainer78);
        org.junit.Assert.assertNotNull(embeddedServletContainer79);
        org.junit.Assert.assertNotNull(embeddedServletContainer80);
        org.junit.Assert.assertNotNull(errorPageSet83);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test09919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09919");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file2 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file6 = undertowEmbeddedServletContainerFactory5.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory5.setPersistSession(false);
        undertowEmbeddedServletContainerFactory5.setJspServletClassName("");
        java.io.File file11 = undertowEmbeddedServletContainerFactory5.getSessionStoreDir();
        java.lang.String str12 = undertowEmbeddedServletContainerFactory5.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory14.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory14.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory14.getSsl();
        boolean boolean20 = undertowEmbeddedServletContainerFactory14.isAccessLogEnabled();
        java.io.File file21 = null;
        undertowEmbeddedServletContainerFactory14.setAccessLogDirectory(file21);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray23 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24, errorPageArray23);
        undertowEmbeddedServletContainerFactory14.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24);
        undertowEmbeddedServletContainerFactory5.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24);
        boolean boolean29 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 0);
        boolean boolean34 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.Compression compression35 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression35);
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        java.net.InetAddress inetAddress39 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress39);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(errorPageArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test09920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09920");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader14);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection16 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = undertowEmbeddedServletContainerFactory18.getJspServlet();
        undertowEmbeddedServletContainerFactory18.setJspServletClassName("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file24 = undertowEmbeddedServletContainerFactory23.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory23.setPersistSession(false);
        undertowEmbeddedServletContainerFactory23.setJspServletClassName("");
        java.io.File file29 = undertowEmbeddedServletContainerFactory23.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory23.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory23.setBufferSize((java.lang.Integer) 0);
        int int34 = undertowEmbeddedServletContainerFactory23.getSessionTimeout();
        java.io.File file35 = undertowEmbeddedServletContainerFactory23.getSessionStoreDir();
        java.io.File file36 = null;
        undertowEmbeddedServletContainerFactory23.setAccessLogDirectory(file36);
        undertowEmbeddedServletContainerFactory23.setIoThreads((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.JspServlet jspServlet40 = undertowEmbeddedServletContainerFactory23.getJspServlet();
        undertowEmbeddedServletContainerFactory18.setJspServlet(jspServlet40);
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet40);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection43 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection16);
        org.junit.Assert.assertNotNull(jspServlet19);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1800 + "'", int34 == 1800);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(jspServlet40);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection43);
    }

    @Test
    public void test09921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09921");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory8.setPort((int) (byte) -1);
        boolean boolean11 = undertowEmbeddedServletContainerFactory8.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory13.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory13.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl18 = null;
        undertowEmbeddedServletContainerFactory13.setSsl(ssl18);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray20 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory13.addErrorPages(errorPageArray20);
        undertowEmbeddedServletContainerFactory8.addErrorPages(errorPageArray20);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray20);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray25 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer24 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray25);
        org.springframework.boot.context.embedded.Compression compression27 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection28 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        java.util.concurrent.TimeUnit timeUnit32 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) -1, timeUnit32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(errorPageArray20);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray25);
        org.junit.Assert.assertNull(compression27);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection28);
    }

    @Test
    public void test09922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09922");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file8);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray10 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11, errorPageArray10);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 100);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        undertowEmbeddedServletContainerFactory1.setPort(35);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(errorPageArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(errorPageSet17);
        org.junit.Assert.assertNotNull(errorPageSet20);
    }

    @Test
    public void test09923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09923");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file8);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray10 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11, errorPageArray10);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.Compression compression20 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression20);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        java.lang.String str24 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(errorPageArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
    }

    @Test
    public void test09924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09924");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression8);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setPersistSession(true);
        java.lang.String str15 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        java.lang.String str16 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 97);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection21 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection22 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        int int23 = undertowEmbeddedServletContainerFactory1.getPort();
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection21);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test09925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09925");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 10);
        java.net.InetAddress inetAddress2 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress2);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1800);
    }

    @Test
    public void test09926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09926");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.springframework.boot.context.embedded.Compression compression3 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression3);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader9);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 97);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory14.setPort((int) (byte) -1);
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory14.setSessionStoreDir(file17);
        java.io.File file19 = null;
        undertowEmbeddedServletContainerFactory14.setSessionStoreDir(file19);
        boolean boolean21 = undertowEmbeddedServletContainerFactory14.isAccessLogEnabled();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = undertowEmbeddedServletContainerFactory14.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet22);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.lang.String str25 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(errorPageSet22);
        org.junit.Assert.assertNotNull(errorPageSet24);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test09927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09927");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        java.net.InetAddress inetAddress6 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress6);
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression8);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection12 = undertowEmbeddedServletContainerFactory11.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory11.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory11.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.Compression compression17 = undertowEmbeddedServletContainerFactory11.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) -1);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection20 = undertowEmbeddedServletContainerFactory19.getDeploymentInfoCustomizers();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = undertowEmbeddedServletContainerFactory19.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory23.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory23.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl28 = undertowEmbeddedServletContainerFactory23.getSsl();
        boolean boolean29 = undertowEmbeddedServletContainerFactory23.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory31.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory31.setPersistSession(false);
        boolean boolean36 = undertowEmbeddedServletContainerFactory31.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory38.setPort((int) (byte) -1);
        boolean boolean41 = undertowEmbeddedServletContainerFactory38.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory43.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory43.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl48 = null;
        undertowEmbeddedServletContainerFactory43.setSsl(ssl48);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray50 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory43.addErrorPages(errorPageArray50);
        undertowEmbeddedServletContainerFactory38.addErrorPages(errorPageArray50);
        undertowEmbeddedServletContainerFactory31.addErrorPages(errorPageArray50);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer54 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray55 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer54 };
        undertowEmbeddedServletContainerFactory31.addBuilderCustomizers(undertowBuilderCustomizerArray55);
        undertowEmbeddedServletContainerFactory23.addBuilderCustomizers(undertowBuilderCustomizerArray55);
        undertowEmbeddedServletContainerFactory19.addBuilderCustomizers(undertowBuilderCustomizerArray55);
        undertowEmbeddedServletContainerFactory11.addBuilderCustomizers(undertowBuilderCustomizerArray55);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray55);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file66 = undertowEmbeddedServletContainerFactory65.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory65.setPersistSession(false);
        undertowEmbeddedServletContainerFactory65.setJspServletClassName("");
        java.io.File file71 = undertowEmbeddedServletContainerFactory65.getSessionStoreDir();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet72 = undertowEmbeddedServletContainerFactory65.getErrorPages();
        undertowEmbeddedServletContainerFactory63.setErrorPages(errorPageSet72);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet72);
        boolean boolean75 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.io.File file76 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection12);
        org.junit.Assert.assertNull(compression17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection20);
        org.junit.Assert.assertNotNull(errorPageSet21);
        org.junit.Assert.assertNull(ssl28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(errorPageArray50);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray55);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(errorPageSet72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(file76);
    }

    @Test
    public void test09928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09928");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) ' ');
        int int4 = undertowEmbeddedServletContainerFactory1.getPort();
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
    }

    @Test
    public void test09929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09929");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.lang.String str3 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.net.InetAddress inetAddress4 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory13.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory13.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader18 = null;
        undertowEmbeddedServletContainerFactory13.setResourceLoader(resourceLoader18);
        org.springframework.boot.context.embedded.Compression compression20 = null;
        undertowEmbeddedServletContainerFactory13.setCompression(compression20);
        undertowEmbeddedServletContainerFactory13.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        undertowEmbeddedServletContainerFactory13.setBufferSize((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory13.setAccessLogEnabled(true);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings29);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 52);
        boolean boolean37 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(inetAddress4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test09930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09930");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        java.net.InetAddress inetAddress11 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray14 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory13.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray14);
        org.springframework.boot.context.embedded.JspServlet jspServlet16 = undertowEmbeddedServletContainerFactory13.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet16);
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory20.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray21);
        org.springframework.boot.context.embedded.Ssl ssl23 = null;
        undertowEmbeddedServletContainerFactory20.setSsl(ssl23);
        org.springframework.boot.context.embedded.Ssl ssl25 = undertowEmbeddedServletContainerFactory20.getSsl();
        undertowEmbeddedServletContainerFactory20.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory20.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection30 = undertowEmbeddedServletContainerFactory20.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory20.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory34.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray39 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory38.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray39);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray43 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory42.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray43);
        undertowEmbeddedServletContainerFactory38.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray43);
        undertowEmbeddedServletContainerFactory34.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray43);
        java.lang.String str47 = undertowEmbeddedServletContainerFactory34.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory49.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory49.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray54 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer55 = undertowEmbeddedServletContainerFactory49.getEmbeddedServletContainer(servletContextInitializerArray54);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer56 = undertowEmbeddedServletContainerFactory34.getEmbeddedServletContainer(servletContextInitializerArray54);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer57 = undertowEmbeddedServletContainerFactory20.getEmbeddedServletContainer(servletContextInitializerArray54);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer58 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray54);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        int int61 = undertowEmbeddedServletContainerFactory1.getPort();
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 0);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
        undertowEmbeddedServletContainerFactory1.setPort(52);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray70 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory69.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray70);
        org.springframework.boot.context.embedded.Ssl ssl72 = null;
        undertowEmbeddedServletContainerFactory69.setSsl(ssl72);
        undertowEmbeddedServletContainerFactory69.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet76 = undertowEmbeddedServletContainerFactory69.getErrorPages();
        java.net.InetAddress inetAddress77 = undertowEmbeddedServletContainerFactory69.getAddress();
        undertowEmbeddedServletContainerFactory69.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings80 = undertowEmbeddedServletContainerFactory69.getMimeMappings();
        undertowEmbeddedServletContainerFactory69.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.Compression compression83 = null;
        undertowEmbeddedServletContainerFactory69.setCompression(compression83);
        undertowEmbeddedServletContainerFactory69.setPersistSession(true);
        undertowEmbeddedServletContainerFactory69.setRegisterDefaultServlet(false);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet89 = undertowEmbeddedServletContainerFactory69.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet89);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNull(inetAddress11);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray14);
        org.junit.Assert.assertNotNull(jspServlet16);
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray21);
        org.junit.Assert.assertNull(ssl25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection30);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray39);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray43);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(servletContextInitializerArray54);
        org.junit.Assert.assertNotNull(embeddedServletContainer55);
        org.junit.Assert.assertNotNull(embeddedServletContainer56);
        org.junit.Assert.assertNotNull(embeddedServletContainer57);
        org.junit.Assert.assertNotNull(embeddedServletContainer58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray70);
        org.junit.Assert.assertNotNull(errorPageSet76);
        org.junit.Assert.assertNull(inetAddress77);
        org.junit.Assert.assertNotNull(mimeMappings80);
        org.junit.Assert.assertNotNull(errorPageSet89);
    }

    @Test
    public void test09931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09931");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) (-1));
        boolean boolean4 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test09932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09932");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection2 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression8);
        org.springframework.boot.context.embedded.Compression compression10 = undertowEmbeddedServletContainerFactory1.getCompression();
        int int11 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.Ssl ssl12 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(compression10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 97 + "'", int11 == 97);
        org.junit.Assert.assertNull(ssl12);
    }

    @Test
    public void test09933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09933");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        boolean boolean3 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 100);
        int int6 = undertowEmbeddedServletContainerFactory1.getPort();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader9);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test09934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09934");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        org.springframework.boot.context.embedded.Compression compression7 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression7);
        org.springframework.boot.context.embedded.Compression compression9 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.lang.String str10 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNull(compression9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test09935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09935");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file8);
        boolean boolean10 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test09936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09936");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file4);
        undertowEmbeddedServletContainerFactory1.setPort(0);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray8 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray8);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 10);
        java.io.File file12 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file12);
        undertowEmbeddedServletContainerFactory1.setPort(100);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray8);
    }

    @Test
    public void test09937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09937");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        java.net.InetAddress inetAddress6 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress6);
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression8);
        java.io.File file10 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) (-1));
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory16.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory16.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Compression compression21 = undertowEmbeddedServletContainerFactory16.getCompression();
        undertowEmbeddedServletContainerFactory16.setWorkerThreads((java.lang.Integer) 32);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file26 = null;
        undertowEmbeddedServletContainerFactory25.setDocumentRoot(file26);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file30 = undertowEmbeddedServletContainerFactory29.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory29.setPersistSession(false);
        undertowEmbeddedServletContainerFactory29.setJspServletClassName("");
        java.io.File file35 = undertowEmbeddedServletContainerFactory29.getSessionStoreDir();
        java.lang.String str36 = undertowEmbeddedServletContainerFactory29.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory38.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory38.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl43 = undertowEmbeddedServletContainerFactory38.getSsl();
        boolean boolean44 = undertowEmbeddedServletContainerFactory38.isAccessLogEnabled();
        java.io.File file45 = null;
        undertowEmbeddedServletContainerFactory38.setAccessLogDirectory(file45);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray47 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet48 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet48, errorPageArray47);
        undertowEmbeddedServletContainerFactory38.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet48);
        undertowEmbeddedServletContainerFactory29.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet48);
        undertowEmbeddedServletContainerFactory25.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet48);
        boolean boolean53 = undertowEmbeddedServletContainerFactory25.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory25.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray58 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory57.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray58);
        org.springframework.boot.context.embedded.Ssl ssl60 = null;
        undertowEmbeddedServletContainerFactory57.setSsl(ssl60);
        org.springframework.boot.context.embedded.Ssl ssl62 = undertowEmbeddedServletContainerFactory57.getSsl();
        undertowEmbeddedServletContainerFactory57.setRegisterJspServlet(false);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet65 = undertowEmbeddedServletContainerFactory57.getErrorPages();
        undertowEmbeddedServletContainerFactory25.setErrorPages(errorPageSet65);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings67 = undertowEmbeddedServletContainerFactory25.getMimeMappings();
        undertowEmbeddedServletContainerFactory16.setMimeMappings(mimeMappings67);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings67);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(compression21);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(ssl43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(errorPageArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray58);
        org.junit.Assert.assertNull(ssl62);
        org.junit.Assert.assertNotNull(errorPageSet65);
        org.junit.Assert.assertNotNull(mimeMappings67);
    }

    @Test
    public void test09938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09938");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory10.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray11);
        org.springframework.boot.context.embedded.Ssl ssl13 = null;
        undertowEmbeddedServletContainerFactory10.setSsl(ssl13);
        undertowEmbeddedServletContainerFactory10.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = undertowEmbeddedServletContainerFactory10.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader18 = null;
        undertowEmbeddedServletContainerFactory10.setResourceLoader(resourceLoader18);
        java.lang.String str20 = undertowEmbeddedServletContainerFactory10.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray23 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory22.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray23);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray27 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory26.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        undertowEmbeddedServletContainerFactory22.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        undertowEmbeddedServletContainerFactory10.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        org.springframework.boot.context.embedded.Ssl ssl32 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        java.io.File file35 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file35);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((-1));
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 35);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) 'a');
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection44 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray11);
        org.junit.Assert.assertNotNull(errorPageSet17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray23);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray27);
        org.junit.Assert.assertNull(ssl32);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection44);
    }

    @Test
    public void test09939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09939");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader3);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.Compression compression6 = undertowEmbeddedServletContainerFactory1.getCompression();
        int int7 = undertowEmbeddedServletContainerFactory1.getPort();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file8);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(compression6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    }

    @Test
    public void test09940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09940");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 32);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory13.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory13.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader18 = null;
        undertowEmbeddedServletContainerFactory13.setResourceLoader(resourceLoader18);
        org.springframework.boot.context.embedded.Compression compression20 = null;
        undertowEmbeddedServletContainerFactory13.setCompression(compression20);
        java.lang.String str22 = undertowEmbeddedServletContainerFactory13.getContextPath();
        undertowEmbeddedServletContainerFactory13.setUseForwardHeaders(true);
        java.lang.String str25 = undertowEmbeddedServletContainerFactory13.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory27.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory27.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl32 = undertowEmbeddedServletContainerFactory27.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer34 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap33);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer36 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap35);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer38 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap37);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray39 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer34, initParameterConfiguringServletContextInitializer36, initParameterConfiguringServletContextInitializer38 };
        undertowEmbeddedServletContainerFactory27.addInitializers(servletContextInitializerArray39);
        undertowEmbeddedServletContainerFactory13.addInitializers(servletContextInitializerArray39);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray39);
        boolean boolean43 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        org.springframework.boot.context.embedded.JspServlet jspServlet44 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        java.lang.Class<?> wildcardClass45 = jspServlet44.getClass();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(ssl32);
        org.junit.Assert.assertNotNull(servletContextInitializerArray39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(jspServlet44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test09941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09941");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory5.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory5.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory5.getSsl();
        boolean boolean11 = undertowEmbeddedServletContainerFactory5.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet12 = null;
        undertowEmbeddedServletContainerFactory5.setJspServlet(jspServlet12);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray14 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet15 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet15, errorPageArray14);
        undertowEmbeddedServletContainerFactory5.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet15);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet15);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        boolean boolean20 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet21 = null;
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet21);
        org.springframework.boot.context.embedded.Ssl ssl23 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl23);
        boolean boolean25 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(errorPageArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test09942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09942");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) -1);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection2 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet3 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory5.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory5.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory5.getSsl();
        boolean boolean11 = undertowEmbeddedServletContainerFactory5.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory13.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory13.setPersistSession(false);
        boolean boolean18 = undertowEmbeddedServletContainerFactory13.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory20.setPort((int) (byte) -1);
        boolean boolean23 = undertowEmbeddedServletContainerFactory20.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory25.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory25.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl30 = null;
        undertowEmbeddedServletContainerFactory25.setSsl(ssl30);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray32 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory25.addErrorPages(errorPageArray32);
        undertowEmbeddedServletContainerFactory20.addErrorPages(errorPageArray32);
        undertowEmbeddedServletContainerFactory13.addErrorPages(errorPageArray32);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer36 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray37 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer36 };
        undertowEmbeddedServletContainerFactory13.addBuilderCustomizers(undertowBuilderCustomizerArray37);
        undertowEmbeddedServletContainerFactory5.addBuilderCustomizers(undertowBuilderCustomizerArray37);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray37);
        boolean boolean41 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.io.File file44 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.boot.context.embedded.Ssl ssl45 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl45);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet47 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection48 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.io.File file49 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file49);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection2);
        org.junit.Assert.assertNotNull(errorPageSet3);
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(errorPageArray32);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(errorPageSet47);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection48);
    }

    @Test
    public void test09943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09943");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        org.springframework.boot.context.embedded.Ssl ssl7 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl8 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNull(ssl7);
        org.junit.Assert.assertNull(ssl8);
    }

    @Test
    public void test09944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09944");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory12.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory12.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory12.getSsl();
        boolean boolean18 = undertowEmbeddedServletContainerFactory12.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = null;
        undertowEmbeddedServletContainerFactory12.setJspServlet(jspServlet19);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings21);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection23 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        int int26 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file29 = undertowEmbeddedServletContainerFactory28.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory28.setPersistSession(false);
        undertowEmbeddedServletContainerFactory28.setJspServletClassName("");
        java.io.File file34 = undertowEmbeddedServletContainerFactory28.getSessionStoreDir();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet35 = undertowEmbeddedServletContainerFactory28.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory37.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray42 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory41.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray42);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray46 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory45.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray46);
        undertowEmbeddedServletContainerFactory41.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray46);
        undertowEmbeddedServletContainerFactory37.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray46);
        java.lang.String str50 = undertowEmbeddedServletContainerFactory37.getContextPath();
        java.lang.String str51 = undertowEmbeddedServletContainerFactory37.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory53.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory53.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray58 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer59 = undertowEmbeddedServletContainerFactory53.getEmbeddedServletContainer(servletContextInitializerArray58);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer60 = undertowEmbeddedServletContainerFactory37.getEmbeddedServletContainer(servletContextInitializerArray58);
        undertowEmbeddedServletContainerFactory28.addInitializers(servletContextInitializerArray58);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray58);
        org.springframework.boot.context.embedded.Compression compression63 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression63);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(errorPageSet35);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray42);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray46);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(servletContextInitializerArray58);
        org.junit.Assert.assertNotNull(embeddedServletContainer59);
        org.junit.Assert.assertNotNull(embeddedServletContainer60);
    }

    @Test
    public void test09945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09945");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray9 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory8.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray9);
        org.springframework.boot.context.embedded.Ssl ssl11 = null;
        undertowEmbeddedServletContainerFactory8.setSsl(ssl11);
        undertowEmbeddedServletContainerFactory8.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory16.setAccessLogDirectory(file17);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray19 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory16.addErrorPages(errorPageArray19);
        org.springframework.boot.context.embedded.Compression compression21 = undertowEmbeddedServletContainerFactory16.getCompression();
        org.springframework.boot.context.embedded.JspServlet jspServlet22 = undertowEmbeddedServletContainerFactory16.getJspServlet();
        undertowEmbeddedServletContainerFactory8.setJspServlet(jspServlet22);
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet22);
        int int25 = undertowEmbeddedServletContainerFactory1.getPort();
        java.net.InetAddress inetAddress26 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.Ssl ssl27 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl27);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray9);
        org.junit.Assert.assertNotNull(errorPageArray19);
        org.junit.Assert.assertNull(compression21);
        org.junit.Assert.assertNotNull(jspServlet22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertNull(inetAddress26);
    }

    @Test
    public void test09946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09946");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.net.InetAddress inetAddress2 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress2);
        java.io.File file4 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file5);
        org.junit.Assert.assertNull(file4);
    }

    @Test
    public void test09947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09947");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory5.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray6);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory9.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        undertowEmbeddedServletContainerFactory5.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.lang.String str14 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory16.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory16.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray21 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer22 = undertowEmbeddedServletContainerFactory16.getEmbeddedServletContainer(servletContextInitializerArray21);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer23 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray21);
        org.springframework.boot.context.embedded.JspServlet jspServlet24 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        java.io.File file25 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file25);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.Ssl ssl29 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl29);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(servletContextInitializerArray21);
        org.junit.Assert.assertNotNull(embeddedServletContainer22);
        org.junit.Assert.assertNotNull(embeddedServletContainer23);
        org.junit.Assert.assertNotNull(jspServlet24);
    }

    @Test
    public void test09948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09948");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression8);
        java.lang.String str10 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        boolean boolean13 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1800);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection20 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection20);
    }

    @Test
    public void test09949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09949");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file2 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory12.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray13);
        org.springframework.boot.context.embedded.Ssl ssl15 = null;
        undertowEmbeddedServletContainerFactory12.setSsl(ssl15);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory12.getSsl();
        undertowEmbeddedServletContainerFactory12.setDisplayName("");
        undertowEmbeddedServletContainerFactory12.setRegisterDefaultServlet(true);
        int int22 = undertowEmbeddedServletContainerFactory12.getPort();
        undertowEmbeddedServletContainerFactory12.setWorkerThreads((java.lang.Integer) 32);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file27 = undertowEmbeddedServletContainerFactory26.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory26.setPersistSession(false);
        undertowEmbeddedServletContainerFactory26.setJspServletClassName("");
        java.io.File file32 = undertowEmbeddedServletContainerFactory26.getSessionStoreDir();
        java.lang.String str33 = undertowEmbeddedServletContainerFactory26.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory35.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory35.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl40 = undertowEmbeddedServletContainerFactory35.getSsl();
        boolean boolean41 = undertowEmbeddedServletContainerFactory35.isAccessLogEnabled();
        java.io.File file42 = null;
        undertowEmbeddedServletContainerFactory35.setAccessLogDirectory(file42);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray44 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet45 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet45, errorPageArray44);
        undertowEmbeddedServletContainerFactory35.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet45);
        undertowEmbeddedServletContainerFactory26.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet45);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory50.setPort((int) (byte) -1);
        boolean boolean53 = undertowEmbeddedServletContainerFactory50.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory55.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory55.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl60 = null;
        undertowEmbeddedServletContainerFactory55.setSsl(ssl60);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray62 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory55.addErrorPages(errorPageArray62);
        undertowEmbeddedServletContainerFactory50.addErrorPages(errorPageArray62);
        undertowEmbeddedServletContainerFactory26.addErrorPages(errorPageArray62);
        undertowEmbeddedServletContainerFactory12.addErrorPages(errorPageArray62);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray62);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray13);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(ssl40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(errorPageArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(errorPageArray62);
    }

    @Test
    public void test09950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09950");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet8 = null;
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet8);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setPersistSession(true);
        org.springframework.boot.context.embedded.JspServlet jspServlet13 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNull(jspServlet13);
    }

    @Test
    public void test09951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09951");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file9);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
    }

    @Test
    public void test09952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09952");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.net.InetAddress inetAddress2 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress2);
        java.net.InetAddress inetAddress4 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory6.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13, initParameterConfiguringServletContextInitializer15, initParameterConfiguringServletContextInitializer17 };
        undertowEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory6.setJspServletClassName("hi!");
        int int22 = undertowEmbeddedServletContainerFactory6.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = undertowEmbeddedServletContainerFactory6.getErrorPages();
        org.springframework.boot.context.embedded.JspServlet jspServlet24 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet24);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 97);
        org.springframework.boot.context.embedded.Compression compression28 = undertowEmbeddedServletContainerFactory1.getCompression();
        org.junit.Assert.assertNull(inetAddress4);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet23);
        org.junit.Assert.assertNotNull(jspServlet24);
        org.junit.Assert.assertNull(compression28);
    }

    @Test
    public void test09953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09953");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.Compression compression10 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.io.File file11 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory15.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory15.setPersistSession(false);
        java.net.InetAddress inetAddress20 = null;
        undertowEmbeddedServletContainerFactory15.setAddress(inetAddress20);
        org.springframework.boot.context.embedded.Compression compression22 = null;
        undertowEmbeddedServletContainerFactory15.setCompression(compression22);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection26 = undertowEmbeddedServletContainerFactory25.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory25.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory25.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.Compression compression31 = undertowEmbeddedServletContainerFactory25.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) -1);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection34 = undertowEmbeddedServletContainerFactory33.getDeploymentInfoCustomizers();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet35 = undertowEmbeddedServletContainerFactory33.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory37.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory37.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl42 = undertowEmbeddedServletContainerFactory37.getSsl();
        boolean boolean43 = undertowEmbeddedServletContainerFactory37.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory45.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory45.setPersistSession(false);
        boolean boolean50 = undertowEmbeddedServletContainerFactory45.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory52.setPort((int) (byte) -1);
        boolean boolean55 = undertowEmbeddedServletContainerFactory52.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory57.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory57.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl62 = null;
        undertowEmbeddedServletContainerFactory57.setSsl(ssl62);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray64 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory57.addErrorPages(errorPageArray64);
        undertowEmbeddedServletContainerFactory52.addErrorPages(errorPageArray64);
        undertowEmbeddedServletContainerFactory45.addErrorPages(errorPageArray64);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer68 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray69 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer68 };
        undertowEmbeddedServletContainerFactory45.addBuilderCustomizers(undertowBuilderCustomizerArray69);
        undertowEmbeddedServletContainerFactory37.addBuilderCustomizers(undertowBuilderCustomizerArray69);
        undertowEmbeddedServletContainerFactory33.addBuilderCustomizers(undertowBuilderCustomizerArray69);
        undertowEmbeddedServletContainerFactory25.addBuilderCustomizers(undertowBuilderCustomizerArray69);
        undertowEmbeddedServletContainerFactory15.addBuilderCustomizers(undertowBuilderCustomizerArray69);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory79 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file80 = undertowEmbeddedServletContainerFactory79.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory79.setPersistSession(false);
        undertowEmbeddedServletContainerFactory79.setJspServletClassName("");
        java.io.File file85 = undertowEmbeddedServletContainerFactory79.getSessionStoreDir();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet86 = undertowEmbeddedServletContainerFactory79.getErrorPages();
        undertowEmbeddedServletContainerFactory77.setErrorPages(errorPageSet86);
        undertowEmbeddedServletContainerFactory15.setErrorPages(errorPageSet86);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet86);
        java.io.File file90 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(compression10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection26);
        org.junit.Assert.assertNull(compression31);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection34);
        org.junit.Assert.assertNotNull(errorPageSet35);
        org.junit.Assert.assertNull(ssl42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(errorPageArray64);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray69);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file85);
        org.junit.Assert.assertNotNull(errorPageSet86);
        org.junit.Assert.assertNull(file90);
    }

    @Test
    public void test09954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09954");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 97);
        java.lang.String str11 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test09955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09955");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader13);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(errorPageSet8);
    }

    @Test
    public void test09956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09956");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) 'a');
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(true);
        undertowEmbeddedServletContainerFactory2.setBuffersPerRegion((java.lang.Integer) 35);
        undertowEmbeddedServletContainerFactory2.setDisplayName("hi!");
    }

    @Test
    public void test09957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09957");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file8);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection10 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.Compression compression11 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression11);
        org.springframework.boot.context.embedded.Compression compression13 = undertowEmbeddedServletContainerFactory1.getCompression();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 10);
        boolean boolean16 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 0);
        java.util.concurrent.TimeUnit timeUnit20 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 100, timeUnit20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection10);
        org.junit.Assert.assertNull(compression13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test09958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09958");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        boolean boolean4 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory6.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl11 = null;
        undertowEmbeddedServletContainerFactory6.setSsl(ssl11);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray13 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory6.addErrorPages(errorPageArray13);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray13);
        java.lang.String str16 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray19 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory18.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray19);
        org.springframework.boot.context.embedded.Ssl ssl21 = null;
        undertowEmbeddedServletContainerFactory18.setSsl(ssl21);
        org.springframework.boot.context.embedded.Ssl ssl23 = undertowEmbeddedServletContainerFactory18.getSsl();
        undertowEmbeddedServletContainerFactory18.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory18.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection28 = undertowEmbeddedServletContainerFactory18.getBuilderCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader29 = null;
        undertowEmbeddedServletContainerFactory18.setResourceLoader(resourceLoader29);
        org.springframework.boot.context.embedded.JspServlet jspServlet31 = undertowEmbeddedServletContainerFactory18.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet31);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 32);
        java.io.File file37 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file37);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(errorPageArray13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray19);
        org.junit.Assert.assertNull(ssl23);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection28);
        org.junit.Assert.assertNotNull(jspServlet31);
    }

    @Test
    public void test09959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09959");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory5.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray6);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory9.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        undertowEmbeddedServletContainerFactory5.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.lang.String str14 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory16.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory16.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray21 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer22 = undertowEmbeddedServletContainerFactory16.getEmbeddedServletContainer(servletContextInitializerArray21);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer23 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray21);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        java.io.File file26 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file26);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory29.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory29.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader34 = null;
        undertowEmbeddedServletContainerFactory29.setResourceLoader(resourceLoader34);
        org.springframework.boot.context.embedded.Compression compression36 = null;
        undertowEmbeddedServletContainerFactory29.setCompression(compression36);
        java.lang.String str38 = undertowEmbeddedServletContainerFactory29.getContextPath();
        undertowEmbeddedServletContainerFactory29.setUseForwardHeaders(true);
        java.lang.String str41 = undertowEmbeddedServletContainerFactory29.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory43.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory43.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl48 = undertowEmbeddedServletContainerFactory43.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer50 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap49);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer52 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap51);
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer54 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap53);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray55 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer50, initParameterConfiguringServletContextInitializer52, initParameterConfiguringServletContextInitializer54 };
        undertowEmbeddedServletContainerFactory43.addInitializers(servletContextInitializerArray55);
        undertowEmbeddedServletContainerFactory29.addInitializers(servletContextInitializerArray55);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray55);
        java.lang.String str59 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings60 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.io.File file61 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file61);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(servletContextInitializerArray21);
        org.junit.Assert.assertNotNull(embeddedServletContainer22);
        org.junit.Assert.assertNotNull(embeddedServletContainer23);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(ssl48);
        org.junit.Assert.assertNotNull(servletContextInitializerArray55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(mimeMappings60);
    }

    @Test
    public void test09960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09960");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.lang.String str3 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.boot.context.embedded.Compression compression4 = undertowEmbeddedServletContainerFactory1.getCompression();
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        org.springframework.boot.context.embedded.Compression compression7 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression7);
        java.lang.String str9 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.JspServlet jspServlet12 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(compression4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(jspServlet12);
    }

    @Test
    public void test09961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09961");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.Compression compression13 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.lang.String str14 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.Class<?> wildcardClass15 = undertowEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNull(compression13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test09962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09962");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        java.lang.String str11 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection12 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory14.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory14.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory14.getSsl();
        boolean boolean20 = undertowEmbeddedServletContainerFactory14.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet21 = null;
        undertowEmbeddedServletContainerFactory14.setJspServlet(jspServlet21);
        java.net.InetAddress inetAddress23 = undertowEmbeddedServletContainerFactory14.getAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        undertowEmbeddedServletContainerFactory14.setSessionTimeout(100);
        org.springframework.boot.context.embedded.Compression compression27 = undertowEmbeddedServletContainerFactory14.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory29.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory29.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader34 = null;
        undertowEmbeddedServletContainerFactory29.setResourceLoader(resourceLoader34);
        org.springframework.boot.context.embedded.Compression compression36 = null;
        undertowEmbeddedServletContainerFactory29.setCompression(compression36);
        undertowEmbeddedServletContainerFactory29.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.Ssl ssl40 = undertowEmbeddedServletContainerFactory29.getSsl();
        java.io.File file41 = undertowEmbeddedServletContainerFactory29.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray44 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory43.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray44);
        org.springframework.boot.context.embedded.Ssl ssl46 = null;
        undertowEmbeddedServletContainerFactory43.setSsl(ssl46);
        org.springframework.boot.context.embedded.Ssl ssl48 = undertowEmbeddedServletContainerFactory43.getSsl();
        undertowEmbeddedServletContainerFactory43.setDisplayName("");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings51 = undertowEmbeddedServletContainerFactory43.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer undertowDeploymentInfoCustomizer52 = null;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray53 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] { undertowDeploymentInfoCustomizer52 };
        undertowEmbeddedServletContainerFactory43.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray53);
        undertowEmbeddedServletContainerFactory29.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray53);
        undertowEmbeddedServletContainerFactory14.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray53);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray53);
        java.io.File file58 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file58);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        org.springframework.boot.context.embedded.JspServlet jspServlet62 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 35);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection12);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(inetAddress23);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNull(compression27);
        org.junit.Assert.assertNull(ssl40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray44);
        org.junit.Assert.assertNull(ssl48);
        org.junit.Assert.assertNotNull(mimeMappings51);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray53);
        org.junit.Assert.assertNotNull(jspServlet62);
    }

    @Test
    public void test09963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09963");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory10.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory10.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl15 = undertowEmbeddedServletContainerFactory10.getSsl();
        boolean boolean16 = undertowEmbeddedServletContainerFactory10.isAccessLogEnabled();
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory10.setAccessLogDirectory(file17);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray19 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20, errorPageArray19);
        undertowEmbeddedServletContainerFactory10.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory25.setPort((int) (byte) -1);
        boolean boolean28 = undertowEmbeddedServletContainerFactory25.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory30.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory30.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl35 = null;
        undertowEmbeddedServletContainerFactory30.setSsl(ssl35);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray37 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory30.addErrorPages(errorPageArray37);
        undertowEmbeddedServletContainerFactory25.addErrorPages(errorPageArray37);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray37);
        org.springframework.boot.context.embedded.Ssl ssl41 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl41);
        int int43 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        boolean boolean44 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        boolean boolean45 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(ssl15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(errorPageArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(errorPageArray37);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1800 + "'", int43 == 1800);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test09964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09964");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file8);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray10 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11, errorPageArray10);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        java.net.InetAddress inetAddress16 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setPort(97);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 97);
        int int23 = undertowEmbeddedServletContainerFactory1.getPort();
        java.net.InetAddress inetAddress24 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(errorPageArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(inetAddress16);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 97 + "'", int23 == 97);
        org.junit.Assert.assertNull(inetAddress24);
    }

    @Test
    public void test09965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09965");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        undertowEmbeddedServletContainerFactory1.setPort(97);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory15.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray16);
        org.springframework.boot.context.embedded.Ssl ssl18 = null;
        undertowEmbeddedServletContainerFactory15.setSsl(ssl18);
        undertowEmbeddedServletContainerFactory15.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = undertowEmbeddedServletContainerFactory15.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet22);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory27.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory27.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader32 = null;
        undertowEmbeddedServletContainerFactory27.setResourceLoader(resourceLoader32);
        org.springframework.boot.context.embedded.Compression compression34 = null;
        undertowEmbeddedServletContainerFactory27.setCompression(compression34);
        undertowEmbeddedServletContainerFactory27.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = undertowEmbeddedServletContainerFactory27.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings38);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 0);
        java.lang.String str43 = undertowEmbeddedServletContainerFactory42.getDisplayName();
        java.lang.String str44 = undertowEmbeddedServletContainerFactory42.getDisplayName();
        undertowEmbeddedServletContainerFactory42.setDisplayName("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file49 = null;
        undertowEmbeddedServletContainerFactory48.setDocumentRoot(file49);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file53 = undertowEmbeddedServletContainerFactory52.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory52.setPersistSession(false);
        undertowEmbeddedServletContainerFactory52.setJspServletClassName("");
        java.io.File file58 = undertowEmbeddedServletContainerFactory52.getSessionStoreDir();
        java.lang.String str59 = undertowEmbeddedServletContainerFactory52.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory61.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory61.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl66 = undertowEmbeddedServletContainerFactory61.getSsl();
        boolean boolean67 = undertowEmbeddedServletContainerFactory61.isAccessLogEnabled();
        java.io.File file68 = null;
        undertowEmbeddedServletContainerFactory61.setAccessLogDirectory(file68);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray70 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet71 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet71, errorPageArray70);
        undertowEmbeddedServletContainerFactory61.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet71);
        undertowEmbeddedServletContainerFactory52.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet71);
        undertowEmbeddedServletContainerFactory48.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet71);
        boolean boolean76 = undertowEmbeddedServletContainerFactory48.isAccessLogEnabled();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet77 = undertowEmbeddedServletContainerFactory48.getErrorPages();
        undertowEmbeddedServletContainerFactory42.setErrorPages(errorPageSet77);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet77);
        org.springframework.core.io.ResourceLoader resourceLoader80 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader80);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray16);
        org.junit.Assert.assertNotNull(errorPageSet22);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(ssl66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(errorPageArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(errorPageSet77);
    }

    @Test
    public void test09966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09966");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 100);
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory2.setBuffersPerRegion((java.lang.Integer) 32);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory2.getDeploymentInfoCustomizers();
        boolean boolean8 = undertowEmbeddedServletContainerFactory2.isPersistSession();
        java.lang.String str9 = undertowEmbeddedServletContainerFactory2.getDisplayName();
        undertowEmbeddedServletContainerFactory2.setAccessLogPattern("hi!");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test09967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09967");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory12.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory12.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory12.getSsl();
        boolean boolean18 = undertowEmbeddedServletContainerFactory12.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = null;
        undertowEmbeddedServletContainerFactory12.setJspServlet(jspServlet19);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings21);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.Ssl ssl25 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl25);
        org.springframework.boot.context.embedded.Compression compression27 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.io.File file28 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file31 = null;
        undertowEmbeddedServletContainerFactory30.setDocumentRoot(file31);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file35 = undertowEmbeddedServletContainerFactory34.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory34.setPersistSession(false);
        undertowEmbeddedServletContainerFactory34.setJspServletClassName("");
        java.io.File file40 = undertowEmbeddedServletContainerFactory34.getSessionStoreDir();
        java.lang.String str41 = undertowEmbeddedServletContainerFactory34.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory43.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory43.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl48 = undertowEmbeddedServletContainerFactory43.getSsl();
        boolean boolean49 = undertowEmbeddedServletContainerFactory43.isAccessLogEnabled();
        java.io.File file50 = null;
        undertowEmbeddedServletContainerFactory43.setAccessLogDirectory(file50);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray52 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet53 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet53, errorPageArray52);
        undertowEmbeddedServletContainerFactory43.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet53);
        undertowEmbeddedServletContainerFactory34.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet53);
        undertowEmbeddedServletContainerFactory30.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet53);
        boolean boolean58 = undertowEmbeddedServletContainerFactory30.isAccessLogEnabled();
        java.io.File file59 = undertowEmbeddedServletContainerFactory30.getSessionStoreDir();
        int int60 = undertowEmbeddedServletContainerFactory30.getSessionTimeout();
        java.io.File file61 = null;
        undertowEmbeddedServletContainerFactory30.setSessionStoreDir(file61);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file65 = null;
        undertowEmbeddedServletContainerFactory64.setDocumentRoot(file65);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file69 = undertowEmbeddedServletContainerFactory68.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory68.setPersistSession(false);
        undertowEmbeddedServletContainerFactory68.setJspServletClassName("");
        java.io.File file74 = undertowEmbeddedServletContainerFactory68.getSessionStoreDir();
        java.lang.String str75 = undertowEmbeddedServletContainerFactory68.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory77.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory77.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl82 = undertowEmbeddedServletContainerFactory77.getSsl();
        boolean boolean83 = undertowEmbeddedServletContainerFactory77.isAccessLogEnabled();
        java.io.File file84 = null;
        undertowEmbeddedServletContainerFactory77.setAccessLogDirectory(file84);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray86 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet87 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet87, errorPageArray86);
        undertowEmbeddedServletContainerFactory77.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet87);
        undertowEmbeddedServletContainerFactory68.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet87);
        undertowEmbeddedServletContainerFactory64.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet87);
        java.io.File file92 = undertowEmbeddedServletContainerFactory64.getSessionStoreDir();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings93 = undertowEmbeddedServletContainerFactory64.getMimeMappings();
        undertowEmbeddedServletContainerFactory30.setMimeMappings(mimeMappings93);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings93);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNull(compression27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(ssl48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(errorPageArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1800 + "'", int60 == 1800);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(ssl82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(errorPageArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(file92);
        org.junit.Assert.assertNotNull(mimeMappings93);
    }

    @Test
    public void test09968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09968");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.net.InetAddress inetAddress2 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress2);
        java.net.InetAddress inetAddress4 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 100);
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        boolean boolean10 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.util.concurrent.TimeUnit timeUnit12 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout(100, timeUnit12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(inetAddress4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test09969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09969");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer8 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap7);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer10 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer12 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap11);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer8, initParameterConfiguringServletContextInitializer10, initParameterConfiguringServletContextInitializer12 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray13);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection17 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.io.File file18 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file18);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        int int22 = undertowEmbeddedServletContainerFactory1.getPort();
        java.lang.String str23 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.lang.String str26 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        undertowEmbeddedServletContainerFactory1.setPort((int) 'a');
        java.net.InetAddress inetAddress29 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress29);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) -1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file39 = undertowEmbeddedServletContainerFactory38.getSessionStoreDir();
        java.lang.String str40 = undertowEmbeddedServletContainerFactory38.getContextPath();
        java.net.InetAddress inetAddress41 = undertowEmbeddedServletContainerFactory38.getAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet42 = undertowEmbeddedServletContainerFactory38.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray45 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory44.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray45);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray49 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory48.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray49);
        undertowEmbeddedServletContainerFactory44.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray49);
        undertowEmbeddedServletContainerFactory38.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray49);
        undertowEmbeddedServletContainerFactory36.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray49);
        undertowEmbeddedServletContainerFactory34.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray49);
        undertowEmbeddedServletContainerFactory34.setJspServletClassName("");
        java.lang.String str57 = undertowEmbeddedServletContainerFactory34.getContextPath();
        org.springframework.boot.context.embedded.JspServlet jspServlet58 = undertowEmbeddedServletContainerFactory34.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet58);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNull(inetAddress41);
        org.junit.Assert.assertNotNull(errorPageSet42);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray45);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray49);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(jspServlet58);
    }

    @Test
    public void test09970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09970");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 0);
        java.lang.String str3 = undertowEmbeddedServletContainerFactory2.getDisplayName();
        java.lang.String str4 = undertowEmbeddedServletContainerFactory2.getDisplayName();
        undertowEmbeddedServletContainerFactory2.setPersistSession(true);
        java.lang.String str7 = undertowEmbeddedServletContainerFactory2.getDisplayName();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory2.getContextPath();
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file9);
        java.io.File file11 = undertowEmbeddedServletContainerFactory2.getSessionStoreDir();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test09971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09971");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file4);
        org.springframework.boot.context.embedded.Compression compression6 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.junit.Assert.assertNull(compression6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test09972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09972");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 100);
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory2.setSessionTimeout(10);
        undertowEmbeddedServletContainerFactory2.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory10.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file14 = null;
        undertowEmbeddedServletContainerFactory13.setAccessLogDirectory(file14);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray16 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory13.addErrorPages(errorPageArray16);
        undertowEmbeddedServletContainerFactory10.addErrorPages(errorPageArray16);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory20.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory24.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory24.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl29 = undertowEmbeddedServletContainerFactory24.getSsl();
        boolean boolean30 = undertowEmbeddedServletContainerFactory24.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet31 = null;
        undertowEmbeddedServletContainerFactory24.setJspServlet(jspServlet31);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray33 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet34 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet34, errorPageArray33);
        undertowEmbeddedServletContainerFactory24.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet34);
        undertowEmbeddedServletContainerFactory20.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet34);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet38 = undertowEmbeddedServletContainerFactory20.getErrorPages();
        boolean boolean39 = undertowEmbeddedServletContainerFactory20.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory41.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory41.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray46 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer47 = undertowEmbeddedServletContainerFactory41.getEmbeddedServletContainer(servletContextInitializerArray46);
        undertowEmbeddedServletContainerFactory20.addInitializers(servletContextInitializerArray46);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer49 = undertowEmbeddedServletContainerFactory10.getEmbeddedServletContainer(servletContextInitializerArray46);
        undertowEmbeddedServletContainerFactory2.addInitializers(servletContextInitializerArray46);
        java.lang.String str51 = undertowEmbeddedServletContainerFactory2.getContextPath();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection52 = undertowEmbeddedServletContainerFactory2.getBuilderCustomizers();
        boolean boolean53 = undertowEmbeddedServletContainerFactory2.isAccessLogEnabled();
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertNotNull(errorPageArray16);
        org.junit.Assert.assertNull(ssl29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(errorPageArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(errorPageSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray46);
        org.junit.Assert.assertNotNull(embeddedServletContainer47);
        org.junit.Assert.assertNotNull(embeddedServletContainer49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test09973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09973");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer8 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap7);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer10 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer12 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap11);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer8, initParameterConfiguringServletContextInitializer10, initParameterConfiguringServletContextInitializer12 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray13);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str17 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        org.springframework.boot.context.embedded.Compression compression21 = undertowEmbeddedServletContainerFactory1.getCompression();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        java.util.concurrent.TimeUnit timeUnit25 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) ' ', timeUnit25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertNull(compression21);
    }

    @Test
    public void test09974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09974");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 0);
        java.lang.String str3 = undertowEmbeddedServletContainerFactory2.getDisplayName();
        java.lang.String str4 = undertowEmbeddedServletContainerFactory2.getDisplayName();
        undertowEmbeddedServletContainerFactory2.setPersistSession(true);
        java.io.File file7 = undertowEmbeddedServletContainerFactory2.getDocumentRoot();
        undertowEmbeddedServletContainerFactory2.setAccessLogPattern("hi!");
        java.net.InetAddress inetAddress10 = undertowEmbeddedServletContainerFactory2.getAddress();
        org.springframework.boot.context.embedded.Ssl ssl11 = null;
        undertowEmbeddedServletContainerFactory2.setSsl(ssl11);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory14.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory14.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory14.getSsl();
        boolean boolean20 = undertowEmbeddedServletContainerFactory14.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet21 = null;
        undertowEmbeddedServletContainerFactory14.setJspServlet(jspServlet21);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray23 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24, errorPageArray23);
        undertowEmbeddedServletContainerFactory14.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection27 = undertowEmbeddedServletContainerFactory14.getBuilderCustomizers();
        java.io.File file28 = null;
        undertowEmbeddedServletContainerFactory14.setSessionStoreDir(file28);
        undertowEmbeddedServletContainerFactory14.setBufferSize((java.lang.Integer) (-1));
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory33.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory33.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl38 = undertowEmbeddedServletContainerFactory33.getSsl();
        boolean boolean39 = undertowEmbeddedServletContainerFactory33.isAccessLogEnabled();
        java.io.File file40 = null;
        undertowEmbeddedServletContainerFactory33.setAccessLogDirectory(file40);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray42 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet43 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet43, errorPageArray42);
        undertowEmbeddedServletContainerFactory33.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet43);
        undertowEmbeddedServletContainerFactory33.setAccessLogPattern("");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings48 = undertowEmbeddedServletContainerFactory33.getMimeMappings();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet49 = undertowEmbeddedServletContainerFactory33.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory51.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray56 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory55.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray56);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray60 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory59.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray60);
        undertowEmbeddedServletContainerFactory55.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray60);
        undertowEmbeddedServletContainerFactory51.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray60);
        undertowEmbeddedServletContainerFactory33.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray60);
        undertowEmbeddedServletContainerFactory14.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray60);
        undertowEmbeddedServletContainerFactory2.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray60);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings67 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(inetAddress10);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(errorPageArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection27);
        org.junit.Assert.assertNull(ssl38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(errorPageArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(mimeMappings48);
        org.junit.Assert.assertNotNull(errorPageSet49);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray56);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray60);
        org.junit.Assert.assertNotNull(mimeMappings67);
    }

    @Test
    public void test09975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09975");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file2 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file6 = undertowEmbeddedServletContainerFactory5.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory5.setPersistSession(false);
        undertowEmbeddedServletContainerFactory5.setJspServletClassName("");
        java.io.File file11 = undertowEmbeddedServletContainerFactory5.getSessionStoreDir();
        java.lang.String str12 = undertowEmbeddedServletContainerFactory5.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory14.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory14.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory14.getSsl();
        boolean boolean20 = undertowEmbeddedServletContainerFactory14.isAccessLogEnabled();
        java.io.File file21 = null;
        undertowEmbeddedServletContainerFactory14.setAccessLogDirectory(file21);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray23 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24, errorPageArray23);
        undertowEmbeddedServletContainerFactory14.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24);
        undertowEmbeddedServletContainerFactory5.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet24);
        boolean boolean29 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 10);
        java.lang.String str32 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file35 = undertowEmbeddedServletContainerFactory34.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory34.setPersistSession(false);
        undertowEmbeddedServletContainerFactory34.setJspServletClassName("");
        java.io.File file40 = undertowEmbeddedServletContainerFactory34.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory34.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory34.setUseForwardHeaders(true);
        undertowEmbeddedServletContainerFactory34.setDisplayName("hi!");
        java.lang.String str47 = undertowEmbeddedServletContainerFactory34.getDisplayName();
        org.springframework.boot.context.embedded.JspServlet jspServlet48 = undertowEmbeddedServletContainerFactory34.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet48);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 52);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection52 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(errorPageArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(jspServlet48);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection52);
    }

    @Test
    public void test09976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09976");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer8 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap7);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer10 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer12 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap11);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer8, initParameterConfiguringServletContextInitializer10, initParameterConfiguringServletContextInitializer12 };
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray13);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        int int17 = undertowEmbeddedServletContainerFactory1.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet18 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray20 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray20);
        java.io.File file22 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file22);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 10);
        java.io.File file28 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet18);
        org.junit.Assert.assertNotNull(jspServlet19);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray20);
        org.junit.Assert.assertNull(file28);
    }

    @Test
    public void test09977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09977");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        java.lang.String str11 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection12 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory14.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory14.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory14.getSsl();
        boolean boolean20 = undertowEmbeddedServletContainerFactory14.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet21 = null;
        undertowEmbeddedServletContainerFactory14.setJspServlet(jspServlet21);
        java.net.InetAddress inetAddress23 = undertowEmbeddedServletContainerFactory14.getAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        undertowEmbeddedServletContainerFactory14.setSessionTimeout(100);
        org.springframework.boot.context.embedded.Compression compression27 = undertowEmbeddedServletContainerFactory14.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory29.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory29.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader34 = null;
        undertowEmbeddedServletContainerFactory29.setResourceLoader(resourceLoader34);
        org.springframework.boot.context.embedded.Compression compression36 = null;
        undertowEmbeddedServletContainerFactory29.setCompression(compression36);
        undertowEmbeddedServletContainerFactory29.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.Ssl ssl40 = undertowEmbeddedServletContainerFactory29.getSsl();
        java.io.File file41 = undertowEmbeddedServletContainerFactory29.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray44 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory43.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray44);
        org.springframework.boot.context.embedded.Ssl ssl46 = null;
        undertowEmbeddedServletContainerFactory43.setSsl(ssl46);
        org.springframework.boot.context.embedded.Ssl ssl48 = undertowEmbeddedServletContainerFactory43.getSsl();
        undertowEmbeddedServletContainerFactory43.setDisplayName("");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings51 = undertowEmbeddedServletContainerFactory43.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer undertowDeploymentInfoCustomizer52 = null;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray53 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] { undertowDeploymentInfoCustomizer52 };
        undertowEmbeddedServletContainerFactory43.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray53);
        undertowEmbeddedServletContainerFactory29.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray53);
        undertowEmbeddedServletContainerFactory14.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray53);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray53);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection60 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.lang.String str61 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection12);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(inetAddress23);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNull(compression27);
        org.junit.Assert.assertNull(ssl40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray44);
        org.junit.Assert.assertNull(ssl48);
        org.junit.Assert.assertNotNull(mimeMappings51);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray53);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
    }

    @Test
    public void test09978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09978");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 32);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory13.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory13.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader18 = null;
        undertowEmbeddedServletContainerFactory13.setResourceLoader(resourceLoader18);
        org.springframework.boot.context.embedded.Compression compression20 = null;
        undertowEmbeddedServletContainerFactory13.setCompression(compression20);
        java.lang.String str22 = undertowEmbeddedServletContainerFactory13.getContextPath();
        undertowEmbeddedServletContainerFactory13.setUseForwardHeaders(true);
        java.lang.String str25 = undertowEmbeddedServletContainerFactory13.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory27.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory27.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl32 = undertowEmbeddedServletContainerFactory27.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer34 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap33);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer36 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap35);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer38 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap37);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray39 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer34, initParameterConfiguringServletContextInitializer36, initParameterConfiguringServletContextInitializer38 };
        undertowEmbeddedServletContainerFactory27.addInitializers(servletContextInitializerArray39);
        undertowEmbeddedServletContainerFactory13.addInitializers(servletContextInitializerArray39);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray39);
        java.io.File file43 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.springframework.boot.context.embedded.Ssl ssl44 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl44);
        boolean boolean46 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(ssl32);
        org.junit.Assert.assertNotNull(servletContextInitializerArray39);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test09979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09979");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet8 = null;
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet8);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray10 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11, errorPageArray10);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        java.net.InetAddress inetAddress16 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory18.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory18.setPersistSession(false);
        java.io.File file23 = null;
        undertowEmbeddedServletContainerFactory18.setAccessLogDirectory(file23);
        undertowEmbeddedServletContainerFactory18.setBufferSize((java.lang.Integer) (-1));
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet27 = undertowEmbeddedServletContainerFactory18.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet27);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(errorPageArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(inetAddress16);
        org.junit.Assert.assertNotNull(errorPageSet27);
    }

    @Test
    public void test09980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09980");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.net.InetAddress inetAddress2 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress2);
        java.net.InetAddress inetAddress4 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection5 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) 'a');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory10.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray11);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory14.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray15);
        undertowEmbeddedServletContainerFactory10.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray15);
        undertowEmbeddedServletContainerFactory8.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray15);
        java.lang.String str19 = undertowEmbeddedServletContainerFactory8.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory21.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray26 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory25.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray26);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray30 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory29.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray30);
        undertowEmbeddedServletContainerFactory25.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray30);
        undertowEmbeddedServletContainerFactory21.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray30);
        java.lang.String str34 = undertowEmbeddedServletContainerFactory21.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory36.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory36.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray41 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer42 = undertowEmbeddedServletContainerFactory36.getEmbeddedServletContainer(servletContextInitializerArray41);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer43 = undertowEmbeddedServletContainerFactory21.getEmbeddedServletContainer(servletContextInitializerArray41);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer44 = undertowEmbeddedServletContainerFactory8.getEmbeddedServletContainer(servletContextInitializerArray41);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer45 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray41);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet46 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        boolean boolean47 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 97);
        java.io.File file50 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.junit.Assert.assertNull(inetAddress4);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection5);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray11);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray26);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray30);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(servletContextInitializerArray41);
        org.junit.Assert.assertNotNull(embeddedServletContainer42);
        org.junit.Assert.assertNotNull(embeddedServletContainer43);
        org.junit.Assert.assertNotNull(embeddedServletContainer44);
        org.junit.Assert.assertNotNull(embeddedServletContainer45);
        org.junit.Assert.assertNotNull(errorPageSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(file50);
    }

    @Test
    public void test09981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09981");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory5.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray6);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory9.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        undertowEmbeddedServletContainerFactory5.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray10);
        java.lang.String str14 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory16.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory16.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray21 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer22 = undertowEmbeddedServletContainerFactory16.getEmbeddedServletContainer(servletContextInitializerArray21);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer23 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray21);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        java.io.File file26 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file26);
        org.springframework.boot.context.embedded.Compression compression28 = undertowEmbeddedServletContainerFactory1.getCompression();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        java.io.File file35 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file35);
        java.util.concurrent.TimeUnit timeUnit38 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) -1, timeUnit38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(servletContextInitializerArray21);
        org.junit.Assert.assertNotNull(embeddedServletContainer22);
        org.junit.Assert.assertNotNull(embeddedServletContainer23);
        org.junit.Assert.assertNull(compression28);
    }

    @Test
    public void test09982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09982");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression8);
        java.lang.String str10 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory14.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory14.setPersistSession(false);
        boolean boolean19 = undertowEmbeddedServletContainerFactory14.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory21.setPort((int) (byte) -1);
        boolean boolean24 = undertowEmbeddedServletContainerFactory21.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory26.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory26.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl31 = null;
        undertowEmbeddedServletContainerFactory26.setSsl(ssl31);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray33 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory26.addErrorPages(errorPageArray33);
        undertowEmbeddedServletContainerFactory21.addErrorPages(errorPageArray33);
        undertowEmbeddedServletContainerFactory14.addErrorPages(errorPageArray33);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray33);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.net.InetAddress inetAddress39 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress39);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 100);
        undertowEmbeddedServletContainerFactory43.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory43.setSessionTimeout((int) '4');
        undertowEmbeddedServletContainerFactory43.setUseForwardHeaders(true);
        undertowEmbeddedServletContainerFactory43.setPort((int) (short) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory53.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory53.setPersistSession(false);
        boolean boolean58 = undertowEmbeddedServletContainerFactory53.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory60.setPort((int) (byte) -1);
        boolean boolean63 = undertowEmbeddedServletContainerFactory60.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory65.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory65.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl70 = null;
        undertowEmbeddedServletContainerFactory65.setSsl(ssl70);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray72 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory65.addErrorPages(errorPageArray72);
        undertowEmbeddedServletContainerFactory60.addErrorPages(errorPageArray72);
        undertowEmbeddedServletContainerFactory53.addErrorPages(errorPageArray72);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer76 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray77 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer76 };
        undertowEmbeddedServletContainerFactory53.addBuilderCustomizers(undertowBuilderCustomizerArray77);
        undertowEmbeddedServletContainerFactory43.addBuilderCustomizers(undertowBuilderCustomizerArray77);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray77);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(errorPageArray33);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(errorPageArray72);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray77);
    }

    @Test
    public void test09983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09983");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet8 = null;
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet8);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray10 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11, errorPageArray10);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11);
        org.springframework.boot.context.embedded.JspServlet jspServlet14 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1);
        java.lang.String str17 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl22 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(errorPageArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(jspServlet14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(ssl22);
    }

    @Test
    public void test09984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09984");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 32);
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection16 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        undertowEmbeddedServletContainerFactory1.setPort(1800);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection16);
    }

    @Test
    public void test09985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09985");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file2 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file2);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 0);
    }

    @Test
    public void test09986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09986");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file4);
        undertowEmbeddedServletContainerFactory1.setPort(0);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray8 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray8);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader10);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file18 = undertowEmbeddedServletContainerFactory17.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory17.setPersistSession(false);
        java.lang.String str21 = undertowEmbeddedServletContainerFactory17.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory23.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory23.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl28 = undertowEmbeddedServletContainerFactory23.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer30 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap29);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer32 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap31);
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer34 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap33);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray35 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer30, initParameterConfiguringServletContextInitializer32, initParameterConfiguringServletContextInitializer34 };
        undertowEmbeddedServletContainerFactory23.addInitializers(servletContextInitializerArray35);
        undertowEmbeddedServletContainerFactory23.setJspServletClassName("hi!");
        int int39 = undertowEmbeddedServletContainerFactory23.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet40 = undertowEmbeddedServletContainerFactory23.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        undertowEmbeddedServletContainerFactory42.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray47 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory46.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray47);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray51 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory50.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray51);
        undertowEmbeddedServletContainerFactory46.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray51);
        undertowEmbeddedServletContainerFactory42.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray51);
        java.lang.String str55 = undertowEmbeddedServletContainerFactory42.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory57.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory57.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray62 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer63 = undertowEmbeddedServletContainerFactory57.getEmbeddedServletContainer(servletContextInitializerArray62);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer64 = undertowEmbeddedServletContainerFactory42.getEmbeddedServletContainer(servletContextInitializerArray62);
        undertowEmbeddedServletContainerFactory23.addInitializers(servletContextInitializerArray62);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer66 = undertowEmbeddedServletContainerFactory17.getEmbeddedServletContainer(servletContextInitializerArray62);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer67 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray62);
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        boolean boolean70 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1800);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        java.io.File file77 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file77);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection85 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray8);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(ssl28);
        org.junit.Assert.assertNotNull(servletContextInitializerArray35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet40);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray47);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(servletContextInitializerArray62);
        org.junit.Assert.assertNotNull(embeddedServletContainer63);
        org.junit.Assert.assertNotNull(embeddedServletContainer64);
        org.junit.Assert.assertNotNull(embeddedServletContainer66);
        org.junit.Assert.assertNotNull(embeddedServletContainer67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection85);
    }

    @Test
    public void test09987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09987");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(1800);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        java.lang.String str4 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test09988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09988");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory5.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory5.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory5.setResourceLoader(resourceLoader10);
        org.springframework.boot.context.embedded.Compression compression12 = null;
        undertowEmbeddedServletContainerFactory5.setCompression(compression12);
        undertowEmbeddedServletContainerFactory5.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory17.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory17.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl22 = undertowEmbeddedServletContainerFactory17.getSsl();
        boolean boolean23 = undertowEmbeddedServletContainerFactory17.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet24 = null;
        undertowEmbeddedServletContainerFactory17.setJspServlet(jspServlet24);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        undertowEmbeddedServletContainerFactory5.setMimeMappings(mimeMappings26);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings26);
        boolean boolean29 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory33.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory33.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl38 = undertowEmbeddedServletContainerFactory33.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer40 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap39);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer42 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap41);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer44 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap43);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray45 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer40, initParameterConfiguringServletContextInitializer42, initParameterConfiguringServletContextInitializer44 };
        undertowEmbeddedServletContainerFactory33.addInitializers(servletContextInitializerArray45);
        undertowEmbeddedServletContainerFactory33.setJspServletClassName("hi!");
        int int49 = undertowEmbeddedServletContainerFactory33.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet50 = undertowEmbeddedServletContainerFactory33.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet50);
        boolean boolean52 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.io.File file53 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) -1);
        int int57 = undertowEmbeddedServletContainerFactory56.getPort();
        undertowEmbeddedServletContainerFactory56.setAccessLogEnabled(false);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet60 = undertowEmbeddedServletContainerFactory56.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet60);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.setPort(1800);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(ssl38);
        org.junit.Assert.assertNotNull(servletContextInitializerArray45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(errorPageSet60);
    }

    @Test
    public void test09989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09989");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory8.setPort((int) (byte) -1);
        boolean boolean11 = undertowEmbeddedServletContainerFactory8.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory13.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory13.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl18 = null;
        undertowEmbeddedServletContainerFactory13.setSsl(ssl18);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray20 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory13.addErrorPages(errorPageArray20);
        undertowEmbeddedServletContainerFactory8.addErrorPages(errorPageArray20);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray20);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray25 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer24 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray25);
        java.io.File file27 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        boolean boolean28 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.io.File file29 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet32 = undertowEmbeddedServletContainerFactory31.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet32);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(errorPageArray20);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray25);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(errorPageSet32);
    }

    @Test
    public void test09990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09990");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory3.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory12.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory12.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory12.getSsl();
        boolean boolean18 = undertowEmbeddedServletContainerFactory12.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = null;
        undertowEmbeddedServletContainerFactory12.setJspServlet(jspServlet19);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings21);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection23 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory27.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory27.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl32 = null;
        undertowEmbeddedServletContainerFactory27.setSsl(ssl32);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray34 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory27.addErrorPages(errorPageArray34);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray34);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        int int39 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        boolean boolean40 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection23);
        org.junit.Assert.assertNotNull(errorPageArray34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1800 + "'", int39 == 1800);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test09991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09991");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        boolean boolean3 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file4);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        boolean boolean8 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory12.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray13);
        org.springframework.boot.context.embedded.Ssl ssl15 = null;
        undertowEmbeddedServletContainerFactory12.setSsl(ssl15);
        undertowEmbeddedServletContainerFactory12.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = undertowEmbeddedServletContainerFactory12.getErrorPages();
        undertowEmbeddedServletContainerFactory12.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory12.setIoThreads((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory25.setPort((int) (byte) -1);
        boolean boolean28 = undertowEmbeddedServletContainerFactory25.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory30.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory30.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl35 = null;
        undertowEmbeddedServletContainerFactory30.setSsl(ssl35);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray37 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory30.addErrorPages(errorPageArray37);
        undertowEmbeddedServletContainerFactory25.addErrorPages(errorPageArray37);
        undertowEmbeddedServletContainerFactory12.addErrorPages(errorPageArray37);
        undertowEmbeddedServletContainerFactory12.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.net.InetAddress inetAddress45 = null;
        undertowEmbeddedServletContainerFactory44.setAddress(inetAddress45);
        undertowEmbeddedServletContainerFactory44.setBuffersPerRegion((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory44.setJspServletClassName("hi!");
        java.io.File file51 = null;
        undertowEmbeddedServletContainerFactory44.setSessionStoreDir(file51);
        undertowEmbeddedServletContainerFactory44.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray57 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory56.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray57);
        org.springframework.boot.context.embedded.Ssl ssl59 = null;
        undertowEmbeddedServletContainerFactory56.setSsl(ssl59);
        org.springframework.boot.context.embedded.Ssl ssl61 = undertowEmbeddedServletContainerFactory56.getSsl();
        boolean boolean62 = undertowEmbeddedServletContainerFactory56.isRegisterDefaultServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection63 = undertowEmbeddedServletContainerFactory56.getDeploymentInfoCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection64 = undertowEmbeddedServletContainerFactory56.getDeploymentInfoCustomizers();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet65 = undertowEmbeddedServletContainerFactory56.getErrorPages();
        undertowEmbeddedServletContainerFactory44.setErrorPages(errorPageSet65);
        undertowEmbeddedServletContainerFactory12.setErrorPages(errorPageSet65);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet65);
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
        org.springframework.boot.context.embedded.Ssl ssl71 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl71);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray13);
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(errorPageArray37);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray57);
        org.junit.Assert.assertNull(ssl61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection63);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection64);
        org.junit.Assert.assertNotNull(errorPageSet65);
    }

    @Test
    public void test09992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09992");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file4);
        undertowEmbeddedServletContainerFactory1.setPort(0);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray8 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray8);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader10);
        java.lang.String str12 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        undertowEmbeddedServletContainerFactory1.setPort((int) '#');
        org.springframework.boot.context.embedded.JspServlet jspServlet15 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 32);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setPort(32);
        java.lang.String str22 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(jspServlet15);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test09993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09993");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file4);
        undertowEmbeddedServletContainerFactory1.setPort(0);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray8 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray8);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader10);
        undertowEmbeddedServletContainerFactory1.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 0);
        undertowEmbeddedServletContainerFactory18.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory22.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray25 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory22.addBuilderCustomizers(undertowBuilderCustomizerArray25);
        undertowEmbeddedServletContainerFactory18.addBuilderCustomizers(undertowBuilderCustomizerArray25);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray25);
        java.io.File file29 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file29);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray33 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory32.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray33);
        org.springframework.boot.context.embedded.Ssl ssl35 = null;
        undertowEmbeddedServletContainerFactory32.setSsl(ssl35);
        undertowEmbeddedServletContainerFactory32.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet39 = undertowEmbeddedServletContainerFactory32.getErrorPages();
        undertowEmbeddedServletContainerFactory32.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory32.setIoThreads((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file46 = null;
        undertowEmbeddedServletContainerFactory45.setAccessLogDirectory(file46);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray48 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory45.addErrorPages(errorPageArray48);
        undertowEmbeddedServletContainerFactory32.addErrorPages(errorPageArray48);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray48);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet52 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray25);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray33);
        org.junit.Assert.assertNotNull(errorPageSet39);
        org.junit.Assert.assertNotNull(errorPageArray48);
        org.junit.Assert.assertNotNull(errorPageSet52);
    }

    @Test
    public void test09994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09994");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) 'a');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray5 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory4.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray5);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray9 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory8.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray9);
        undertowEmbeddedServletContainerFactory4.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray9);
        undertowEmbeddedServletContainerFactory2.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray9);
        java.lang.String str13 = undertowEmbeddedServletContainerFactory2.getContextPath();
        undertowEmbeddedServletContainerFactory2.setDisplayName("");
        undertowEmbeddedServletContainerFactory2.setBuffersPerRegion((java.lang.Integer) 32);
        org.springframework.boot.context.embedded.Ssl ssl18 = undertowEmbeddedServletContainerFactory2.getSsl();
        java.io.File file19 = undertowEmbeddedServletContainerFactory2.getDocumentRoot();
        java.util.concurrent.TimeUnit timeUnit21 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory2.setSessionTimeout((int) (byte) 10, timeUnit21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray5);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(ssl18);
        org.junit.Assert.assertNull(file19);
    }

    @Test
    public void test09995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09995");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.Compression compression7 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression7);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory10.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory10.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        undertowEmbeddedServletContainerFactory10.setResourceLoader(resourceLoader15);
        java.net.InetAddress inetAddress17 = null;
        undertowEmbeddedServletContainerFactory10.setAddress(inetAddress17);
        undertowEmbeddedServletContainerFactory10.setSessionTimeout((int) 'a');
        java.net.InetAddress inetAddress21 = undertowEmbeddedServletContainerFactory10.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray26 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory25.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray26);
        org.springframework.boot.context.embedded.Ssl ssl28 = null;
        undertowEmbeddedServletContainerFactory25.setSsl(ssl28);
        org.springframework.boot.context.embedded.Ssl ssl30 = undertowEmbeddedServletContainerFactory25.getSsl();
        undertowEmbeddedServletContainerFactory25.setDisplayName("");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = undertowEmbeddedServletContainerFactory25.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer undertowDeploymentInfoCustomizer34 = null;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray35 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] { undertowDeploymentInfoCustomizer34 };
        undertowEmbeddedServletContainerFactory25.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray35);
        undertowEmbeddedServletContainerFactory23.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray35);
        undertowEmbeddedServletContainerFactory10.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray35);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray35);
        org.springframework.boot.context.embedded.JspServlet jspServlet40 = null;
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet40);
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory47.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory47.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Compression compression52 = undertowEmbeddedServletContainerFactory47.getCompression();
        java.io.File file53 = null;
        undertowEmbeddedServletContainerFactory47.setSessionStoreDir(file53);
        undertowEmbeddedServletContainerFactory47.setBufferSize((java.lang.Integer) 1);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection57 = undertowEmbeddedServletContainerFactory47.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory47.setAccessLogPattern("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray62 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory61.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray62);
        org.springframework.boot.context.embedded.Ssl ssl64 = null;
        undertowEmbeddedServletContainerFactory61.setSsl(ssl64);
        undertowEmbeddedServletContainerFactory61.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet68 = undertowEmbeddedServletContainerFactory61.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader69 = null;
        undertowEmbeddedServletContainerFactory61.setResourceLoader(resourceLoader69);
        java.io.File file71 = undertowEmbeddedServletContainerFactory61.getDocumentRoot();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection72 = undertowEmbeddedServletContainerFactory61.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory61.setBuffersPerRegion((java.lang.Integer) 1);
        int int75 = undertowEmbeddedServletContainerFactory61.getPort();
        org.springframework.boot.context.embedded.JspServlet jspServlet76 = undertowEmbeddedServletContainerFactory61.getJspServlet();
        undertowEmbeddedServletContainerFactory47.setJspServlet(jspServlet76);
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet76);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNull(inetAddress21);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray26);
        org.junit.Assert.assertNull(ssl30);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray35);
        org.junit.Assert.assertNull(compression52);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection57);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray62);
        org.junit.Assert.assertNotNull(errorPageSet68);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        org.junit.Assert.assertNotNull(jspServlet76);
    }

    @Test
    public void test09996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09996");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray2);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory11.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray14 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory11.addBuilderCustomizers(undertowBuilderCustomizerArray14);
        undertowEmbeddedServletContainerFactory9.addBuilderCustomizers(undertowBuilderCustomizerArray14);
        org.springframework.boot.context.embedded.Ssl ssl17 = null;
        undertowEmbeddedServletContainerFactory9.setSsl(ssl17);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory20.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory20.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl25 = undertowEmbeddedServletContainerFactory20.getSsl();
        boolean boolean26 = undertowEmbeddedServletContainerFactory20.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet27 = null;
        undertowEmbeddedServletContainerFactory20.setJspServlet(jspServlet27);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = undertowEmbeddedServletContainerFactory20.getMimeMappings();
        undertowEmbeddedServletContainerFactory9.setMimeMappings(mimeMappings29);
        undertowEmbeddedServletContainerFactory9.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.Ssl ssl33 = undertowEmbeddedServletContainerFactory9.getSsl();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection34 = undertowEmbeddedServletContainerFactory9.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.net.InetAddress inetAddress37 = null;
        undertowEmbeddedServletContainerFactory36.setAddress(inetAddress37);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray41 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory40.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray41);
        org.springframework.boot.context.embedded.Ssl ssl43 = null;
        undertowEmbeddedServletContainerFactory40.setSsl(ssl43);
        undertowEmbeddedServletContainerFactory40.setAccessLogPattern("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet47 = undertowEmbeddedServletContainerFactory40.getErrorPages();
        undertowEmbeddedServletContainerFactory40.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory40.setIoThreads((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file54 = null;
        undertowEmbeddedServletContainerFactory53.setAccessLogDirectory(file54);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray56 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory53.addErrorPages(errorPageArray56);
        undertowEmbeddedServletContainerFactory40.addErrorPages(errorPageArray56);
        undertowEmbeddedServletContainerFactory36.addErrorPages(errorPageArray56);
        undertowEmbeddedServletContainerFactory9.addErrorPages(errorPageArray56);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray56);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory63.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory63.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl68 = undertowEmbeddedServletContainerFactory63.getSsl();
        boolean boolean69 = undertowEmbeddedServletContainerFactory63.isAccessLogEnabled();
        org.springframework.boot.context.embedded.JspServlet jspServlet70 = null;
        undertowEmbeddedServletContainerFactory63.setJspServlet(jspServlet70);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray72 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet73 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet73, errorPageArray72);
        undertowEmbeddedServletContainerFactory63.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet73);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection76 = undertowEmbeddedServletContainerFactory63.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory78 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) 'a');
        java.io.File file79 = null;
        undertowEmbeddedServletContainerFactory78.setDocumentRoot(file79);
        org.springframework.boot.context.embedded.Ssl ssl81 = null;
        undertowEmbeddedServletContainerFactory78.setSsl(ssl81);
        int int83 = undertowEmbeddedServletContainerFactory78.getPort();
        java.net.InetAddress inetAddress84 = undertowEmbeddedServletContainerFactory78.getAddress();
        undertowEmbeddedServletContainerFactory78.setPort((int) (byte) -1);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet87 = undertowEmbeddedServletContainerFactory78.getErrorPages();
        undertowEmbeddedServletContainerFactory63.setErrorPages(errorPageSet87);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet87);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        boolean boolean92 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        java.io.File file95 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.io.File file96 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file96);
        java.lang.String str98 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray14);
        org.junit.Assert.assertNull(ssl25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNull(ssl33);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection34);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray41);
        org.junit.Assert.assertNotNull(errorPageSet47);
        org.junit.Assert.assertNotNull(errorPageArray56);
        org.junit.Assert.assertNull(ssl68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(errorPageArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection76);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 97 + "'", int83 == 97);
        org.junit.Assert.assertNull(inetAddress84);
        org.junit.Assert.assertNotNull(errorPageSet87);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNull(file95);
        org.junit.Assert.assertNull(str98);
    }

    @Test
    public void test09997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09997");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file8);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray10 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11, errorPageArray10);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet11);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 100);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.util.concurrent.TimeUnit timeUnit24 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) '#', timeUnit24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(errorPageArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(errorPageSet17);
        org.junit.Assert.assertNotNull(errorPageSet20);
    }

    @Test
    public void test09998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09998");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file8);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection10 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.Compression compression11 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression11);
        org.springframework.boot.context.embedded.Compression compression13 = undertowEmbeddedServletContainerFactory1.getCompression();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 10);
        java.io.File file16 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/' and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection10);
        org.junit.Assert.assertNull(compression13);
        org.junit.Assert.assertNull(file16);
    }

    @Test
    public void test09999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09999");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory6.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory6.getSsl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13, initParameterConfiguringServletContextInitializer15, initParameterConfiguringServletContextInitializer17 };
        undertowEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray18);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
    }

    @Test
    public void test10000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test10000");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file7);
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        boolean boolean11 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }
}

