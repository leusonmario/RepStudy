import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest26 {

    public static boolean debug = false;

    @Test
    public void test13001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13001");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection2 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory0.setPort((-1));
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList5 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        boolean boolean6 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("0.0.0.0");
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList11 = null;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList11;
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection2);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test13002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13002");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory2.bufferSize = 52;
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory2.workerThreads;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList6 = undertowEmbeddedServletContainerFactory2.builderCustomizers;
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList6);
    }

    @Test
    public void test13003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13003");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.lang.Integer int3 = undertowEmbeddedServletContainerFactory1.bufferSize;
        int int4 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        int int5 = undertowEmbeddedServletContainerFactory1.getPort();
        int int6 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) '#');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getSessionTimeout();
        boolean boolean12 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        undertowEmbeddedServletContainerFactory10.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl15 = null;
        undertowEmbeddedServletContainerFactory10.setSsl(ssl15);
        java.lang.String str17 = undertowEmbeddedServletContainerFactory10.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getSessionTimeout();
        boolean boolean20 = undertowEmbeddedServletContainerFactory18.isPersistSession();
        undertowEmbeddedServletContainerFactory18.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory18.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int26 = undertowEmbeddedServletContainerFactory25.getSessionTimeout();
        boolean boolean27 = undertowEmbeddedServletContainerFactory25.isPersistSession();
        java.io.File file28 = undertowEmbeddedServletContainerFactory25.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList29 = undertowEmbeddedServletContainerFactory25.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory18.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList29;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory33.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int37 = undertowEmbeddedServletContainerFactory36.getSessionTimeout();
        boolean boolean38 = undertowEmbeddedServletContainerFactory36.isPersistSession();
        undertowEmbeddedServletContainerFactory36.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory36.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray43 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory36.addErrorPages(errorPageArray43);
        undertowEmbeddedServletContainerFactory33.addErrorPages(errorPageArray43);
        undertowEmbeddedServletContainerFactory18.addErrorPages(errorPageArray43);
        undertowEmbeddedServletContainerFactory10.addErrorPages(errorPageArray43);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int49 = undertowEmbeddedServletContainerFactory48.getSessionTimeout();
        boolean boolean50 = undertowEmbeddedServletContainerFactory48.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList51 = undertowEmbeddedServletContainerFactory48.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int53 = undertowEmbeddedServletContainerFactory52.getSessionTimeout();
        boolean boolean54 = undertowEmbeddedServletContainerFactory52.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList55 = undertowEmbeddedServletContainerFactory52.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet56 = undertowEmbeddedServletContainerFactory52.getJspServlet();
        boolean boolean57 = undertowEmbeddedServletContainerFactory52.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet58 = undertowEmbeddedServletContainerFactory52.getErrorPages();
        undertowEmbeddedServletContainerFactory48.setErrorPages(errorPageSet58);
        undertowEmbeddedServletContainerFactory10.setErrorPages(errorPageSet58);
        undertowEmbeddedServletContainerFactory9.setErrorPages(errorPageSet58);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet58);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1800 + "'", int4 == 1800);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1800 + "'", int11 == 1800);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1800 + "'", int26 == 1800);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList29);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1800 + "'", int37 == 1800);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(errorPageArray43);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1800 + "'", int49 == 1800);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1800 + "'", int53 == 1800);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList55);
        org.junit.Assert.assertNotNull(jspServlet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(errorPageSet58);
    }

    @Test
    public void test13004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13004");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file15);
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory1.createBuilder(35);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test13005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13005");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory2.setPort((-1));
        java.lang.Integer int28 = undertowEmbeddedServletContainerFactory2.bufferSize;
        io.undertow.Undertow.Builder builder30 = undertowEmbeddedServletContainerFactory2.createBuilder(0);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection31 = undertowEmbeddedServletContainerFactory2.getDeploymentInfoCustomizers();
        int int32 = undertowEmbeddedServletContainerFactory2.getSessionTimeout();
        java.io.File file33 = undertowEmbeddedServletContainerFactory2.accessLogDirectory;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory2.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/' and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1800 + "'", int32 == 1800);
        org.junit.Assert.assertNull(file33);
    }

    @Test
    public void test13006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13006");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) -1);
        java.lang.Integer int3 = undertowEmbeddedServletContainerFactory2.bufferSize;
        boolean boolean4 = undertowEmbeddedServletContainerFactory2.isPersistSession();
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory2.workerThreads;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(mimeMappings6);
    }

    @Test
    public void test13007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13007");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int16 = undertowEmbeddedServletContainerFactory15.getSessionTimeout();
        boolean boolean17 = undertowEmbeddedServletContainerFactory15.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList18 = undertowEmbeddedServletContainerFactory15.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = undertowEmbeddedServletContainerFactory15.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int21 = undertowEmbeddedServletContainerFactory20.getSessionTimeout();
        boolean boolean22 = undertowEmbeddedServletContainerFactory20.isPersistSession();
        undertowEmbeddedServletContainerFactory20.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder26 = undertowEmbeddedServletContainerFactory20.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer29 = undertowEmbeddedServletContainerFactory15.getUndertowEmbeddedServletContainer(builder26, deploymentManager27, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager30 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer32 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder26, deploymentManager30, (int) (byte) -1);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection33 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int35 = undertowEmbeddedServletContainerFactory34.getSessionTimeout();
        boolean boolean36 = undertowEmbeddedServletContainerFactory34.isPersistSession();
        undertowEmbeddedServletContainerFactory34.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory34.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory34.setDisplayName("hi!");
        boolean boolean43 = undertowEmbeddedServletContainerFactory34.isRegisterDefaultServlet();
        boolean boolean44 = undertowEmbeddedServletContainerFactory34.isPersistSession();
        boolean boolean45 = undertowEmbeddedServletContainerFactory34.isAccessLogEnabled();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList46 = undertowEmbeddedServletContainerFactory34.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList46);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection48 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1800 + "'", int16 == 1800);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList18);
        org.junit.Assert.assertNotNull(jspServlet19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1800 + "'", int21 == 1800);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer29);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer32);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1800 + "'", int35 == 1800);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList46);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection48);
    }

    @Test
    public void test13008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13008");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        boolean boolean3 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int5 = undertowEmbeddedServletContainerFactory4.getSessionTimeout();
        boolean boolean6 = undertowEmbeddedServletContainerFactory4.isPersistSession();
        undertowEmbeddedServletContainerFactory4.setPersistSession(false);
        undertowEmbeddedServletContainerFactory4.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList11 = undertowEmbeddedServletContainerFactory4.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory2.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList11;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int14 = undertowEmbeddedServletContainerFactory13.getSessionTimeout();
        boolean boolean15 = undertowEmbeddedServletContainerFactory13.isPersistSession();
        undertowEmbeddedServletContainerFactory13.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory13.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory13.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory13.setSessionTimeout(1);
        boolean boolean24 = undertowEmbeddedServletContainerFactory13.isAccessLogEnabled();
        java.lang.String str25 = undertowEmbeddedServletContainerFactory13.getListenAddress();
        undertowEmbeddedServletContainerFactory13.useForwardHeaders = true;
        int int28 = undertowEmbeddedServletContainerFactory13.getPort();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection29 = undertowEmbeddedServletContainerFactory13.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int31 = undertowEmbeddedServletContainerFactory30.getSessionTimeout();
        boolean boolean32 = undertowEmbeddedServletContainerFactory30.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList33 = undertowEmbeddedServletContainerFactory30.builderCustomizers;
        undertowEmbeddedServletContainerFactory13.builderCustomizers = undertowBuilderCustomizerList33;
        undertowEmbeddedServletContainerFactory2.builderCustomizers = undertowBuilderCustomizerList33;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1800 + "'", int5 == 1800);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1800 + "'", int14 == 1800);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "0.0.0.0" + "'", str25, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8080 + "'", int28 == 8080);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1800 + "'", int31 == 1800);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList33);
    }

    @Test
    public void test13009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13009");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        boolean boolean7 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        org.xnio.XnioWorker xnioWorker12 = undertowEmbeddedServletContainerFactory0.createWorker();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.bufferSize = 52;
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file17);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(xnioWorker12);
    }

    @Test
    public void test13010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13010");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList4 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList4, undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList4);
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList11 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList11, undertowBuilderCustomizerArray10);
        undertowEmbeddedServletContainerFactory9.builderCustomizers = undertowBuilderCustomizerList11;
        undertowEmbeddedServletContainerFactory9.workerThreads = 1;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection16 = undertowEmbeddedServletContainerFactory9.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory9.bufferSize = 10;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = undertowEmbeddedServletContainerFactory21.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader23 = undertowEmbeddedServletContainerFactory21.resourceLoader;
        undertowEmbeddedServletContainerFactory21.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int27 = undertowEmbeddedServletContainerFactory26.getSessionTimeout();
        boolean boolean28 = undertowEmbeddedServletContainerFactory26.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList29 = undertowEmbeddedServletContainerFactory26.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet30 = undertowEmbeddedServletContainerFactory26.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int32 = undertowEmbeddedServletContainerFactory31.getSessionTimeout();
        boolean boolean33 = undertowEmbeddedServletContainerFactory31.isPersistSession();
        undertowEmbeddedServletContainerFactory31.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder37 = undertowEmbeddedServletContainerFactory31.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager38 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer40 = undertowEmbeddedServletContainerFactory26.getUndertowEmbeddedServletContainer(builder37, deploymentManager38, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager41 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer43 = undertowEmbeddedServletContainerFactory21.getUndertowEmbeddedServletContainer(builder37, deploymentManager41, (int) ' ');
        boolean boolean44 = undertowEmbeddedServletContainerFactory21.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory21.setPort((-1));
        java.lang.Integer int47 = undertowEmbeddedServletContainerFactory21.bufferSize;
        io.undertow.Undertow.Builder builder49 = undertowEmbeddedServletContainerFactory21.createBuilder(0);
        io.undertow.servlet.api.DeploymentManager deploymentManager50 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer52 = undertowEmbeddedServletContainerFactory9.getUndertowEmbeddedServletContainer(builder49, deploymentManager50, (int) (byte) 1);
        io.undertow.servlet.api.DeploymentManager deploymentManager53 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer55 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder49, deploymentManager53, (int) (short) 100);
        java.lang.String str56 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int58 = undertowEmbeddedServletContainerFactory57.getSessionTimeout();
        boolean boolean59 = undertowEmbeddedServletContainerFactory57.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList60 = undertowEmbeddedServletContainerFactory57.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet61 = undertowEmbeddedServletContainerFactory57.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int63 = undertowEmbeddedServletContainerFactory62.getSessionTimeout();
        boolean boolean64 = undertowEmbeddedServletContainerFactory62.isPersistSession();
        undertowEmbeddedServletContainerFactory62.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder68 = undertowEmbeddedServletContainerFactory62.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager69 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer71 = undertowEmbeddedServletContainerFactory57.getUndertowEmbeddedServletContainer(builder68, deploymentManager69, (int) (short) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int73 = undertowEmbeddedServletContainerFactory72.getSessionTimeout();
        boolean boolean74 = undertowEmbeddedServletContainerFactory72.isPersistSession();
        undertowEmbeddedServletContainerFactory72.setPersistSession(false);
        undertowEmbeddedServletContainerFactory72.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList79 = undertowEmbeddedServletContainerFactory72.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory72.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory82 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int83 = undertowEmbeddedServletContainerFactory82.getSessionTimeout();
        boolean boolean84 = undertowEmbeddedServletContainerFactory82.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList85 = undertowEmbeddedServletContainerFactory82.builderCustomizers;
        undertowEmbeddedServletContainerFactory72.builderCustomizers = undertowBuilderCustomizerList85;
        undertowEmbeddedServletContainerFactory57.builderCustomizers = undertowBuilderCustomizerList85;
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList85);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory89 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int90 = undertowEmbeddedServletContainerFactory89.getPort();
        java.lang.Integer int91 = undertowEmbeddedServletContainerFactory89.bufferSize;
        java.io.File file92 = null;
        undertowEmbeddedServletContainerFactory89.setSessionStoreDir(file92);
        java.util.Map<java.lang.String, java.lang.String> strMap94 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer95 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap94);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray96 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer95 };
        undertowEmbeddedServletContainerFactory89.addInitializers(servletContextInitializerArray96);
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray96);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection16);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNull(resourceLoader23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1800 + "'", int27 == 1800);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList29);
        org.junit.Assert.assertNotNull(jspServlet30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1800 + "'", int32 == 1800);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer40);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer52);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1800 + "'", int58 == 1800);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList60);
        org.junit.Assert.assertNotNull(jspServlet61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1800 + "'", int63 == 1800);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1800 + "'", int73 == 1800);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList79);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1800 + "'", int83 == 1800);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList85);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 8080 + "'", int90 == 8080);
        org.junit.Assert.assertNull(int91);
        org.junit.Assert.assertNotNull(servletContextInitializerArray96);
    }

    @Test
    public void test13011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13011");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file9);
        org.springframework.core.io.ResourceLoader resourceLoader11 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader11;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean15 = undertowEmbeddedServletContainerFactory14.isAccessLogEnabled();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        java.io.File file17 = undertowEmbeddedServletContainerFactory14.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getSessionTimeout();
        boolean boolean20 = undertowEmbeddedServletContainerFactory18.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList21 = undertowEmbeddedServletContainerFactory18.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet22 = undertowEmbeddedServletContainerFactory18.getJspServlet();
        boolean boolean23 = undertowEmbeddedServletContainerFactory18.useForwardHeaders;
        java.net.InetAddress inetAddress24 = undertowEmbeddedServletContainerFactory18.getAddress();
        undertowEmbeddedServletContainerFactory18.setAccessLogPattern("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = undertowEmbeddedServletContainerFactory29.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader31 = undertowEmbeddedServletContainerFactory29.resourceLoader;
        undertowEmbeddedServletContainerFactory29.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int35 = undertowEmbeddedServletContainerFactory34.getSessionTimeout();
        boolean boolean36 = undertowEmbeddedServletContainerFactory34.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList37 = undertowEmbeddedServletContainerFactory34.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet38 = undertowEmbeddedServletContainerFactory34.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int40 = undertowEmbeddedServletContainerFactory39.getSessionTimeout();
        boolean boolean41 = undertowEmbeddedServletContainerFactory39.isPersistSession();
        undertowEmbeddedServletContainerFactory39.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder45 = undertowEmbeddedServletContainerFactory39.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager46 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer48 = undertowEmbeddedServletContainerFactory34.getUndertowEmbeddedServletContainer(builder45, deploymentManager46, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager49 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer51 = undertowEmbeddedServletContainerFactory29.getUndertowEmbeddedServletContainer(builder45, deploymentManager49, (int) ' ');
        boolean boolean52 = undertowEmbeddedServletContainerFactory29.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory29.setPort((-1));
        java.lang.Integer int55 = undertowEmbeddedServletContainerFactory29.bufferSize;
        io.undertow.Undertow.Builder builder57 = undertowEmbeddedServletContainerFactory29.createBuilder(0);
        io.undertow.servlet.api.DeploymentManager deploymentManager58 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer60 = undertowEmbeddedServletContainerFactory18.getUndertowEmbeddedServletContainer(builder57, deploymentManager58, (int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager61 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer63 = undertowEmbeddedServletContainerFactory14.getUndertowEmbeddedServletContainer(builder57, deploymentManager61, (int) '#');
        org.springframework.core.io.ResourceLoader resourceLoader64 = null;
        undertowEmbeddedServletContainerFactory14.setResourceLoader(resourceLoader64);
        undertowEmbeddedServletContainerFactory14.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory14.setBuffersPerRegion((java.lang.Integer) 1800);
        java.lang.Integer int70 = undertowEmbeddedServletContainerFactory14.ioThreads;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList71 = undertowEmbeddedServletContainerFactory14.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList71;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList21);
        org.junit.Assert.assertNotNull(jspServlet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(inetAddress24);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNull(resourceLoader31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1800 + "'", int35 == 1800);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList37);
        org.junit.Assert.assertNotNull(jspServlet38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1800 + "'", int40 == 1800);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer48);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer60);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer63);
        org.junit.Assert.assertNull(int70);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList71);
    }

    @Test
    public void test13012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13012");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        jarResourceManager0.close();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "0.0.0.0";
        boolean boolean8 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.jarPath = "0.0.0.0";
        java.lang.String str11 = jarResourceManager0.jarPath;
        boolean boolean12 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.close();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "0.0.0.0" + "'", str11, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test13013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13013");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = true;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet9 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getSessionTimeout();
        boolean boolean12 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        java.io.File file13 = undertowEmbeddedServletContainerFactory10.accessLogDirectory;
        java.lang.String str14 = undertowEmbeddedServletContainerFactory10.getListenAddress();
        undertowEmbeddedServletContainerFactory10.setIoThreads((java.lang.Integer) 1);
        java.lang.String str17 = undertowEmbeddedServletContainerFactory10.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getSessionTimeout();
        boolean boolean20 = undertowEmbeddedServletContainerFactory18.isPersistSession();
        undertowEmbeddedServletContainerFactory18.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory18.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory18.setDisplayName("hi!");
        boolean boolean27 = undertowEmbeddedServletContainerFactory18.isRegisterDefaultServlet();
        java.io.File file28 = undertowEmbeddedServletContainerFactory18.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray29 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory18.addBuilderCustomizers(undertowBuilderCustomizerArray29);
        undertowEmbeddedServletContainerFactory10.addBuilderCustomizers(undertowBuilderCustomizerArray29);
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray29);
        java.io.File file33 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file33;
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        int int37 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int38 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(errorPageSet9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1800 + "'", int11 == 1800);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0.0.0.0" + "'", str14, "0.0.0.0");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray29);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8080 + "'", int37 == 8080);
        org.junit.Assert.assertNull(int38);
    }

    @Test
    public void test13014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13014");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        java.lang.String str4 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo5 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo5);
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.accessLogPattern = "";
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(int7);
    }

    @Test
    public void test13015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13015");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        boolean boolean2 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean3 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str4 = jarResourceManager0.jarPath;
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        jarResourceManager0.jarPath = "";
        java.lang.String str10 = jarResourceManager0.jarPath;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test13016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13016");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file5);
        org.springframework.core.io.ResourceLoader resourceLoader7 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList12 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.lang.Integer int13 = undertowEmbeddedServletContainerFactory0.workerThreads;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(resourceLoader7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList12);
        org.junit.Assert.assertNull(int13);
    }

    @Test
    public void test13017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13017");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl5 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl5);
        org.springframework.boot.context.embedded.JspServlet jspServlet7 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean12 = undertowEmbeddedServletContainerFactory11.isAccessLogEnabled();
        org.springframework.boot.context.embedded.Ssl ssl13 = undertowEmbeddedServletContainerFactory11.getSsl();
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory11.bufferSize;
        java.io.File file15 = undertowEmbeddedServletContainerFactory11.getDocumentRoot();
        org.springframework.boot.context.embedded.JspServlet jspServlet16 = undertowEmbeddedServletContainerFactory11.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet16);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory20.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader22 = undertowEmbeddedServletContainerFactory20.resourceLoader;
        java.lang.String str23 = undertowEmbeddedServletContainerFactory20.accessLogPattern;
        java.io.File file24 = null;
        undertowEmbeddedServletContainerFactory20.setDocumentRoot(file24);
        java.io.File file26 = null;
        undertowEmbeddedServletContainerFactory20.setAccessLogDirectory(file26);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList31 = undertowEmbeddedServletContainerFactory28.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet32 = undertowEmbeddedServletContainerFactory28.getJspServlet();
        boolean boolean33 = undertowEmbeddedServletContainerFactory28.useForwardHeaders;
        java.net.InetAddress inetAddress34 = undertowEmbeddedServletContainerFactory28.getAddress();
        undertowEmbeddedServletContainerFactory28.setAccessLogPattern("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = undertowEmbeddedServletContainerFactory39.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader41 = undertowEmbeddedServletContainerFactory39.resourceLoader;
        undertowEmbeddedServletContainerFactory39.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int45 = undertowEmbeddedServletContainerFactory44.getSessionTimeout();
        boolean boolean46 = undertowEmbeddedServletContainerFactory44.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList47 = undertowEmbeddedServletContainerFactory44.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet48 = undertowEmbeddedServletContainerFactory44.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int50 = undertowEmbeddedServletContainerFactory49.getSessionTimeout();
        boolean boolean51 = undertowEmbeddedServletContainerFactory49.isPersistSession();
        undertowEmbeddedServletContainerFactory49.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder55 = undertowEmbeddedServletContainerFactory49.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager56 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer58 = undertowEmbeddedServletContainerFactory44.getUndertowEmbeddedServletContainer(builder55, deploymentManager56, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager59 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer61 = undertowEmbeddedServletContainerFactory39.getUndertowEmbeddedServletContainer(builder55, deploymentManager59, (int) ' ');
        boolean boolean62 = undertowEmbeddedServletContainerFactory39.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory39.setPort((-1));
        java.lang.Integer int65 = undertowEmbeddedServletContainerFactory39.bufferSize;
        io.undertow.Undertow.Builder builder67 = undertowEmbeddedServletContainerFactory39.createBuilder(0);
        io.undertow.servlet.api.DeploymentManager deploymentManager68 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer70 = undertowEmbeddedServletContainerFactory28.getUndertowEmbeddedServletContainer(builder67, deploymentManager68, (int) '4');
        java.lang.Boolean boolean71 = undertowEmbeddedServletContainerFactory28.directBuffers;
        io.undertow.Undertow.Builder builder73 = undertowEmbeddedServletContainerFactory28.createBuilder((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int75 = undertowEmbeddedServletContainerFactory74.getSessionTimeout();
        boolean boolean76 = undertowEmbeddedServletContainerFactory74.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList77 = undertowEmbeddedServletContainerFactory74.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet78 = undertowEmbeddedServletContainerFactory74.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList79 = undertowEmbeddedServletContainerFactory74.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory80 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int81 = undertowEmbeddedServletContainerFactory80.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray82 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory80.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray82);
        undertowEmbeddedServletContainerFactory74.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray82);
        undertowEmbeddedServletContainerFactory28.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray82);
        undertowEmbeddedServletContainerFactory20.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray82);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray82);
        org.springframework.core.io.ResourceLoader resourceLoader88 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader88;
        int int90 = undertowEmbeddedServletContainerFactory0.getPort();
        int int91 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.ErrorPage errorPage92 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage93 = undertowEmbeddedServletContainerFactory0.getUndertowErrorPage(errorPage92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(jspServlet7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(ssl13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(jspServlet16);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNull(resourceLoader22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList31);
        org.junit.Assert.assertNotNull(jspServlet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(inetAddress34);
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNull(resourceLoader41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1800 + "'", int45 == 1800);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList47);
        org.junit.Assert.assertNotNull(jspServlet48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1800 + "'", int50 == 1800);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer58);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer70);
        org.junit.Assert.assertNull(boolean71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1800 + "'", int75 == 1800);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList77);
        org.junit.Assert.assertNotNull(jspServlet78);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 8080 + "'", int81 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray82);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 8080 + "'", int90 == 8080);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1800 + "'", int91 == 1800);
    }

    @Test
    public void test13018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13018");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        boolean boolean8 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory0.setDisplayName("0.0.0.0");
        java.io.File file13 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file13;
        org.springframework.boot.context.embedded.ErrorPage errorPage15 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage16 = undertowEmbeddedServletContainerFactory0.getUndertowErrorPage(errorPage15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test13019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13019");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        boolean boolean3 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 1800);
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(int7);
    }

    @Test
    public void test13020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13020");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory0.getSsl();
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 8080);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList8 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        org.xnio.XnioWorker xnioWorker9 = undertowEmbeddedServletContainerFactory0.createWorker();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList8);
        org.junit.Assert.assertNotNull(xnioWorker9);
    }

    @Test
    public void test13021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13021");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        org.springframework.boot.context.embedded.Compression compression5 = undertowEmbeddedServletContainerFactory0.getCompression();
        java.io.File file6 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory0.bufferSize = 10;
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file9);
        org.springframework.boot.context.embedded.Ssl ssl11 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl11);
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        java.io.File file15 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        java.lang.String str16 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        io.undertow.server.handlers.resource.ResourceManager resourceManager17 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(compression5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(resourceManager17);
    }

    @Test
    public void test13022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13022");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl5 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl5);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 8080);
        org.springframework.core.io.ResourceLoader resourceLoader9 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.String str11 = undertowEmbeddedServletContainerFactory0.getContextPath();
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "0.0.0.0";
        java.io.File file14 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file14;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(resourceLoader9);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test13023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13023");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.Compression compression4 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression4);
        int int6 = undertowEmbeddedServletContainerFactory0.getPort();
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) (-1));
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.lang.Boolean boolean10 = undertowEmbeddedServletContainerFactory0.directBuffers;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory0.directBuffers;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8080 + "'", int6 == 8080);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test13024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13024");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        boolean boolean7 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        org.springframework.boot.context.embedded.Ssl ssl14 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl14);
        java.lang.Boolean boolean16 = undertowEmbeddedServletContainerFactory0.directBuffers;
        java.lang.String str17 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory19.setBuffersPerRegion((java.lang.Integer) 0);
        java.lang.String str22 = undertowEmbeddedServletContainerFactory19.getDisplayName();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo23 = null;
        undertowEmbeddedServletContainerFactory19.configureErrorPages(deploymentInfo23);
        undertowEmbeddedServletContainerFactory19.setJspServletClassName("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int28 = undertowEmbeddedServletContainerFactory27.getSessionTimeout();
        boolean boolean29 = undertowEmbeddedServletContainerFactory27.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList30 = undertowEmbeddedServletContainerFactory27.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet31 = undertowEmbeddedServletContainerFactory27.getJspServlet();
        undertowEmbeddedServletContainerFactory27.directBuffers = true;
        java.io.File file34 = null;
        undertowEmbeddedServletContainerFactory27.setDocumentRoot(file34);
        java.io.File file36 = null;
        undertowEmbeddedServletContainerFactory27.setDocumentRoot(file36);
        undertowEmbeddedServletContainerFactory27.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int41 = undertowEmbeddedServletContainerFactory40.getSessionTimeout();
        boolean boolean42 = undertowEmbeddedServletContainerFactory40.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList43 = undertowEmbeddedServletContainerFactory40.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet44 = undertowEmbeddedServletContainerFactory40.getJspServlet();
        undertowEmbeddedServletContainerFactory40.directBuffers = true;
        java.lang.Integer int47 = undertowEmbeddedServletContainerFactory40.bufferSize;
        java.io.File file48 = null;
        undertowEmbeddedServletContainerFactory40.setDocumentRoot(file48);
        boolean boolean50 = undertowEmbeddedServletContainerFactory40.isPersistSession();
        undertowEmbeddedServletContainerFactory40.setWorkerThreads((java.lang.Integer) 8080);
        java.lang.String str53 = undertowEmbeddedServletContainerFactory40.getListenAddress();
        undertowEmbeddedServletContainerFactory40.setDisplayName("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int57 = undertowEmbeddedServletContainerFactory56.getSessionTimeout();
        boolean boolean58 = undertowEmbeddedServletContainerFactory56.isPersistSession();
        java.io.File file59 = undertowEmbeddedServletContainerFactory56.accessLogDirectory;
        java.lang.String str60 = undertowEmbeddedServletContainerFactory56.getListenAddress();
        undertowEmbeddedServletContainerFactory56.setIoThreads((java.lang.Integer) 1);
        java.lang.String str63 = undertowEmbeddedServletContainerFactory56.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int65 = undertowEmbeddedServletContainerFactory64.getSessionTimeout();
        boolean boolean66 = undertowEmbeddedServletContainerFactory64.isPersistSession();
        undertowEmbeddedServletContainerFactory64.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory64.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory64.setDisplayName("hi!");
        boolean boolean73 = undertowEmbeddedServletContainerFactory64.isRegisterDefaultServlet();
        java.io.File file74 = undertowEmbeddedServletContainerFactory64.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray75 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory64.addBuilderCustomizers(undertowBuilderCustomizerArray75);
        undertowEmbeddedServletContainerFactory56.addBuilderCustomizers(undertowBuilderCustomizerArray75);
        undertowEmbeddedServletContainerFactory40.addBuilderCustomizers(undertowBuilderCustomizerArray75);
        undertowEmbeddedServletContainerFactory27.addBuilderCustomizers(undertowBuilderCustomizerArray75);
        undertowEmbeddedServletContainerFactory19.addBuilderCustomizers(undertowBuilderCustomizerArray75);
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray75);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + false + "'", boolean16, false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1800 + "'", int28 == 1800);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList30);
        org.junit.Assert.assertNotNull(jspServlet31);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1800 + "'", int41 == 1800);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList43);
        org.junit.Assert.assertNotNull(jspServlet44);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "0.0.0.0" + "'", str53, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1800 + "'", int57 == 1800);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "0.0.0.0" + "'", str60, "0.0.0.0");
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1800 + "'", int65 == 1800);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray75);
    }

    @Test
    public void test13025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13025");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file5;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getPort();
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory12.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        undertowEmbeddedServletContainerFactory12.setResourceLoader(resourceLoader15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory12.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getSessionTimeout();
        boolean boolean20 = undertowEmbeddedServletContainerFactory18.isPersistSession();
        java.io.File file21 = undertowEmbeddedServletContainerFactory18.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = undertowEmbeddedServletContainerFactory18.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = undertowEmbeddedServletContainerFactory18.getMimeMappings();
        java.lang.Integer int24 = undertowEmbeddedServletContainerFactory18.buffersPerRegion;
        io.undertow.Undertow.Builder builder26 = undertowEmbeddedServletContainerFactory18.createBuilder(10);
        io.undertow.servlet.api.DeploymentManager deploymentManager27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer29 = undertowEmbeddedServletContainerFactory12.getUndertowEmbeddedServletContainer(builder26, deploymentManager27, 1);
        undertowEmbeddedServletContainerFactory12.setJspServletClassName("0.0.0.0");
        java.lang.Integer int32 = undertowEmbeddedServletContainerFactory12.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int34 = undertowEmbeddedServletContainerFactory33.getSessionTimeout();
        boolean boolean35 = undertowEmbeddedServletContainerFactory33.isPersistSession();
        undertowEmbeddedServletContainerFactory33.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory33.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray40 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory33.addErrorPages(errorPageArray40);
        undertowEmbeddedServletContainerFactory12.addErrorPages(errorPageArray40);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray40);
        org.springframework.core.io.ResourceLoader resourceLoader44 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        int int45 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = true;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8080 + "'", int13 == 8080);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer29);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1800 + "'", int34 == 1800);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(errorPageArray40);
        org.junit.Assert.assertNull(resourceLoader44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1800 + "'", int45 == 1800);
    }

    @Test
    public void test13026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13026");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 1);
        boolean boolean7 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        io.undertow.Undertow.Builder builder9 = undertowEmbeddedServletContainerFactory0.createBuilder(1);
        java.lang.String str10 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test13027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13027");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.xnio.XnioWorker xnioWorker2 = undertowEmbeddedServletContainerFactory1.createWorker();
        undertowEmbeddedServletContainerFactory1.accessLogEnabled = true;
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.useForwardHeaders;
        io.undertow.Undertow.Builder builder7 = undertowEmbeddedServletContainerFactory1.createBuilder(10);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("0.0.0.0");
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.workerThreads = (-1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        java.io.File file17 = undertowEmbeddedServletContainerFactory14.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        java.lang.Integer int20 = undertowEmbeddedServletContainerFactory14.buffersPerRegion;
        io.undertow.Undertow.Builder builder22 = undertowEmbeddedServletContainerFactory14.createBuilder(10);
        undertowEmbeddedServletContainerFactory14.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str25 = undertowEmbeddedServletContainerFactory14.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int27 = undertowEmbeddedServletContainerFactory26.getSessionTimeout();
        boolean boolean28 = undertowEmbeddedServletContainerFactory26.isPersistSession();
        undertowEmbeddedServletContainerFactory26.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder32 = undertowEmbeddedServletContainerFactory26.createBuilder((-1));
        undertowEmbeddedServletContainerFactory26.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int36 = undertowEmbeddedServletContainerFactory35.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray37 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory35.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray37);
        undertowEmbeddedServletContainerFactory26.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray37);
        undertowEmbeddedServletContainerFactory14.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray37);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList41 = undertowEmbeddedServletContainerFactory14.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList41;
        org.junit.Assert.assertNotNull(xnioWorker2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1800 + "'", int27 == 1800);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8080 + "'", int36 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray37);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList41);
    }

    @Test
    public void test13028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13028");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = true;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet9 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList10 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        boolean boolean11 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer14 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap13);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray15 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer14 };
        initializer12.initializers = servletContextInitializerArray15;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray17 = initializer12.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = initializer12.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = null;
        initializer12.initializers = servletContextInitializerArray19;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray21 = initializer12.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int23 = undertowEmbeddedServletContainerFactory22.getPort();
        java.lang.Integer int24 = undertowEmbeddedServletContainerFactory22.bufferSize;
        java.io.File file25 = null;
        undertowEmbeddedServletContainerFactory22.setSessionStoreDir(file25);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer28 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap27);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray29 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer28 };
        undertowEmbeddedServletContainerFactory22.addInitializers(servletContextInitializerArray29);
        initializer12.initializers = servletContextInitializerArray29;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray32 = initializer12.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray33 = initializer12.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray34 = initializer12.initializers;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.DeploymentManager deploymentManager35 = undertowEmbeddedServletContainerFactory0.createDeploymentManager(servletContextInitializerArray34);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: java.lang.NullPointerException");
        } catch (java.lang.RuntimeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(errorPageSet9);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(servletContextInitializerArray15);
        org.junit.Assert.assertNotNull(servletContextInitializerArray17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertNull(servletContextInitializerArray21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 8080 + "'", int23 == 8080);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(servletContextInitializerArray29);
        org.junit.Assert.assertNotNull(servletContextInitializerArray32);
        org.junit.Assert.assertNotNull(servletContextInitializerArray33);
        org.junit.Assert.assertNotNull(servletContextInitializerArray34);
    }

    @Test
    public void test13029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13029");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        java.net.InetAddress inetAddress5 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress5);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getPort();
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory7.bufferSize;
        int int10 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        java.io.File file11 = undertowEmbeddedServletContainerFactory7.getSessionStoreDir();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory12.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet16 = undertowEmbeddedServletContainerFactory12.getJspServlet();
        undertowEmbeddedServletContainerFactory12.directBuffers = true;
        java.lang.Integer int19 = undertowEmbeddedServletContainerFactory12.bufferSize;
        java.io.File file20 = null;
        undertowEmbeddedServletContainerFactory12.setDocumentRoot(file20);
        boolean boolean22 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList23 = undertowEmbeddedServletContainerFactory12.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory7.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList23;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList23;
        org.springframework.boot.context.embedded.Ssl ssl26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode27 = undertowEmbeddedServletContainerFactory0.getSslClientAuthMode(ssl26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8080 + "'", int8 == 8080);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNotNull(jspServlet16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList23);
    }

    @Test
    public void test13030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13030");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        boolean boolean2 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean3 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str4 = jarResourceManager0.jarPath;
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "0.0.0.0";
        java.lang.String str8 = jarResourceManager0.jarPath;
        jarResourceManager0.jarPath = "hi!";
        jarResourceManager0.close();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourceManager0.registerResourceChangeListener(resourceChangeListener12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
    }

    @Test
    public void test13031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13031");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory10.accessLogEnabled = false;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList14, undertowBuilderCustomizerArray13);
        undertowEmbeddedServletContainerFactory10.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList14);
        undertowEmbeddedServletContainerFactory10.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray20 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList21 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList21, undertowBuilderCustomizerArray20);
        undertowEmbeddedServletContainerFactory19.builderCustomizers = undertowBuilderCustomizerList21;
        undertowEmbeddedServletContainerFactory19.workerThreads = 1;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection26 = undertowEmbeddedServletContainerFactory19.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory19.bufferSize = 10;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = undertowEmbeddedServletContainerFactory31.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader33 = undertowEmbeddedServletContainerFactory31.resourceLoader;
        undertowEmbeddedServletContainerFactory31.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int37 = undertowEmbeddedServletContainerFactory36.getSessionTimeout();
        boolean boolean38 = undertowEmbeddedServletContainerFactory36.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList39 = undertowEmbeddedServletContainerFactory36.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet40 = undertowEmbeddedServletContainerFactory36.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int42 = undertowEmbeddedServletContainerFactory41.getSessionTimeout();
        boolean boolean43 = undertowEmbeddedServletContainerFactory41.isPersistSession();
        undertowEmbeddedServletContainerFactory41.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder47 = undertowEmbeddedServletContainerFactory41.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager48 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer50 = undertowEmbeddedServletContainerFactory36.getUndertowEmbeddedServletContainer(builder47, deploymentManager48, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager51 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer53 = undertowEmbeddedServletContainerFactory31.getUndertowEmbeddedServletContainer(builder47, deploymentManager51, (int) ' ');
        boolean boolean54 = undertowEmbeddedServletContainerFactory31.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory31.setPort((-1));
        java.lang.Integer int57 = undertowEmbeddedServletContainerFactory31.bufferSize;
        io.undertow.Undertow.Builder builder59 = undertowEmbeddedServletContainerFactory31.createBuilder(0);
        io.undertow.servlet.api.DeploymentManager deploymentManager60 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer62 = undertowEmbeddedServletContainerFactory19.getUndertowEmbeddedServletContainer(builder59, deploymentManager60, (int) (byte) 1);
        io.undertow.servlet.api.DeploymentManager deploymentManager63 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer65 = undertowEmbeddedServletContainerFactory10.getUndertowEmbeddedServletContainer(builder59, deploymentManager63, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager66 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer68 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder59, deploymentManager66, (int) (byte) 0);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo69 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo69);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 10);
        int int73 = undertowEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int75 = undertowEmbeddedServletContainerFactory74.getSessionTimeout();
        boolean boolean76 = undertowEmbeddedServletContainerFactory74.isPersistSession();
        undertowEmbeddedServletContainerFactory74.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory74.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory74.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory74.setSessionTimeout(1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList85 = undertowEmbeddedServletContainerFactory74.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList85);
        java.util.concurrent.TimeUnit timeUnit88 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.setSessionTimeout(35, timeUnit88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection26);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNull(resourceLoader33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1800 + "'", int37 == 1800);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList39);
        org.junit.Assert.assertNotNull(jspServlet40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1800 + "'", int42 == 1800);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer50);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer62);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer65);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer68);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 8080 + "'", int73 == 8080);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1800 + "'", int75 == 1800);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList85);
    }

    @Test
    public void test13032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13032");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        undertowEmbeddedServletContainerFactory2.resourceLoader = resourceLoader4;
        undertowEmbeddedServletContainerFactory2.directBuffers = true;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo8 = null;
        undertowEmbeddedServletContainerFactory2.configureErrorPages(deploymentInfo8);
        int int10 = undertowEmbeddedServletContainerFactory2.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = undertowEmbeddedServletContainerFactory15.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader17 = undertowEmbeddedServletContainerFactory15.resourceLoader;
        undertowEmbeddedServletContainerFactory15.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int21 = undertowEmbeddedServletContainerFactory20.getSessionTimeout();
        boolean boolean22 = undertowEmbeddedServletContainerFactory20.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList23 = undertowEmbeddedServletContainerFactory20.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet24 = undertowEmbeddedServletContainerFactory20.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int26 = undertowEmbeddedServletContainerFactory25.getSessionTimeout();
        boolean boolean27 = undertowEmbeddedServletContainerFactory25.isPersistSession();
        undertowEmbeddedServletContainerFactory25.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder31 = undertowEmbeddedServletContainerFactory25.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager32 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer34 = undertowEmbeddedServletContainerFactory20.getUndertowEmbeddedServletContainer(builder31, deploymentManager32, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager35 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer37 = undertowEmbeddedServletContainerFactory15.getUndertowEmbeddedServletContainer(builder31, deploymentManager35, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager38 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer40 = undertowEmbeddedServletContainerFactory11.getUndertowEmbeddedServletContainer(builder31, deploymentManager38, (int) (short) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList41 = undertowEmbeddedServletContainerFactory11.builderCustomizers;
        undertowEmbeddedServletContainerFactory11.setIoThreads((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int45 = undertowEmbeddedServletContainerFactory44.getPort();
        java.lang.Integer int46 = undertowEmbeddedServletContainerFactory44.bufferSize;
        java.io.File file47 = null;
        undertowEmbeddedServletContainerFactory44.setSessionStoreDir(file47);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int50 = undertowEmbeddedServletContainerFactory49.getSessionTimeout();
        boolean boolean51 = undertowEmbeddedServletContainerFactory49.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList52 = undertowEmbeddedServletContainerFactory49.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet53 = undertowEmbeddedServletContainerFactory49.getJspServlet();
        boolean boolean54 = undertowEmbeddedServletContainerFactory49.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet55 = undertowEmbeddedServletContainerFactory49.getErrorPages();
        undertowEmbeddedServletContainerFactory44.setErrorPages(errorPageSet55);
        undertowEmbeddedServletContainerFactory44.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList59 = undertowEmbeddedServletContainerFactory44.builderCustomizers;
        undertowEmbeddedServletContainerFactory11.builderCustomizers = undertowBuilderCustomizerList59;
        undertowEmbeddedServletContainerFactory2.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList59);
        undertowEmbeddedServletContainerFactory2.ioThreads = 35;
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8080 + "'", int12 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNull(resourceLoader17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1800 + "'", int21 == 1800);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList23);
        org.junit.Assert.assertNotNull(jspServlet24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1800 + "'", int26 == 1800);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer34);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer37);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer40);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 8080 + "'", int45 == 8080);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1800 + "'", int50 == 1800);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList52);
        org.junit.Assert.assertNotNull(jspServlet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(errorPageSet55);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList59);
    }

    @Test
    public void test13033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13033");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.jarPath = "hi!";
        jarResourceManager0.jarPath = "0.0.0.0";
        java.lang.String str5 = jarResourceManager0.jarPath;
        boolean boolean6 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean7 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.jarPath = "";
        jarResourceManager0.jarPath = "hi!";
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource13 = jarResourceManager0.getResource("hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "0.0.0.0" + "'", str5, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test13034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13034");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl5 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl5);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 8080);
        java.io.File file9 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        java.lang.String str10 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray14 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList15, undertowBuilderCustomizerArray14);
        undertowEmbeddedServletContainerFactory13.builderCustomizers = undertowBuilderCustomizerList15;
        java.io.File file18 = null;
        undertowEmbeddedServletContainerFactory13.setSessionStoreDir(file18);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection20 = undertowEmbeddedServletContainerFactory13.getDeploymentInfoCustomizers();
        java.io.File file21 = null;
        undertowEmbeddedServletContainerFactory13.setAccessLogDirectory(file21);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int24 = undertowEmbeddedServletContainerFactory23.getSessionTimeout();
        boolean boolean25 = undertowEmbeddedServletContainerFactory23.isPersistSession();
        undertowEmbeddedServletContainerFactory23.setPersistSession(false);
        undertowEmbeddedServletContainerFactory23.setUseForwardHeaders(true);
        io.undertow.server.handlers.resource.ResourceManager resourceManager30 = undertowEmbeddedServletContainerFactory23.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int32 = undertowEmbeddedServletContainerFactory31.getSessionTimeout();
        boolean boolean33 = undertowEmbeddedServletContainerFactory31.isPersistSession();
        java.io.File file34 = undertowEmbeddedServletContainerFactory31.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings35 = undertowEmbeddedServletContainerFactory31.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = undertowEmbeddedServletContainerFactory31.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int38 = undertowEmbeddedServletContainerFactory37.getSessionTimeout();
        boolean boolean39 = undertowEmbeddedServletContainerFactory37.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList40 = undertowEmbeddedServletContainerFactory37.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet41 = undertowEmbeddedServletContainerFactory37.getJspServlet();
        undertowEmbeddedServletContainerFactory31.setJspServlet(jspServlet41);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray44 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList45 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList45, undertowBuilderCustomizerArray44);
        undertowEmbeddedServletContainerFactory43.builderCustomizers = undertowBuilderCustomizerList45;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection48 = undertowEmbeddedServletContainerFactory43.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory31.setBuilderCustomizers(undertowBuilderCustomizerCollection48);
        undertowEmbeddedServletContainerFactory23.setBuilderCustomizers(undertowBuilderCustomizerCollection48);
        undertowEmbeddedServletContainerFactory13.setBuilderCustomizers(undertowBuilderCustomizerCollection48);
        java.lang.Integer int52 = undertowEmbeddedServletContainerFactory13.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int54 = undertowEmbeddedServletContainerFactory53.getSessionTimeout();
        boolean boolean55 = undertowEmbeddedServletContainerFactory53.isPersistSession();
        undertowEmbeddedServletContainerFactory53.setPersistSession(false);
        undertowEmbeddedServletContainerFactory53.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int61 = undertowEmbeddedServletContainerFactory60.getSessionTimeout();
        boolean boolean62 = undertowEmbeddedServletContainerFactory60.isPersistSession();
        java.io.File file63 = undertowEmbeddedServletContainerFactory60.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList64 = undertowEmbeddedServletContainerFactory60.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory53.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList64;
        undertowEmbeddedServletContainerFactory13.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList64;
        boolean boolean67 = undertowEmbeddedServletContainerFactory13.accessLogEnabled;
        undertowEmbeddedServletContainerFactory13.setContextPath("");
        org.springframework.core.io.ResourceLoader resourceLoader70 = null;
        undertowEmbeddedServletContainerFactory13.setResourceLoader(resourceLoader70);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet72 = undertowEmbeddedServletContainerFactory13.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet72);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1800 + "'", int24 == 1800);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(resourceManager30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1800 + "'", int32 == 1800);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(mimeMappings35);
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1800 + "'", int38 == 1800);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList40);
        org.junit.Assert.assertNotNull(jspServlet41);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection48);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1800 + "'", int54 == 1800);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1800 + "'", int61 == 1800);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(errorPageSet72);
    }

    @Test
    public void test13035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13035");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection5 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        java.io.File file6 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.xnio.XnioWorker xnioWorker7 = undertowEmbeddedServletContainerFactory0.createWorker();
        org.springframework.core.io.ResourceLoader resourceLoader8 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection9 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.Compression compression10 = undertowEmbeddedServletContainerFactory0.getCompression();
        io.undertow.server.handlers.resource.ResourceManager resourceManager11 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.ErrorPage errorPage12 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage13 = undertowEmbeddedServletContainerFactory0.getUndertowErrorPage(errorPage12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(xnioWorker7);
        org.junit.Assert.assertNull(resourceLoader8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection9);
        org.junit.Assert.assertNull(compression10);
        org.junit.Assert.assertNotNull(resourceManager11);
    }

    @Test
    public void test13036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13036");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl5 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl5);
        org.springframework.boot.context.embedded.JspServlet jspServlet7 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean12 = undertowEmbeddedServletContainerFactory11.isAccessLogEnabled();
        org.springframework.boot.context.embedded.Ssl ssl13 = undertowEmbeddedServletContainerFactory11.getSsl();
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory11.bufferSize;
        java.io.File file15 = undertowEmbeddedServletContainerFactory11.getDocumentRoot();
        org.springframework.boot.context.embedded.JspServlet jspServlet16 = undertowEmbeddedServletContainerFactory11.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet16);
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        org.springframework.boot.context.embedded.Compression compression24 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression24);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(jspServlet7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(ssl13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(jspServlet16);
    }

    @Test
    public void test13037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13037");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        boolean boolean3 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getPort();
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory7.bufferSize;
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory7.setSessionStoreDir(file10);
        java.io.File file12 = null;
        undertowEmbeddedServletContainerFactory7.accessLogDirectory = file12;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = undertowEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int16 = undertowEmbeddedServletContainerFactory15.getSessionTimeout();
        boolean boolean17 = undertowEmbeddedServletContainerFactory15.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList18 = undertowEmbeddedServletContainerFactory15.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = undertowEmbeddedServletContainerFactory15.getJspServlet();
        undertowEmbeddedServletContainerFactory7.setJspServlet(jspServlet19);
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet19);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 1800;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int25 = undertowEmbeddedServletContainerFactory24.getSessionTimeout();
        boolean boolean26 = undertowEmbeddedServletContainerFactory24.isPersistSession();
        undertowEmbeddedServletContainerFactory24.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory24.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray31 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory24.addErrorPages(errorPageArray31);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray31);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection34 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader35 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8080 + "'", int8 == 8080);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1800 + "'", int16 == 1800);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList18);
        org.junit.Assert.assertNotNull(jspServlet19);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1800 + "'", int25 == 1800);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(errorPageArray31);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection34);
        org.junit.Assert.assertNull(resourceLoader35);
    }

    @Test
    public void test13038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13038");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        undertowEmbeddedServletContainerFactory0.workerThreads = 1;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.bufferSize = 10;
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        org.xnio.XnioWorker xnioWorker12 = undertowEmbeddedServletContainerFactory0.createWorker();
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
        org.junit.Assert.assertNotNull(xnioWorker12);
    }

    @Test
    public void test13039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13039");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        boolean boolean3 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        org.springframework.core.io.ResourceLoader resourceLoader5 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader6;
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file8);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(resourceLoader5);
    }

    @Test
    public void test13040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13040");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.lang.Integer int3 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 35;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(mimeMappings4);
    }

    @Test
    public void test13041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13041");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int20 = undertowEmbeddedServletContainerFactory19.getSessionTimeout();
        boolean boolean21 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList22 = undertowEmbeddedServletContainerFactory19.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet23 = undertowEmbeddedServletContainerFactory19.getJspServlet();
        boolean boolean24 = undertowEmbeddedServletContainerFactory19.useForwardHeaders;
        java.net.InetAddress inetAddress25 = undertowEmbeddedServletContainerFactory19.getAddress();
        java.lang.String str26 = undertowEmbeddedServletContainerFactory19.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int28 = undertowEmbeddedServletContainerFactory27.getSessionTimeout();
        boolean boolean29 = undertowEmbeddedServletContainerFactory27.isPersistSession();
        java.io.File file30 = undertowEmbeddedServletContainerFactory27.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = undertowEmbeddedServletContainerFactory27.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = undertowEmbeddedServletContainerFactory27.getMimeMappings();
        java.lang.Integer int33 = undertowEmbeddedServletContainerFactory27.buffersPerRegion;
        io.undertow.Undertow.Builder builder35 = undertowEmbeddedServletContainerFactory27.createBuilder(10);
        undertowEmbeddedServletContainerFactory27.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str38 = undertowEmbeddedServletContainerFactory27.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int40 = undertowEmbeddedServletContainerFactory39.getSessionTimeout();
        boolean boolean41 = undertowEmbeddedServletContainerFactory39.isPersistSession();
        undertowEmbeddedServletContainerFactory39.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder45 = undertowEmbeddedServletContainerFactory39.createBuilder((-1));
        undertowEmbeddedServletContainerFactory39.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int49 = undertowEmbeddedServletContainerFactory48.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray50 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory48.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray50);
        undertowEmbeddedServletContainerFactory39.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray50);
        undertowEmbeddedServletContainerFactory27.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray50);
        undertowEmbeddedServletContainerFactory19.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray50);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray50);
        java.lang.String str56 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        java.lang.Integer int57 = undertowEmbeddedServletContainerFactory0.ioThreads;
        boolean boolean58 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int60 = undertowEmbeddedServletContainerFactory59.getSessionTimeout();
        boolean boolean61 = undertowEmbeddedServletContainerFactory59.isPersistSession();
        undertowEmbeddedServletContainerFactory59.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory59.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int67 = undertowEmbeddedServletContainerFactory66.getSessionTimeout();
        boolean boolean68 = undertowEmbeddedServletContainerFactory66.isPersistSession();
        java.io.File file69 = undertowEmbeddedServletContainerFactory66.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList70 = undertowEmbeddedServletContainerFactory66.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory59.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList70;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings72 = undertowEmbeddedServletContainerFactory59.getMimeMappings();
        int int73 = undertowEmbeddedServletContainerFactory59.getSessionTimeout();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection74 = undertowEmbeddedServletContainerFactory59.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory59.workerThreads = 8080;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int78 = undertowEmbeddedServletContainerFactory77.getSessionTimeout();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection79 = undertowEmbeddedServletContainerFactory77.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory77.setPort((-1));
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList82 = undertowEmbeddedServletContainerFactory77.builderCustomizers;
        undertowEmbeddedServletContainerFactory59.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList82);
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList82);
        io.undertow.server.HttpHandler httpHandler85 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.accesslog.AccessLogHandler accessLogHandler86 = undertowEmbeddedServletContainerFactory0.createAccessLogHandler(httpHandler85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Access log directory is not set");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList22);
        org.junit.Assert.assertNotNull(jspServlet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(inetAddress25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1800 + "'", int28 == 1800);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1800 + "'", int40 == 1800);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 8080 + "'", int49 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray50);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1800 + "'", int60 == 1800);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1800 + "'", int67 == 1800);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList70);
        org.junit.Assert.assertNotNull(mimeMappings72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1800 + "'", int73 == 1800);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection74);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1800 + "'", int78 == 1800);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection79);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList82);
    }

    @Test
    public void test13042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13042");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file7);
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        org.springframework.core.io.ResourceLoader resourceLoader11 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        undertowEmbeddedServletContainerFactory0.setDisplayName("");
        org.springframework.boot.context.embedded.Ssl ssl14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode15 = undertowEmbeddedServletContainerFactory0.getSslClientAuthMode(ssl14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNull(resourceLoader11);
    }

    @Test
    public void test13043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13043");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer2 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap1);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer2 };
        initializer0.initializers = servletContextInitializerArray3;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray5 = initializer0.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray6 = initializer0.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray7 = null;
        initializer0.initializers = servletContextInitializerArray7;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray9 = initializer0.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = initializer0.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory11.setJspServletClassName("");
        boolean boolean14 = undertowEmbeddedServletContainerFactory11.useForwardHeaders;
        java.lang.Boolean boolean15 = undertowEmbeddedServletContainerFactory11.directBuffers;
        org.springframework.core.io.ResourceLoader resourceLoader16 = null;
        undertowEmbeddedServletContainerFactory11.setResourceLoader(resourceLoader16);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer20 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap19);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray21 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer20 };
        initializer18.initializers = servletContextInitializerArray21;
        undertowEmbeddedServletContainerFactory11.addInitializers(servletContextInitializerArray21);
        initializer0.initializers = servletContextInitializerArray21;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer27 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap26);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray28 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer27 };
        initializer25.initializers = servletContextInitializerArray28;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int31 = undertowEmbeddedServletContainerFactory30.getPort();
        java.lang.Integer int32 = undertowEmbeddedServletContainerFactory30.bufferSize;
        java.io.File file33 = null;
        undertowEmbeddedServletContainerFactory30.setSessionStoreDir(file33);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer36 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap35);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray37 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer36 };
        undertowEmbeddedServletContainerFactory30.addInitializers(servletContextInitializerArray37);
        initializer25.initializers = servletContextInitializerArray37;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray40 = initializer25.initializers;
        initializer0.initializers = servletContextInitializerArray40;
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray5);
        org.junit.Assert.assertNotNull(servletContextInitializerArray6);
        org.junit.Assert.assertNull(servletContextInitializerArray9);
        org.junit.Assert.assertNull(servletContextInitializerArray10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(servletContextInitializerArray21);
        org.junit.Assert.assertNotNull(servletContextInitializerArray28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 8080 + "'", int31 == 8080);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(servletContextInitializerArray37);
        org.junit.Assert.assertNotNull(servletContextInitializerArray40);
    }

    @Test
    public void test13044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13044");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory0.getAddress();
        int int19 = undertowEmbeddedServletContainerFactory0.getPort();
        java.io.File file20 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.Compression compression21 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression21);
        java.io.File file23 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        java.net.InetAddress inetAddress24 = undertowEmbeddedServletContainerFactory0.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int26 = undertowEmbeddedServletContainerFactory25.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer28 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap27);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer30 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap29);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer32 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap31);
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer34 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap33);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray35 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer28, initParameterConfiguringServletContextInitializer30, initParameterConfiguringServletContextInitializer32, initParameterConfiguringServletContextInitializer34 };
        undertowEmbeddedServletContainerFactory25.addInitializers(servletContextInitializerArray35);
        undertowEmbeddedServletContainerFactory25.workerThreads = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray40 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList41 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList41, undertowBuilderCustomizerArray40);
        undertowEmbeddedServletContainerFactory39.builderCustomizers = undertowBuilderCustomizerList41;
        undertowEmbeddedServletContainerFactory39.workerThreads = 1;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection46 = undertowEmbeddedServletContainerFactory39.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory39.bufferSize = 10;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet49 = undertowEmbeddedServletContainerFactory39.getErrorPages();
        undertowEmbeddedServletContainerFactory25.setErrorPages(errorPageSet49);
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet49);
        java.lang.String str52 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        org.xnio.XnioWorker xnioWorker53 = undertowEmbeddedServletContainerFactory0.createWorker();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8080 + "'", int19 == 8080);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(inetAddress24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1800 + "'", int26 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray35);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection46);
        org.junit.Assert.assertNotNull(errorPageSet49);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(xnioWorker53);
    }

    @Test
    public void test13045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13045");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder5 = undertowEmbeddedServletContainerFactory1.createBuilder((int) (byte) -1);
        io.undertow.server.handlers.resource.ResourceManager resourceManager6 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.io.File file10 = undertowEmbeddedServletContainerFactory7.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory7.getMimeMappings();
        java.lang.Integer int13 = undertowEmbeddedServletContainerFactory7.buffersPerRegion;
        undertowEmbeddedServletContainerFactory7.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        undertowEmbeddedServletContainerFactory16.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder22 = undertowEmbeddedServletContainerFactory16.createBuilder((-1));
        undertowEmbeddedServletContainerFactory16.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int26 = undertowEmbeddedServletContainerFactory25.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray27 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory25.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        undertowEmbeddedServletContainerFactory16.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        undertowEmbeddedServletContainerFactory7.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        java.io.File file32 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = undertowEmbeddedServletContainerFactory35.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader37 = undertowEmbeddedServletContainerFactory35.resourceLoader;
        undertowEmbeddedServletContainerFactory35.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int41 = undertowEmbeddedServletContainerFactory40.getSessionTimeout();
        boolean boolean42 = undertowEmbeddedServletContainerFactory40.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList43 = undertowEmbeddedServletContainerFactory40.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet44 = undertowEmbeddedServletContainerFactory40.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int46 = undertowEmbeddedServletContainerFactory45.getSessionTimeout();
        boolean boolean47 = undertowEmbeddedServletContainerFactory45.isPersistSession();
        undertowEmbeddedServletContainerFactory45.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder51 = undertowEmbeddedServletContainerFactory45.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager52 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer54 = undertowEmbeddedServletContainerFactory40.getUndertowEmbeddedServletContainer(builder51, deploymentManager52, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager55 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer57 = undertowEmbeddedServletContainerFactory35.getUndertowEmbeddedServletContainer(builder51, deploymentManager55, (int) ' ');
        boolean boolean58 = undertowEmbeddedServletContainerFactory35.isRegisterDefaultServlet();
        java.lang.Integer int59 = undertowEmbeddedServletContainerFactory35.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int61 = undertowEmbeddedServletContainerFactory60.getSessionTimeout();
        boolean boolean62 = undertowEmbeddedServletContainerFactory60.isPersistSession();
        undertowEmbeddedServletContainerFactory60.setPort(0);
        java.net.InetAddress inetAddress65 = null;
        undertowEmbeddedServletContainerFactory60.setAddress(inetAddress65);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory67.accessLogEnabled = false;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray70 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList71 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList71, undertowBuilderCustomizerArray70);
        undertowEmbeddedServletContainerFactory67.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList71);
        undertowEmbeddedServletContainerFactory60.builderCustomizers = undertowBuilderCustomizerList71;
        undertowEmbeddedServletContainerFactory35.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList71);
        undertowEmbeddedServletContainerFactory1.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList71);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer77 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap78 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer79 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap78);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray80 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer79 };
        initializer77.initializers = servletContextInitializerArray80;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory82 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int83 = undertowEmbeddedServletContainerFactory82.getPort();
        java.lang.Integer int84 = undertowEmbeddedServletContainerFactory82.bufferSize;
        java.io.File file85 = null;
        undertowEmbeddedServletContainerFactory82.setSessionStoreDir(file85);
        java.util.Map<java.lang.String, java.lang.String> strMap87 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer88 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap87);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray89 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer88 };
        undertowEmbeddedServletContainerFactory82.addInitializers(servletContextInitializerArray89);
        initializer77.initializers = servletContextInitializerArray89;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray92 = initializer77.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray93 = initializer77.initializers;
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray93);
        java.lang.String str95 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(resourceManager6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 8080 + "'", int26 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray27);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertNull(resourceLoader37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1800 + "'", int41 == 1800);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList43);
        org.junit.Assert.assertNotNull(jspServlet44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1800 + "'", int46 == 1800);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer54);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1800 + "'", int61 == 1800);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 8080 + "'", int83 == 8080);
        org.junit.Assert.assertNull(int84);
        org.junit.Assert.assertNotNull(servletContextInitializerArray89);
        org.junit.Assert.assertNotNull(servletContextInitializerArray92);
        org.junit.Assert.assertNotNull(servletContextInitializerArray93);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "" + "'", str95, "");
    }

    @Test
    public void test13046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13046");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("hi!");
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 1);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo12 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo12);
        org.springframework.boot.context.embedded.Compression compression14 = undertowEmbeddedServletContainerFactory0.getCompression();
        io.undertow.server.HttpHandler httpHandler15 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.accesslog.AccessLogHandler accessLogHandler16 = undertowEmbeddedServletContainerFactory0.createAccessLogHandler(httpHandler15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Access log directory is not set");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertNull(compression14);
    }

    @Test
    public void test13047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13047");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file8);
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 8080);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int14 = undertowEmbeddedServletContainerFactory13.getPort();
        java.lang.Integer int15 = undertowEmbeddedServletContainerFactory13.bufferSize;
        java.io.File file16 = null;
        undertowEmbeddedServletContainerFactory13.setSessionStoreDir(file16);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getSessionTimeout();
        boolean boolean20 = undertowEmbeddedServletContainerFactory18.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList21 = undertowEmbeddedServletContainerFactory18.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet22 = undertowEmbeddedServletContainerFactory18.getJspServlet();
        boolean boolean23 = undertowEmbeddedServletContainerFactory18.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = undertowEmbeddedServletContainerFactory18.getErrorPages();
        undertowEmbeddedServletContainerFactory13.setErrorPages(errorPageSet24);
        undertowEmbeddedServletContainerFactory13.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList28 = undertowEmbeddedServletContainerFactory13.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList28);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 100;
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8080 + "'", int14 == 8080);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList21);
        org.junit.Assert.assertNotNull(jspServlet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(errorPageSet24);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList28);
    }

    @Test
    public void test13048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13048");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPort(0);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("");
        java.net.InetAddress inetAddress9 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress9);
        java.lang.Integer int11 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        org.springframework.boot.context.embedded.ErrorPage errorPage12 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage13 = undertowEmbeddedServletContainerFactory0.getUndertowErrorPage(errorPage12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(int11);
    }

    @Test
    public void test13049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13049");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(1800);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(true);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection4 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        io.undertow.server.handlers.resource.ResourceManager resourceManager5 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection4);
        org.junit.Assert.assertNotNull(resourceManager5);
    }

    @Test
    public void test13050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13050");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPort(0);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        undertowEmbeddedServletContainerFactory0.workerThreads = 52;
        undertowEmbeddedServletContainerFactory0.bufferSize = 1800;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test13051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13051");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file9);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("0.0.0.0");
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
    }

    @Test
    public void test13052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13052");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file5);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file8);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getSessionTimeout();
        boolean boolean12 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        undertowEmbeddedServletContainerFactory10.setPersistSession(false);
        undertowEmbeddedServletContainerFactory10.setUseForwardHeaders(true);
        io.undertow.server.handlers.resource.ResourceManager resourceManager17 = undertowEmbeddedServletContainerFactory10.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getSessionTimeout();
        boolean boolean20 = undertowEmbeddedServletContainerFactory18.isPersistSession();
        java.io.File file21 = undertowEmbeddedServletContainerFactory18.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = undertowEmbeddedServletContainerFactory18.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = undertowEmbeddedServletContainerFactory18.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int25 = undertowEmbeddedServletContainerFactory24.getSessionTimeout();
        boolean boolean26 = undertowEmbeddedServletContainerFactory24.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList27 = undertowEmbeddedServletContainerFactory24.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet28 = undertowEmbeddedServletContainerFactory24.getJspServlet();
        undertowEmbeddedServletContainerFactory18.setJspServlet(jspServlet28);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray31 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList32 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList32, undertowBuilderCustomizerArray31);
        undertowEmbeddedServletContainerFactory30.builderCustomizers = undertowBuilderCustomizerList32;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection35 = undertowEmbeddedServletContainerFactory30.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory18.setBuilderCustomizers(undertowBuilderCustomizerCollection35);
        undertowEmbeddedServletContainerFactory10.setBuilderCustomizers(undertowBuilderCustomizerCollection35);
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection35);
        java.lang.Integer int39 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.net.InetAddress inetAddress40 = undertowEmbeddedServletContainerFactory0.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int42 = undertowEmbeddedServletContainerFactory41.getSessionTimeout();
        boolean boolean43 = undertowEmbeddedServletContainerFactory41.isPersistSession();
        java.io.File file44 = undertowEmbeddedServletContainerFactory41.accessLogDirectory;
        boolean boolean45 = undertowEmbeddedServletContainerFactory41.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet46 = undertowEmbeddedServletContainerFactory41.getErrorPages();
        undertowEmbeddedServletContainerFactory41.setWorkerThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int50 = undertowEmbeddedServletContainerFactory49.getPort();
        undertowEmbeddedServletContainerFactory49.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int54 = undertowEmbeddedServletContainerFactory53.getSessionTimeout();
        boolean boolean55 = undertowEmbeddedServletContainerFactory53.isPersistSession();
        undertowEmbeddedServletContainerFactory53.setPersistSession(false);
        undertowEmbeddedServletContainerFactory53.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList60 = undertowEmbeddedServletContainerFactory53.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory53.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int64 = undertowEmbeddedServletContainerFactory63.getSessionTimeout();
        boolean boolean65 = undertowEmbeddedServletContainerFactory63.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList66 = undertowEmbeddedServletContainerFactory63.builderCustomizers;
        undertowEmbeddedServletContainerFactory53.builderCustomizers = undertowBuilderCustomizerList66;
        java.io.File file68 = null;
        undertowEmbeddedServletContainerFactory53.accessLogDirectory = file68;
        boolean boolean70 = undertowEmbeddedServletContainerFactory53.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int72 = undertowEmbeddedServletContainerFactory71.getSessionTimeout();
        boolean boolean73 = undertowEmbeddedServletContainerFactory71.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList74 = undertowEmbeddedServletContainerFactory71.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet75 = undertowEmbeddedServletContainerFactory71.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList76 = undertowEmbeddedServletContainerFactory71.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int78 = undertowEmbeddedServletContainerFactory77.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray79 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory77.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray79);
        undertowEmbeddedServletContainerFactory71.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray79);
        undertowEmbeddedServletContainerFactory53.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray79);
        undertowEmbeddedServletContainerFactory49.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray79);
        undertowEmbeddedServletContainerFactory41.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray79);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray79);
        java.io.File file86 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.lang.ClassLoader classLoader87 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1800 + "'", int11 == 1800);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(resourceManager17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1800 + "'", int25 == 1800);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList27);
        org.junit.Assert.assertNotNull(jspServlet28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection35);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(inetAddress40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1800 + "'", int42 == 1800);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(errorPageSet46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 8080 + "'", int50 == 8080);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1800 + "'", int54 == 1800);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList60);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1800 + "'", int64 == 1800);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1800 + "'", int72 == 1800);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList74);
        org.junit.Assert.assertNotNull(jspServlet75);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 8080 + "'", int78 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray79);
        org.junit.Assert.assertNull(file86);
        org.junit.Assert.assertNotNull(classLoader87);
    }

    @Test
    public void test13053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13053");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = true;
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl9);
        java.lang.String str11 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        org.springframework.boot.context.embedded.Compression compression12 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression12);
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test13054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13054");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet6 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 1);
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file9);
        boolean boolean11 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        org.springframework.boot.context.embedded.Ssl ssl12 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl12);
        boolean boolean14 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.core.io.ResourceLoader resourceLoader15 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo18 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.configureMimeMappings(deploymentInfo18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(errorPageSet6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(resourceLoader15);
    }

    @Test
    public void test13055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13055");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file7);
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray11);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int14 = undertowEmbeddedServletContainerFactory13.getSessionTimeout();
        boolean boolean15 = undertowEmbeddedServletContainerFactory13.isPersistSession();
        java.io.File file16 = undertowEmbeddedServletContainerFactory13.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        java.lang.Integer int19 = undertowEmbeddedServletContainerFactory13.buffersPerRegion;
        io.undertow.Undertow.Builder builder21 = undertowEmbeddedServletContainerFactory13.createBuilder(10);
        undertowEmbeddedServletContainerFactory13.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str24 = undertowEmbeddedServletContainerFactory13.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int26 = undertowEmbeddedServletContainerFactory25.getSessionTimeout();
        boolean boolean27 = undertowEmbeddedServletContainerFactory25.isPersistSession();
        undertowEmbeddedServletContainerFactory25.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder31 = undertowEmbeddedServletContainerFactory25.createBuilder((-1));
        undertowEmbeddedServletContainerFactory25.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int35 = undertowEmbeddedServletContainerFactory34.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray36 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory34.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        undertowEmbeddedServletContainerFactory25.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        undertowEmbeddedServletContainerFactory13.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        java.io.File file41 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file41);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int44 = undertowEmbeddedServletContainerFactory43.getSessionTimeout();
        boolean boolean45 = undertowEmbeddedServletContainerFactory43.isPersistSession();
        java.io.File file46 = undertowEmbeddedServletContainerFactory43.accessLogDirectory;
        undertowEmbeddedServletContainerFactory43.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory43.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int52 = undertowEmbeddedServletContainerFactory51.getSessionTimeout();
        boolean boolean53 = undertowEmbeddedServletContainerFactory51.isPersistSession();
        java.io.File file54 = undertowEmbeddedServletContainerFactory51.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings55 = undertowEmbeddedServletContainerFactory51.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings56 = undertowEmbeddedServletContainerFactory51.getMimeMappings();
        java.io.File file57 = undertowEmbeddedServletContainerFactory51.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int59 = undertowEmbeddedServletContainerFactory58.getPort();
        java.lang.Integer int60 = undertowEmbeddedServletContainerFactory58.bufferSize;
        java.io.File file61 = null;
        undertowEmbeddedServletContainerFactory58.setSessionStoreDir(file61);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer64 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap63);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray65 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer64 };
        undertowEmbeddedServletContainerFactory58.addInitializers(servletContextInitializerArray65);
        undertowEmbeddedServletContainerFactory51.addInitializers(servletContextInitializerArray65);
        undertowEmbeddedServletContainerFactory43.addInitializers(servletContextInitializerArray65);
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray65);
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory0.ioThreads = 100;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray76 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.DeploymentManager deploymentManager77 = undertowEmbeddedServletContainerFactory0.createDeploymentManager(servletContextInitializerArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1800 + "'", int14 == 1800);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1800 + "'", int26 == 1800);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 8080 + "'", int35 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray36);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1800 + "'", int44 == 1800);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1800 + "'", int52 == 1800);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(mimeMappings55);
        org.junit.Assert.assertNotNull(mimeMappings56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 8080 + "'", int59 == 8080);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(servletContextInitializerArray65);
    }

    @Test
    public void test13056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13056");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file5);
        org.springframework.core.io.ResourceLoader resourceLoader7 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList12 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader13);
        java.io.File file15 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet16 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray17 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UndertowDeploymentInfoCustomizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(resourceLoader7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList12);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(errorPageSet16);
    }

    @Test
    public void test13057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13057");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.Compression compression4 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression4);
        org.springframework.boot.context.embedded.JspServlet jspServlet6 = null;
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet6);
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = true;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        java.io.File file14 = undertowEmbeddedServletContainerFactory11.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = undertowEmbeddedServletContainerFactory11.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = undertowEmbeddedServletContainerFactory11.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int18 = undertowEmbeddedServletContainerFactory17.getSessionTimeout();
        boolean boolean19 = undertowEmbeddedServletContainerFactory17.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList20 = undertowEmbeddedServletContainerFactory17.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet21 = undertowEmbeddedServletContainerFactory17.getJspServlet();
        undertowEmbeddedServletContainerFactory11.setJspServlet(jspServlet21);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray24 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList25 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList25, undertowBuilderCustomizerArray24);
        undertowEmbeddedServletContainerFactory23.builderCustomizers = undertowBuilderCustomizerList25;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection28 = undertowEmbeddedServletContainerFactory23.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory11.setBuilderCustomizers(undertowBuilderCustomizerCollection28);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = undertowEmbeddedServletContainerFactory11.getMimeMappings();
        undertowEmbeddedServletContainerFactory11.accessLogPattern = "hi!";
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet33 = undertowEmbeddedServletContainerFactory11.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet33);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1800 + "'", int18 == 1800);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList20);
        org.junit.Assert.assertNotNull(jspServlet21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection28);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNotNull(errorPageSet33);
    }

    @Test
    public void test13058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13058");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        java.lang.String str10 = undertowEmbeddedServletContainerFactory0.getContextPath();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.ioThreads = 10;
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 0;
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) -1);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.Compression compression20 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression20);
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(ssl19);
    }

    @Test
    public void test13059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13059");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 100);
        java.lang.ClassLoader classLoader3 = undertowEmbeddedServletContainerFactory2.getServletClassLoader();
        java.lang.Boolean boolean4 = undertowEmbeddedServletContainerFactory2.directBuffers;
        undertowEmbeddedServletContainerFactory2.setBufferSize((java.lang.Integer) 0);
        int int7 = undertowEmbeddedServletContainerFactory2.getSessionTimeout();
        org.springframework.boot.context.embedded.ErrorPage errorPage8 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage9 = undertowEmbeddedServletContainerFactory2.getUndertowErrorPage(errorPage8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
    }

    @Test
    public void test13060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13060");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        org.springframework.boot.context.embedded.Compression compression5 = undertowEmbeddedServletContainerFactory0.getCompression();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file7);
        java.io.File file9 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(compression5);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test13061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13061");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer6 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap5);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray7 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer6 };
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray7);
        boolean boolean9 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.workerThreads = 10;
        org.springframework.boot.context.embedded.Ssl ssl12 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl12);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = undertowEmbeddedServletContainerFactory14.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet18 = undertowEmbeddedServletContainerFactory14.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList19 = undertowEmbeddedServletContainerFactory14.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int21 = undertowEmbeddedServletContainerFactory20.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory20.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray22);
        undertowEmbeddedServletContainerFactory14.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray22);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray22);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList17);
        org.junit.Assert.assertNotNull(jspServlet18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8080 + "'", int21 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray22);
    }

    @Test
    public void test13062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13062");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList4 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 100;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        int int8 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList4);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
    }

    @Test
    public void test13063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13063");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.net.InetAddress inetAddress6 = undertowEmbeddedServletContainerFactory0.getAddress();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        java.io.File file11 = undertowEmbeddedServletContainerFactory8.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory8.buffersPerRegion;
        io.undertow.Undertow.Builder builder16 = undertowEmbeddedServletContainerFactory8.createBuilder(10);
        undertowEmbeddedServletContainerFactory8.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str19 = undertowEmbeddedServletContainerFactory8.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int21 = undertowEmbeddedServletContainerFactory20.getSessionTimeout();
        boolean boolean22 = undertowEmbeddedServletContainerFactory20.isPersistSession();
        undertowEmbeddedServletContainerFactory20.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder26 = undertowEmbeddedServletContainerFactory20.createBuilder((-1));
        undertowEmbeddedServletContainerFactory20.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int30 = undertowEmbeddedServletContainerFactory29.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray31 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory29.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray31);
        undertowEmbeddedServletContainerFactory20.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray31);
        undertowEmbeddedServletContainerFactory8.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray31);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray31);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection36 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1800 + "'", int21 == 1800);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 8080 + "'", int30 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray31);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection36);
    }

    @Test
    public void test13064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13064");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.net.InetAddress inetAddress6 = undertowEmbeddedServletContainerFactory0.getAddress();
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory11.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader13 = undertowEmbeddedServletContainerFactory11.resourceLoader;
        undertowEmbeddedServletContainerFactory11.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList19 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet20 = undertowEmbeddedServletContainerFactory16.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getSessionTimeout();
        boolean boolean23 = undertowEmbeddedServletContainerFactory21.isPersistSession();
        undertowEmbeddedServletContainerFactory21.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder27 = undertowEmbeddedServletContainerFactory21.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer30 = undertowEmbeddedServletContainerFactory16.getUndertowEmbeddedServletContainer(builder27, deploymentManager28, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager31 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer33 = undertowEmbeddedServletContainerFactory11.getUndertowEmbeddedServletContainer(builder27, deploymentManager31, (int) ' ');
        boolean boolean34 = undertowEmbeddedServletContainerFactory11.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory11.setPort((-1));
        java.lang.Integer int37 = undertowEmbeddedServletContainerFactory11.bufferSize;
        io.undertow.Undertow.Builder builder39 = undertowEmbeddedServletContainerFactory11.createBuilder(0);
        io.undertow.servlet.api.DeploymentManager deploymentManager40 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer42 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder39, deploymentManager40, (int) '4');
        java.lang.Boolean boolean43 = undertowEmbeddedServletContainerFactory0.directBuffers;
        io.undertow.Undertow.Builder builder45 = undertowEmbeddedServletContainerFactory0.createBuilder((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int47 = undertowEmbeddedServletContainerFactory46.getSessionTimeout();
        boolean boolean48 = undertowEmbeddedServletContainerFactory46.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList49 = undertowEmbeddedServletContainerFactory46.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet50 = undertowEmbeddedServletContainerFactory46.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList51 = undertowEmbeddedServletContainerFactory46.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int53 = undertowEmbeddedServletContainerFactory52.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray54 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory52.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray54);
        undertowEmbeddedServletContainerFactory46.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray54);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray54);
        java.io.File file58 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file58);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection60 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 0);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.createAccessLogDirectoryIfNecessary();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Access log directory is not set");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNull(resourceLoader13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList19);
        org.junit.Assert.assertNotNull(jspServlet20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1800 + "'", int22 == 1800);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer30);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1800 + "'", int47 == 1800);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList49);
        org.junit.Assert.assertNotNull(jspServlet50);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8080 + "'", int53 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray54);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection60);
    }

    @Test
    public void test13065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13065");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.xnio.XnioWorker xnioWorker2 = undertowEmbeddedServletContainerFactory1.createWorker();
        undertowEmbeddedServletContainerFactory1.accessLogEnabled = true;
        undertowEmbeddedServletContainerFactory1.setPersistSession(true);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
        org.junit.Assert.assertNotNull(xnioWorker2);
    }

    @Test
    public void test13066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13066");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
    }

    @Test
    public void test13067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13067");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 1);
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader4;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo6 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo6);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        undertowEmbeddedServletContainerFactory8.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory8.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory8.setDisplayName("hi!");
        boolean boolean17 = undertowEmbeddedServletContainerFactory8.isRegisterDefaultServlet();
        boolean boolean18 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        boolean boolean19 = undertowEmbeddedServletContainerFactory8.isAccessLogEnabled();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList20 = undertowEmbeddedServletContainerFactory8.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getSessionTimeout();
        boolean boolean23 = undertowEmbeddedServletContainerFactory21.isPersistSession();
        undertowEmbeddedServletContainerFactory21.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory21.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        java.io.File file31 = undertowEmbeddedServletContainerFactory28.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList32 = undertowEmbeddedServletContainerFactory28.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory21.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList32;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory36.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int40 = undertowEmbeddedServletContainerFactory39.getSessionTimeout();
        boolean boolean41 = undertowEmbeddedServletContainerFactory39.isPersistSession();
        undertowEmbeddedServletContainerFactory39.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory39.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray46 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory39.addErrorPages(errorPageArray46);
        undertowEmbeddedServletContainerFactory36.addErrorPages(errorPageArray46);
        undertowEmbeddedServletContainerFactory21.addErrorPages(errorPageArray46);
        undertowEmbeddedServletContainerFactory8.addErrorPages(errorPageArray46);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray46);
        io.undertow.server.HttpHandler httpHandler52 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.accesslog.AccessLogHandler accessLogHandler53 = undertowEmbeddedServletContainerFactory0.createAccessLogHandler(httpHandler52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Access log directory is not set");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1800 + "'", int22 == 1800);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList32);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1800 + "'", int40 == 1800);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(errorPageArray46);
    }

    @Test
    public void test13068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13068");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getSessionTimeout();
        boolean boolean12 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = undertowEmbeddedServletContainerFactory10.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList13;
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file15;
        boolean boolean17 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        io.undertow.Undertow.Builder builder19 = undertowEmbeddedServletContainerFactory0.createBuilder(1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int21 = undertowEmbeddedServletContainerFactory20.getSessionTimeout();
        boolean boolean22 = undertowEmbeddedServletContainerFactory20.isPersistSession();
        undertowEmbeddedServletContainerFactory20.setPersistSession(false);
        undertowEmbeddedServletContainerFactory20.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList27 = undertowEmbeddedServletContainerFactory20.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory20.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int31 = undertowEmbeddedServletContainerFactory30.getSessionTimeout();
        boolean boolean32 = undertowEmbeddedServletContainerFactory30.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList33 = undertowEmbeddedServletContainerFactory30.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet34 = undertowEmbeddedServletContainerFactory30.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int36 = undertowEmbeddedServletContainerFactory35.getSessionTimeout();
        boolean boolean37 = undertowEmbeddedServletContainerFactory35.isPersistSession();
        undertowEmbeddedServletContainerFactory35.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder41 = undertowEmbeddedServletContainerFactory35.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager42 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer44 = undertowEmbeddedServletContainerFactory30.getUndertowEmbeddedServletContainer(builder41, deploymentManager42, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager45 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer47 = undertowEmbeddedServletContainerFactory20.getUndertowEmbeddedServletContainer(builder41, deploymentManager45, (int) (short) 0);
        io.undertow.servlet.api.DeploymentManager deploymentManager48 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer50 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder41, deploymentManager48, 8080);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int52 = undertowEmbeddedServletContainerFactory51.getSessionTimeout();
        boolean boolean53 = undertowEmbeddedServletContainerFactory51.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList54 = undertowEmbeddedServletContainerFactory51.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet55 = undertowEmbeddedServletContainerFactory51.getJspServlet();
        boolean boolean56 = undertowEmbeddedServletContainerFactory51.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet57 = undertowEmbeddedServletContainerFactory51.getErrorPages();
        undertowEmbeddedServletContainerFactory51.setBufferSize((java.lang.Integer) 1);
        java.io.File file60 = null;
        undertowEmbeddedServletContainerFactory51.setDocumentRoot(file60);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList62 = undertowEmbeddedServletContainerFactory51.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList62;
        int int64 = undertowEmbeddedServletContainerFactory0.getPort();
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.createAccessLogDirectoryIfNecessary();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Access log directory is not set");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1800 + "'", int11 == 1800);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1800 + "'", int21 == 1800);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1800 + "'", int31 == 1800);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList33);
        org.junit.Assert.assertNotNull(jspServlet34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1800 + "'", int36 == 1800);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer44);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer47);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1800 + "'", int52 == 1800);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList54);
        org.junit.Assert.assertNotNull(jspServlet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(errorPageSet57);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 8080 + "'", int64 == 8080);
    }

    @Test
    public void test13069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13069");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        boolean boolean4 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList5 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList6 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.Ssl ssl7 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl7);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList5);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList6);
    }

    @Test
    public void test13070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13070");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        boolean boolean3 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory2.useForwardHeaders = false;
        undertowEmbeddedServletContainerFactory2.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory2.setContextPath("");
        java.io.File file10 = undertowEmbeddedServletContainerFactory2.getDocumentRoot();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(file10);
    }

    @Test
    public void test13071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13071");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        java.lang.String str5 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file6);
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory2.setAccessLogDirectory(file8);
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file10);
        undertowEmbeddedServletContainerFactory2.setJspServletClassName("");
        undertowEmbeddedServletContainerFactory2.workerThreads = 10;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getPort();
        java.lang.Integer int18 = undertowEmbeddedServletContainerFactory16.bufferSize;
        java.io.File file19 = null;
        undertowEmbeddedServletContainerFactory16.setSessionStoreDir(file19);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getSessionTimeout();
        boolean boolean23 = undertowEmbeddedServletContainerFactory21.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList24 = undertowEmbeddedServletContainerFactory21.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet25 = undertowEmbeddedServletContainerFactory21.getJspServlet();
        boolean boolean26 = undertowEmbeddedServletContainerFactory21.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet27 = undertowEmbeddedServletContainerFactory21.getErrorPages();
        undertowEmbeddedServletContainerFactory16.setErrorPages(errorPageSet27);
        undertowEmbeddedServletContainerFactory16.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList31 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray32 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory16.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray32);
        undertowEmbeddedServletContainerFactory2.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray32);
        undertowEmbeddedServletContainerFactory2.setSessionTimeout(35);
        java.lang.Integer int37 = undertowEmbeddedServletContainerFactory2.bufferSize;
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8080 + "'", int17 == 8080);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1800 + "'", int22 == 1800);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList24);
        org.junit.Assert.assertNotNull(jspServlet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(errorPageSet27);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList31);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray32);
        org.junit.Assert.assertNull(int37);
    }

    @Test
    public void test13072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13072");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        undertowEmbeddedServletContainerFactory0.workerThreads = 1;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getPort();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory8.bufferSize;
        boolean boolean11 = undertowEmbeddedServletContainerFactory8.accessLogEnabled;
        java.lang.String str12 = undertowEmbeddedServletContainerFactory8.accessLogPattern;
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        undertowEmbeddedServletContainerFactory8.setResourceLoader(resourceLoader13);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory8.accessLogDirectory = file15;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings17);
        org.springframework.core.io.ResourceLoader resourceLoader19 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader19);
        boolean boolean21 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo22 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo22);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8080 + "'", int9 == 8080);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test13073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13073");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.jarPath = "hi!";
        jarResourceManager0.close();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "0.0.0.0";
        java.lang.String str7 = jarResourceManager0.jarPath;
        boolean boolean8 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.close();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test13074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13074");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        io.undertow.server.handlers.resource.ResourceManager resourceManager7 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        java.io.File file11 = undertowEmbeddedServletContainerFactory8.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = undertowEmbeddedServletContainerFactory14.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet18 = undertowEmbeddedServletContainerFactory14.getJspServlet();
        undertowEmbeddedServletContainerFactory8.setJspServlet(jspServlet18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList22 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList22, undertowBuilderCustomizerArray21);
        undertowEmbeddedServletContainerFactory20.builderCustomizers = undertowBuilderCustomizerList22;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection25 = undertowEmbeddedServletContainerFactory20.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory8.setBuilderCustomizers(undertowBuilderCustomizerCollection25);
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection25);
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection30 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        io.undertow.server.handlers.resource.ResourceManager resourceManager31 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        java.lang.String str32 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        org.springframework.boot.context.embedded.Compression compression35 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression35);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet37 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        java.io.File file38 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(resourceManager7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList17);
        org.junit.Assert.assertNotNull(jspServlet18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection25);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection30);
        org.junit.Assert.assertNotNull(resourceManager31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(errorPageSet37);
        org.junit.Assert.assertNull(file38);
    }

    @Test
    public void test13075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13075");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int5 = undertowEmbeddedServletContainerFactory4.getSessionTimeout();
        boolean boolean6 = undertowEmbeddedServletContainerFactory4.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList7 = undertowEmbeddedServletContainerFactory4.builderCustomizers;
        undertowEmbeddedServletContainerFactory2.builderCustomizers = undertowBuilderCustomizerList7;
        undertowEmbeddedServletContainerFactory2.setRegisterDefaultServlet(true);
        java.io.File file11 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file11);
        java.io.File file13 = undertowEmbeddedServletContainerFactory2.getSessionStoreDir();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        java.io.File file17 = undertowEmbeddedServletContainerFactory14.accessLogDirectory;
        java.lang.String str18 = undertowEmbeddedServletContainerFactory14.getListenAddress();
        undertowEmbeddedServletContainerFactory14.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory14.useForwardHeaders = false;
        java.lang.Boolean boolean23 = undertowEmbeddedServletContainerFactory14.directBuffers;
        org.springframework.boot.context.embedded.Compression compression24 = null;
        undertowEmbeddedServletContainerFactory14.setCompression(compression24);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int27 = undertowEmbeddedServletContainerFactory26.getSessionTimeout();
        boolean boolean28 = undertowEmbeddedServletContainerFactory26.isPersistSession();
        undertowEmbeddedServletContainerFactory26.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory26.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int34 = undertowEmbeddedServletContainerFactory33.getSessionTimeout();
        boolean boolean35 = undertowEmbeddedServletContainerFactory33.isPersistSession();
        java.io.File file36 = undertowEmbeddedServletContainerFactory33.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList37 = undertowEmbeddedServletContainerFactory33.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory26.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList37;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory41.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int45 = undertowEmbeddedServletContainerFactory44.getSessionTimeout();
        boolean boolean46 = undertowEmbeddedServletContainerFactory44.isPersistSession();
        undertowEmbeddedServletContainerFactory44.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory44.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray51 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory44.addErrorPages(errorPageArray51);
        undertowEmbeddedServletContainerFactory41.addErrorPages(errorPageArray51);
        undertowEmbeddedServletContainerFactory26.addErrorPages(errorPageArray51);
        undertowEmbeddedServletContainerFactory14.addErrorPages(errorPageArray51);
        undertowEmbeddedServletContainerFactory2.addErrorPages(errorPageArray51);
        java.net.InetAddress inetAddress57 = undertowEmbeddedServletContainerFactory2.getAddress();
        io.undertow.server.HttpHandler httpHandler58 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.accesslog.AccessLogHandler accessLogHandler59 = undertowEmbeddedServletContainerFactory2.createAccessLogHandler(httpHandler58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Access log directory is not set");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1800 + "'", int5 == 1800);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList7);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "0.0.0.0" + "'", str18, "0.0.0.0");
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1800 + "'", int27 == 1800);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1800 + "'", int34 == 1800);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList37);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1800 + "'", int45 == 1800);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(errorPageArray51);
        org.junit.Assert.assertNull(inetAddress57);
    }

    @Test
    public void test13076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13076");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (-1));
        org.springframework.boot.context.embedded.Compression compression3 = undertowEmbeddedServletContainerFactory2.getCompression();
        int int4 = undertowEmbeddedServletContainerFactory2.getPort();
        io.undertow.server.handlers.resource.ResourceManager resourceManager5 = undertowEmbeddedServletContainerFactory2.getDocumentRootResourceManager();
        boolean boolean6 = undertowEmbeddedServletContainerFactory2.useForwardHeaders;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory2.createAccessLogDirectoryIfNecessary();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Access log directory is not set");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(compression3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(resourceManager5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test13077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13077");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory4.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory4.resourceLoader;
        undertowEmbeddedServletContainerFactory4.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getSessionTimeout();
        boolean boolean11 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = undertowEmbeddedServletContainerFactory9.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet13 = undertowEmbeddedServletContainerFactory9.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        undertowEmbeddedServletContainerFactory14.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder20 = undertowEmbeddedServletContainerFactory14.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer23 = undertowEmbeddedServletContainerFactory9.getUndertowEmbeddedServletContainer(builder20, deploymentManager21, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer26 = undertowEmbeddedServletContainerFactory4.getUndertowEmbeddedServletContainer(builder20, deploymentManager24, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer29 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder20, deploymentManager27, (int) (short) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList30 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.setDisplayName("");
        org.springframework.boot.context.embedded.Ssl ssl33 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl33);
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory0.setDisplayName("");
        org.springframework.boot.context.embedded.Compression compression39 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression39);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection41 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        io.undertow.Undertow.Builder builder44 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager45 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer47 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder44, deploymentManager45, (int) ' ');
        org.springframework.boot.context.embedded.ErrorPage errorPage48 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage49 = undertowEmbeddedServletContainerFactory0.getUndertowErrorPage(errorPage48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList12);
        org.junit.Assert.assertNotNull(jspServlet13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer23);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer26);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer29);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList30);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection41);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer47);
    }

    @Test
    public void test13078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13078");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getSessionTimeout();
        boolean boolean12 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = undertowEmbeddedServletContainerFactory10.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList13;
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file15;
        boolean boolean17 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        boolean boolean18 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = true;
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(97);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1800 + "'", int11 == 1800);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test13079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13079");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList14, undertowBuilderCustomizerArray13);
        undertowEmbeddedServletContainerFactory12.builderCustomizers = undertowBuilderCustomizerList14;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection17 = undertowEmbeddedServletContainerFactory12.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection17);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.Compression compression22 = undertowEmbeddedServletContainerFactory0.getCompression();
        boolean boolean23 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = initializer25.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int28 = undertowEmbeddedServletContainerFactory27.getSessionTimeout();
        boolean boolean29 = undertowEmbeddedServletContainerFactory27.isPersistSession();
        java.io.File file30 = undertowEmbeddedServletContainerFactory27.accessLogDirectory;
        undertowEmbeddedServletContainerFactory27.setRegisterDefaultServlet(true);
        java.lang.Boolean boolean33 = undertowEmbeddedServletContainerFactory27.directBuffers;
        org.springframework.boot.context.embedded.Compression compression34 = undertowEmbeddedServletContainerFactory27.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int36 = undertowEmbeddedServletContainerFactory35.getPort();
        java.lang.Integer int37 = undertowEmbeddedServletContainerFactory35.bufferSize;
        java.io.File file38 = null;
        undertowEmbeddedServletContainerFactory35.setSessionStoreDir(file38);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer43 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap42);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray44 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer43 };
        initializer41.initializers = servletContextInitializerArray44;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer48 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap47);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray49 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer48 };
        initializer46.initializers = servletContextInitializerArray49;
        initializer41.initializers = servletContextInitializerArray49;
        initializer40.initializers = servletContextInitializerArray49;
        undertowEmbeddedServletContainerFactory35.addInitializers(servletContextInitializerArray49);
        undertowEmbeddedServletContainerFactory27.addInitializers(servletContextInitializerArray49);
        initializer25.initializers = servletContextInitializerArray49;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray56 = initializer25.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer59 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap58);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray60 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer59 };
        initializer57.initializers = servletContextInitializerArray60;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray62 = initializer57.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int65 = undertowEmbeddedServletContainerFactory64.getSessionTimeout();
        boolean boolean66 = undertowEmbeddedServletContainerFactory64.isPersistSession();
        java.io.File file67 = undertowEmbeddedServletContainerFactory64.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings68 = undertowEmbeddedServletContainerFactory64.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings69 = undertowEmbeddedServletContainerFactory64.getMimeMappings();
        java.io.File file70 = undertowEmbeddedServletContainerFactory64.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int72 = undertowEmbeddedServletContainerFactory71.getPort();
        java.lang.Integer int73 = undertowEmbeddedServletContainerFactory71.bufferSize;
        java.io.File file74 = null;
        undertowEmbeddedServletContainerFactory71.setSessionStoreDir(file74);
        java.util.Map<java.lang.String, java.lang.String> strMap76 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer77 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap76);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray78 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer77 };
        undertowEmbeddedServletContainerFactory71.addInitializers(servletContextInitializerArray78);
        undertowEmbeddedServletContainerFactory64.addInitializers(servletContextInitializerArray78);
        initializer63.initializers = servletContextInitializerArray78;
        initializer57.initializers = servletContextInitializerArray78;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray83 = initializer57.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray84 = initializer57.initializers;
        initializer25.initializers = servletContextInitializerArray84;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.registerServletContainerInitializerToDriveServletContextInitializers(deploymentInfo24, servletContextInitializerArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection17);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNull(compression22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(servletContextInitializerArray26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1800 + "'", int28 == 1800);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNull(compression34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8080 + "'", int36 == 8080);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(servletContextInitializerArray44);
        org.junit.Assert.assertNotNull(servletContextInitializerArray49);
        org.junit.Assert.assertNotNull(servletContextInitializerArray56);
        org.junit.Assert.assertNotNull(servletContextInitializerArray60);
        org.junit.Assert.assertNotNull(servletContextInitializerArray62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1800 + "'", int65 == 1800);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(mimeMappings68);
        org.junit.Assert.assertNotNull(mimeMappings69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 8080 + "'", int72 == 8080);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNotNull(servletContextInitializerArray78);
        org.junit.Assert.assertNotNull(servletContextInitializerArray83);
        org.junit.Assert.assertNotNull(servletContextInitializerArray84);
    }

    @Test
    public void test13080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13080");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        java.lang.String str26 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        java.lang.String str27 = undertowEmbeddedServletContainerFactory2.getContextPath();
        org.springframework.boot.context.embedded.Compression compression28 = undertowEmbeddedServletContainerFactory2.getCompression();
        org.springframework.boot.context.embedded.Ssl ssl29 = null;
        undertowEmbeddedServletContainerFactory2.setSsl(ssl29);
        undertowEmbeddedServletContainerFactory2.setBuffersPerRegion((java.lang.Integer) 1800);
        undertowEmbeddedServletContainerFactory2.setJspServletClassName("");
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(true);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(compression28);
    }

    @Test
    public void test13081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13081");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        io.undertow.Undertow.Builder builder9 = undertowEmbeddedServletContainerFactory1.createBuilder(8080);
        java.net.InetAddress inetAddress10 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setDisplayName("0.0.0.0");
        java.net.InetAddress inetAddress13 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.io.File file14 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(inetAddress10);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test13082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13082");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory0.getAddress();
        java.net.InetAddress inetAddress19 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress19);
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo23 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo23);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl27 = undertowEmbeddedServletContainerFactory0.getSsl();
        org.springframework.core.io.ResourceLoader resourceLoader28 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader28);
        java.io.File file30 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo31 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo31);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertNull(ssl27);
        org.junit.Assert.assertNull(file30);
    }

    @Test
    public void test13083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13083");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) true);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file4;
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file6);
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader10);
        int int12 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 0);
        java.lang.Integer int15 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        java.lang.Integer int16 = undertowEmbeddedServletContainerFactory0.ioThreads;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test13084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13084");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory4.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory4.resourceLoader;
        undertowEmbeddedServletContainerFactory4.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getSessionTimeout();
        boolean boolean11 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = undertowEmbeddedServletContainerFactory9.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet13 = undertowEmbeddedServletContainerFactory9.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        undertowEmbeddedServletContainerFactory14.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder20 = undertowEmbeddedServletContainerFactory14.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer23 = undertowEmbeddedServletContainerFactory9.getUndertowEmbeddedServletContainer(builder20, deploymentManager21, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer26 = undertowEmbeddedServletContainerFactory4.getUndertowEmbeddedServletContainer(builder20, deploymentManager24, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer29 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder20, deploymentManager27, (int) (short) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList30 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 100);
        java.lang.Integer int33 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int35 = undertowEmbeddedServletContainerFactory34.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = undertowEmbeddedServletContainerFactory38.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader40 = undertowEmbeddedServletContainerFactory38.resourceLoader;
        undertowEmbeddedServletContainerFactory38.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int44 = undertowEmbeddedServletContainerFactory43.getSessionTimeout();
        boolean boolean45 = undertowEmbeddedServletContainerFactory43.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList46 = undertowEmbeddedServletContainerFactory43.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet47 = undertowEmbeddedServletContainerFactory43.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int49 = undertowEmbeddedServletContainerFactory48.getSessionTimeout();
        boolean boolean50 = undertowEmbeddedServletContainerFactory48.isPersistSession();
        undertowEmbeddedServletContainerFactory48.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder54 = undertowEmbeddedServletContainerFactory48.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager55 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer57 = undertowEmbeddedServletContainerFactory43.getUndertowEmbeddedServletContainer(builder54, deploymentManager55, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager58 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer60 = undertowEmbeddedServletContainerFactory38.getUndertowEmbeddedServletContainer(builder54, deploymentManager58, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager61 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer63 = undertowEmbeddedServletContainerFactory34.getUndertowEmbeddedServletContainer(builder54, deploymentManager61, (int) (short) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList64 = undertowEmbeddedServletContainerFactory34.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList64;
        java.lang.String str66 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 10);
        java.lang.String str69 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.Ssl ssl74 = undertowEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.Compression compression75 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression75);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList12);
        org.junit.Assert.assertNotNull(jspServlet13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer23);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer26);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer29);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList30);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 8080 + "'", int35 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNull(resourceLoader40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1800 + "'", int44 == 1800);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList46);
        org.junit.Assert.assertNotNull(jspServlet47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1800 + "'", int49 == 1800);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer57);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer60);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer63);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(ssl74);
    }

    @Test
    public void test13085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13085");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.lang.ClassLoader classLoader4 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "";
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        undertowEmbeddedServletContainerFactory0.setDisplayName("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        java.io.File file19 = undertowEmbeddedServletContainerFactory12.accessLogDirectory;
        org.springframework.boot.context.embedded.Ssl ssl20 = null;
        undertowEmbeddedServletContainerFactory12.setSsl(ssl20);
        undertowEmbeddedServletContainerFactory12.buffersPerRegion = 1;
        boolean boolean24 = undertowEmbeddedServletContainerFactory12.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.Compression compression25 = undertowEmbeddedServletContainerFactory12.getCompression();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection26 = undertowEmbeddedServletContainerFactory12.getBuilderCustomizers();
        java.lang.Integer int27 = undertowEmbeddedServletContainerFactory12.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader28 = null;
        undertowEmbeddedServletContainerFactory12.resourceLoader = resourceLoader28;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList30 = undertowEmbeddedServletContainerFactory12.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList30);
        java.io.File file32 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(compression25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList30);
        org.junit.Assert.assertNull(file32);
    }

    @Test
    public void test13086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13086");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        org.xnio.XnioWorker xnioWorker13 = undertowEmbeddedServletContainerFactory0.createWorker();
        java.io.File file14 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file14);
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 100);
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.Ssl ssl20 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl20);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(xnioWorker13);
    }

    @Test
    public void test13087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13087");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory0.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        undertowEmbeddedServletContainerFactory8.setSessionTimeout((int) (short) 1);
        boolean boolean12 = undertowEmbeddedServletContainerFactory8.useForwardHeaders;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        undertowEmbeddedServletContainerFactory8.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList17);
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList17);
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 10);
        java.io.File file24 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file24);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList17);
    }

    @Test
    public void test13088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13088");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.net.InetAddress inetAddress9 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress9);
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection13 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        boolean boolean14 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int16 = undertowEmbeddedServletContainerFactory15.getSessionTimeout();
        boolean boolean17 = undertowEmbeddedServletContainerFactory15.isPersistSession();
        undertowEmbeddedServletContainerFactory15.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory15.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory15.setDisplayName("hi!");
        boolean boolean24 = undertowEmbeddedServletContainerFactory15.isRegisterDefaultServlet();
        java.io.File file25 = null;
        undertowEmbeddedServletContainerFactory15.accessLogDirectory = file25;
        org.springframework.boot.context.embedded.JspServlet jspServlet27 = undertowEmbeddedServletContainerFactory15.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet27);
        java.lang.Integer int29 = undertowEmbeddedServletContainerFactory0.workerThreads;
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1800 + "'", int16 == 1800);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(jspServlet27);
        org.junit.Assert.assertNull(int29);
    }

    @Test
    public void test13089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13089");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        undertowEmbeddedServletContainerFactory5.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder11 = undertowEmbeddedServletContainerFactory5.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager12 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer14 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder11, deploymentManager12, (int) (short) 100);
        java.io.File file15 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        boolean boolean16 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test13090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13090");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory0.ioThreads;
        java.lang.String str8 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory0.workerThreads;
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl10);
        org.springframework.boot.context.embedded.Compression compression12 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression12);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test13091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13091");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) '4');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int3 = undertowEmbeddedServletContainerFactory2.getSessionTimeout();
        boolean boolean4 = undertowEmbeddedServletContainerFactory2.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList5 = undertowEmbeddedServletContainerFactory2.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet6 = undertowEmbeddedServletContainerFactory2.getJspServlet();
        boolean boolean7 = undertowEmbeddedServletContainerFactory2.useForwardHeaders;
        java.net.InetAddress inetAddress8 = undertowEmbeddedServletContainerFactory2.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        undertowEmbeddedServletContainerFactory2.resourceLoader = resourceLoader9;
        undertowEmbeddedServletContainerFactory2.accessLogPattern = "hi!";
        org.springframework.boot.context.embedded.JspServlet jspServlet13 = undertowEmbeddedServletContainerFactory2.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet13);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file15);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1800 + "'", int3 == 1800);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList5);
        org.junit.Assert.assertNotNull(jspServlet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(inetAddress8);
        org.junit.Assert.assertNotNull(jspServlet13);
        org.junit.Assert.assertNull(ssl19);
    }

    @Test
    public void test13092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13092");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file5;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList9 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("0.0.0.0");
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        undertowEmbeddedServletContainerFactory0.bufferSize = 0;
        boolean boolean16 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.createAccessLogDirectoryIfNecessary();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Access log directory is not set");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test13093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13093");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        java.lang.String str5 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file6);
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory2.setAccessLogDirectory(file8);
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file10);
        java.lang.ClassLoader classLoader12 = undertowEmbeddedServletContainerFactory2.getServletClassLoader();
        java.lang.Integer int13 = undertowEmbeddedServletContainerFactory2.buffersPerRegion;
        boolean boolean14 = undertowEmbeddedServletContainerFactory2.useForwardHeaders;
        org.xnio.XnioWorker xnioWorker15 = undertowEmbeddedServletContainerFactory2.createWorker();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(classLoader12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(xnioWorker15);
    }

    @Test
    public void test13094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13094");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        boolean boolean3 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader5);
        boolean boolean7 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        undertowEmbeddedServletContainerFactory8.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl13 = null;
        undertowEmbeddedServletContainerFactory8.setSsl(ssl13);
        org.springframework.boot.context.embedded.JspServlet jspServlet15 = undertowEmbeddedServletContainerFactory8.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet15);
        java.lang.Boolean boolean17 = undertowEmbeddedServletContainerFactory0.directBuffers;
        java.net.InetAddress inetAddress18 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int21 = undertowEmbeddedServletContainerFactory20.getSessionTimeout();
        boolean boolean22 = undertowEmbeddedServletContainerFactory20.isPersistSession();
        undertowEmbeddedServletContainerFactory20.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory20.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory20.setDisplayName("hi!");
        boolean boolean29 = undertowEmbeddedServletContainerFactory20.isRegisterDefaultServlet();
        java.io.File file30 = null;
        undertowEmbeddedServletContainerFactory20.accessLogDirectory = file30;
        io.undertow.server.handlers.resource.ResourceManager resourceManager32 = undertowEmbeddedServletContainerFactory20.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int34 = undertowEmbeddedServletContainerFactory33.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer36 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap35);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer38 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap37);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer40 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap39);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer42 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap41);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray43 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer36, initParameterConfiguringServletContextInitializer38, initParameterConfiguringServletContextInitializer40, initParameterConfiguringServletContextInitializer42 };
        undertowEmbeddedServletContainerFactory33.addInitializers(servletContextInitializerArray43);
        undertowEmbeddedServletContainerFactory20.addInitializers(servletContextInitializerArray43);
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray43);
        java.lang.ClassLoader classLoader47 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(jspServlet15);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1800 + "'", int21 == 1800);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(resourceManager32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1800 + "'", int34 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray43);
        org.junit.Assert.assertNotNull(classLoader47);
    }

    @Test
    public void test13095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13095");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        boolean boolean3 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        boolean boolean4 = undertowEmbeddedServletContainerFactory2.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        undertowEmbeddedServletContainerFactory7.directBuffers = true;
        java.io.File file14 = null;
        undertowEmbeddedServletContainerFactory7.setDocumentRoot(file14);
        undertowEmbeddedServletContainerFactory7.setRegisterJspServlet(false);
        java.io.File file18 = null;
        undertowEmbeddedServletContainerFactory7.setSessionStoreDir(file18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int21 = undertowEmbeddedServletContainerFactory20.getSessionTimeout();
        boolean boolean22 = undertowEmbeddedServletContainerFactory20.isPersistSession();
        java.io.File file23 = undertowEmbeddedServletContainerFactory20.accessLogDirectory;
        undertowEmbeddedServletContainerFactory20.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory20.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        undertowEmbeddedServletContainerFactory28.setSessionTimeout((int) (short) 1);
        java.io.File file32 = null;
        undertowEmbeddedServletContainerFactory28.setSessionStoreDir(file32);
        undertowEmbeddedServletContainerFactory28.setBuffersPerRegion((java.lang.Integer) 10);
        org.springframework.core.io.ResourceLoader resourceLoader36 = null;
        undertowEmbeddedServletContainerFactory28.setResourceLoader(resourceLoader36);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int39 = undertowEmbeddedServletContainerFactory38.getSessionTimeout();
        boolean boolean40 = undertowEmbeddedServletContainerFactory38.isPersistSession();
        java.io.File file41 = undertowEmbeddedServletContainerFactory38.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList42 = undertowEmbeddedServletContainerFactory38.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory38.ioThreads = 0;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = undertowEmbeddedServletContainerFactory38.getMimeMappings();
        undertowEmbeddedServletContainerFactory28.setMimeMappings(mimeMappings45);
        undertowEmbeddedServletContainerFactory20.setMimeMappings(mimeMappings45);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet48 = undertowEmbeddedServletContainerFactory20.getErrorPages();
        undertowEmbeddedServletContainerFactory7.setErrorPages(errorPageSet48);
        undertowEmbeddedServletContainerFactory2.setErrorPages(errorPageSet48);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection51 = undertowEmbeddedServletContainerFactory2.getBuilderCustomizers();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1800 + "'", int21 == 1800);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1800 + "'", int39 == 1800);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList42);
        org.junit.Assert.assertNotNull(mimeMappings45);
        org.junit.Assert.assertNotNull(errorPageSet48);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection51);
    }

    @Test
    public void test13096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13096");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory2.buffersPerRegion = (-1);
        int int5 = undertowEmbeddedServletContainerFactory2.getPort();
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory2.setSessionStoreDir(file6);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }

    @Test
    public void test13097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13097");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory2.builderCustomizers;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory2.getContextPath();
        java.lang.String str5 = undertowEmbeddedServletContainerFactory2.getContextPath();
        int int6 = undertowEmbeddedServletContainerFactory2.getPort();
        org.springframework.boot.context.embedded.Compression compression7 = undertowEmbeddedServletContainerFactory2.getCompression();
        undertowEmbeddedServletContainerFactory2.setBuffersPerRegion((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(compression7);
    }

    @Test
    public void test13098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13098");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file5);
        boolean boolean7 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getSessionTimeout();
        boolean boolean12 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = undertowEmbeddedServletContainerFactory10.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet14 = undertowEmbeddedServletContainerFactory10.getJspServlet();
        undertowEmbeddedServletContainerFactory10.directBuffers = true;
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory10.bufferSize;
        java.io.File file18 = null;
        undertowEmbeddedServletContainerFactory10.setDocumentRoot(file18);
        boolean boolean20 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        undertowEmbeddedServletContainerFactory10.setWorkerThreads((java.lang.Integer) 8080);
        org.springframework.boot.context.embedded.Compression compression23 = null;
        undertowEmbeddedServletContainerFactory10.setCompression(compression23);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        java.io.File file31 = undertowEmbeddedServletContainerFactory28.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = undertowEmbeddedServletContainerFactory28.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = undertowEmbeddedServletContainerFactory28.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int35 = undertowEmbeddedServletContainerFactory34.getSessionTimeout();
        boolean boolean36 = undertowEmbeddedServletContainerFactory34.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList37 = undertowEmbeddedServletContainerFactory34.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet38 = undertowEmbeddedServletContainerFactory34.getJspServlet();
        undertowEmbeddedServletContainerFactory28.setJspServlet(jspServlet38);
        undertowEmbeddedServletContainerFactory27.setJspServlet(jspServlet38);
        undertowEmbeddedServletContainerFactory10.setJspServlet(jspServlet38);
        undertowEmbeddedServletContainerFactory10.setBufferSize((java.lang.Integer) 8080);
        java.lang.Integer int44 = undertowEmbeddedServletContainerFactory10.ioThreads;
        org.springframework.boot.context.embedded.JspServlet jspServlet45 = undertowEmbeddedServletContainerFactory10.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet45);
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = true;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1800 + "'", int11 == 1800);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList13);
        org.junit.Assert.assertNotNull(jspServlet14);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1800 + "'", int35 == 1800);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList37);
        org.junit.Assert.assertNotNull(jspServlet38);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(jspServlet45);
    }

    @Test
    public void test13099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13099");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = null;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList7;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList9 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setPort((int) (byte) 1);
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("");
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 52);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        undertowEmbeddedServletContainerFactory16.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder22 = undertowEmbeddedServletContainerFactory16.createBuilder((-1));
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = undertowEmbeddedServletContainerFactory16.getErrorPages();
        undertowEmbeddedServletContainerFactory16.useForwardHeaders = false;
        java.lang.String str26 = undertowEmbeddedServletContainerFactory16.getContextPath();
        undertowEmbeddedServletContainerFactory16.accessLogEnabled = false;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int30 = undertowEmbeddedServletContainerFactory29.getSessionTimeout();
        boolean boolean31 = undertowEmbeddedServletContainerFactory29.isPersistSession();
        java.io.File file32 = undertowEmbeddedServletContainerFactory29.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList33 = undertowEmbeddedServletContainerFactory29.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.Compression compression34 = null;
        undertowEmbeddedServletContainerFactory29.setCompression(compression34);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory37.ioThreads = 1;
        undertowEmbeddedServletContainerFactory37.setPort(0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer42 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray43 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer42 };
        undertowEmbeddedServletContainerFactory37.addBuilderCustomizers(undertowBuilderCustomizerArray43);
        undertowEmbeddedServletContainerFactory29.addBuilderCustomizers(undertowBuilderCustomizerArray43);
        undertowEmbeddedServletContainerFactory16.addBuilderCustomizers(undertowBuilderCustomizerArray43);
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray43);
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(undertowDeploymentInfoCustomizerList9);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(errorPageSet23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1800 + "'", int30 == 1800);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList33);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray43);
    }

    @Test
    public void test13100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13100");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int2 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        boolean boolean3 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        java.io.File file4 = undertowEmbeddedServletContainerFactory1.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getPort();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory8.bufferSize;
        java.io.File file11 = null;
        undertowEmbeddedServletContainerFactory8.setSessionStoreDir(file11);
        java.util.Map<java.lang.String, java.lang.String> strMap13 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer14 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap13);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray15 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer14 };
        undertowEmbeddedServletContainerFactory8.addInitializers(servletContextInitializerArray15);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray15);
        initializer0.initializers = servletContextInitializerArray15;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = initializer0.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray20 = initializer0.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer24 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap23);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer26 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap25);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer28 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap27);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer30 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap29);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray31 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer24, initParameterConfiguringServletContextInitializer26, initParameterConfiguringServletContextInitializer28, initParameterConfiguringServletContextInitializer30 };
        undertowEmbeddedServletContainerFactory21.addInitializers(servletContextInitializerArray31);
        initializer0.initializers = servletContextInitializerArray31;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray34 = initializer0.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray35 = initializer0.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray36 = initializer0.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int39 = undertowEmbeddedServletContainerFactory38.getSessionTimeout();
        boolean boolean40 = undertowEmbeddedServletContainerFactory38.isPersistSession();
        java.io.File file41 = undertowEmbeddedServletContainerFactory38.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = undertowEmbeddedServletContainerFactory38.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = undertowEmbeddedServletContainerFactory38.getMimeMappings();
        java.io.File file44 = undertowEmbeddedServletContainerFactory38.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int46 = undertowEmbeddedServletContainerFactory45.getPort();
        java.lang.Integer int47 = undertowEmbeddedServletContainerFactory45.bufferSize;
        java.io.File file48 = null;
        undertowEmbeddedServletContainerFactory45.setSessionStoreDir(file48);
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer51 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap50);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray52 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer51 };
        undertowEmbeddedServletContainerFactory45.addInitializers(servletContextInitializerArray52);
        undertowEmbeddedServletContainerFactory38.addInitializers(servletContextInitializerArray52);
        initializer37.initializers = servletContextInitializerArray52;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int57 = undertowEmbeddedServletContainerFactory56.getSessionTimeout();
        boolean boolean58 = undertowEmbeddedServletContainerFactory56.isPersistSession();
        java.io.File file59 = undertowEmbeddedServletContainerFactory56.accessLogDirectory;
        undertowEmbeddedServletContainerFactory56.setRegisterDefaultServlet(true);
        java.lang.Boolean boolean62 = undertowEmbeddedServletContainerFactory56.directBuffers;
        org.springframework.boot.context.embedded.Compression compression63 = undertowEmbeddedServletContainerFactory56.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int65 = undertowEmbeddedServletContainerFactory64.getPort();
        java.lang.Integer int66 = undertowEmbeddedServletContainerFactory64.bufferSize;
        java.io.File file67 = null;
        undertowEmbeddedServletContainerFactory64.setSessionStoreDir(file67);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer70 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer72 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap71);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray73 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer72 };
        initializer70.initializers = servletContextInitializerArray73;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer75 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap76 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer77 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap76);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray78 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer77 };
        initializer75.initializers = servletContextInitializerArray78;
        initializer70.initializers = servletContextInitializerArray78;
        initializer69.initializers = servletContextInitializerArray78;
        undertowEmbeddedServletContainerFactory64.addInitializers(servletContextInitializerArray78);
        undertowEmbeddedServletContainerFactory56.addInitializers(servletContextInitializerArray78);
        initializer37.initializers = servletContextInitializerArray78;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray85 = initializer37.initializers;
        initializer0.initializers = servletContextInitializerArray85;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1800 + "'", int2 == 1800);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8080 + "'", int9 == 8080);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(servletContextInitializerArray15);
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertNotNull(servletContextInitializerArray20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1800 + "'", int22 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray31);
        org.junit.Assert.assertNotNull(servletContextInitializerArray34);
        org.junit.Assert.assertNotNull(servletContextInitializerArray35);
        org.junit.Assert.assertNotNull(servletContextInitializerArray36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1800 + "'", int39 == 1800);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 8080 + "'", int46 == 8080);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(servletContextInitializerArray52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1800 + "'", int57 == 1800);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNull(compression63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 8080 + "'", int65 == 8080);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertNotNull(servletContextInitializerArray73);
        org.junit.Assert.assertNotNull(servletContextInitializerArray78);
        org.junit.Assert.assertNotNull(servletContextInitializerArray85);
    }

    @Test
    public void test13101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13101");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        boolean boolean2 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean3 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean4 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.jarPath = "hi!";
        jarResourceManager0.jarPath = "hi!";
        jarResourceManager0.close();
        jarResourceManager0.close();
        boolean boolean11 = jarResourceManager0.isResourceChangeListenerSupported();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test13102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13102");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        boolean boolean4 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "0.0.0.0";
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test13103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13103");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file5;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList11 = undertowEmbeddedServletContainerFactory8.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet12 = undertowEmbeddedServletContainerFactory8.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet12);
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader14;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList19 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet20 = undertowEmbeddedServletContainerFactory16.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList21 = undertowEmbeddedServletContainerFactory16.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int23 = undertowEmbeddedServletContainerFactory22.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray24 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory22.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray24);
        undertowEmbeddedServletContainerFactory16.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray24);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray24);
        java.io.File file28 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList29 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.lang.String str30 = undertowEmbeddedServletContainerFactory0.getContextPath();
        java.lang.Boolean boolean31 = undertowEmbeddedServletContainerFactory0.directBuffers;
        java.lang.Integer int32 = undertowEmbeddedServletContainerFactory0.ioThreads;
        undertowEmbeddedServletContainerFactory0.setPort((int) (byte) -1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList11);
        org.junit.Assert.assertNotNull(jspServlet12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList19);
        org.junit.Assert.assertNotNull(jspServlet20);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 8080 + "'", int23 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray24);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(int32);
    }

    @Test
    public void test13104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13104");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        java.lang.String str5 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory2.buffersPerRegion;
        undertowEmbeddedServletContainerFactory2.setDisplayName("");
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory2.setSsl(ssl9);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(int6);
    }

    @Test
    public void test13105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13105");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        io.undertow.Undertow.Builder builder8 = undertowEmbeddedServletContainerFactory0.createBuilder(10);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str11 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        undertowEmbeddedServletContainerFactory12.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray23 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory21.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray23);
        undertowEmbeddedServletContainerFactory12.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray23);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray23);
        org.springframework.core.io.ResourceLoader resourceLoader27 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader27;
        org.springframework.core.io.ResourceLoader resourceLoader29 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader29;
        java.io.File file31 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file31);
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("0.0.0.0");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int36 = undertowEmbeddedServletContainerFactory35.getSessionTimeout();
        boolean boolean37 = undertowEmbeddedServletContainerFactory35.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList38 = undertowEmbeddedServletContainerFactory35.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet39 = undertowEmbeddedServletContainerFactory35.getJspServlet();
        undertowEmbeddedServletContainerFactory35.directBuffers = true;
        undertowEmbeddedServletContainerFactory35.accessLogPattern = "hi!";
        java.io.File file44 = null;
        undertowEmbeddedServletContainerFactory35.setDocumentRoot(file44);
        undertowEmbeddedServletContainerFactory35.setWorkerThreads((java.lang.Integer) 100);
        java.io.File file48 = null;
        undertowEmbeddedServletContainerFactory35.setDocumentRoot(file48);
        undertowEmbeddedServletContainerFactory35.setIoThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory35.bufferSize = (-1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int55 = undertowEmbeddedServletContainerFactory54.getSessionTimeout();
        boolean boolean56 = undertowEmbeddedServletContainerFactory54.isPersistSession();
        java.io.File file57 = undertowEmbeddedServletContainerFactory54.accessLogDirectory;
        java.lang.String str58 = undertowEmbeddedServletContainerFactory54.getListenAddress();
        undertowEmbeddedServletContainerFactory54.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory54.useForwardHeaders = false;
        java.lang.Boolean boolean63 = undertowEmbeddedServletContainerFactory54.directBuffers;
        org.springframework.boot.context.embedded.Compression compression64 = null;
        undertowEmbeddedServletContainerFactory54.setCompression(compression64);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int67 = undertowEmbeddedServletContainerFactory66.getSessionTimeout();
        boolean boolean68 = undertowEmbeddedServletContainerFactory66.isPersistSession();
        undertowEmbeddedServletContainerFactory66.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory66.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory73 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int74 = undertowEmbeddedServletContainerFactory73.getSessionTimeout();
        boolean boolean75 = undertowEmbeddedServletContainerFactory73.isPersistSession();
        java.io.File file76 = undertowEmbeddedServletContainerFactory73.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList77 = undertowEmbeddedServletContainerFactory73.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory66.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList77;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory81 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory81.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory84 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int85 = undertowEmbeddedServletContainerFactory84.getSessionTimeout();
        boolean boolean86 = undertowEmbeddedServletContainerFactory84.isPersistSession();
        undertowEmbeddedServletContainerFactory84.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory84.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray91 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory84.addErrorPages(errorPageArray91);
        undertowEmbeddedServletContainerFactory81.addErrorPages(errorPageArray91);
        undertowEmbeddedServletContainerFactory66.addErrorPages(errorPageArray91);
        undertowEmbeddedServletContainerFactory54.addErrorPages(errorPageArray91);
        undertowEmbeddedServletContainerFactory35.addErrorPages(errorPageArray91);
        java.lang.ClassLoader classLoader97 = undertowEmbeddedServletContainerFactory35.getServletClassLoader();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList98 = undertowEmbeddedServletContainerFactory35.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList98;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8080 + "'", int22 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray23);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1800 + "'", int36 == 1800);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList38);
        org.junit.Assert.assertNotNull(jspServlet39);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1800 + "'", int55 == 1800);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "0.0.0.0" + "'", str58, "0.0.0.0");
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1800 + "'", int67 == 1800);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1800 + "'", int74 == 1800);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList77);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1800 + "'", int85 == 1800);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(errorPageArray91);
        org.junit.Assert.assertNotNull(classLoader97);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList98);
    }

    @Test
    public void test13106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13106");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader5);
        boolean boolean7 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.JspServlet jspServlet8 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        undertowEmbeddedServletContainerFactory11.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl16 = null;
        undertowEmbeddedServletContainerFactory11.setSsl(ssl16);
        undertowEmbeddedServletContainerFactory11.setBuffersPerRegion((java.lang.Integer) 8080);
        undertowEmbeddedServletContainerFactory11.workerThreads = 0;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = undertowEmbeddedServletContainerFactory11.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int24 = undertowEmbeddedServletContainerFactory23.getSessionTimeout();
        boolean boolean25 = undertowEmbeddedServletContainerFactory23.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList26 = undertowEmbeddedServletContainerFactory23.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet27 = undertowEmbeddedServletContainerFactory23.getJspServlet();
        boolean boolean28 = undertowEmbeddedServletContainerFactory23.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet29 = undertowEmbeddedServletContainerFactory23.getErrorPages();
        undertowEmbeddedServletContainerFactory23.setBufferSize((java.lang.Integer) 1);
        java.io.File file32 = null;
        undertowEmbeddedServletContainerFactory23.setDocumentRoot(file32);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int35 = undertowEmbeddedServletContainerFactory34.getPort();
        undertowEmbeddedServletContainerFactory34.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int39 = undertowEmbeddedServletContainerFactory38.getSessionTimeout();
        boolean boolean40 = undertowEmbeddedServletContainerFactory38.isPersistSession();
        undertowEmbeddedServletContainerFactory38.setPersistSession(false);
        undertowEmbeddedServletContainerFactory38.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList45 = undertowEmbeddedServletContainerFactory38.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory38.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int49 = undertowEmbeddedServletContainerFactory48.getSessionTimeout();
        boolean boolean50 = undertowEmbeddedServletContainerFactory48.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList51 = undertowEmbeddedServletContainerFactory48.builderCustomizers;
        undertowEmbeddedServletContainerFactory38.builderCustomizers = undertowBuilderCustomizerList51;
        java.io.File file53 = null;
        undertowEmbeddedServletContainerFactory38.accessLogDirectory = file53;
        boolean boolean55 = undertowEmbeddedServletContainerFactory38.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int57 = undertowEmbeddedServletContainerFactory56.getSessionTimeout();
        boolean boolean58 = undertowEmbeddedServletContainerFactory56.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList59 = undertowEmbeddedServletContainerFactory56.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet60 = undertowEmbeddedServletContainerFactory56.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList61 = undertowEmbeddedServletContainerFactory56.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int63 = undertowEmbeddedServletContainerFactory62.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray64 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory62.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray64);
        undertowEmbeddedServletContainerFactory56.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray64);
        undertowEmbeddedServletContainerFactory38.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray64);
        undertowEmbeddedServletContainerFactory34.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray64);
        undertowEmbeddedServletContainerFactory23.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray64);
        undertowEmbeddedServletContainerFactory11.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray64);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray64);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        boolean boolean75 = undertowEmbeddedServletContainerFactory74.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int77 = undertowEmbeddedServletContainerFactory76.getSessionTimeout();
        boolean boolean78 = undertowEmbeddedServletContainerFactory76.isPersistSession();
        undertowEmbeddedServletContainerFactory76.setPersistSession(false);
        undertowEmbeddedServletContainerFactory76.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList83 = undertowEmbeddedServletContainerFactory76.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory74.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList83;
        undertowEmbeddedServletContainerFactory74.setSessionTimeout((int) (byte) 1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList87 = undertowEmbeddedServletContainerFactory74.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList87;
        java.lang.Integer int89 = undertowEmbeddedServletContainerFactory0.workerThreads;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(jspServlet8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(errorPageSet22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1800 + "'", int24 == 1800);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList26);
        org.junit.Assert.assertNotNull(jspServlet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(errorPageSet29);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 8080 + "'", int35 == 8080);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1800 + "'", int39 == 1800);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1800 + "'", int49 == 1800);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1800 + "'", int57 == 1800);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList59);
        org.junit.Assert.assertNotNull(jspServlet60);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 8080 + "'", int63 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray64);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1800 + "'", int77 == 1800);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList83);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList87);
        org.junit.Assert.assertNull(int89);
    }

    @Test
    public void test13107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13107");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        java.io.File file4 = undertowEmbeddedServletContainerFactory2.getDocumentRoot();
        int int5 = undertowEmbeddedServletContainerFactory2.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getPort();
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory6.bufferSize;
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory6.setSessionStoreDir(file9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = undertowEmbeddedServletContainerFactory11.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet15 = undertowEmbeddedServletContainerFactory11.getJspServlet();
        boolean boolean16 = undertowEmbeddedServletContainerFactory11.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = undertowEmbeddedServletContainerFactory11.getErrorPages();
        undertowEmbeddedServletContainerFactory6.setErrorPages(errorPageSet17);
        undertowEmbeddedServletContainerFactory6.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getSessionTimeout();
        boolean boolean23 = undertowEmbeddedServletContainerFactory21.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList24 = undertowEmbeddedServletContainerFactory21.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet25 = undertowEmbeddedServletContainerFactory21.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int27 = undertowEmbeddedServletContainerFactory26.getSessionTimeout();
        boolean boolean28 = undertowEmbeddedServletContainerFactory26.isPersistSession();
        undertowEmbeddedServletContainerFactory26.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder32 = undertowEmbeddedServletContainerFactory26.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager33 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer35 = undertowEmbeddedServletContainerFactory21.getUndertowEmbeddedServletContainer(builder32, deploymentManager33, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager36 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer38 = undertowEmbeddedServletContainerFactory6.getUndertowEmbeddedServletContainer(builder32, deploymentManager36, (int) (byte) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList39 = undertowEmbeddedServletContainerFactory6.deploymentInfoCustomizers;
        java.lang.Integer int40 = undertowEmbeddedServletContainerFactory6.workerThreads;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection41 = undertowEmbeddedServletContainerFactory6.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory2.setBuilderCustomizers(undertowBuilderCustomizerCollection41);
        java.lang.Integer int43 = undertowEmbeddedServletContainerFactory2.buffersPerRegion;
        undertowEmbeddedServletContainerFactory2.buffersPerRegion = 100;
        org.springframework.core.io.ResourceLoader resourceLoader46 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setIoThreads((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8080 + "'", int7 == 8080);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList14);
        org.junit.Assert.assertNotNull(jspServlet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(errorPageSet17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1800 + "'", int22 == 1800);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList24);
        org.junit.Assert.assertNotNull(jspServlet25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1800 + "'", int27 == 1800);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer35);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer38);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection41);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(resourceLoader46);
    }

    @Test
    public void test13108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13108");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) '4');
        boolean boolean3 = undertowEmbeddedServletContainerFactory2.useForwardHeaders;
        undertowEmbeddedServletContainerFactory2.buffersPerRegion = (-1);
        undertowEmbeddedServletContainerFactory2.setWorkerThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) false);
        java.util.concurrent.TimeUnit timeUnit11 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory2.setSessionTimeout((int) (short) 10, timeUnit11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test13109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13109");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory0.getAddress();
        java.io.File file19 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file19;
        java.lang.String str21 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.workerThreads = 35;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "0.0.0.0" + "'", str21, "0.0.0.0");
    }

    @Test
    public void test13110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13110");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        boolean boolean9 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        boolean boolean11 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory0.workerThreads = 1800;
        org.springframework.boot.context.embedded.Compression compression14 = undertowEmbeddedServletContainerFactory0.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int16 = undertowEmbeddedServletContainerFactory15.getPort();
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory15.bufferSize;
        int int18 = undertowEmbeddedServletContainerFactory15.getSessionTimeout();
        org.springframework.boot.context.embedded.Compression compression19 = undertowEmbeddedServletContainerFactory15.getCompression();
        undertowEmbeddedServletContainerFactory15.directBuffers = false;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = undertowEmbeddedServletContainerFactory15.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet22);
        org.springframework.boot.context.embedded.Compression compression24 = undertowEmbeddedServletContainerFactory0.getCompression();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo25 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo25);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(compression14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 8080 + "'", int16 == 8080);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1800 + "'", int18 == 1800);
        org.junit.Assert.assertNull(compression19);
        org.junit.Assert.assertNotNull(errorPageSet22);
        org.junit.Assert.assertNull(compression24);
    }

    @Test
    public void test13111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13111");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        int int3 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet4 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        java.io.File file5 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean8 = undertowEmbeddedServletContainerFactory7.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory7.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory7.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory13.accessLogEnabled = false;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList17, undertowBuilderCustomizerArray16);
        undertowEmbeddedServletContainerFactory13.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList17);
        undertowEmbeddedServletContainerFactory7.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList17);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList17;
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = true;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection24 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 32);
        int int27 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1800 + "'", int3 == 1800);
        org.junit.Assert.assertNotNull(errorPageSet4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1800 + "'", int27 == 1800);
    }

    @Test
    public void test13112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13112");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory4.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory4.resourceLoader;
        undertowEmbeddedServletContainerFactory4.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getSessionTimeout();
        boolean boolean11 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = undertowEmbeddedServletContainerFactory9.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet13 = undertowEmbeddedServletContainerFactory9.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        undertowEmbeddedServletContainerFactory14.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder20 = undertowEmbeddedServletContainerFactory14.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer23 = undertowEmbeddedServletContainerFactory9.getUndertowEmbeddedServletContainer(builder20, deploymentManager21, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer26 = undertowEmbeddedServletContainerFactory4.getUndertowEmbeddedServletContainer(builder20, deploymentManager24, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer29 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder20, deploymentManager27, (int) (short) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList30 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 100);
        java.lang.Integer int33 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.workerThreads = 10;
        int int38 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.JspServlet jspServlet39 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean40 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        java.lang.Integer int41 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        undertowEmbeddedServletContainerFactory0.ioThreads = (-1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList12);
        org.junit.Assert.assertNotNull(jspServlet13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer23);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer26);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer29);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList30);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1800 + "'", int38 == 1800);
        org.junit.Assert.assertNotNull(jspServlet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(int41);
    }

    @Test
    public void test13113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13113");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getSessionTimeout();
        boolean boolean12 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = undertowEmbeddedServletContainerFactory10.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList13;
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file15;
        boolean boolean17 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        io.undertow.Undertow.Builder builder19 = undertowEmbeddedServletContainerFactory0.createBuilder(1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int21 = undertowEmbeddedServletContainerFactory20.getSessionTimeout();
        boolean boolean22 = undertowEmbeddedServletContainerFactory20.isPersistSession();
        undertowEmbeddedServletContainerFactory20.setPersistSession(false);
        undertowEmbeddedServletContainerFactory20.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList27 = undertowEmbeddedServletContainerFactory20.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory20.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int31 = undertowEmbeddedServletContainerFactory30.getSessionTimeout();
        boolean boolean32 = undertowEmbeddedServletContainerFactory30.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList33 = undertowEmbeddedServletContainerFactory30.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet34 = undertowEmbeddedServletContainerFactory30.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int36 = undertowEmbeddedServletContainerFactory35.getSessionTimeout();
        boolean boolean37 = undertowEmbeddedServletContainerFactory35.isPersistSession();
        undertowEmbeddedServletContainerFactory35.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder41 = undertowEmbeddedServletContainerFactory35.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager42 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer44 = undertowEmbeddedServletContainerFactory30.getUndertowEmbeddedServletContainer(builder41, deploymentManager42, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager45 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer47 = undertowEmbeddedServletContainerFactory20.getUndertowEmbeddedServletContainer(builder41, deploymentManager45, (int) (short) 0);
        io.undertow.servlet.api.DeploymentManager deploymentManager48 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer50 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder41, deploymentManager48, 8080);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        java.lang.String str53 = undertowEmbeddedServletContainerFactory0.getContextPath();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 10);
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1800 + "'", int11 == 1800);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1800 + "'", int21 == 1800);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1800 + "'", int31 == 1800);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList33);
        org.junit.Assert.assertNotNull(jspServlet34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1800 + "'", int36 == 1800);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer44);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer47);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
    }

    @Test
    public void test13114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13114");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file15);
        java.lang.String str17 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        boolean boolean18 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.io.File file19 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file19);
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("0.0.0.0");
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList25 = null;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList25;
        undertowEmbeddedServletContainerFactory0.ioThreads = 8080;
        boolean boolean29 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        java.io.File file30 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(file30);
    }

    @Test
    public void test13115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13115");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file4);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean8 = undertowEmbeddedServletContainerFactory7.isAccessLogEnabled();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = undertowEmbeddedServletContainerFactory7.getMimeMappings();
        java.io.File file10 = undertowEmbeddedServletContainerFactory7.getDocumentRoot();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList11 = undertowEmbeddedServletContainerFactory7.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList11;
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 1800);
        io.undertow.Undertow.Builder builder16 = undertowEmbeddedServletContainerFactory0.createBuilder((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray17 = undertowEmbeddedServletContainerFactory0.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList11);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test13116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13116");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory4.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory4.resourceLoader;
        undertowEmbeddedServletContainerFactory4.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getSessionTimeout();
        boolean boolean11 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = undertowEmbeddedServletContainerFactory9.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet13 = undertowEmbeddedServletContainerFactory9.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        undertowEmbeddedServletContainerFactory14.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder20 = undertowEmbeddedServletContainerFactory14.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer23 = undertowEmbeddedServletContainerFactory9.getUndertowEmbeddedServletContainer(builder20, deploymentManager21, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer26 = undertowEmbeddedServletContainerFactory4.getUndertowEmbeddedServletContainer(builder20, deploymentManager24, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer29 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder20, deploymentManager27, (int) (short) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList30 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.io.File file31 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("0.0.0.0");
        int int34 = undertowEmbeddedServletContainerFactory0.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader35 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader35;
        org.springframework.boot.context.embedded.Compression compression37 = undertowEmbeddedServletContainerFactory0.getCompression();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList12);
        org.junit.Assert.assertNotNull(jspServlet13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer23);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer26);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer29);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 8080 + "'", int34 == 8080);
        org.junit.Assert.assertNull(compression37);
    }

    @Test
    public void test13117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13117");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl5 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl5);
        java.lang.String str7 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        undertowEmbeddedServletContainerFactory8.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory8.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int16 = undertowEmbeddedServletContainerFactory15.getSessionTimeout();
        boolean boolean17 = undertowEmbeddedServletContainerFactory15.isPersistSession();
        java.io.File file18 = undertowEmbeddedServletContainerFactory15.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList19 = undertowEmbeddedServletContainerFactory15.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory8.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList19;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory23.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int27 = undertowEmbeddedServletContainerFactory26.getSessionTimeout();
        boolean boolean28 = undertowEmbeddedServletContainerFactory26.isPersistSession();
        undertowEmbeddedServletContainerFactory26.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory26.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray33 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory26.addErrorPages(errorPageArray33);
        undertowEmbeddedServletContainerFactory23.addErrorPages(errorPageArray33);
        undertowEmbeddedServletContainerFactory8.addErrorPages(errorPageArray33);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray33);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int39 = undertowEmbeddedServletContainerFactory38.getSessionTimeout();
        boolean boolean40 = undertowEmbeddedServletContainerFactory38.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList41 = undertowEmbeddedServletContainerFactory38.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int43 = undertowEmbeddedServletContainerFactory42.getSessionTimeout();
        boolean boolean44 = undertowEmbeddedServletContainerFactory42.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList45 = undertowEmbeddedServletContainerFactory42.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet46 = undertowEmbeddedServletContainerFactory42.getJspServlet();
        boolean boolean47 = undertowEmbeddedServletContainerFactory42.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet48 = undertowEmbeddedServletContainerFactory42.getErrorPages();
        undertowEmbeddedServletContainerFactory38.setErrorPages(errorPageSet48);
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet48);
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        java.lang.String str55 = undertowEmbeddedServletContainerFactory0.getContextPath();
        java.lang.ClassLoader classLoader56 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1800 + "'", int16 == 1800);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList19);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1800 + "'", int27 == 1800);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(errorPageArray33);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1800 + "'", int39 == 1800);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1800 + "'", int43 == 1800);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList45);
        org.junit.Assert.assertNotNull(jspServlet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(errorPageSet48);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(classLoader56);
    }

    @Test
    public void test13118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13118");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        boolean boolean2 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean3 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.close();
        java.lang.String str5 = jarResourceManager0.jarPath;
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "0.0.0.0";
        boolean boolean9 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str10 = jarResourceManager0.jarPath;
        jarResourceManager0.jarPath = "0.0.0.0";
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource14 = jarResourceManager0.getResource("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "0.0.0.0" + "'", str10, "0.0.0.0");
    }

    @Test
    public void test13119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13119");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        undertowEmbeddedServletContainerFactory5.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory5.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray12 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory5.addErrorPages(errorPageArray12);
        undertowEmbeddedServletContainerFactory2.addErrorPages(errorPageArray12);
        java.lang.String str15 = undertowEmbeddedServletContainerFactory2.getDisplayName();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList16 = undertowEmbeddedServletContainerFactory2.builderCustomizers;
        int int17 = undertowEmbeddedServletContainerFactory2.getPort();
        java.io.File file18 = null;
        undertowEmbeddedServletContainerFactory2.setAccessLogDirectory(file18);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(errorPageArray12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test13120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13120");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        int int3 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet4 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        java.io.File file5 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean8 = undertowEmbeddedServletContainerFactory7.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory7.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory7.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory13.accessLogEnabled = false;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList17, undertowBuilderCustomizerArray16);
        undertowEmbeddedServletContainerFactory13.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList17);
        undertowEmbeddedServletContainerFactory7.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList17);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList17;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection26 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        java.lang.String str27 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList28 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        io.undertow.Undertow.Builder builder30 = undertowEmbeddedServletContainerFactory0.createBuilder((int) (short) 100);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1800 + "'", int3 == 1800);
        org.junit.Assert.assertNotNull(errorPageSet4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList28);
        org.junit.Assert.assertNotNull(builder30);
    }

    @Test
    public void test13121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13121");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file15);
        java.lang.String str17 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        boolean boolean18 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        org.springframework.boot.context.embedded.Compression compression23 = undertowEmbeddedServletContainerFactory0.getCompression();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(compression23);
    }

    @Test
    public void test13122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13122");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file7);
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file9;
        java.io.File file11 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file11;
        org.springframework.boot.context.embedded.Compression compression13 = undertowEmbeddedServletContainerFactory0.getCompression();
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        org.springframework.boot.context.embedded.Compression compression15 = undertowEmbeddedServletContainerFactory0.getCompression();
        boolean boolean16 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNull(compression13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(compression15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test13123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13123");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        undertowEmbeddedServletContainerFactory7.setPersistSession(false);
        undertowEmbeddedServletContainerFactory7.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList14 = undertowEmbeddedServletContainerFactory7.deploymentInfoCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList15;
        undertowEmbeddedServletContainerFactory0.workerThreads = 10;
        org.springframework.core.io.ResourceLoader resourceLoader19 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList14);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNull(resourceLoader19);
    }

    @Test
    public void test13124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13124");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file15);
        java.lang.String str17 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        boolean boolean18 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.io.File file19 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file19);
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("0.0.0.0");
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = true;
        boolean boolean27 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection28 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection28);
    }

    @Test
    public void test13125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13125");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory2.setPort((-1));
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean30 = undertowEmbeddedServletContainerFactory29.isAccessLogEnabled();
        org.springframework.boot.context.embedded.Ssl ssl31 = undertowEmbeddedServletContainerFactory29.getSsl();
        boolean boolean32 = undertowEmbeddedServletContainerFactory29.useForwardHeaders;
        undertowEmbeddedServletContainerFactory29.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int36 = undertowEmbeddedServletContainerFactory35.getSessionTimeout();
        undertowEmbeddedServletContainerFactory35.setSessionTimeout((int) (short) 1);
        boolean boolean39 = undertowEmbeddedServletContainerFactory35.useForwardHeaders;
        java.lang.String str40 = undertowEmbeddedServletContainerFactory35.getDisplayName();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings41 = undertowEmbeddedServletContainerFactory35.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int43 = undertowEmbeddedServletContainerFactory42.getSessionTimeout();
        boolean boolean44 = undertowEmbeddedServletContainerFactory42.isPersistSession();
        java.io.File file45 = undertowEmbeddedServletContainerFactory42.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings46 = undertowEmbeddedServletContainerFactory42.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings47 = undertowEmbeddedServletContainerFactory42.getMimeMappings();
        java.lang.Integer int48 = undertowEmbeddedServletContainerFactory42.buffersPerRegion;
        io.undertow.Undertow.Builder builder50 = undertowEmbeddedServletContainerFactory42.createBuilder(10);
        undertowEmbeddedServletContainerFactory42.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str53 = undertowEmbeddedServletContainerFactory42.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int55 = undertowEmbeddedServletContainerFactory54.getSessionTimeout();
        boolean boolean56 = undertowEmbeddedServletContainerFactory54.isPersistSession();
        undertowEmbeddedServletContainerFactory54.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder60 = undertowEmbeddedServletContainerFactory54.createBuilder((-1));
        undertowEmbeddedServletContainerFactory54.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int64 = undertowEmbeddedServletContainerFactory63.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray65 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory63.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray65);
        undertowEmbeddedServletContainerFactory54.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray65);
        undertowEmbeddedServletContainerFactory42.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray65);
        undertowEmbeddedServletContainerFactory35.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray65);
        undertowEmbeddedServletContainerFactory29.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray65);
        undertowEmbeddedServletContainerFactory2.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray65);
        undertowEmbeddedServletContainerFactory2.setRegisterDefaultServlet(true);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(ssl31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1800 + "'", int36 == 1800);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(mimeMappings41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1800 + "'", int43 == 1800);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(mimeMappings46);
        org.junit.Assert.assertNotNull(mimeMappings47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1800 + "'", int55 == 1800);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 8080 + "'", int64 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray65);
    }

    @Test
    public void test13126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13126");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory0.workerThreads = 1800;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.bufferSize = 0;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo12 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo12);
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer20 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap19);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray21 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer20 };
        initializer18.initializers = servletContextInitializerArray21;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = initializer18.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray24 = initializer18.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray25 = null;
        initializer18.initializers = servletContextInitializerArray25;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray27 = initializer18.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getPort();
        java.lang.Integer int30 = undertowEmbeddedServletContainerFactory28.bufferSize;
        java.io.File file31 = null;
        undertowEmbeddedServletContainerFactory28.setSessionStoreDir(file31);
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer34 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap33);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray35 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer34 };
        undertowEmbeddedServletContainerFactory28.addInitializers(servletContextInitializerArray35);
        initializer18.initializers = servletContextInitializerArray35;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray38 = initializer18.initializers;
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray38);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(servletContextInitializerArray21);
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
        org.junit.Assert.assertNotNull(servletContextInitializerArray24);
        org.junit.Assert.assertNull(servletContextInitializerArray27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 8080 + "'", int29 == 8080);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(servletContextInitializerArray35);
        org.junit.Assert.assertNotNull(servletContextInitializerArray38);
    }

    @Test
    public void test13127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13127");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        io.undertow.Undertow.Builder builder8 = undertowEmbeddedServletContainerFactory0.createBuilder(10);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str11 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        undertowEmbeddedServletContainerFactory12.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray23 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory21.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray23);
        undertowEmbeddedServletContainerFactory12.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray23);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray23);
        java.lang.String str27 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        org.springframework.boot.context.embedded.JspServlet jspServlet28 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        java.lang.String str29 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8080 + "'", int22 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray23);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(jspServlet28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(mimeMappings30);
    }

    @Test
    public void test13128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13128");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setDisplayName("");
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        boolean boolean11 = undertowEmbeddedServletContainerFactory6.useForwardHeaders;
        java.net.InetAddress inetAddress12 = undertowEmbeddedServletContainerFactory6.getAddress();
        undertowEmbeddedServletContainerFactory6.setAccessLogPattern("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader19 = undertowEmbeddedServletContainerFactory17.resourceLoader;
        undertowEmbeddedServletContainerFactory17.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int23 = undertowEmbeddedServletContainerFactory22.getSessionTimeout();
        boolean boolean24 = undertowEmbeddedServletContainerFactory22.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList25 = undertowEmbeddedServletContainerFactory22.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet26 = undertowEmbeddedServletContainerFactory22.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int28 = undertowEmbeddedServletContainerFactory27.getSessionTimeout();
        boolean boolean29 = undertowEmbeddedServletContainerFactory27.isPersistSession();
        undertowEmbeddedServletContainerFactory27.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder33 = undertowEmbeddedServletContainerFactory27.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager34 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer36 = undertowEmbeddedServletContainerFactory22.getUndertowEmbeddedServletContainer(builder33, deploymentManager34, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager37 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer39 = undertowEmbeddedServletContainerFactory17.getUndertowEmbeddedServletContainer(builder33, deploymentManager37, (int) ' ');
        boolean boolean40 = undertowEmbeddedServletContainerFactory17.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory17.setPort((-1));
        java.lang.Integer int43 = undertowEmbeddedServletContainerFactory17.bufferSize;
        io.undertow.Undertow.Builder builder45 = undertowEmbeddedServletContainerFactory17.createBuilder(0);
        io.undertow.servlet.api.DeploymentManager deploymentManager46 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer48 = undertowEmbeddedServletContainerFactory6.getUndertowEmbeddedServletContainer(builder45, deploymentManager46, (int) '4');
        java.lang.Boolean boolean49 = undertowEmbeddedServletContainerFactory6.directBuffers;
        io.undertow.Undertow.Builder builder51 = undertowEmbeddedServletContainerFactory6.createBuilder((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int53 = undertowEmbeddedServletContainerFactory52.getSessionTimeout();
        boolean boolean54 = undertowEmbeddedServletContainerFactory52.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList55 = undertowEmbeddedServletContainerFactory52.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet56 = undertowEmbeddedServletContainerFactory52.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList57 = undertowEmbeddedServletContainerFactory52.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int59 = undertowEmbeddedServletContainerFactory58.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray60 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory58.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray60);
        undertowEmbeddedServletContainerFactory52.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray60);
        undertowEmbeddedServletContainerFactory6.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray60);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray60);
        org.springframework.boot.context.embedded.JspServlet jspServlet65 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int67 = undertowEmbeddedServletContainerFactory66.getPort();
        java.lang.Integer int68 = undertowEmbeddedServletContainerFactory66.bufferSize;
        java.io.File file69 = null;
        undertowEmbeddedServletContainerFactory66.setSessionStoreDir(file69);
        java.io.File file71 = null;
        undertowEmbeddedServletContainerFactory66.accessLogDirectory = file71;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings73 = undertowEmbeddedServletContainerFactory66.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int75 = undertowEmbeddedServletContainerFactory74.getSessionTimeout();
        boolean boolean76 = undertowEmbeddedServletContainerFactory74.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList77 = undertowEmbeddedServletContainerFactory74.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet78 = undertowEmbeddedServletContainerFactory74.getJspServlet();
        undertowEmbeddedServletContainerFactory66.setJspServlet(jspServlet78);
        org.springframework.core.io.ResourceLoader resourceLoader80 = null;
        undertowEmbeddedServletContainerFactory66.resourceLoader = resourceLoader80;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory83 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean84 = undertowEmbeddedServletContainerFactory83.isAccessLogEnabled();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings85 = undertowEmbeddedServletContainerFactory83.getMimeMappings();
        java.io.File file86 = undertowEmbeddedServletContainerFactory83.getDocumentRoot();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList87 = undertowEmbeddedServletContainerFactory83.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory66.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList87;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList87;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(inetAddress12);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNull(resourceLoader19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1800 + "'", int23 == 1800);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList25);
        org.junit.Assert.assertNotNull(jspServlet26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1800 + "'", int28 == 1800);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer36);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer48);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1800 + "'", int53 == 1800);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList55);
        org.junit.Assert.assertNotNull(jspServlet56);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 8080 + "'", int59 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray60);
        org.junit.Assert.assertNotNull(jspServlet65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 8080 + "'", int67 == 8080);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(mimeMappings73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1800 + "'", int75 == 1800);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList77);
        org.junit.Assert.assertNotNull(jspServlet78);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(mimeMappings85);
        org.junit.Assert.assertNull(file86);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList87);
    }

    @Test
    public void test13129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13129");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory2.setPort((-1));
        java.lang.Integer int28 = undertowEmbeddedServletContainerFactory2.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader29 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.accessLogPattern = "0.0.0.0";
        java.net.InetAddress inetAddress32 = undertowEmbeddedServletContainerFactory2.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int34 = undertowEmbeddedServletContainerFactory33.getPort();
        java.lang.Integer int35 = undertowEmbeddedServletContainerFactory33.bufferSize;
        java.io.File file36 = null;
        undertowEmbeddedServletContainerFactory33.setSessionStoreDir(file36);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int39 = undertowEmbeddedServletContainerFactory38.getSessionTimeout();
        boolean boolean40 = undertowEmbeddedServletContainerFactory38.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList41 = undertowEmbeddedServletContainerFactory38.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet42 = undertowEmbeddedServletContainerFactory38.getJspServlet();
        boolean boolean43 = undertowEmbeddedServletContainerFactory38.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet44 = undertowEmbeddedServletContainerFactory38.getErrorPages();
        undertowEmbeddedServletContainerFactory33.setErrorPages(errorPageSet44);
        undertowEmbeddedServletContainerFactory33.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList48 = undertowEmbeddedServletContainerFactory33.builderCustomizers;
        undertowEmbeddedServletContainerFactory33.bufferSize = 8080;
        java.net.InetAddress inetAddress51 = undertowEmbeddedServletContainerFactory33.getAddress();
        io.undertow.server.handlers.resource.ResourceManager resourceManager52 = undertowEmbeddedServletContainerFactory33.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory33.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int56 = undertowEmbeddedServletContainerFactory55.getPort();
        java.lang.Integer int57 = undertowEmbeddedServletContainerFactory55.bufferSize;
        boolean boolean58 = undertowEmbeddedServletContainerFactory55.accessLogEnabled;
        java.lang.String str59 = undertowEmbeddedServletContainerFactory55.accessLogPattern;
        undertowEmbeddedServletContainerFactory55.setWorkerThreads((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory62.setJspServletClassName("");
        int int65 = undertowEmbeddedServletContainerFactory62.getSessionTimeout();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet66 = undertowEmbeddedServletContainerFactory62.getErrorPages();
        undertowEmbeddedServletContainerFactory55.setErrorPages(errorPageSet66);
        undertowEmbeddedServletContainerFactory55.accessLogPattern = "";
        java.io.File file70 = null;
        undertowEmbeddedServletContainerFactory55.setDocumentRoot(file70);
        boolean boolean72 = undertowEmbeddedServletContainerFactory55.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory55.setBufferSize((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings75 = undertowEmbeddedServletContainerFactory55.getMimeMappings();
        undertowEmbeddedServletContainerFactory33.setMimeMappings(mimeMappings75);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int78 = undertowEmbeddedServletContainerFactory77.getSessionTimeout();
        boolean boolean79 = undertowEmbeddedServletContainerFactory77.isPersistSession();
        undertowEmbeddedServletContainerFactory77.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory77.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory77.setDisplayName("hi!");
        boolean boolean86 = undertowEmbeddedServletContainerFactory77.isRegisterDefaultServlet();
        java.io.File file87 = undertowEmbeddedServletContainerFactory77.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray88 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory77.addBuilderCustomizers(undertowBuilderCustomizerArray88);
        undertowEmbeddedServletContainerFactory33.addBuilderCustomizers(undertowBuilderCustomizerArray88);
        undertowEmbeddedServletContainerFactory2.addBuilderCustomizers(undertowBuilderCustomizerArray88);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNull(resourceLoader29);
        org.junit.Assert.assertNull(inetAddress32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 8080 + "'", int34 == 8080);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1800 + "'", int39 == 1800);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList41);
        org.junit.Assert.assertNotNull(jspServlet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(errorPageSet44);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList48);
        org.junit.Assert.assertNull(inetAddress51);
        org.junit.Assert.assertNotNull(resourceManager52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 8080 + "'", int56 == 8080);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1800 + "'", int65 == 1800);
        org.junit.Assert.assertNotNull(errorPageSet66);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(mimeMappings75);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1800 + "'", int78 == 1800);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(file87);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray88);
    }

    @Test
    public void test13130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13130");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        java.io.File file4 = undertowEmbeddedServletContainerFactory2.getDocumentRoot();
        undertowEmbeddedServletContainerFactory2.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory2.bufferSize = (-1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getSessionTimeout();
        boolean boolean11 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        undertowEmbeddedServletContainerFactory9.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory9.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        java.io.File file19 = undertowEmbeddedServletContainerFactory16.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList20 = undertowEmbeddedServletContainerFactory16.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory9.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList20;
        undertowEmbeddedServletContainerFactory2.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList20;
        org.springframework.core.io.ResourceLoader resourceLoader23 = null;
        undertowEmbeddedServletContainerFactory2.resourceLoader = resourceLoader23;
        undertowEmbeddedServletContainerFactory2.setContextPath("");
        java.io.File file27 = null;
        undertowEmbeddedServletContainerFactory2.accessLogDirectory = file27;
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList20);
    }

    @Test
    public void test13131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13131");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory1.ioThreads = 1;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray11 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
    }

    @Test
    public void test13132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13132");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        boolean boolean3 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.lang.Boolean boolean4 = undertowEmbeddedServletContainerFactory0.directBuffers;
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader5);
        boolean boolean7 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test13133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13133");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        java.io.File file7 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.Ssl ssl8 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl8);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 1;
        java.lang.ClassLoader classLoader12 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        undertowEmbeddedServletContainerFactory0.setPort((int) (byte) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int16 = undertowEmbeddedServletContainerFactory15.getSessionTimeout();
        boolean boolean17 = undertowEmbeddedServletContainerFactory15.isPersistSession();
        undertowEmbeddedServletContainerFactory15.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl20 = null;
        undertowEmbeddedServletContainerFactory15.setSsl(ssl20);
        java.lang.String str22 = undertowEmbeddedServletContainerFactory15.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int24 = undertowEmbeddedServletContainerFactory23.getSessionTimeout();
        boolean boolean25 = undertowEmbeddedServletContainerFactory23.isPersistSession();
        undertowEmbeddedServletContainerFactory23.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory23.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int31 = undertowEmbeddedServletContainerFactory30.getSessionTimeout();
        boolean boolean32 = undertowEmbeddedServletContainerFactory30.isPersistSession();
        java.io.File file33 = undertowEmbeddedServletContainerFactory30.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList34 = undertowEmbeddedServletContainerFactory30.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory23.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList34;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory38.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int42 = undertowEmbeddedServletContainerFactory41.getSessionTimeout();
        boolean boolean43 = undertowEmbeddedServletContainerFactory41.isPersistSession();
        undertowEmbeddedServletContainerFactory41.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory41.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray48 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory41.addErrorPages(errorPageArray48);
        undertowEmbeddedServletContainerFactory38.addErrorPages(errorPageArray48);
        undertowEmbeddedServletContainerFactory23.addErrorPages(errorPageArray48);
        undertowEmbeddedServletContainerFactory15.addErrorPages(errorPageArray48);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray48);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 8080;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(classLoader12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1800 + "'", int16 == 1800);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1800 + "'", int24 == 1800);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1800 + "'", int31 == 1800);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList34);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1800 + "'", int42 == 1800);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(errorPageArray48);
    }

    @Test
    public void test13134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13134");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int16 = undertowEmbeddedServletContainerFactory15.getSessionTimeout();
        boolean boolean17 = undertowEmbeddedServletContainerFactory15.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList18 = undertowEmbeddedServletContainerFactory15.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = undertowEmbeddedServletContainerFactory15.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int21 = undertowEmbeddedServletContainerFactory20.getSessionTimeout();
        boolean boolean22 = undertowEmbeddedServletContainerFactory20.isPersistSession();
        undertowEmbeddedServletContainerFactory20.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder26 = undertowEmbeddedServletContainerFactory20.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer29 = undertowEmbeddedServletContainerFactory15.getUndertowEmbeddedServletContainer(builder26, deploymentManager27, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager30 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer32 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder26, deploymentManager30, (int) (byte) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList33 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("0.0.0.0");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory36.setJspServletClassName("");
        boolean boolean39 = undertowEmbeddedServletContainerFactory36.useForwardHeaders;
        java.lang.Boolean boolean40 = undertowEmbeddedServletContainerFactory36.directBuffers;
        java.lang.String str41 = undertowEmbeddedServletContainerFactory36.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int43 = undertowEmbeddedServletContainerFactory42.getSessionTimeout();
        boolean boolean44 = undertowEmbeddedServletContainerFactory42.isPersistSession();
        undertowEmbeddedServletContainerFactory42.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory42.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int50 = undertowEmbeddedServletContainerFactory49.getSessionTimeout();
        boolean boolean51 = undertowEmbeddedServletContainerFactory49.isPersistSession();
        java.io.File file52 = undertowEmbeddedServletContainerFactory49.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList53 = undertowEmbeddedServletContainerFactory49.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory42.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList53;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings55 = undertowEmbeddedServletContainerFactory42.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader56 = null;
        undertowEmbeddedServletContainerFactory42.setResourceLoader(resourceLoader56);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int59 = undertowEmbeddedServletContainerFactory58.getSessionTimeout();
        boolean boolean60 = undertowEmbeddedServletContainerFactory58.isPersistSession();
        java.io.File file61 = undertowEmbeddedServletContainerFactory58.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings62 = undertowEmbeddedServletContainerFactory58.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings63 = undertowEmbeddedServletContainerFactory58.getMimeMappings();
        java.lang.Integer int64 = undertowEmbeddedServletContainerFactory58.buffersPerRegion;
        undertowEmbeddedServletContainerFactory58.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int68 = undertowEmbeddedServletContainerFactory67.getSessionTimeout();
        boolean boolean69 = undertowEmbeddedServletContainerFactory67.isPersistSession();
        undertowEmbeddedServletContainerFactory67.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder73 = undertowEmbeddedServletContainerFactory67.createBuilder((-1));
        undertowEmbeddedServletContainerFactory67.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int77 = undertowEmbeddedServletContainerFactory76.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray78 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory76.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray78);
        undertowEmbeddedServletContainerFactory67.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray78);
        undertowEmbeddedServletContainerFactory58.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray78);
        undertowEmbeddedServletContainerFactory42.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray78);
        undertowEmbeddedServletContainerFactory36.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray78);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray78);
        java.lang.String str85 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        java.net.InetAddress inetAddress86 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress86);
        undertowEmbeddedServletContainerFactory0.bufferSize = 32;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1800 + "'", int16 == 1800);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList18);
        org.junit.Assert.assertNotNull(jspServlet19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1800 + "'", int21 == 1800);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer29);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer32);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList33);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1800 + "'", int43 == 1800);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1800 + "'", int50 == 1800);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList53);
        org.junit.Assert.assertNotNull(mimeMappings55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1800 + "'", int59 == 1800);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(mimeMappings62);
        org.junit.Assert.assertNotNull(mimeMappings63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1800 + "'", int68 == 1800);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 8080 + "'", int77 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray78);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "0.0.0.0" + "'", str85, "0.0.0.0");
    }

    @Test
    public void test13135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13135");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 1);
        boolean boolean7 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        io.undertow.Undertow.Builder builder9 = undertowEmbeddedServletContainerFactory0.createBuilder(1);
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo11 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.configureAccessLog(deploymentInfo11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test13136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13136");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList14, undertowBuilderCustomizerArray13);
        undertowEmbeddedServletContainerFactory12.builderCustomizers = undertowBuilderCustomizerList14;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection17 = undertowEmbeddedServletContainerFactory12.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection17);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        undertowEmbeddedServletContainerFactory0.setDisplayName("");
        java.lang.Boolean boolean24 = undertowEmbeddedServletContainerFactory0.directBuffers;
        java.lang.Integer int25 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.springframework.boot.context.embedded.Ssl ssl26 = undertowEmbeddedServletContainerFactory0.getSsl();
        java.lang.ClassLoader classLoader27 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection17);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(ssl26);
        org.junit.Assert.assertNotNull(classLoader27);
    }

    @Test
    public void test13137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13137");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory0.directBuffers;
        java.net.InetAddress inetAddress7 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress7);
        int int9 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        int int11 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.String str12 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8080 + "'", int11 == 8080);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test13138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13138");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray16);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getPort();
        java.lang.Integer int20 = undertowEmbeddedServletContainerFactory18.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = undertowEmbeddedServletContainerFactory23.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader25 = undertowEmbeddedServletContainerFactory23.resourceLoader;
        java.lang.String str26 = undertowEmbeddedServletContainerFactory23.accessLogPattern;
        java.io.File file27 = null;
        undertowEmbeddedServletContainerFactory23.setDocumentRoot(file27);
        java.io.File file29 = null;
        undertowEmbeddedServletContainerFactory23.setAccessLogDirectory(file29);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int32 = undertowEmbeddedServletContainerFactory31.getSessionTimeout();
        boolean boolean33 = undertowEmbeddedServletContainerFactory31.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList34 = undertowEmbeddedServletContainerFactory31.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet35 = undertowEmbeddedServletContainerFactory31.getJspServlet();
        boolean boolean36 = undertowEmbeddedServletContainerFactory31.useForwardHeaders;
        java.net.InetAddress inetAddress37 = undertowEmbeddedServletContainerFactory31.getAddress();
        undertowEmbeddedServletContainerFactory31.setAccessLogPattern("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = undertowEmbeddedServletContainerFactory42.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader44 = undertowEmbeddedServletContainerFactory42.resourceLoader;
        undertowEmbeddedServletContainerFactory42.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int48 = undertowEmbeddedServletContainerFactory47.getSessionTimeout();
        boolean boolean49 = undertowEmbeddedServletContainerFactory47.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList50 = undertowEmbeddedServletContainerFactory47.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet51 = undertowEmbeddedServletContainerFactory47.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int53 = undertowEmbeddedServletContainerFactory52.getSessionTimeout();
        boolean boolean54 = undertowEmbeddedServletContainerFactory52.isPersistSession();
        undertowEmbeddedServletContainerFactory52.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder58 = undertowEmbeddedServletContainerFactory52.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager59 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer61 = undertowEmbeddedServletContainerFactory47.getUndertowEmbeddedServletContainer(builder58, deploymentManager59, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager62 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer64 = undertowEmbeddedServletContainerFactory42.getUndertowEmbeddedServletContainer(builder58, deploymentManager62, (int) ' ');
        boolean boolean65 = undertowEmbeddedServletContainerFactory42.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory42.setPort((-1));
        java.lang.Integer int68 = undertowEmbeddedServletContainerFactory42.bufferSize;
        io.undertow.Undertow.Builder builder70 = undertowEmbeddedServletContainerFactory42.createBuilder(0);
        io.undertow.servlet.api.DeploymentManager deploymentManager71 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer73 = undertowEmbeddedServletContainerFactory31.getUndertowEmbeddedServletContainer(builder70, deploymentManager71, (int) '4');
        java.lang.Boolean boolean74 = undertowEmbeddedServletContainerFactory31.directBuffers;
        io.undertow.Undertow.Builder builder76 = undertowEmbeddedServletContainerFactory31.createBuilder((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int78 = undertowEmbeddedServletContainerFactory77.getSessionTimeout();
        boolean boolean79 = undertowEmbeddedServletContainerFactory77.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList80 = undertowEmbeddedServletContainerFactory77.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet81 = undertowEmbeddedServletContainerFactory77.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList82 = undertowEmbeddedServletContainerFactory77.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory83 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int84 = undertowEmbeddedServletContainerFactory83.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray85 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory83.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray85);
        undertowEmbeddedServletContainerFactory77.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray85);
        undertowEmbeddedServletContainerFactory31.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray85);
        undertowEmbeddedServletContainerFactory23.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray85);
        undertowEmbeddedServletContainerFactory18.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray85);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray85);
        org.springframework.boot.context.embedded.ErrorPage errorPage92 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage93 = undertowEmbeddedServletContainerFactory0.getUndertowErrorPage(errorPage92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8080 + "'", int19 == 8080);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNull(resourceLoader25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1800 + "'", int32 == 1800);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList34);
        org.junit.Assert.assertNotNull(jspServlet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(inetAddress37);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNull(resourceLoader44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1800 + "'", int48 == 1800);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList50);
        org.junit.Assert.assertNotNull(jspServlet51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1800 + "'", int53 == 1800);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer61);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer73);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1800 + "'", int78 == 1800);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList80);
        org.junit.Assert.assertNotNull(jspServlet81);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 8080 + "'", int84 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray85);
    }

    @Test
    public void test13139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13139");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory10.accessLogEnabled = false;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList14, undertowBuilderCustomizerArray13);
        undertowEmbeddedServletContainerFactory10.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList14);
        undertowEmbeddedServletContainerFactory10.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray20 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList21 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList21, undertowBuilderCustomizerArray20);
        undertowEmbeddedServletContainerFactory19.builderCustomizers = undertowBuilderCustomizerList21;
        undertowEmbeddedServletContainerFactory19.workerThreads = 1;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection26 = undertowEmbeddedServletContainerFactory19.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory19.bufferSize = 10;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = undertowEmbeddedServletContainerFactory31.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader33 = undertowEmbeddedServletContainerFactory31.resourceLoader;
        undertowEmbeddedServletContainerFactory31.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int37 = undertowEmbeddedServletContainerFactory36.getSessionTimeout();
        boolean boolean38 = undertowEmbeddedServletContainerFactory36.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList39 = undertowEmbeddedServletContainerFactory36.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet40 = undertowEmbeddedServletContainerFactory36.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int42 = undertowEmbeddedServletContainerFactory41.getSessionTimeout();
        boolean boolean43 = undertowEmbeddedServletContainerFactory41.isPersistSession();
        undertowEmbeddedServletContainerFactory41.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder47 = undertowEmbeddedServletContainerFactory41.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager48 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer50 = undertowEmbeddedServletContainerFactory36.getUndertowEmbeddedServletContainer(builder47, deploymentManager48, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager51 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer53 = undertowEmbeddedServletContainerFactory31.getUndertowEmbeddedServletContainer(builder47, deploymentManager51, (int) ' ');
        boolean boolean54 = undertowEmbeddedServletContainerFactory31.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory31.setPort((-1));
        java.lang.Integer int57 = undertowEmbeddedServletContainerFactory31.bufferSize;
        io.undertow.Undertow.Builder builder59 = undertowEmbeddedServletContainerFactory31.createBuilder(0);
        io.undertow.servlet.api.DeploymentManager deploymentManager60 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer62 = undertowEmbeddedServletContainerFactory19.getUndertowEmbeddedServletContainer(builder59, deploymentManager60, (int) (byte) 1);
        io.undertow.servlet.api.DeploymentManager deploymentManager63 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer65 = undertowEmbeddedServletContainerFactory10.getUndertowEmbeddedServletContainer(builder59, deploymentManager63, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager66 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer68 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder59, deploymentManager66, (int) (byte) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings69 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection26);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNull(resourceLoader33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1800 + "'", int37 == 1800);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList39);
        org.junit.Assert.assertNotNull(jspServlet40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1800 + "'", int42 == 1800);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer50);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer62);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer65);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer68);
        org.junit.Assert.assertNotNull(mimeMappings69);
    }

    @Test
    public void test13140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13140");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.net.InetAddress inetAddress6 = undertowEmbeddedServletContainerFactory0.getAddress();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        undertowEmbeddedServletContainerFactory11.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory11.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory11.setDisplayName("hi!");
        boolean boolean20 = undertowEmbeddedServletContainerFactory11.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getSessionTimeout();
        boolean boolean23 = undertowEmbeddedServletContainerFactory21.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList24 = undertowEmbeddedServletContainerFactory21.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet25 = undertowEmbeddedServletContainerFactory21.getJspServlet();
        undertowEmbeddedServletContainerFactory21.directBuffers = true;
        java.io.File file28 = null;
        undertowEmbeddedServletContainerFactory21.setDocumentRoot(file28);
        undertowEmbeddedServletContainerFactory21.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray32 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory21.addBuilderCustomizers(undertowBuilderCustomizerArray32);
        undertowEmbeddedServletContainerFactory11.addBuilderCustomizers(undertowBuilderCustomizerArray32);
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray32);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList36 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int40 = undertowEmbeddedServletContainerFactory39.getSessionTimeout();
        boolean boolean41 = undertowEmbeddedServletContainerFactory39.isPersistSession();
        java.io.File file42 = undertowEmbeddedServletContainerFactory39.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList43 = undertowEmbeddedServletContainerFactory39.deploymentInfoCustomizers;
        int int44 = undertowEmbeddedServletContainerFactory39.getPort();
        undertowEmbeddedServletContainerFactory39.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int48 = undertowEmbeddedServletContainerFactory47.getSessionTimeout();
        boolean boolean49 = undertowEmbeddedServletContainerFactory47.isPersistSession();
        undertowEmbeddedServletContainerFactory47.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory47.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int55 = undertowEmbeddedServletContainerFactory54.getSessionTimeout();
        boolean boolean56 = undertowEmbeddedServletContainerFactory54.isPersistSession();
        undertowEmbeddedServletContainerFactory54.setPersistSession(false);
        undertowEmbeddedServletContainerFactory54.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList61 = undertowEmbeddedServletContainerFactory54.deploymentInfoCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList62 = undertowEmbeddedServletContainerFactory54.builderCustomizers;
        undertowEmbeddedServletContainerFactory47.builderCustomizers = undertowBuilderCustomizerList62;
        undertowEmbeddedServletContainerFactory47.workerThreads = 10;
        boolean boolean66 = undertowEmbeddedServletContainerFactory47.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int68 = undertowEmbeddedServletContainerFactory67.getPort();
        java.lang.Integer int69 = undertowEmbeddedServletContainerFactory67.bufferSize;
        java.io.File file70 = null;
        undertowEmbeddedServletContainerFactory67.setSessionStoreDir(file70);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int73 = undertowEmbeddedServletContainerFactory72.getSessionTimeout();
        boolean boolean74 = undertowEmbeddedServletContainerFactory72.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList75 = undertowEmbeddedServletContainerFactory72.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet76 = undertowEmbeddedServletContainerFactory72.getJspServlet();
        boolean boolean77 = undertowEmbeddedServletContainerFactory72.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet78 = undertowEmbeddedServletContainerFactory72.getErrorPages();
        undertowEmbeddedServletContainerFactory67.setErrorPages(errorPageSet78);
        undertowEmbeddedServletContainerFactory47.setErrorPages(errorPageSet78);
        undertowEmbeddedServletContainerFactory39.setErrorPages(errorPageSet78);
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet78);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet83 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        java.lang.Integer int84 = undertowEmbeddedServletContainerFactory0.bufferSize;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 97);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1800 + "'", int22 == 1800);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList24);
        org.junit.Assert.assertNotNull(jspServlet25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray32);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1800 + "'", int40 == 1800);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 8080 + "'", int44 == 8080);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1800 + "'", int48 == 1800);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1800 + "'", int55 == 1800);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList61);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 8080 + "'", int68 == 8080);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1800 + "'", int73 == 1800);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList75);
        org.junit.Assert.assertNotNull(jspServlet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(errorPageSet78);
        org.junit.Assert.assertNotNull(errorPageSet83);
        org.junit.Assert.assertNull(int84);
    }

    @Test
    public void test13141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13141");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        boolean boolean7 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory14.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int18 = undertowEmbeddedServletContainerFactory17.getSessionTimeout();
        boolean boolean19 = undertowEmbeddedServletContainerFactory17.isPersistSession();
        undertowEmbeddedServletContainerFactory17.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory17.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray24 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory17.addErrorPages(errorPageArray24);
        undertowEmbeddedServletContainerFactory14.addErrorPages(errorPageArray24);
        java.io.File file27 = null;
        undertowEmbeddedServletContainerFactory14.setDocumentRoot(file27);
        undertowEmbeddedServletContainerFactory14.useForwardHeaders = false;
        undertowEmbeddedServletContainerFactory14.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int35 = undertowEmbeddedServletContainerFactory34.getSessionTimeout();
        boolean boolean36 = undertowEmbeddedServletContainerFactory34.isPersistSession();
        java.io.File file37 = undertowEmbeddedServletContainerFactory34.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = undertowEmbeddedServletContainerFactory34.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = undertowEmbeddedServletContainerFactory34.getMimeMappings();
        java.io.File file40 = undertowEmbeddedServletContainerFactory34.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int42 = undertowEmbeddedServletContainerFactory41.getPort();
        java.lang.Integer int43 = undertowEmbeddedServletContainerFactory41.bufferSize;
        java.io.File file44 = null;
        undertowEmbeddedServletContainerFactory41.setSessionStoreDir(file44);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer47 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap46);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray48 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer47 };
        undertowEmbeddedServletContainerFactory41.addInitializers(servletContextInitializerArray48);
        undertowEmbeddedServletContainerFactory34.addInitializers(servletContextInitializerArray48);
        initializer33.initializers = servletContextInitializerArray48;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer54 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap53);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray55 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer54 };
        initializer52.initializers = servletContextInitializerArray55;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray57 = initializer52.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int59 = undertowEmbeddedServletContainerFactory58.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer61 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap60);
        java.util.Map<java.lang.String, java.lang.String> strMap62 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer63 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap62);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer65 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap64);
        java.util.Map<java.lang.String, java.lang.String> strMap66 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer67 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap66);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray68 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer61, initParameterConfiguringServletContextInitializer63, initParameterConfiguringServletContextInitializer65, initParameterConfiguringServletContextInitializer67 };
        undertowEmbeddedServletContainerFactory58.addInitializers(servletContextInitializerArray68);
        initializer52.initializers = servletContextInitializerArray68;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray71 = initializer52.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray72 = initializer52.initializers;
        initializer33.initializers = servletContextInitializerArray72;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray74 = initializer33.initializers;
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray74);
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray74);
        boolean boolean77 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1800 + "'", int18 == 1800);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(errorPageArray24);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1800 + "'", int35 == 1800);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 8080 + "'", int42 == 8080);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(servletContextInitializerArray48);
        org.junit.Assert.assertNotNull(servletContextInitializerArray55);
        org.junit.Assert.assertNotNull(servletContextInitializerArray57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1800 + "'", int59 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray68);
        org.junit.Assert.assertNotNull(servletContextInitializerArray71);
        org.junit.Assert.assertNotNull(servletContextInitializerArray72);
        org.junit.Assert.assertNotNull(servletContextInitializerArray74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test13142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13142");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory0.getAddress();
        java.net.InetAddress inetAddress19 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress19);
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int24 = undertowEmbeddedServletContainerFactory23.getSessionTimeout();
        boolean boolean25 = undertowEmbeddedServletContainerFactory23.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList26 = undertowEmbeddedServletContainerFactory23.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet27 = undertowEmbeddedServletContainerFactory23.getJspServlet();
        undertowEmbeddedServletContainerFactory23.directBuffers = true;
        java.lang.Integer int30 = undertowEmbeddedServletContainerFactory23.bufferSize;
        java.io.File file31 = null;
        undertowEmbeddedServletContainerFactory23.setDocumentRoot(file31);
        boolean boolean33 = undertowEmbeddedServletContainerFactory23.isPersistSession();
        undertowEmbeddedServletContainerFactory23.setWorkerThreads((java.lang.Integer) 8080);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int37 = undertowEmbeddedServletContainerFactory36.getPort();
        java.lang.Integer int38 = undertowEmbeddedServletContainerFactory36.bufferSize;
        java.io.File file39 = null;
        undertowEmbeddedServletContainerFactory36.setSessionStoreDir(file39);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int42 = undertowEmbeddedServletContainerFactory41.getSessionTimeout();
        boolean boolean43 = undertowEmbeddedServletContainerFactory41.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList44 = undertowEmbeddedServletContainerFactory41.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet45 = undertowEmbeddedServletContainerFactory41.getJspServlet();
        boolean boolean46 = undertowEmbeddedServletContainerFactory41.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet47 = undertowEmbeddedServletContainerFactory41.getErrorPages();
        undertowEmbeddedServletContainerFactory36.setErrorPages(errorPageSet47);
        undertowEmbeddedServletContainerFactory36.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList51 = undertowEmbeddedServletContainerFactory36.builderCustomizers;
        undertowEmbeddedServletContainerFactory23.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList51);
        undertowEmbeddedServletContainerFactory23.buffersPerRegion = 100;
        io.undertow.Undertow.Builder builder56 = undertowEmbeddedServletContainerFactory23.createBuilder((int) '#');
        io.undertow.servlet.api.DeploymentManager deploymentManager57 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer59 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder56, deploymentManager57, 100);
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(8080);
        java.io.File file62 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file62);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1800 + "'", int24 == 1800);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList26);
        org.junit.Assert.assertNotNull(jspServlet27);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8080 + "'", int37 == 8080);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1800 + "'", int42 == 1800);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList44);
        org.junit.Assert.assertNotNull(jspServlet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(errorPageSet47);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList51);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer59);
    }

    @Test
    public void test13143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13143");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.io.File file4 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.accessLogEnabled;
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.accessLogPattern;
        java.lang.String str9 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        int int10 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = undertowEmbeddedServletContainerFactory11.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet15 = undertowEmbeddedServletContainerFactory11.getJspServlet();
        boolean boolean16 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory11.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        boolean boolean21 = undertowEmbeddedServletContainerFactory20.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int23 = undertowEmbeddedServletContainerFactory22.getSessionTimeout();
        boolean boolean24 = undertowEmbeddedServletContainerFactory22.isPersistSession();
        undertowEmbeddedServletContainerFactory22.setPersistSession(false);
        undertowEmbeddedServletContainerFactory22.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList29 = undertowEmbeddedServletContainerFactory22.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory20.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList29;
        undertowEmbeddedServletContainerFactory11.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList29;
        boolean boolean32 = undertowEmbeddedServletContainerFactory11.isRegisterDefaultServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection33 = undertowEmbeddedServletContainerFactory11.getDeploymentInfoCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList34 = undertowEmbeddedServletContainerFactory11.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList34;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList36 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        java.io.File file37 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList14);
        org.junit.Assert.assertNotNull(jspServlet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1800 + "'", int23 == 1800);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection33);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList34);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList36);
        org.junit.Assert.assertNull(file37);
    }

    @Test
    public void test13144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13144");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        java.lang.String str10 = undertowEmbeddedServletContainerFactory0.getContextPath();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int14 = undertowEmbeddedServletContainerFactory13.getSessionTimeout();
        boolean boolean15 = undertowEmbeddedServletContainerFactory13.isPersistSession();
        java.io.File file16 = undertowEmbeddedServletContainerFactory13.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList17 = undertowEmbeddedServletContainerFactory13.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.Compression compression18 = null;
        undertowEmbeddedServletContainerFactory13.setCompression(compression18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory21.ioThreads = 1;
        undertowEmbeddedServletContainerFactory21.setPort(0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer26 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray27 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer26 };
        undertowEmbeddedServletContainerFactory21.addBuilderCustomizers(undertowBuilderCustomizerArray27);
        undertowEmbeddedServletContainerFactory13.addBuilderCustomizers(undertowBuilderCustomizerArray27);
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray27);
        int int31 = undertowEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int33 = undertowEmbeddedServletContainerFactory32.getSessionTimeout();
        boolean boolean34 = undertowEmbeddedServletContainerFactory32.isPersistSession();
        java.io.File file35 = undertowEmbeddedServletContainerFactory32.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = undertowEmbeddedServletContainerFactory32.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = undertowEmbeddedServletContainerFactory32.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int39 = undertowEmbeddedServletContainerFactory38.getSessionTimeout();
        boolean boolean40 = undertowEmbeddedServletContainerFactory38.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList41 = undertowEmbeddedServletContainerFactory38.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet42 = undertowEmbeddedServletContainerFactory38.getJspServlet();
        undertowEmbeddedServletContainerFactory32.setJspServlet(jspServlet42);
        java.net.InetAddress inetAddress44 = undertowEmbeddedServletContainerFactory32.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader45 = undertowEmbeddedServletContainerFactory32.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int48 = undertowEmbeddedServletContainerFactory47.getSessionTimeout();
        boolean boolean49 = undertowEmbeddedServletContainerFactory47.isPersistSession();
        java.io.File file50 = undertowEmbeddedServletContainerFactory47.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings51 = undertowEmbeddedServletContainerFactory47.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings52 = undertowEmbeddedServletContainerFactory47.getMimeMappings();
        java.io.File file53 = undertowEmbeddedServletContainerFactory47.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int55 = undertowEmbeddedServletContainerFactory54.getPort();
        java.lang.Integer int56 = undertowEmbeddedServletContainerFactory54.bufferSize;
        java.io.File file57 = null;
        undertowEmbeddedServletContainerFactory54.setSessionStoreDir(file57);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer60 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap59);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray61 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer60 };
        undertowEmbeddedServletContainerFactory54.addInitializers(servletContextInitializerArray61);
        undertowEmbeddedServletContainerFactory47.addInitializers(servletContextInitializerArray61);
        initializer46.initializers = servletContextInitializerArray61;
        undertowEmbeddedServletContainerFactory32.addInitializers(servletContextInitializerArray61);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer66 = undertowEmbeddedServletContainerFactory0.getEmbeddedServletContainer(servletContextInitializerArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: java.lang.NullPointerException");
        } catch (java.lang.RuntimeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1800 + "'", int14 == 1800);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 8080 + "'", int31 == 8080);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1800 + "'", int33 == 1800);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1800 + "'", int39 == 1800);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList41);
        org.junit.Assert.assertNotNull(jspServlet42);
        org.junit.Assert.assertNull(inetAddress44);
        org.junit.Assert.assertNull(resourceLoader45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1800 + "'", int48 == 1800);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(mimeMappings51);
        org.junit.Assert.assertNotNull(mimeMappings52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 8080 + "'", int55 == 8080);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(servletContextInitializerArray61);
    }

    @Test
    public void test13145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13145");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        int int3 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.Compression compression4 = undertowEmbeddedServletContainerFactory0.getCompression();
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection8 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1800 + "'", int3 == 1800);
        org.junit.Assert.assertNull(compression4);
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection8);
    }

    @Test
    public void test13146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13146");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer16 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer16 };
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        org.springframework.boot.context.embedded.Compression compression19 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression19);
        java.util.concurrent.TimeUnit timeUnit22 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 1, timeUnit22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
    }

    @Test
    public void test13147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13147");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet10);
        java.net.InetAddress inetAddress12 = undertowEmbeddedServletContainerFactory0.getAddress();
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList17, undertowBuilderCustomizerArray16);
        undertowEmbeddedServletContainerFactory15.builderCustomizers = undertowBuilderCustomizerList17;
        undertowEmbeddedServletContainerFactory15.setBuffersPerRegion((java.lang.Integer) 1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList22 = undertowEmbeddedServletContainerFactory15.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList22;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int25 = undertowEmbeddedServletContainerFactory24.getSessionTimeout();
        boolean boolean26 = undertowEmbeddedServletContainerFactory24.isPersistSession();
        undertowEmbeddedServletContainerFactory24.setPersistSession(false);
        undertowEmbeddedServletContainerFactory24.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList31 = undertowEmbeddedServletContainerFactory24.deploymentInfoCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList32 = undertowEmbeddedServletContainerFactory24.builderCustomizers;
        undertowEmbeddedServletContainerFactory24.bufferSize = 8080;
        java.io.File file35 = null;
        undertowEmbeddedServletContainerFactory24.accessLogDirectory = file35;
        java.lang.String str37 = undertowEmbeddedServletContainerFactory24.getDisplayName();
        undertowEmbeddedServletContainerFactory24.setPersistSession(false);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList40 = undertowEmbeddedServletContainerFactory24.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory24.accessLogPattern = "hi!";
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings43);
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertNull(inetAddress12);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1800 + "'", int25 == 1800);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList31);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList32);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList40);
        org.junit.Assert.assertNotNull(mimeMappings43);
    }

    @Test
    public void test13148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13148");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        int int9 = undertowEmbeddedServletContainerFactory0.getPort();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList10 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.Compression compression11 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression11);
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 1);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo15 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.configureAccessLog(deploymentInfo15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8080 + "'", int9 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList10);
    }

    @Test
    public void test13149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13149");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList14, undertowBuilderCustomizerArray13);
        undertowEmbeddedServletContainerFactory12.builderCustomizers = undertowBuilderCustomizerList14;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection17 = undertowEmbeddedServletContainerFactory12.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection17);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.Compression compression22 = undertowEmbeddedServletContainerFactory0.getCompression();
        boolean boolean23 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.lang.Boolean boolean24 = undertowEmbeddedServletContainerFactory0.directBuffers;
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 0);
        java.lang.Integer int27 = undertowEmbeddedServletContainerFactory0.workerThreads;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection17);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNull(compression22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNull(int27);
    }

    @Test
    public void test13150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13150");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory0.getAddress();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNull(inetAddress18);
    }

    @Test
    public void test13151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13151");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory2.setPort((-1));
        java.lang.Integer int28 = undertowEmbeddedServletContainerFactory2.bufferSize;
        io.undertow.Undertow.Builder builder30 = undertowEmbeddedServletContainerFactory2.createBuilder(0);
        java.io.File file31 = undertowEmbeddedServletContainerFactory2.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(false);
        java.net.InetAddress inetAddress34 = undertowEmbeddedServletContainerFactory2.getAddress();
        java.io.File file35 = undertowEmbeddedServletContainerFactory2.getDocumentRoot();
        undertowEmbeddedServletContainerFactory2.setAccessLogPattern("");
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList38 = undertowEmbeddedServletContainerFactory2.deploymentInfoCustomizers;
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(inetAddress34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList38);
    }

    @Test
    public void test13152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13152");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file5);
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(true);
        java.io.File file11 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test13153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13153");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        undertowEmbeddedServletContainerFactory2.resourceLoader = resourceLoader4;
        undertowEmbeddedServletContainerFactory2.directBuffers = true;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo8 = null;
        undertowEmbeddedServletContainerFactory2.configureErrorPages(deploymentInfo8);
        int int10 = undertowEmbeddedServletContainerFactory2.getPort();
        boolean boolean11 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        java.io.File file12 = null;
        undertowEmbeddedServletContainerFactory2.setSessionStoreDir(file12);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getPort();
        java.lang.Integer int16 = undertowEmbeddedServletContainerFactory14.bufferSize;
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory14.setSessionStoreDir(file17);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int20 = undertowEmbeddedServletContainerFactory19.getSessionTimeout();
        boolean boolean21 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList22 = undertowEmbeddedServletContainerFactory19.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet23 = undertowEmbeddedServletContainerFactory19.getJspServlet();
        boolean boolean24 = undertowEmbeddedServletContainerFactory19.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet25 = undertowEmbeddedServletContainerFactory19.getErrorPages();
        undertowEmbeddedServletContainerFactory14.setErrorPages(errorPageSet25);
        undertowEmbeddedServletContainerFactory14.setBufferSize((java.lang.Integer) 10);
        java.io.File file29 = null;
        undertowEmbeddedServletContainerFactory14.setAccessLogDirectory(file29);
        undertowEmbeddedServletContainerFactory14.ioThreads = 100;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int34 = undertowEmbeddedServletContainerFactory33.getSessionTimeout();
        boolean boolean35 = undertowEmbeddedServletContainerFactory33.isPersistSession();
        undertowEmbeddedServletContainerFactory33.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory33.setUseForwardHeaders(false);
        boolean boolean40 = undertowEmbeddedServletContainerFactory33.useForwardHeaders;
        undertowEmbeddedServletContainerFactory33.setRegisterJspServlet(false);
        boolean boolean43 = undertowEmbeddedServletContainerFactory33.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int45 = undertowEmbeddedServletContainerFactory44.getPort();
        java.lang.Integer int46 = undertowEmbeddedServletContainerFactory44.bufferSize;
        boolean boolean47 = undertowEmbeddedServletContainerFactory44.accessLogEnabled;
        java.lang.String str48 = undertowEmbeddedServletContainerFactory44.accessLogPattern;
        undertowEmbeddedServletContainerFactory44.setWorkerThreads((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int52 = undertowEmbeddedServletContainerFactory51.getPort();
        java.lang.Integer int53 = undertowEmbeddedServletContainerFactory51.bufferSize;
        java.io.File file54 = null;
        undertowEmbeddedServletContainerFactory51.setSessionStoreDir(file54);
        java.io.File file56 = null;
        undertowEmbeddedServletContainerFactory51.accessLogDirectory = file56;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings58 = undertowEmbeddedServletContainerFactory51.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int60 = undertowEmbeddedServletContainerFactory59.getSessionTimeout();
        boolean boolean61 = undertowEmbeddedServletContainerFactory59.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList62 = undertowEmbeddedServletContainerFactory59.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet63 = undertowEmbeddedServletContainerFactory59.getJspServlet();
        undertowEmbeddedServletContainerFactory51.setJspServlet(jspServlet63);
        undertowEmbeddedServletContainerFactory44.setJspServlet(jspServlet63);
        undertowEmbeddedServletContainerFactory33.setJspServlet(jspServlet63);
        undertowEmbeddedServletContainerFactory14.setJspServlet(jspServlet63);
        undertowEmbeddedServletContainerFactory2.setJspServlet(jspServlet63);
        java.io.File file69 = null;
        undertowEmbeddedServletContainerFactory2.setAccessLogDirectory(file69);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo71 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory2.configureMimeMappings(deploymentInfo71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8080 + "'", int15 == 8080);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList22);
        org.junit.Assert.assertNotNull(jspServlet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(errorPageSet25);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1800 + "'", int34 == 1800);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 8080 + "'", int45 == 8080);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 8080 + "'", int52 == 8080);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(mimeMappings58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1800 + "'", int60 == 1800);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList62);
        org.junit.Assert.assertNotNull(jspServlet63);
    }

    @Test
    public void test13154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13154");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory0.directBuffers;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo7 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.configureMimeMappings(deploymentInfo7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(boolean6);
    }

    @Test
    public void test13155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13155");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(10);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        int int5 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.accessLogEnabled;
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1800 + "'", int5 == 1800);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test13156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13156");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        java.lang.String str4 = jarResourceManager0.jarPath;
        jarResourceManager0.close();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "0.0.0.0";
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    }

    @Test
    public void test13157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13157");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        java.io.File file7 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.Ssl ssl8 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl8);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 1;
        org.springframework.boot.context.embedded.ErrorPage errorPage12 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray13 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage12 };
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray13);
        org.springframework.core.io.ResourceLoader resourceLoader15 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getSessionTimeout();
        boolean boolean20 = undertowEmbeddedServletContainerFactory18.isPersistSession();
        undertowEmbeddedServletContainerFactory18.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory18.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory18.setDisplayName("hi!");
        boolean boolean27 = undertowEmbeddedServletContainerFactory18.isRegisterDefaultServlet();
        java.io.File file28 = undertowEmbeddedServletContainerFactory18.getDocumentRoot();
        undertowEmbeddedServletContainerFactory18.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int32 = undertowEmbeddedServletContainerFactory31.getSessionTimeout();
        boolean boolean33 = undertowEmbeddedServletContainerFactory31.isPersistSession();
        undertowEmbeddedServletContainerFactory31.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory31.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory31.setDisplayName("hi!");
        boolean boolean40 = undertowEmbeddedServletContainerFactory31.isRegisterDefaultServlet();
        boolean boolean41 = undertowEmbeddedServletContainerFactory31.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int43 = undertowEmbeddedServletContainerFactory42.getSessionTimeout();
        boolean boolean44 = undertowEmbeddedServletContainerFactory42.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList45 = undertowEmbeddedServletContainerFactory42.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet46 = undertowEmbeddedServletContainerFactory42.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int48 = undertowEmbeddedServletContainerFactory47.getSessionTimeout();
        boolean boolean49 = undertowEmbeddedServletContainerFactory47.isPersistSession();
        undertowEmbeddedServletContainerFactory47.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder53 = undertowEmbeddedServletContainerFactory47.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager54 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer56 = undertowEmbeddedServletContainerFactory42.getUndertowEmbeddedServletContainer(builder53, deploymentManager54, (int) (short) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int58 = undertowEmbeddedServletContainerFactory57.getSessionTimeout();
        boolean boolean59 = undertowEmbeddedServletContainerFactory57.isPersistSession();
        undertowEmbeddedServletContainerFactory57.setPersistSession(false);
        undertowEmbeddedServletContainerFactory57.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList64 = undertowEmbeddedServletContainerFactory57.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory57.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int68 = undertowEmbeddedServletContainerFactory67.getSessionTimeout();
        boolean boolean69 = undertowEmbeddedServletContainerFactory67.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList70 = undertowEmbeddedServletContainerFactory67.builderCustomizers;
        undertowEmbeddedServletContainerFactory57.builderCustomizers = undertowBuilderCustomizerList70;
        undertowEmbeddedServletContainerFactory42.builderCustomizers = undertowBuilderCustomizerList70;
        undertowEmbeddedServletContainerFactory31.builderCustomizers = undertowBuilderCustomizerList70;
        undertowEmbeddedServletContainerFactory18.builderCustomizers = undertowBuilderCustomizerList70;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList70;
        java.io.File file76 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file76);
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(errorPageArray13);
        org.junit.Assert.assertNull(resourceLoader15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1800 + "'", int32 == 1800);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1800 + "'", int43 == 1800);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList45);
        org.junit.Assert.assertNotNull(jspServlet46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1800 + "'", int48 == 1800);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1800 + "'", int58 == 1800);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1800 + "'", int68 == 1800);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList70);
    }

    @Test
    public void test13158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13158");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory9.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getPort();
        java.lang.Integer int13 = undertowEmbeddedServletContainerFactory11.bufferSize;
        java.io.File file14 = null;
        undertowEmbeddedServletContainerFactory11.setSessionStoreDir(file14);
        java.io.File file16 = null;
        undertowEmbeddedServletContainerFactory11.accessLogDirectory = file16;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory11.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int20 = undertowEmbeddedServletContainerFactory19.getSessionTimeout();
        boolean boolean21 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList22 = undertowEmbeddedServletContainerFactory19.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet23 = undertowEmbeddedServletContainerFactory19.getJspServlet();
        undertowEmbeddedServletContainerFactory11.setJspServlet(jspServlet23);
        undertowEmbeddedServletContainerFactory9.setJspServlet(jspServlet23);
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet23);
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("");
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 52;
        java.lang.Integer int33 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8080 + "'", int12 == 8080);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList22);
        org.junit.Assert.assertNotNull(jspServlet23);
        org.junit.Assert.assertNull(int33);
    }

    @Test
    public void test13159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13159");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory0.getAddress();
        int int19 = undertowEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.Compression compression20 = undertowEmbeddedServletContainerFactory0.getCompression();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList21 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setPort((int) (byte) -1);
        org.springframework.core.io.ResourceLoader resourceLoader24 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8080 + "'", int19 == 8080);
        org.junit.Assert.assertNull(compression20);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList21);
        org.junit.Assert.assertNull(resourceLoader24);
    }

    @Test
    public void test13160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13160");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader5;
        boolean boolean7 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test13161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13161");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        boolean boolean3 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.lang.Boolean boolean4 = undertowEmbeddedServletContainerFactory0.directBuffers;
        undertowEmbeddedServletContainerFactory0.setDisplayName("");
        java.io.File file7 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = true;
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader10;
        java.lang.String str12 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
    }

    @Test
    public void test13162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13162");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory10.accessLogEnabled = false;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList14, undertowBuilderCustomizerArray13);
        undertowEmbeddedServletContainerFactory10.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList14);
        undertowEmbeddedServletContainerFactory10.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray20 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList21 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList21, undertowBuilderCustomizerArray20);
        undertowEmbeddedServletContainerFactory19.builderCustomizers = undertowBuilderCustomizerList21;
        undertowEmbeddedServletContainerFactory19.workerThreads = 1;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection26 = undertowEmbeddedServletContainerFactory19.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory19.bufferSize = 10;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = undertowEmbeddedServletContainerFactory31.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader33 = undertowEmbeddedServletContainerFactory31.resourceLoader;
        undertowEmbeddedServletContainerFactory31.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int37 = undertowEmbeddedServletContainerFactory36.getSessionTimeout();
        boolean boolean38 = undertowEmbeddedServletContainerFactory36.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList39 = undertowEmbeddedServletContainerFactory36.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet40 = undertowEmbeddedServletContainerFactory36.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int42 = undertowEmbeddedServletContainerFactory41.getSessionTimeout();
        boolean boolean43 = undertowEmbeddedServletContainerFactory41.isPersistSession();
        undertowEmbeddedServletContainerFactory41.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder47 = undertowEmbeddedServletContainerFactory41.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager48 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer50 = undertowEmbeddedServletContainerFactory36.getUndertowEmbeddedServletContainer(builder47, deploymentManager48, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager51 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer53 = undertowEmbeddedServletContainerFactory31.getUndertowEmbeddedServletContainer(builder47, deploymentManager51, (int) ' ');
        boolean boolean54 = undertowEmbeddedServletContainerFactory31.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory31.setPort((-1));
        java.lang.Integer int57 = undertowEmbeddedServletContainerFactory31.bufferSize;
        io.undertow.Undertow.Builder builder59 = undertowEmbeddedServletContainerFactory31.createBuilder(0);
        io.undertow.servlet.api.DeploymentManager deploymentManager60 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer62 = undertowEmbeddedServletContainerFactory19.getUndertowEmbeddedServletContainer(builder59, deploymentManager60, (int) (byte) 1);
        io.undertow.servlet.api.DeploymentManager deploymentManager63 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer65 = undertowEmbeddedServletContainerFactory10.getUndertowEmbeddedServletContainer(builder59, deploymentManager63, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager66 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer68 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder59, deploymentManager66, (int) (byte) 0);
        int int69 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.setDisplayName("0.0.0.0");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection26);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNull(resourceLoader33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1800 + "'", int37 == 1800);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList39);
        org.junit.Assert.assertNotNull(jspServlet40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1800 + "'", int42 == 1800);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer50);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer62);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer65);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1800 + "'", int69 == 1800);
    }

    @Test
    public void test13163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13163");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection5 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        java.io.File file6 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.xnio.XnioWorker xnioWorker7 = undertowEmbeddedServletContainerFactory0.createWorker();
        org.springframework.core.io.ResourceLoader resourceLoader8 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection9 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.Compression compression10 = undertowEmbeddedServletContainerFactory0.getCompression();
        io.undertow.server.handlers.resource.ResourceManager resourceManager11 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        java.lang.ClassLoader classLoader12 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        io.undertow.Undertow.Builder builder15 = undertowEmbeddedServletContainerFactory0.createBuilder(52);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo16 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer19 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap18);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray20 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer19 };
        initializer17.initializers = servletContextInitializerArray20;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray22 = initializer17.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int24 = undertowEmbeddedServletContainerFactory23.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer26 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap25);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer28 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap27);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer30 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap29);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer32 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap31);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray33 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer26, initParameterConfiguringServletContextInitializer28, initParameterConfiguringServletContextInitializer30, initParameterConfiguringServletContextInitializer32 };
        undertowEmbeddedServletContainerFactory23.addInitializers(servletContextInitializerArray33);
        initializer17.initializers = servletContextInitializerArray33;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray36 = initializer17.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer39 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap38);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray40 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer39 };
        initializer37.initializers = servletContextInitializerArray40;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray42 = initializer37.initializers;
        initializer17.initializers = servletContextInitializerArray42;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray44 = initializer17.initializers;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.registerServletContainerInitializerToDriveServletContextInitializers(deploymentInfo16, servletContextInitializerArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(xnioWorker7);
        org.junit.Assert.assertNull(resourceLoader8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection9);
        org.junit.Assert.assertNull(compression10);
        org.junit.Assert.assertNotNull(resourceManager11);
        org.junit.Assert.assertNotNull(classLoader12);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(servletContextInitializerArray20);
        org.junit.Assert.assertNotNull(servletContextInitializerArray22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1800 + "'", int24 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray33);
        org.junit.Assert.assertNotNull(servletContextInitializerArray36);
        org.junit.Assert.assertNotNull(servletContextInitializerArray40);
        org.junit.Assert.assertNotNull(servletContextInitializerArray42);
        org.junit.Assert.assertNotNull(servletContextInitializerArray44);
    }

    @Test
    public void test13164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13164");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file8);
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory0.ioThreads;
        boolean boolean11 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        int int12 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        java.io.File file13 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file13;
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("hi!");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
    }

    @Test
    public void test13165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13165");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.io.File file6 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList7 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        java.io.File file11 = undertowEmbeddedServletContainerFactory8.accessLogDirectory;
        undertowEmbeddedServletContainerFactory8.setRegisterDefaultServlet(true);
        java.lang.Boolean boolean14 = undertowEmbeddedServletContainerFactory8.directBuffers;
        org.springframework.boot.context.embedded.Compression compression15 = undertowEmbeddedServletContainerFactory8.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        undertowEmbeddedServletContainerFactory16.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder22 = undertowEmbeddedServletContainerFactory16.createBuilder((-1));
        undertowEmbeddedServletContainerFactory16.setBufferSize((java.lang.Integer) 10);
        java.net.InetAddress inetAddress25 = null;
        undertowEmbeddedServletContainerFactory16.setAddress(inetAddress25);
        undertowEmbeddedServletContainerFactory16.accessLogPattern = "hi!";
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection29 = undertowEmbeddedServletContainerFactory16.getBuilderCustomizers();
        boolean boolean30 = undertowEmbeddedServletContainerFactory16.accessLogEnabled;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int32 = undertowEmbeddedServletContainerFactory31.getSessionTimeout();
        boolean boolean33 = undertowEmbeddedServletContainerFactory31.isPersistSession();
        undertowEmbeddedServletContainerFactory31.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory31.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory31.setDisplayName("hi!");
        boolean boolean40 = undertowEmbeddedServletContainerFactory31.isRegisterDefaultServlet();
        java.io.File file41 = null;
        undertowEmbeddedServletContainerFactory31.accessLogDirectory = file41;
        org.springframework.boot.context.embedded.JspServlet jspServlet43 = undertowEmbeddedServletContainerFactory31.getJspServlet();
        undertowEmbeddedServletContainerFactory16.setJspServlet(jspServlet43);
        undertowEmbeddedServletContainerFactory8.setJspServlet(jspServlet43);
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet43);
        java.lang.Integer int47 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(compression15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1800 + "'", int32 == 1800);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(jspServlet43);
        org.junit.Assert.assertNull(int47);
    }

    @Test
    public void test13166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13166");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList14, undertowBuilderCustomizerArray13);
        undertowEmbeddedServletContainerFactory12.builderCustomizers = undertowBuilderCustomizerList14;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection17 = undertowEmbeddedServletContainerFactory12.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection17);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.io.File file20 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file20;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer25 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap24);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer25 };
        initializer23.initializers = servletContextInitializerArray26;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer30 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap29);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray31 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer30 };
        initializer28.initializers = servletContextInitializerArray31;
        initializer23.initializers = servletContextInitializerArray31;
        initializer22.initializers = servletContextInitializerArray31;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int37 = undertowEmbeddedServletContainerFactory36.getSessionTimeout();
        boolean boolean38 = undertowEmbeddedServletContainerFactory36.isPersistSession();
        java.io.File file39 = undertowEmbeddedServletContainerFactory36.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = undertowEmbeddedServletContainerFactory36.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings41 = undertowEmbeddedServletContainerFactory36.getMimeMappings();
        java.io.File file42 = undertowEmbeddedServletContainerFactory36.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int44 = undertowEmbeddedServletContainerFactory43.getPort();
        java.lang.Integer int45 = undertowEmbeddedServletContainerFactory43.bufferSize;
        java.io.File file46 = null;
        undertowEmbeddedServletContainerFactory43.setSessionStoreDir(file46);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer49 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap48);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray50 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer49 };
        undertowEmbeddedServletContainerFactory43.addInitializers(servletContextInitializerArray50);
        undertowEmbeddedServletContainerFactory36.addInitializers(servletContextInitializerArray50);
        initializer35.initializers = servletContextInitializerArray50;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer56 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap55);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray57 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer56 };
        initializer54.initializers = servletContextInitializerArray57;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray59 = initializer54.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int61 = undertowEmbeddedServletContainerFactory60.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap62 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer63 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap62);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer65 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap64);
        java.util.Map<java.lang.String, java.lang.String> strMap66 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer67 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap66);
        java.util.Map<java.lang.String, java.lang.String> strMap68 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer69 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap68);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray70 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer63, initParameterConfiguringServletContextInitializer65, initParameterConfiguringServletContextInitializer67, initParameterConfiguringServletContextInitializer69 };
        undertowEmbeddedServletContainerFactory60.addInitializers(servletContextInitializerArray70);
        initializer54.initializers = servletContextInitializerArray70;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray73 = initializer54.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray74 = initializer54.initializers;
        initializer35.initializers = servletContextInitializerArray74;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray76 = initializer35.initializers;
        initializer22.initializers = servletContextInitializerArray76;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer78 = undertowEmbeddedServletContainerFactory0.getEmbeddedServletContainer(servletContextInitializerArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: java.lang.NullPointerException");
        } catch (java.lang.RuntimeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection17);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(servletContextInitializerArray26);
        org.junit.Assert.assertNotNull(servletContextInitializerArray31);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1800 + "'", int37 == 1800);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNotNull(mimeMappings41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 8080 + "'", int44 == 8080);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(servletContextInitializerArray50);
        org.junit.Assert.assertNotNull(servletContextInitializerArray57);
        org.junit.Assert.assertNotNull(servletContextInitializerArray59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1800 + "'", int61 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray70);
        org.junit.Assert.assertNotNull(servletContextInitializerArray73);
        org.junit.Assert.assertNotNull(servletContextInitializerArray74);
        org.junit.Assert.assertNotNull(servletContextInitializerArray76);
    }

    @Test
    public void test13167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13167");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory2.setPort((-1));
        java.lang.Integer int28 = undertowEmbeddedServletContainerFactory2.bufferSize;
        io.undertow.Undertow.Builder builder30 = undertowEmbeddedServletContainerFactory2.createBuilder(0);
        java.io.File file31 = undertowEmbeddedServletContainerFactory2.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(false);
        java.net.InetAddress inetAddress34 = undertowEmbeddedServletContainerFactory2.getAddress();
        java.io.File file35 = undertowEmbeddedServletContainerFactory2.getDocumentRoot();
        undertowEmbeddedServletContainerFactory2.setAccessLogPattern("");
        undertowEmbeddedServletContainerFactory2.accessLogEnabled = false;
        int int40 = undertowEmbeddedServletContainerFactory2.getPort();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(inetAddress34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
    }

    @Test
    public void test13168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13168");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 8080;
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer11 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap10);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer11 };
        initializer9.initializers = servletContextInitializerArray12;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer16 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap15);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray17 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer16 };
        initializer14.initializers = servletContextInitializerArray17;
        initializer9.initializers = servletContextInitializerArray17;
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray17);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getSessionTimeout();
        boolean boolean23 = undertowEmbeddedServletContainerFactory21.isPersistSession();
        undertowEmbeddedServletContainerFactory21.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory21.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray28 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory21.addErrorPages(errorPageArray28);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray28);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int32 = undertowEmbeddedServletContainerFactory31.getSessionTimeout();
        boolean boolean33 = undertowEmbeddedServletContainerFactory31.isPersistSession();
        undertowEmbeddedServletContainerFactory31.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory31.workerThreads = 0;
        undertowEmbeddedServletContainerFactory31.setPersistSession(false);
        undertowEmbeddedServletContainerFactory31.ioThreads = 1800;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int43 = undertowEmbeddedServletContainerFactory42.getSessionTimeout();
        boolean boolean44 = undertowEmbeddedServletContainerFactory42.isPersistSession();
        undertowEmbeddedServletContainerFactory42.setPersistSession(false);
        undertowEmbeddedServletContainerFactory42.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList49 = undertowEmbeddedServletContainerFactory42.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory42.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int53 = undertowEmbeddedServletContainerFactory52.getSessionTimeout();
        boolean boolean54 = undertowEmbeddedServletContainerFactory52.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList55 = undertowEmbeddedServletContainerFactory52.builderCustomizers;
        undertowEmbeddedServletContainerFactory42.builderCustomizers = undertowBuilderCustomizerList55;
        java.io.File file57 = null;
        undertowEmbeddedServletContainerFactory42.accessLogDirectory = file57;
        boolean boolean59 = undertowEmbeddedServletContainerFactory42.isRegisterDefaultServlet();
        boolean boolean60 = undertowEmbeddedServletContainerFactory42.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int62 = undertowEmbeddedServletContainerFactory61.getPort();
        java.lang.Integer int63 = undertowEmbeddedServletContainerFactory61.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader64 = null;
        undertowEmbeddedServletContainerFactory61.setResourceLoader(resourceLoader64);
        java.lang.Integer int66 = undertowEmbeddedServletContainerFactory61.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int68 = undertowEmbeddedServletContainerFactory67.getSessionTimeout();
        boolean boolean69 = undertowEmbeddedServletContainerFactory67.isPersistSession();
        java.io.File file70 = undertowEmbeddedServletContainerFactory67.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings71 = undertowEmbeddedServletContainerFactory67.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings72 = undertowEmbeddedServletContainerFactory67.getMimeMappings();
        java.lang.Integer int73 = undertowEmbeddedServletContainerFactory67.buffersPerRegion;
        io.undertow.Undertow.Builder builder75 = undertowEmbeddedServletContainerFactory67.createBuilder(10);
        io.undertow.servlet.api.DeploymentManager deploymentManager76 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer78 = undertowEmbeddedServletContainerFactory61.getUndertowEmbeddedServletContainer(builder75, deploymentManager76, 1);
        undertowEmbeddedServletContainerFactory61.setJspServletClassName("0.0.0.0");
        java.lang.Integer int81 = undertowEmbeddedServletContainerFactory61.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory82 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int83 = undertowEmbeddedServletContainerFactory82.getSessionTimeout();
        boolean boolean84 = undertowEmbeddedServletContainerFactory82.isPersistSession();
        undertowEmbeddedServletContainerFactory82.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory82.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray89 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory82.addErrorPages(errorPageArray89);
        undertowEmbeddedServletContainerFactory61.addErrorPages(errorPageArray89);
        undertowEmbeddedServletContainerFactory42.addErrorPages(errorPageArray89);
        undertowEmbeddedServletContainerFactory31.addErrorPages(errorPageArray89);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray89);
        undertowEmbeddedServletContainerFactory0.setDisplayName("0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertNotNull(servletContextInitializerArray17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1800 + "'", int22 == 1800);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(errorPageArray28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1800 + "'", int32 == 1800);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1800 + "'", int43 == 1800);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1800 + "'", int53 == 1800);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 8080 + "'", int62 == 8080);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1800 + "'", int68 == 1800);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNotNull(mimeMappings71);
        org.junit.Assert.assertNotNull(mimeMappings72);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer78);
        org.junit.Assert.assertNull(int81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1800 + "'", int83 == 1800);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(errorPageArray89);
    }

    @Test
    public void test13169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13169");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList3, undertowDeploymentInfoCustomizerArray2);
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList3;
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        java.lang.String str9 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList12;
        undertowEmbeddedServletContainerFactory10.workerThreads = 1;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection17 = undertowEmbeddedServletContainerFactory10.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory10.bufferSize = 10;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = undertowEmbeddedServletContainerFactory10.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet20);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory23.setWorkerThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder27 = undertowEmbeddedServletContainerFactory23.createBuilder((int) (byte) -1);
        io.undertow.server.handlers.resource.ResourceManager resourceManager28 = undertowEmbeddedServletContainerFactory23.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int30 = undertowEmbeddedServletContainerFactory29.getSessionTimeout();
        boolean boolean31 = undertowEmbeddedServletContainerFactory29.isPersistSession();
        java.io.File file32 = undertowEmbeddedServletContainerFactory29.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = undertowEmbeddedServletContainerFactory29.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = undertowEmbeddedServletContainerFactory29.getMimeMappings();
        java.lang.Integer int35 = undertowEmbeddedServletContainerFactory29.buffersPerRegion;
        undertowEmbeddedServletContainerFactory29.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int39 = undertowEmbeddedServletContainerFactory38.getSessionTimeout();
        boolean boolean40 = undertowEmbeddedServletContainerFactory38.isPersistSession();
        undertowEmbeddedServletContainerFactory38.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder44 = undertowEmbeddedServletContainerFactory38.createBuilder((-1));
        undertowEmbeddedServletContainerFactory38.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int48 = undertowEmbeddedServletContainerFactory47.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray49 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory47.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray49);
        undertowEmbeddedServletContainerFactory38.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray49);
        undertowEmbeddedServletContainerFactory29.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray49);
        undertowEmbeddedServletContainerFactory23.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray49);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray49);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection55 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader56 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        boolean boolean57 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        java.io.File file58 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file58;
        boolean boolean60 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        undertowEmbeddedServletContainerFactory0.ioThreads = 32;
        java.lang.String str63 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        org.springframework.core.io.ResourceLoader resourceLoader64 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader64);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "0.0.0.0" + "'", str9, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection17);
        org.junit.Assert.assertNotNull(errorPageSet20);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(resourceManager28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1800 + "'", int30 == 1800);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1800 + "'", int39 == 1800);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 8080 + "'", int48 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray49);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection55);
        org.junit.Assert.assertNull(resourceLoader56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(str63);
    }

    @Test
    public void test13170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13170");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        boolean boolean4 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        undertowEmbeddedServletContainerFactory0.workerThreads = 52;
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 52);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test13171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13171");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader3);
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((int) (byte) 0);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo7 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer10 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap9);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray11 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer10 };
        initializer8.initializers = servletContextInitializerArray11;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = initializer8.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer17 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap16);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer19 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap18);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer21 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap20);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer23 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap22);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray24 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer17, initParameterConfiguringServletContextInitializer19, initParameterConfiguringServletContextInitializer21, initParameterConfiguringServletContextInitializer23 };
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray24);
        initializer8.initializers = servletContextInitializerArray24;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray27 = initializer8.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer30 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap29);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray31 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer30 };
        initializer28.initializers = servletContextInitializerArray31;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray33 = initializer28.initializers;
        initializer8.initializers = servletContextInitializerArray33;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray35 = initializer8.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int37 = undertowEmbeddedServletContainerFactory36.getSessionTimeout();
        boolean boolean38 = undertowEmbeddedServletContainerFactory36.isPersistSession();
        undertowEmbeddedServletContainerFactory36.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory36.workerThreads = 0;
        undertowEmbeddedServletContainerFactory36.setPersistSession(false);
        undertowEmbeddedServletContainerFactory36.ioThreads = 1800;
        java.lang.String str47 = undertowEmbeddedServletContainerFactory36.getContextPath();
        java.io.File file48 = null;
        undertowEmbeddedServletContainerFactory36.setSessionStoreDir(file48);
        undertowEmbeddedServletContainerFactory36.setAccessLogPattern("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer54 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap53);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray55 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer54 };
        initializer52.initializers = servletContextInitializerArray55;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray57 = initializer52.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int59 = undertowEmbeddedServletContainerFactory58.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer61 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap60);
        java.util.Map<java.lang.String, java.lang.String> strMap62 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer63 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap62);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer65 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap64);
        java.util.Map<java.lang.String, java.lang.String> strMap66 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer67 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap66);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray68 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer61, initParameterConfiguringServletContextInitializer63, initParameterConfiguringServletContextInitializer65, initParameterConfiguringServletContextInitializer67 };
        undertowEmbeddedServletContainerFactory58.addInitializers(servletContextInitializerArray68);
        initializer52.initializers = servletContextInitializerArray68;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray71 = initializer52.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer72 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap73 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer74 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap73);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray75 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer74 };
        initializer72.initializers = servletContextInitializerArray75;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray77 = initializer72.initializers;
        initializer52.initializers = servletContextInitializerArray77;
        undertowEmbeddedServletContainerFactory36.addInitializers(servletContextInitializerArray77);
        initializer8.initializers = servletContextInitializerArray77;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.registerServletContainerInitializerToDriveServletContextInitializers(deploymentInfo7, servletContextInitializerArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray24);
        org.junit.Assert.assertNotNull(servletContextInitializerArray27);
        org.junit.Assert.assertNotNull(servletContextInitializerArray31);
        org.junit.Assert.assertNotNull(servletContextInitializerArray33);
        org.junit.Assert.assertNotNull(servletContextInitializerArray35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1800 + "'", int37 == 1800);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(servletContextInitializerArray55);
        org.junit.Assert.assertNotNull(servletContextInitializerArray57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1800 + "'", int59 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray68);
        org.junit.Assert.assertNotNull(servletContextInitializerArray71);
        org.junit.Assert.assertNotNull(servletContextInitializerArray75);
        org.junit.Assert.assertNotNull(servletContextInitializerArray77);
    }

    @Test
    public void test13172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13172");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        java.io.File file7 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.Ssl ssl8 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl8);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 1;
        boolean boolean12 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.Compression compression13 = undertowEmbeddedServletContainerFactory0.getCompression();
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(true);
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.io.File file20 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(compression13);
        org.junit.Assert.assertNull(file20);
    }

    @Test
    public void test13173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13173");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        boolean boolean3 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory7.setJspServletClassName("");
        int int10 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory7.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "";
        boolean boolean15 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.io.File file16 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer20 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap19);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray21 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer20 };
        initializer18.initializers = servletContextInitializerArray21;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer25 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap24);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer25 };
        initializer23.initializers = servletContextInitializerArray26;
        initializer18.initializers = servletContextInitializerArray26;
        initializer17.initializers = servletContextInitializerArray26;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray30 = initializer17.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray31 = initializer17.initializers;
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray31);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection35 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(servletContextInitializerArray21);
        org.junit.Assert.assertNotNull(servletContextInitializerArray26);
        org.junit.Assert.assertNotNull(servletContextInitializerArray30);
        org.junit.Assert.assertNotNull(servletContextInitializerArray31);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection35);
    }

    @Test
    public void test13174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13174");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory0.getAddress();
        int int19 = undertowEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.Compression compression20 = undertowEmbeddedServletContainerFactory0.getCompression();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList21 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo22 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo22);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo24 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.configureAccessLog(deploymentInfo24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8080 + "'", int19 == 8080);
        org.junit.Assert.assertNull(compression20);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList21);
    }

    @Test
    public void test13175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13175");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file5;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl10);
        boolean boolean12 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        boolean boolean13 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList14);
    }

    @Test
    public void test13176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13176");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        java.net.InetAddress inetAddress9 = undertowEmbeddedServletContainerFactory0.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader16 = undertowEmbeddedServletContainerFactory14.resourceLoader;
        undertowEmbeddedServletContainerFactory14.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int20 = undertowEmbeddedServletContainerFactory19.getSessionTimeout();
        boolean boolean21 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList22 = undertowEmbeddedServletContainerFactory19.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet23 = undertowEmbeddedServletContainerFactory19.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int25 = undertowEmbeddedServletContainerFactory24.getSessionTimeout();
        boolean boolean26 = undertowEmbeddedServletContainerFactory24.isPersistSession();
        undertowEmbeddedServletContainerFactory24.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder30 = undertowEmbeddedServletContainerFactory24.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager31 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer33 = undertowEmbeddedServletContainerFactory19.getUndertowEmbeddedServletContainer(builder30, deploymentManager31, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager34 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer36 = undertowEmbeddedServletContainerFactory14.getUndertowEmbeddedServletContainer(builder30, deploymentManager34, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager37 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer39 = undertowEmbeddedServletContainerFactory10.getUndertowEmbeddedServletContainer(builder30, deploymentManager37, (int) (short) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList40 = undertowEmbeddedServletContainerFactory10.builderCustomizers;
        undertowEmbeddedServletContainerFactory10.setIoThreads((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int44 = undertowEmbeddedServletContainerFactory43.getPort();
        java.lang.Integer int45 = undertowEmbeddedServletContainerFactory43.bufferSize;
        java.io.File file46 = null;
        undertowEmbeddedServletContainerFactory43.setSessionStoreDir(file46);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int49 = undertowEmbeddedServletContainerFactory48.getSessionTimeout();
        boolean boolean50 = undertowEmbeddedServletContainerFactory48.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList51 = undertowEmbeddedServletContainerFactory48.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet52 = undertowEmbeddedServletContainerFactory48.getJspServlet();
        boolean boolean53 = undertowEmbeddedServletContainerFactory48.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet54 = undertowEmbeddedServletContainerFactory48.getErrorPages();
        undertowEmbeddedServletContainerFactory43.setErrorPages(errorPageSet54);
        undertowEmbeddedServletContainerFactory43.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList58 = undertowEmbeddedServletContainerFactory43.builderCustomizers;
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList58;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList58;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.createAccessLogDirectoryIfNecessary();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Access log directory is not set");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inetAddress9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8080 + "'", int11 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNull(resourceLoader16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList22);
        org.junit.Assert.assertNotNull(jspServlet23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1800 + "'", int25 == 1800);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer33);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer36);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer39);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 8080 + "'", int44 == 8080);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1800 + "'", int49 == 1800);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList51);
        org.junit.Assert.assertNotNull(jspServlet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(errorPageSet54);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList58);
    }

    @Test
    public void test13177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13177");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        undertowEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader5);
        undertowEmbeddedServletContainerFactory2.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        undertowEmbeddedServletContainerFactory2.setAccessLogPattern("0.0.0.0");
        undertowEmbeddedServletContainerFactory2.ioThreads = 0;
        java.io.File file14 = undertowEmbeddedServletContainerFactory2.getSessionStoreDir();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int16 = undertowEmbeddedServletContainerFactory15.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory15.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray17);
        undertowEmbeddedServletContainerFactory2.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray17);
        undertowEmbeddedServletContainerFactory2.setBuffersPerRegion((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int23 = undertowEmbeddedServletContainerFactory22.getPort();
        java.lang.Integer int24 = undertowEmbeddedServletContainerFactory22.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader25 = null;
        undertowEmbeddedServletContainerFactory22.setResourceLoader(resourceLoader25);
        java.lang.Integer int27 = undertowEmbeddedServletContainerFactory22.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        java.io.File file31 = undertowEmbeddedServletContainerFactory28.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = undertowEmbeddedServletContainerFactory28.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = undertowEmbeddedServletContainerFactory28.getMimeMappings();
        java.lang.Integer int34 = undertowEmbeddedServletContainerFactory28.buffersPerRegion;
        io.undertow.Undertow.Builder builder36 = undertowEmbeddedServletContainerFactory28.createBuilder(10);
        io.undertow.servlet.api.DeploymentManager deploymentManager37 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer39 = undertowEmbeddedServletContainerFactory22.getUndertowEmbeddedServletContainer(builder36, deploymentManager37, 1);
        undertowEmbeddedServletContainerFactory22.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo42 = null;
        undertowEmbeddedServletContainerFactory22.configureErrorPages(deploymentInfo42);
        undertowEmbeddedServletContainerFactory22.setJspServletClassName("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray47 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList48 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList48, undertowBuilderCustomizerArray47);
        undertowEmbeddedServletContainerFactory46.builderCustomizers = undertowBuilderCustomizerList48;
        undertowEmbeddedServletContainerFactory46.workerThreads = 1;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection53 = undertowEmbeddedServletContainerFactory46.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory46.bufferSize = 10;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet56 = undertowEmbeddedServletContainerFactory46.getErrorPages();
        undertowEmbeddedServletContainerFactory22.setErrorPages(errorPageSet56);
        undertowEmbeddedServletContainerFactory2.setErrorPages(errorPageSet56);
        undertowEmbeddedServletContainerFactory2.accessLogEnabled = true;
        undertowEmbeddedServletContainerFactory2.setJspServletClassName("0.0.0.0");
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 8080 + "'", int16 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray17);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 8080 + "'", int23 == 8080);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer39);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection53);
        org.junit.Assert.assertNotNull(errorPageSet56);
    }

    @Test
    public void test13178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13178");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList5 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList9;
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        java.io.File file13 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file13;
        boolean boolean15 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        undertowEmbeddedServletContainerFactory0.ioThreads = 1800;
        org.springframework.core.io.ResourceLoader resourceLoader18 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(resourceLoader18);
    }

    @Test
    public void test13179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13179");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        boolean boolean3 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 1800);
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        java.lang.ClassLoader classLoader8 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(errorPageSet10);
    }

    @Test
    public void test13180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13180");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        java.lang.String str5 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        undertowEmbeddedServletContainerFactory11.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder17 = undertowEmbeddedServletContainerFactory11.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager18 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer20 = undertowEmbeddedServletContainerFactory6.getUndertowEmbeddedServletContainer(builder17, deploymentManager18, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer23 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder17, deploymentManager21, (int) (byte) 100);
        java.lang.Integer int24 = undertowEmbeddedServletContainerFactory2.bufferSize;
        org.springframework.boot.context.embedded.Compression compression25 = undertowEmbeddedServletContainerFactory2.getCompression();
        undertowEmbeddedServletContainerFactory2.setSessionTimeout(0);
        undertowEmbeddedServletContainerFactory2.useForwardHeaders = false;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory31.setWorkerThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder35 = undertowEmbeddedServletContainerFactory31.createBuilder((int) (byte) -1);
        java.lang.String str36 = undertowEmbeddedServletContainerFactory31.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int38 = undertowEmbeddedServletContainerFactory37.getSessionTimeout();
        boolean boolean39 = undertowEmbeddedServletContainerFactory37.isPersistSession();
        java.io.File file40 = undertowEmbeddedServletContainerFactory37.accessLogDirectory;
        undertowEmbeddedServletContainerFactory37.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory37.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int46 = undertowEmbeddedServletContainerFactory45.getSessionTimeout();
        boolean boolean47 = undertowEmbeddedServletContainerFactory45.isPersistSession();
        java.io.File file48 = undertowEmbeddedServletContainerFactory45.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings49 = undertowEmbeddedServletContainerFactory45.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings50 = undertowEmbeddedServletContainerFactory45.getMimeMappings();
        java.io.File file51 = undertowEmbeddedServletContainerFactory45.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int53 = undertowEmbeddedServletContainerFactory52.getPort();
        java.lang.Integer int54 = undertowEmbeddedServletContainerFactory52.bufferSize;
        java.io.File file55 = null;
        undertowEmbeddedServletContainerFactory52.setSessionStoreDir(file55);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer58 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap57);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray59 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer58 };
        undertowEmbeddedServletContainerFactory52.addInitializers(servletContextInitializerArray59);
        undertowEmbeddedServletContainerFactory45.addInitializers(servletContextInitializerArray59);
        undertowEmbeddedServletContainerFactory37.addInitializers(servletContextInitializerArray59);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer63 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray64 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer63 };
        undertowEmbeddedServletContainerFactory37.addBuilderCustomizers(undertowBuilderCustomizerArray64);
        undertowEmbeddedServletContainerFactory31.addBuilderCustomizers(undertowBuilderCustomizerArray64);
        undertowEmbeddedServletContainerFactory2.addBuilderCustomizers(undertowBuilderCustomizerArray64);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer20);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(compression25);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "0.0.0.0" + "'", str36, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1800 + "'", int38 == 1800);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1800 + "'", int46 == 1800);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(mimeMappings49);
        org.junit.Assert.assertNotNull(mimeMappings50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8080 + "'", int53 == 8080);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(servletContextInitializerArray59);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray64);
    }

    @Test
    public void test13181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13181");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        boolean boolean9 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.io.File file10 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        undertowEmbeddedServletContainerFactory11.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory11.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray18 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory11.addErrorPages(errorPageArray18);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray18);
        java.lang.String str21 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(false);
        boolean boolean24 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 10);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(errorPageArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "0.0.0.0" + "'", str21, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test13182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13182");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int3 = undertowEmbeddedServletContainerFactory2.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory2.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray4);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray4);
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        undertowEmbeddedServletContainerFactory1.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getSessionTimeout();
        boolean boolean12 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        undertowEmbeddedServletContainerFactory10.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory10.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory10.setDisplayName("hi!");
        boolean boolean19 = undertowEmbeddedServletContainerFactory10.isRegisterDefaultServlet();
        java.io.File file20 = undertowEmbeddedServletContainerFactory10.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getSessionTimeout();
        boolean boolean23 = undertowEmbeddedServletContainerFactory21.isPersistSession();
        undertowEmbeddedServletContainerFactory21.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory21.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray28 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory21.addErrorPages(errorPageArray28);
        undertowEmbeddedServletContainerFactory10.addErrorPages(errorPageArray28);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray28);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int35 = undertowEmbeddedServletContainerFactory34.getPort();
        java.lang.Integer int36 = undertowEmbeddedServletContainerFactory34.bufferSize;
        java.io.File file37 = null;
        undertowEmbeddedServletContainerFactory34.setSessionStoreDir(file37);
        java.io.File file39 = null;
        undertowEmbeddedServletContainerFactory34.accessLogDirectory = file39;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings41 = undertowEmbeddedServletContainerFactory34.getMimeMappings();
        undertowEmbeddedServletContainerFactory34.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int45 = undertowEmbeddedServletContainerFactory44.getSessionTimeout();
        boolean boolean46 = undertowEmbeddedServletContainerFactory44.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList47 = undertowEmbeddedServletContainerFactory44.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet48 = undertowEmbeddedServletContainerFactory44.getJspServlet();
        undertowEmbeddedServletContainerFactory44.directBuffers = true;
        java.io.File file51 = null;
        undertowEmbeddedServletContainerFactory44.setDocumentRoot(file51);
        undertowEmbeddedServletContainerFactory44.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray55 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory44.addBuilderCustomizers(undertowBuilderCustomizerArray55);
        org.springframework.boot.context.embedded.Compression compression57 = null;
        undertowEmbeddedServletContainerFactory44.setCompression(compression57);
        int int59 = undertowEmbeddedServletContainerFactory44.getPort();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList60 = undertowEmbeddedServletContainerFactory44.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int62 = undertowEmbeddedServletContainerFactory61.getSessionTimeout();
        boolean boolean63 = undertowEmbeddedServletContainerFactory61.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList64 = undertowEmbeddedServletContainerFactory61.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet65 = undertowEmbeddedServletContainerFactory61.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int67 = undertowEmbeddedServletContainerFactory66.getSessionTimeout();
        boolean boolean68 = undertowEmbeddedServletContainerFactory66.isPersistSession();
        undertowEmbeddedServletContainerFactory66.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder72 = undertowEmbeddedServletContainerFactory66.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager73 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer75 = undertowEmbeddedServletContainerFactory61.getUndertowEmbeddedServletContainer(builder72, deploymentManager73, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager76 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer78 = undertowEmbeddedServletContainerFactory44.getUndertowEmbeddedServletContainer(builder72, deploymentManager76, (int) (byte) 1);
        io.undertow.servlet.api.DeploymentManager deploymentManager79 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer81 = undertowEmbeddedServletContainerFactory34.getUndertowEmbeddedServletContainer(builder72, deploymentManager79, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager82 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer84 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder72, deploymentManager82, 1800);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1800);
        java.lang.Integer int87 = undertowEmbeddedServletContainerFactory1.bufferSize;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8080 + "'", int3 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1800 + "'", int11 == 1800);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1800 + "'", int22 == 1800);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(errorPageArray28);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 8080 + "'", int35 == 8080);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(mimeMappings41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1800 + "'", int45 == 1800);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList47);
        org.junit.Assert.assertNotNull(jspServlet48);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 8080 + "'", int59 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1800 + "'", int62 == 1800);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList64);
        org.junit.Assert.assertNotNull(jspServlet65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1800 + "'", int67 == 1800);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer75);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer78);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer81);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer84);
        org.junit.Assert.assertNull(int87);
    }

    @Test
    public void test13183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13183");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.net.InetAddress inetAddress9 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress9);
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        io.undertow.servlet.api.DeploymentInfo deploymentInfo13 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo13);
        org.xnio.XnioWorker xnioWorker15 = undertowEmbeddedServletContainerFactory0.createWorker();
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int20 = undertowEmbeddedServletContainerFactory19.getSessionTimeout();
        boolean boolean21 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        java.io.File file22 = undertowEmbeddedServletContainerFactory19.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = undertowEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = undertowEmbeddedServletContainerFactory19.getMimeMappings();
        java.io.File file25 = undertowEmbeddedServletContainerFactory19.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int27 = undertowEmbeddedServletContainerFactory26.getPort();
        java.lang.Integer int28 = undertowEmbeddedServletContainerFactory26.bufferSize;
        java.io.File file29 = null;
        undertowEmbeddedServletContainerFactory26.setSessionStoreDir(file29);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer32 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap31);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray33 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer32 };
        undertowEmbeddedServletContainerFactory26.addInitializers(servletContextInitializerArray33);
        undertowEmbeddedServletContainerFactory19.addInitializers(servletContextInitializerArray33);
        initializer18.initializers = servletContextInitializerArray33;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer39 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap38);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray40 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer39 };
        initializer37.initializers = servletContextInitializerArray40;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray42 = initializer37.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int44 = undertowEmbeddedServletContainerFactory43.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer46 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap45);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer48 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap47);
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer50 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap49);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer52 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap51);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray53 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer46, initParameterConfiguringServletContextInitializer48, initParameterConfiguringServletContextInitializer50, initParameterConfiguringServletContextInitializer52 };
        undertowEmbeddedServletContainerFactory43.addInitializers(servletContextInitializerArray53);
        initializer37.initializers = servletContextInitializerArray53;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray56 = initializer37.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray57 = initializer37.initializers;
        initializer18.initializers = servletContextInitializerArray57;
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray57);
        java.net.InetAddress inetAddress60 = undertowEmbeddedServletContainerFactory0.getAddress();
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray61 = undertowEmbeddedServletContainerFactory0.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(xnioWorker15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8080 + "'", int27 == 8080);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(servletContextInitializerArray33);
        org.junit.Assert.assertNotNull(servletContextInitializerArray40);
        org.junit.Assert.assertNotNull(servletContextInitializerArray42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1800 + "'", int44 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray53);
        org.junit.Assert.assertNotNull(servletContextInitializerArray56);
        org.junit.Assert.assertNotNull(servletContextInitializerArray57);
        org.junit.Assert.assertNull(inetAddress60);
    }

    @Test
    public void test13184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13184");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        undertowEmbeddedServletContainerFactory8.setSessionTimeout((int) (short) 1);
        java.io.File file12 = null;
        undertowEmbeddedServletContainerFactory8.setSessionStoreDir(file12);
        undertowEmbeddedServletContainerFactory8.setBuffersPerRegion((java.lang.Integer) 10);
        org.springframework.core.io.ResourceLoader resourceLoader16 = null;
        undertowEmbeddedServletContainerFactory8.setResourceLoader(resourceLoader16);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getSessionTimeout();
        boolean boolean20 = undertowEmbeddedServletContainerFactory18.isPersistSession();
        java.io.File file21 = undertowEmbeddedServletContainerFactory18.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList22 = undertowEmbeddedServletContainerFactory18.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory18.ioThreads = 0;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = undertowEmbeddedServletContainerFactory18.getMimeMappings();
        undertowEmbeddedServletContainerFactory8.setMimeMappings(mimeMappings25);
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings25);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList31 = undertowEmbeddedServletContainerFactory28.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet32 = undertowEmbeddedServletContainerFactory28.getJspServlet();
        boolean boolean33 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        org.springframework.boot.context.embedded.Ssl ssl34 = undertowEmbeddedServletContainerFactory28.getSsl();
        undertowEmbeddedServletContainerFactory28.setJspServletClassName("hi!");
        java.io.File file37 = undertowEmbeddedServletContainerFactory28.accessLogDirectory;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int39 = undertowEmbeddedServletContainerFactory38.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = undertowEmbeddedServletContainerFactory42.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader44 = undertowEmbeddedServletContainerFactory42.resourceLoader;
        undertowEmbeddedServletContainerFactory42.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int48 = undertowEmbeddedServletContainerFactory47.getSessionTimeout();
        boolean boolean49 = undertowEmbeddedServletContainerFactory47.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList50 = undertowEmbeddedServletContainerFactory47.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet51 = undertowEmbeddedServletContainerFactory47.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int53 = undertowEmbeddedServletContainerFactory52.getSessionTimeout();
        boolean boolean54 = undertowEmbeddedServletContainerFactory52.isPersistSession();
        undertowEmbeddedServletContainerFactory52.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder58 = undertowEmbeddedServletContainerFactory52.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager59 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer61 = undertowEmbeddedServletContainerFactory47.getUndertowEmbeddedServletContainer(builder58, deploymentManager59, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager62 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer64 = undertowEmbeddedServletContainerFactory42.getUndertowEmbeddedServletContainer(builder58, deploymentManager62, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager65 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer67 = undertowEmbeddedServletContainerFactory38.getUndertowEmbeddedServletContainer(builder58, deploymentManager65, (int) (short) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList68 = undertowEmbeddedServletContainerFactory38.builderCustomizers;
        undertowEmbeddedServletContainerFactory38.setIoThreads((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int72 = undertowEmbeddedServletContainerFactory71.getPort();
        java.lang.Integer int73 = undertowEmbeddedServletContainerFactory71.bufferSize;
        java.io.File file74 = null;
        undertowEmbeddedServletContainerFactory71.setSessionStoreDir(file74);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int77 = undertowEmbeddedServletContainerFactory76.getSessionTimeout();
        boolean boolean78 = undertowEmbeddedServletContainerFactory76.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList79 = undertowEmbeddedServletContainerFactory76.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet80 = undertowEmbeddedServletContainerFactory76.getJspServlet();
        boolean boolean81 = undertowEmbeddedServletContainerFactory76.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet82 = undertowEmbeddedServletContainerFactory76.getErrorPages();
        undertowEmbeddedServletContainerFactory71.setErrorPages(errorPageSet82);
        undertowEmbeddedServletContainerFactory71.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList86 = undertowEmbeddedServletContainerFactory71.builderCustomizers;
        undertowEmbeddedServletContainerFactory38.builderCustomizers = undertowBuilderCustomizerList86;
        undertowEmbeddedServletContainerFactory28.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList86);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList86;
        boolean boolean90 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        undertowEmbeddedServletContainerFactory0.workerThreads = 10;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList22);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList31);
        org.junit.Assert.assertNotNull(jspServlet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(ssl34);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 8080 + "'", int39 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNull(resourceLoader44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1800 + "'", int48 == 1800);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList50);
        org.junit.Assert.assertNotNull(jspServlet51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1800 + "'", int53 == 1800);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer61);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer64);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer67);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList68);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 8080 + "'", int72 == 8080);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1800 + "'", int77 == 1800);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList79);
        org.junit.Assert.assertNotNull(jspServlet80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(errorPageSet82);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList86);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test13185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13185");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory0.workerThreads;
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 35;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(int7);
    }

    @Test
    public void test13186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13186");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        undertowEmbeddedServletContainerFactory0.workerThreads = 1;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.bufferSize = 10;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 1);
        java.lang.Class<?> wildcardClass15 = undertowEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test13187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13187");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        boolean boolean9 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file10;
        io.undertow.server.handlers.resource.ResourceManager resourceManager12 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int14 = undertowEmbeddedServletContainerFactory13.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer16 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap15);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer18 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap17);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer20 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap19);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer22 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap21);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer16, initParameterConfiguringServletContextInitializer18, initParameterConfiguringServletContextInitializer20, initParameterConfiguringServletContextInitializer22 };
        undertowEmbeddedServletContainerFactory13.addInitializers(servletContextInitializerArray23);
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray23);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) (-1));
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean30 = undertowEmbeddedServletContainerFactory29.isAccessLogEnabled();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = undertowEmbeddedServletContainerFactory29.getMimeMappings();
        java.lang.Integer int32 = undertowEmbeddedServletContainerFactory29.buffersPerRegion;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray33 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory29.addErrorPages(errorPageArray33);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray33);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(resourceManager12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1800 + "'", int14 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(errorPageArray33);
    }

    @Test
    public void test13188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13188");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory0.getAddress();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.io.File file21 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file21);
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 8080);
        java.io.File file25 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertNull(file25);
    }

    @Test
    public void test13189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13189");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file15);
        java.lang.String str17 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("hi!");
        java.lang.Integer int20 = undertowEmbeddedServletContainerFactory0.ioThreads;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(int20);
    }

    @Test
    public void test13190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13190");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) '#');
        java.lang.String str2 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int4 = undertowEmbeddedServletContainerFactory3.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = undertowEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader9 = undertowEmbeddedServletContainerFactory7.resourceLoader;
        undertowEmbeddedServletContainerFactory7.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory12.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet16 = undertowEmbeddedServletContainerFactory12.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int18 = undertowEmbeddedServletContainerFactory17.getSessionTimeout();
        boolean boolean19 = undertowEmbeddedServletContainerFactory17.isPersistSession();
        undertowEmbeddedServletContainerFactory17.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder23 = undertowEmbeddedServletContainerFactory17.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer26 = undertowEmbeddedServletContainerFactory12.getUndertowEmbeddedServletContainer(builder23, deploymentManager24, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer29 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder23, deploymentManager27, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager30 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer32 = undertowEmbeddedServletContainerFactory3.getUndertowEmbeddedServletContainer(builder23, deploymentManager30, (int) (short) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList33 = undertowEmbeddedServletContainerFactory3.builderCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection34 = undertowEmbeddedServletContainerFactory3.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory3.buffersPerRegion = 0;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList37 = undertowEmbeddedServletContainerFactory3.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList37;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 52);
        java.io.File file41 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0.0.0.0" + "'", str2, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8080 + "'", int4 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNull(resourceLoader9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNotNull(jspServlet16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1800 + "'", int18 == 1800);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer26);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer29);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer32);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList33);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection34);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList37);
        org.junit.Assert.assertNull(file41);
    }

    @Test
    public void test13191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13191");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList4 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.Compression compression5 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression5);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory8.ioThreads = 1;
        undertowEmbeddedServletContainerFactory8.setPort(0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer13 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray14 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer13 };
        undertowEmbeddedServletContainerFactory8.addBuilderCustomizers(undertowBuilderCustomizerArray14);
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray14);
        java.lang.ClassLoader classLoader17 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        undertowEmbeddedServletContainerFactory0.ioThreads = (-1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList4);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray14);
        org.junit.Assert.assertNotNull(classLoader17);
    }

    @Test
    public void test13192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13192");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 8080);
        boolean boolean11 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test13193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13193");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.Compression compression4 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression4);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = true;
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file10);
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        boolean boolean14 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int16 = undertowEmbeddedServletContainerFactory15.getSessionTimeout();
        boolean boolean17 = undertowEmbeddedServletContainerFactory15.isPersistSession();
        undertowEmbeddedServletContainerFactory15.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory15.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory15.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory15.setSessionTimeout(1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList26 = undertowEmbeddedServletContainerFactory15.deploymentInfoCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet27 = undertowEmbeddedServletContainerFactory15.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet27);
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("0.0.0.0");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1800 + "'", int16 == 1800);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList26);
        org.junit.Assert.assertNotNull(errorPageSet27);
    }

    @Test
    public void test13194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13194");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader3);
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 0);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = true;
        java.lang.String str12 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test13195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13195");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int5 = undertowEmbeddedServletContainerFactory4.getSessionTimeout();
        boolean boolean6 = undertowEmbeddedServletContainerFactory4.isPersistSession();
        undertowEmbeddedServletContainerFactory4.setPersistSession(false);
        undertowEmbeddedServletContainerFactory4.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList11 = undertowEmbeddedServletContainerFactory4.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory4.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = undertowEmbeddedServletContainerFactory14.builderCustomizers;
        undertowEmbeddedServletContainerFactory4.builderCustomizers = undertowBuilderCustomizerList17;
        java.io.File file19 = null;
        undertowEmbeddedServletContainerFactory4.accessLogDirectory = file19;
        boolean boolean21 = undertowEmbeddedServletContainerFactory4.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int23 = undertowEmbeddedServletContainerFactory22.getSessionTimeout();
        boolean boolean24 = undertowEmbeddedServletContainerFactory22.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList25 = undertowEmbeddedServletContainerFactory22.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet26 = undertowEmbeddedServletContainerFactory22.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList27 = undertowEmbeddedServletContainerFactory22.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray30 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory28.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray30);
        undertowEmbeddedServletContainerFactory22.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray30);
        undertowEmbeddedServletContainerFactory4.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray30);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray30);
        boolean boolean35 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1800 + "'", int5 == 1800);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1800 + "'", int23 == 1800);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList25);
        org.junit.Assert.assertNotNull(jspServlet26);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 8080 + "'", int29 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test13196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13196");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        jarResourceManager0.jarPath = "hi!";
        java.lang.String str6 = jarResourceManager0.jarPath;
        jarResourceManager0.close();
        boolean boolean8 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.jarPath = "hi!";
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourceManager0.removeResourceChangeListener(resourceChangeListener11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test13197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13197");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        int int3 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo4 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo4);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.workerThreads = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory11.setWorkerThreads((java.lang.Integer) 1);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection14 = undertowEmbeddedServletContainerFactory11.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection14);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1800 + "'", int3 == 1800);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection14);
    }

    @Test
    public void test13198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13198");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection4 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo5 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.configureMimeMappings(deploymentInfo5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection4);
    }

    @Test
    public void test13199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13199");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.io.File file10 = undertowEmbeddedServletContainerFactory7.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList11 = undertowEmbeddedServletContainerFactory7.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList11;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.Ssl ssl15 = undertowEmbeddedServletContainerFactory0.getSsl();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList16 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList11);
        org.junit.Assert.assertNull(ssl15);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList16);
        org.junit.Assert.assertNull(int17);
    }

    @Test
    public void test13200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13200");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory1.ioThreads = 1;
        undertowEmbeddedServletContainerFactory1.useForwardHeaders = false;
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory1.setSessionStoreDir(file6);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList11 = undertowEmbeddedServletContainerFactory8.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet12 = undertowEmbeddedServletContainerFactory8.getJspServlet();
        boolean boolean13 = undertowEmbeddedServletContainerFactory8.useForwardHeaders;
        java.net.InetAddress inetAddress14 = undertowEmbeddedServletContainerFactory8.getAddress();
        undertowEmbeddedServletContainerFactory8.setAccessLogPattern("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = undertowEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader21 = undertowEmbeddedServletContainerFactory19.resourceLoader;
        undertowEmbeddedServletContainerFactory19.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int25 = undertowEmbeddedServletContainerFactory24.getSessionTimeout();
        boolean boolean26 = undertowEmbeddedServletContainerFactory24.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList27 = undertowEmbeddedServletContainerFactory24.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet28 = undertowEmbeddedServletContainerFactory24.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int30 = undertowEmbeddedServletContainerFactory29.getSessionTimeout();
        boolean boolean31 = undertowEmbeddedServletContainerFactory29.isPersistSession();
        undertowEmbeddedServletContainerFactory29.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder35 = undertowEmbeddedServletContainerFactory29.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager36 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer38 = undertowEmbeddedServletContainerFactory24.getUndertowEmbeddedServletContainer(builder35, deploymentManager36, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager39 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer41 = undertowEmbeddedServletContainerFactory19.getUndertowEmbeddedServletContainer(builder35, deploymentManager39, (int) ' ');
        boolean boolean42 = undertowEmbeddedServletContainerFactory19.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory19.setPort((-1));
        java.lang.Integer int45 = undertowEmbeddedServletContainerFactory19.bufferSize;
        io.undertow.Undertow.Builder builder47 = undertowEmbeddedServletContainerFactory19.createBuilder(0);
        io.undertow.servlet.api.DeploymentManager deploymentManager48 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer50 = undertowEmbeddedServletContainerFactory8.getUndertowEmbeddedServletContainer(builder47, deploymentManager48, (int) '4');
        java.lang.Boolean boolean51 = undertowEmbeddedServletContainerFactory8.directBuffers;
        int int52 = undertowEmbeddedServletContainerFactory8.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean55 = undertowEmbeddedServletContainerFactory54.isAccessLogEnabled();
        java.lang.Integer int56 = undertowEmbeddedServletContainerFactory54.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings60 = undertowEmbeddedServletContainerFactory59.getMimeMappings();
        undertowEmbeddedServletContainerFactory54.setMimeMappings(mimeMappings60);
        undertowEmbeddedServletContainerFactory8.setMimeMappings(mimeMappings60);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings60);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int65 = undertowEmbeddedServletContainerFactory64.getSessionTimeout();
        boolean boolean66 = undertowEmbeddedServletContainerFactory64.isPersistSession();
        undertowEmbeddedServletContainerFactory64.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory64.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory64.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory64.setSessionTimeout(1);
        boolean boolean75 = undertowEmbeddedServletContainerFactory64.isAccessLogEnabled();
        java.lang.String str76 = undertowEmbeddedServletContainerFactory64.getListenAddress();
        undertowEmbeddedServletContainerFactory64.useForwardHeaders = true;
        int int79 = undertowEmbeddedServletContainerFactory64.getPort();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection80 = undertowEmbeddedServletContainerFactory64.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList81 = undertowEmbeddedServletContainerFactory64.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList81;
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        undertowEmbeddedServletContainerFactory1.setDisplayName("0.0.0.0");
        java.io.File file87 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList11);
        org.junit.Assert.assertNotNull(jspServlet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(inetAddress14);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNull(resourceLoader21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1800 + "'", int25 == 1800);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList27);
        org.junit.Assert.assertNotNull(jspServlet28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1800 + "'", int30 == 1800);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer38);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 8080 + "'", int52 == 8080);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(mimeMappings60);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1800 + "'", int65 == 1800);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "0.0.0.0" + "'", str76, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 8080 + "'", int79 == 8080);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection80);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList81);
        org.junit.Assert.assertNull(file87);
    }

    @Test
    public void test13201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13201");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader19 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader19;
        java.lang.String str21 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        java.net.InetAddress inetAddress22 = undertowEmbeddedServletContainerFactory0.getAddress();
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "0.0.0.0" + "'", str21, "0.0.0.0");
        org.junit.Assert.assertNull(inetAddress22);
    }

    @Test
    public void test13202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13202");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList5 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList9;
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 0);
        java.net.InetAddress inetAddress13 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress13);
        undertowEmbeddedServletContainerFactory0.bufferSize = 100;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo17 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int20 = undertowEmbeddedServletContainerFactory19.getSessionTimeout();
        boolean boolean21 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        java.io.File file22 = undertowEmbeddedServletContainerFactory19.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = undertowEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = undertowEmbeddedServletContainerFactory19.getMimeMappings();
        java.io.File file25 = undertowEmbeddedServletContainerFactory19.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int27 = undertowEmbeddedServletContainerFactory26.getPort();
        java.lang.Integer int28 = undertowEmbeddedServletContainerFactory26.bufferSize;
        java.io.File file29 = null;
        undertowEmbeddedServletContainerFactory26.setSessionStoreDir(file29);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer32 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap31);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray33 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer32 };
        undertowEmbeddedServletContainerFactory26.addInitializers(servletContextInitializerArray33);
        undertowEmbeddedServletContainerFactory19.addInitializers(servletContextInitializerArray33);
        initializer18.initializers = servletContextInitializerArray33;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int38 = undertowEmbeddedServletContainerFactory37.getSessionTimeout();
        boolean boolean39 = undertowEmbeddedServletContainerFactory37.isPersistSession();
        java.io.File file40 = undertowEmbeddedServletContainerFactory37.accessLogDirectory;
        undertowEmbeddedServletContainerFactory37.setRegisterDefaultServlet(true);
        java.lang.Boolean boolean43 = undertowEmbeddedServletContainerFactory37.directBuffers;
        org.springframework.boot.context.embedded.Compression compression44 = undertowEmbeddedServletContainerFactory37.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int46 = undertowEmbeddedServletContainerFactory45.getPort();
        java.lang.Integer int47 = undertowEmbeddedServletContainerFactory45.bufferSize;
        java.io.File file48 = null;
        undertowEmbeddedServletContainerFactory45.setSessionStoreDir(file48);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer53 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap52);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray54 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer53 };
        initializer51.initializers = servletContextInitializerArray54;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer58 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap57);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray59 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer58 };
        initializer56.initializers = servletContextInitializerArray59;
        initializer51.initializers = servletContextInitializerArray59;
        initializer50.initializers = servletContextInitializerArray59;
        undertowEmbeddedServletContainerFactory45.addInitializers(servletContextInitializerArray59);
        undertowEmbeddedServletContainerFactory37.addInitializers(servletContextInitializerArray59);
        initializer18.initializers = servletContextInitializerArray59;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.registerServletContainerInitializerToDriveServletContextInitializers(deploymentInfo17, servletContextInitializerArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8080 + "'", int27 == 8080);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(servletContextInitializerArray33);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1800 + "'", int38 == 1800);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNull(compression44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 8080 + "'", int46 == 8080);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(servletContextInitializerArray54);
        org.junit.Assert.assertNotNull(servletContextInitializerArray59);
    }

    @Test
    public void test13203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13203");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.lang.String str8 = undertowEmbeddedServletContainerFactory0.getContextPath();
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file9;
        java.io.File file11 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file11);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        boolean boolean14 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        org.springframework.core.io.ResourceLoader resourceLoader15 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(resourceLoader15);
    }

    @Test
    public void test13204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13204");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        org.xnio.XnioWorker xnioWorker13 = undertowEmbeddedServletContainerFactory0.createWorker();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.String str15 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        org.springframework.boot.context.embedded.Ssl ssl16 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl16);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(xnioWorker13);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test13205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13205");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory2.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int5 = undertowEmbeddedServletContainerFactory4.getPort();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory4.bufferSize;
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory4.setSessionStoreDir(file7);
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory4.accessLogDirectory = file9;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory4.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory12.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet16 = undertowEmbeddedServletContainerFactory12.getJspServlet();
        undertowEmbeddedServletContainerFactory4.setJspServlet(jspServlet16);
        undertowEmbeddedServletContainerFactory2.setJspServlet(jspServlet16);
        java.lang.Integer int19 = undertowEmbeddedServletContainerFactory2.workerThreads;
        boolean boolean20 = undertowEmbeddedServletContainerFactory2.isAccessLogEnabled();
        boolean boolean21 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8080 + "'", int5 == 8080);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNotNull(jspServlet16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test13206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13206");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        undertowEmbeddedServletContainerFactory5.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory5.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray12 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory5.addErrorPages(errorPageArray12);
        undertowEmbeddedServletContainerFactory2.addErrorPages(errorPageArray12);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file15);
        undertowEmbeddedServletContainerFactory2.useForwardHeaders = false;
        java.lang.Integer int19 = undertowEmbeddedServletContainerFactory2.workerThreads;
        org.springframework.core.io.ResourceLoader resourceLoader20 = null;
        undertowEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader20);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray23 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList24 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList24, undertowBuilderCustomizerArray23);
        undertowEmbeddedServletContainerFactory22.builderCustomizers = undertowBuilderCustomizerList24;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection27 = undertowEmbeddedServletContainerFactory22.getBuilderCustomizers();
        java.io.File file28 = undertowEmbeddedServletContainerFactory22.getDocumentRoot();
        org.xnio.XnioWorker xnioWorker29 = undertowEmbeddedServletContainerFactory22.createWorker();
        org.springframework.core.io.ResourceLoader resourceLoader30 = undertowEmbeddedServletContainerFactory22.resourceLoader;
        undertowEmbeddedServletContainerFactory22.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int34 = undertowEmbeddedServletContainerFactory33.getSessionTimeout();
        boolean boolean35 = undertowEmbeddedServletContainerFactory33.isPersistSession();
        undertowEmbeddedServletContainerFactory33.setPersistSession(false);
        undertowEmbeddedServletContainerFactory33.setUseForwardHeaders(true);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet40 = undertowEmbeddedServletContainerFactory33.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection41 = undertowEmbeddedServletContainerFactory33.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int43 = undertowEmbeddedServletContainerFactory42.getSessionTimeout();
        boolean boolean44 = undertowEmbeddedServletContainerFactory42.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList45 = undertowEmbeddedServletContainerFactory42.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet46 = undertowEmbeddedServletContainerFactory42.getJspServlet();
        boolean boolean47 = undertowEmbeddedServletContainerFactory42.useForwardHeaders;
        java.net.InetAddress inetAddress48 = undertowEmbeddedServletContainerFactory42.getAddress();
        java.lang.String str49 = undertowEmbeddedServletContainerFactory42.getDisplayName();
        undertowEmbeddedServletContainerFactory42.directBuffers = false;
        org.springframework.boot.context.embedded.Ssl ssl52 = undertowEmbeddedServletContainerFactory42.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int54 = undertowEmbeddedServletContainerFactory53.getSessionTimeout();
        boolean boolean55 = undertowEmbeddedServletContainerFactory53.isPersistSession();
        undertowEmbeddedServletContainerFactory53.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory53.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory53.setDisplayName("hi!");
        boolean boolean62 = undertowEmbeddedServletContainerFactory53.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int64 = undertowEmbeddedServletContainerFactory63.getSessionTimeout();
        boolean boolean65 = undertowEmbeddedServletContainerFactory63.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList66 = undertowEmbeddedServletContainerFactory63.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet67 = undertowEmbeddedServletContainerFactory63.getJspServlet();
        undertowEmbeddedServletContainerFactory63.directBuffers = true;
        java.io.File file70 = null;
        undertowEmbeddedServletContainerFactory63.setDocumentRoot(file70);
        undertowEmbeddedServletContainerFactory63.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray74 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory63.addBuilderCustomizers(undertowBuilderCustomizerArray74);
        undertowEmbeddedServletContainerFactory53.addBuilderCustomizers(undertowBuilderCustomizerArray74);
        undertowEmbeddedServletContainerFactory42.addBuilderCustomizers(undertowBuilderCustomizerArray74);
        undertowEmbeddedServletContainerFactory33.addBuilderCustomizers(undertowBuilderCustomizerArray74);
        undertowEmbeddedServletContainerFactory22.addBuilderCustomizers(undertowBuilderCustomizerArray74);
        undertowEmbeddedServletContainerFactory2.addBuilderCustomizers(undertowBuilderCustomizerArray74);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(errorPageArray12);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(xnioWorker29);
        org.junit.Assert.assertNull(resourceLoader30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1800 + "'", int34 == 1800);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(errorPageSet40);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1800 + "'", int43 == 1800);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList45);
        org.junit.Assert.assertNotNull(jspServlet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(inetAddress48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(ssl52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1800 + "'", int54 == 1800);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1800 + "'", int64 == 1800);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList66);
        org.junit.Assert.assertNotNull(jspServlet67);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray74);
    }

    @Test
    public void test13207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13207");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        int int6 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file8;
        java.io.File file10 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList11 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList11);
    }

    @Test
    public void test13208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13208");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        java.io.File file7 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.Ssl ssl8 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl8);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 1;
        boolean boolean12 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.Compression compression13 = undertowEmbeddedServletContainerFactory0.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory15.setWorkerThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder19 = undertowEmbeddedServletContainerFactory15.createBuilder((int) (byte) -1);
        undertowEmbeddedServletContainerFactory15.buffersPerRegion = (-1);
        java.lang.ClassLoader classLoader22 = undertowEmbeddedServletContainerFactory15.getServletClassLoader();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int24 = undertowEmbeddedServletContainerFactory23.getSessionTimeout();
        boolean boolean25 = undertowEmbeddedServletContainerFactory23.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList26 = undertowEmbeddedServletContainerFactory23.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet27 = undertowEmbeddedServletContainerFactory23.getJspServlet();
        undertowEmbeddedServletContainerFactory23.directBuffers = true;
        java.io.File file30 = null;
        undertowEmbeddedServletContainerFactory23.setDocumentRoot(file30);
        undertowEmbeddedServletContainerFactory23.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray34 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory23.addBuilderCustomizers(undertowBuilderCustomizerArray34);
        undertowEmbeddedServletContainerFactory15.addBuilderCustomizers(undertowBuilderCustomizerArray34);
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray34);
        int int38 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(compression13);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(classLoader22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1800 + "'", int24 == 1800);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList26);
        org.junit.Assert.assertNotNull(jspServlet27);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1800 + "'", int38 == 1800);
    }

    @Test
    public void test13209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13209");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean6 = undertowEmbeddedServletContainerFactory5.isAccessLogEnabled();
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory5.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory10.getMimeMappings();
        undertowEmbeddedServletContainerFactory5.setMimeMappings(mimeMappings11);
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings11);
        boolean boolean14 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        org.springframework.boot.context.embedded.Compression compression15 = undertowEmbeddedServletContainerFactory0.getCompression();
        java.lang.Class<?> wildcardClass16 = undertowEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(compression15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test13210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13210");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int5 = undertowEmbeddedServletContainerFactory4.getSessionTimeout();
        boolean boolean6 = undertowEmbeddedServletContainerFactory4.isPersistSession();
        undertowEmbeddedServletContainerFactory4.setPersistSession(false);
        undertowEmbeddedServletContainerFactory4.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList11 = undertowEmbeddedServletContainerFactory4.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory4.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = undertowEmbeddedServletContainerFactory14.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet18 = undertowEmbeddedServletContainerFactory14.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int20 = undertowEmbeddedServletContainerFactory19.getSessionTimeout();
        boolean boolean21 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        undertowEmbeddedServletContainerFactory19.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder25 = undertowEmbeddedServletContainerFactory19.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager26 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer28 = undertowEmbeddedServletContainerFactory14.getUndertowEmbeddedServletContainer(builder25, deploymentManager26, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager29 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer31 = undertowEmbeddedServletContainerFactory4.getUndertowEmbeddedServletContainer(builder25, deploymentManager29, (int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray32 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList33 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList33, undertowDeploymentInfoCustomizerArray32);
        undertowEmbeddedServletContainerFactory4.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList33;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList33;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        org.springframework.core.io.ResourceLoader resourceLoader43 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader43);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int46 = undertowEmbeddedServletContainerFactory45.getSessionTimeout();
        boolean boolean47 = undertowEmbeddedServletContainerFactory45.isPersistSession();
        undertowEmbeddedServletContainerFactory45.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder51 = undertowEmbeddedServletContainerFactory45.createBuilder((-1));
        undertowEmbeddedServletContainerFactory45.setBufferSize((java.lang.Integer) 10);
        undertowEmbeddedServletContainerFactory45.useForwardHeaders = false;
        boolean boolean56 = undertowEmbeddedServletContainerFactory45.isPersistSession();
        java.lang.String str57 = undertowEmbeddedServletContainerFactory45.getContextPath();
        boolean boolean58 = undertowEmbeddedServletContainerFactory45.accessLogEnabled;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList59 = undertowEmbeddedServletContainerFactory45.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList59;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1800 + "'", int5 == 1800);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList17);
        org.junit.Assert.assertNotNull(jspServlet18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer28);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer31);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1800 + "'", int46 == 1800);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList59);
    }

    @Test
    public void test13211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13211");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "";
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory12.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int20 = undertowEmbeddedServletContainerFactory19.getSessionTimeout();
        boolean boolean21 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        java.io.File file22 = undertowEmbeddedServletContainerFactory19.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList23 = undertowEmbeddedServletContainerFactory19.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory12.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList23;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader26 = null;
        undertowEmbeddedServletContainerFactory12.setResourceLoader(resourceLoader26);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        undertowEmbeddedServletContainerFactory28.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory28.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory28.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory28.setSessionTimeout(1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList39 = undertowEmbeddedServletContainerFactory28.builderCustomizers;
        undertowEmbeddedServletContainerFactory12.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList39);
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList39);
        java.io.File file42 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList43 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.io.File file44 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file44);
        java.io.File file46 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file46);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList23);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList39);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList43);
    }

    @Test
    public void test13212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13212");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file5;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList11 = undertowEmbeddedServletContainerFactory8.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet12 = undertowEmbeddedServletContainerFactory8.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet12);
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader14;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList19 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet20 = undertowEmbeddedServletContainerFactory16.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList21 = undertowEmbeddedServletContainerFactory16.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int23 = undertowEmbeddedServletContainerFactory22.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray24 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory22.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray24);
        undertowEmbeddedServletContainerFactory16.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray24);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray24);
        java.io.File file28 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList29 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection30 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        int int31 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.Ssl ssl32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode33 = undertowEmbeddedServletContainerFactory0.getSslClientAuthMode(ssl32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList11);
        org.junit.Assert.assertNotNull(jspServlet12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList19);
        org.junit.Assert.assertNotNull(jspServlet20);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 8080 + "'", int23 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray24);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList29);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1800 + "'", int31 == 1800);
    }

    @Test
    public void test13213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13213");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file5;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList11 = undertowEmbeddedServletContainerFactory8.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet12 = undertowEmbeddedServletContainerFactory8.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet12);
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader14;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList19 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet20 = undertowEmbeddedServletContainerFactory16.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList21 = undertowEmbeddedServletContainerFactory16.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int23 = undertowEmbeddedServletContainerFactory22.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray24 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory22.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray24);
        undertowEmbeddedServletContainerFactory16.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray24);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray24);
        java.io.File file28 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList29 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.lang.String str30 = undertowEmbeddedServletContainerFactory0.getContextPath();
        java.lang.Boolean boolean31 = undertowEmbeddedServletContainerFactory0.directBuffers;
        java.lang.Integer int32 = undertowEmbeddedServletContainerFactory0.ioThreads;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo33 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo33);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList11);
        org.junit.Assert.assertNotNull(jspServlet12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList19);
        org.junit.Assert.assertNotNull(jspServlet20);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 8080 + "'", int23 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray24);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(int32);
    }

    @Test
    public void test13214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13214");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPort(0);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 1);
        java.io.File file7 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file8);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader10);
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = undertowEmbeddedServletContainerFactory14.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet18 = undertowEmbeddedServletContainerFactory14.getJspServlet();
        boolean boolean19 = undertowEmbeddedServletContainerFactory14.useForwardHeaders;
        java.net.InetAddress inetAddress20 = undertowEmbeddedServletContainerFactory14.getAddress();
        java.lang.String str21 = undertowEmbeddedServletContainerFactory14.getDisplayName();
        undertowEmbeddedServletContainerFactory14.directBuffers = false;
        undertowEmbeddedServletContainerFactory14.setPort((int) ' ');
        org.springframework.boot.context.embedded.Compression compression26 = undertowEmbeddedServletContainerFactory14.getCompression();
        undertowEmbeddedServletContainerFactory14.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory14.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int32 = undertowEmbeddedServletContainerFactory31.getSessionTimeout();
        boolean boolean33 = undertowEmbeddedServletContainerFactory31.isPersistSession();
        undertowEmbeddedServletContainerFactory31.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder37 = undertowEmbeddedServletContainerFactory31.createBuilder((-1));
        undertowEmbeddedServletContainerFactory31.accessLogEnabled = true;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet40 = undertowEmbeddedServletContainerFactory31.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int42 = undertowEmbeddedServletContainerFactory41.getSessionTimeout();
        boolean boolean43 = undertowEmbeddedServletContainerFactory41.isPersistSession();
        java.io.File file44 = undertowEmbeddedServletContainerFactory41.accessLogDirectory;
        java.lang.String str45 = undertowEmbeddedServletContainerFactory41.getListenAddress();
        undertowEmbeddedServletContainerFactory41.setIoThreads((java.lang.Integer) 1);
        java.lang.String str48 = undertowEmbeddedServletContainerFactory41.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int50 = undertowEmbeddedServletContainerFactory49.getSessionTimeout();
        boolean boolean51 = undertowEmbeddedServletContainerFactory49.isPersistSession();
        undertowEmbeddedServletContainerFactory49.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory49.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory49.setDisplayName("hi!");
        boolean boolean58 = undertowEmbeddedServletContainerFactory49.isRegisterDefaultServlet();
        java.io.File file59 = undertowEmbeddedServletContainerFactory49.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray60 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory49.addBuilderCustomizers(undertowBuilderCustomizerArray60);
        undertowEmbeddedServletContainerFactory41.addBuilderCustomizers(undertowBuilderCustomizerArray60);
        undertowEmbeddedServletContainerFactory31.addBuilderCustomizers(undertowBuilderCustomizerArray60);
        undertowEmbeddedServletContainerFactory14.addBuilderCustomizers(undertowBuilderCustomizerArray60);
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray60);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList66 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet67 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        org.xnio.XnioWorker xnioWorker68 = undertowEmbeddedServletContainerFactory0.createWorker();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList17);
        org.junit.Assert.assertNotNull(jspServlet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(inetAddress20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(compression26);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1800 + "'", int32 == 1800);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(errorPageSet40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1800 + "'", int42 == 1800);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "0.0.0.0" + "'", str45, "0.0.0.0");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1800 + "'", int50 == 1800);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray60);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList66);
        org.junit.Assert.assertNotNull(errorPageSet67);
        org.junit.Assert.assertNotNull(xnioWorker68);
    }

    @Test
    public void test13215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13215");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.io.File file10 = undertowEmbeddedServletContainerFactory7.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList11 = undertowEmbeddedServletContainerFactory7.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList11;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int14 = undertowEmbeddedServletContainerFactory13.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader19 = undertowEmbeddedServletContainerFactory17.resourceLoader;
        undertowEmbeddedServletContainerFactory17.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int23 = undertowEmbeddedServletContainerFactory22.getSessionTimeout();
        boolean boolean24 = undertowEmbeddedServletContainerFactory22.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList25 = undertowEmbeddedServletContainerFactory22.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet26 = undertowEmbeddedServletContainerFactory22.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int28 = undertowEmbeddedServletContainerFactory27.getSessionTimeout();
        boolean boolean29 = undertowEmbeddedServletContainerFactory27.isPersistSession();
        undertowEmbeddedServletContainerFactory27.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder33 = undertowEmbeddedServletContainerFactory27.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager34 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer36 = undertowEmbeddedServletContainerFactory22.getUndertowEmbeddedServletContainer(builder33, deploymentManager34, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager37 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer39 = undertowEmbeddedServletContainerFactory17.getUndertowEmbeddedServletContainer(builder33, deploymentManager37, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager40 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer42 = undertowEmbeddedServletContainerFactory13.getUndertowEmbeddedServletContainer(builder33, deploymentManager40, (int) (short) -1);
        io.undertow.servlet.api.DeploymentManager deploymentManager43 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer45 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder33, deploymentManager43, 10);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        org.springframework.core.io.ResourceLoader resourceLoader48 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(false);
        java.net.InetAddress inetAddress53 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress53);
        org.xnio.XnioWorker xnioWorker55 = undertowEmbeddedServletContainerFactory0.createWorker();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8080 + "'", int14 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNull(resourceLoader19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1800 + "'", int23 == 1800);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList25);
        org.junit.Assert.assertNotNull(jspServlet26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1800 + "'", int28 == 1800);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer36);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer39);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer42);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer45);
        org.junit.Assert.assertNull(resourceLoader48);
        org.junit.Assert.assertNotNull(xnioWorker55);
    }

    @Test
    public void test13216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13216");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int3 = undertowEmbeddedServletContainerFactory2.getSessionTimeout();
        boolean boolean4 = undertowEmbeddedServletContainerFactory2.isPersistSession();
        undertowEmbeddedServletContainerFactory2.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder8 = undertowEmbeddedServletContainerFactory2.createBuilder((-1));
        undertowEmbeddedServletContainerFactory2.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory11.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray13);
        undertowEmbeddedServletContainerFactory2.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray13);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray13);
        org.springframework.boot.context.embedded.ErrorPage errorPage17 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage18 = undertowEmbeddedServletContainerFactory1.getUndertowErrorPage(errorPage17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1800 + "'", int3 == 1800);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8080 + "'", int12 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray13);
    }

    @Test
    public void test13217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13217");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression8);
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file10;
        undertowEmbeddedServletContainerFactory0.ioThreads = 8080;
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray14 = undertowEmbeddedServletContainerFactory0.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
    }

    @Test
    public void test13218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13218");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setBufferSize((java.lang.Integer) 10);
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory2.buffersPerRegion;
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory2.ioThreads;
        int int9 = undertowEmbeddedServletContainerFactory2.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean12 = undertowEmbeddedServletContainerFactory11.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory11.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory11.setUseForwardHeaders(true);
        boolean boolean17 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        undertowEmbeddedServletContainerFactory11.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.Ssl ssl20 = null;
        undertowEmbeddedServletContainerFactory11.setSsl(ssl20);
        boolean boolean22 = undertowEmbeddedServletContainerFactory11.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int24 = undertowEmbeddedServletContainerFactory23.getSessionTimeout();
        boolean boolean25 = undertowEmbeddedServletContainerFactory23.isPersistSession();
        java.io.File file26 = undertowEmbeddedServletContainerFactory23.accessLogDirectory;
        java.lang.String str27 = undertowEmbeddedServletContainerFactory23.getListenAddress();
        undertowEmbeddedServletContainerFactory23.setIoThreads((java.lang.Integer) 1);
        java.lang.String str30 = undertowEmbeddedServletContainerFactory23.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int32 = undertowEmbeddedServletContainerFactory31.getSessionTimeout();
        boolean boolean33 = undertowEmbeddedServletContainerFactory31.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList34 = undertowEmbeddedServletContainerFactory31.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet35 = undertowEmbeddedServletContainerFactory31.getJspServlet();
        boolean boolean36 = undertowEmbeddedServletContainerFactory31.useForwardHeaders;
        java.net.InetAddress inetAddress37 = undertowEmbeddedServletContainerFactory31.getAddress();
        undertowEmbeddedServletContainerFactory31.setAccessLogPattern("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = undertowEmbeddedServletContainerFactory42.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader44 = undertowEmbeddedServletContainerFactory42.resourceLoader;
        undertowEmbeddedServletContainerFactory42.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int48 = undertowEmbeddedServletContainerFactory47.getSessionTimeout();
        boolean boolean49 = undertowEmbeddedServletContainerFactory47.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList50 = undertowEmbeddedServletContainerFactory47.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet51 = undertowEmbeddedServletContainerFactory47.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int53 = undertowEmbeddedServletContainerFactory52.getSessionTimeout();
        boolean boolean54 = undertowEmbeddedServletContainerFactory52.isPersistSession();
        undertowEmbeddedServletContainerFactory52.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder58 = undertowEmbeddedServletContainerFactory52.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager59 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer61 = undertowEmbeddedServletContainerFactory47.getUndertowEmbeddedServletContainer(builder58, deploymentManager59, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager62 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer64 = undertowEmbeddedServletContainerFactory42.getUndertowEmbeddedServletContainer(builder58, deploymentManager62, (int) ' ');
        boolean boolean65 = undertowEmbeddedServletContainerFactory42.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory42.setPort((-1));
        java.lang.Integer int68 = undertowEmbeddedServletContainerFactory42.bufferSize;
        io.undertow.Undertow.Builder builder70 = undertowEmbeddedServletContainerFactory42.createBuilder(0);
        io.undertow.servlet.api.DeploymentManager deploymentManager71 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer73 = undertowEmbeddedServletContainerFactory31.getUndertowEmbeddedServletContainer(builder70, deploymentManager71, (int) '4');
        java.lang.Boolean boolean74 = undertowEmbeddedServletContainerFactory31.directBuffers;
        io.undertow.Undertow.Builder builder76 = undertowEmbeddedServletContainerFactory31.createBuilder((int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager77 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer79 = undertowEmbeddedServletContainerFactory23.getUndertowEmbeddedServletContainer(builder76, deploymentManager77, (int) '#');
        io.undertow.servlet.api.DeploymentManager deploymentManager80 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer82 = undertowEmbeddedServletContainerFactory11.getUndertowEmbeddedServletContainer(builder76, deploymentManager80, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager83 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer85 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder76, deploymentManager83, (int) (byte) 10);
        java.lang.Integer int86 = undertowEmbeddedServletContainerFactory2.ioThreads;
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1800 + "'", int24 == 1800);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "0.0.0.0" + "'", str27, "0.0.0.0");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1800 + "'", int32 == 1800);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList34);
        org.junit.Assert.assertNotNull(jspServlet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(inetAddress37);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNull(resourceLoader44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1800 + "'", int48 == 1800);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList50);
        org.junit.Assert.assertNotNull(jspServlet51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1800 + "'", int53 == 1800);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer61);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer73);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer79);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer82);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer85);
        org.junit.Assert.assertNull(int86);
    }

    @Test
    public void test13219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13219");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet10);
        java.net.InetAddress inetAddress12 = undertowEmbeddedServletContainerFactory0.getAddress();
        java.lang.ClassLoader classLoader13 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        java.lang.String str14 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        org.springframework.core.io.ResourceLoader resourceLoader19 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertNull(inetAddress12);
        org.junit.Assert.assertNotNull(classLoader13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0.0.0.0" + "'", str14, "0.0.0.0");
        org.junit.Assert.assertNull(resourceLoader19);
        org.junit.Assert.assertNotNull(errorPageSet20);
    }

    @Test
    public void test13220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13220");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory2.setPort((-1));
        java.lang.Integer int28 = undertowEmbeddedServletContainerFactory2.bufferSize;
        io.undertow.Undertow.Builder builder30 = undertowEmbeddedServletContainerFactory2.createBuilder(0);
        java.io.File file31 = undertowEmbeddedServletContainerFactory2.getSessionStoreDir();
        java.io.File file32 = undertowEmbeddedServletContainerFactory2.getSessionStoreDir();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection33 = undertowEmbeddedServletContainerFactory2.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory2.setIoThreads((java.lang.Integer) 1800);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection33);
    }

    @Test
    public void test13221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13221");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        boolean boolean3 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory7.setJspServletClassName("");
        int int10 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory7.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "";
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file15);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory0.getSsl();
        java.io.File file18 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file18);
        java.lang.Integer int20 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertNull(int20);
    }

    @Test
    public void test13222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13222");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory0.ioThreads;
        java.io.File file9 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test13223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13223");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.lang.Integer int3 = undertowEmbeddedServletContainerFactory1.bufferSize;
        java.io.File file4 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection5 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo6 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo6);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.io.File file10 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.net.InetAddress inetAddress11 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress11);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection5);
        org.junit.Assert.assertNull(file10);
    }

    @Test
    public void test13224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13224");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        java.io.File file14 = undertowEmbeddedServletContainerFactory11.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = undertowEmbeddedServletContainerFactory11.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = undertowEmbeddedServletContainerFactory11.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int18 = undertowEmbeddedServletContainerFactory17.getSessionTimeout();
        boolean boolean19 = undertowEmbeddedServletContainerFactory17.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList20 = undertowEmbeddedServletContainerFactory17.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet21 = undertowEmbeddedServletContainerFactory17.getJspServlet();
        undertowEmbeddedServletContainerFactory11.setJspServlet(jspServlet21);
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet21);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection24 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        java.lang.String str25 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection26 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1800 + "'", int18 == 1800);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList20);
        org.junit.Assert.assertNotNull(jspServlet21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection26);
    }

    @Test
    public void test13225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13225");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.io.File file10 = undertowEmbeddedServletContainerFactory7.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList11 = undertowEmbeddedServletContainerFactory7.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList11;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.JspServlet jspServlet15 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("hi!");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList11);
        org.junit.Assert.assertNotNull(jspServlet15);
    }

    @Test
    public void test13226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13226");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList14, undertowBuilderCustomizerArray13);
        undertowEmbeddedServletContainerFactory12.builderCustomizers = undertowBuilderCustomizerList14;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection17 = undertowEmbeddedServletContainerFactory12.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection17);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.Integer int20 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.lang.Integer int21 = undertowEmbeddedServletContainerFactory0.ioThreads;
        java.io.File file22 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file22);
        undertowEmbeddedServletContainerFactory0.ioThreads = 0;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection17);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(int21);
    }

    @Test
    public void test13227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13227");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader9);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 1);
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader14;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(mimeMappings11);
    }

    @Test
    public void test13228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13228");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList3, undertowDeploymentInfoCustomizerArray2);
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList3;
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        java.lang.String str9 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 35);
        org.springframework.boot.context.embedded.JspServlet jspServlet14 = null;
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet14);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "0.0.0.0" + "'", str9, "0.0.0.0");
    }

    @Test
    public void test13229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13229");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 8080);
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        undertowEmbeddedServletContainerFactory0.bufferSize = (-1);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
    }

    @Test
    public void test13230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13230");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory1.ioThreads = 1;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        int int8 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.workerThreads = 100;
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test13231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13231");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        io.undertow.Undertow.Builder builder9 = undertowEmbeddedServletContainerFactory1.createBuilder(8080);
        java.net.InetAddress inetAddress10 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader11 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(inetAddress10);
        org.junit.Assert.assertNull(resourceLoader11);
    }

    @Test
    public void test13232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13232");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        java.io.File file11 = undertowEmbeddedServletContainerFactory8.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        java.io.File file14 = undertowEmbeddedServletContainerFactory8.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int16 = undertowEmbeddedServletContainerFactory15.getPort();
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory15.bufferSize;
        java.io.File file18 = null;
        undertowEmbeddedServletContainerFactory15.setSessionStoreDir(file18);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer21 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap20);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray22 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer21 };
        undertowEmbeddedServletContainerFactory15.addInitializers(servletContextInitializerArray22);
        undertowEmbeddedServletContainerFactory8.addInitializers(servletContextInitializerArray22);
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray22);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer26 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray27 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer26 };
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray27);
        java.lang.Integer int29 = undertowEmbeddedServletContainerFactory0.bufferSize;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.workerThreads = 1;
        undertowEmbeddedServletContainerFactory0.setPort((int) (byte) 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 8080 + "'", int16 == 8080);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray22);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray27);
        org.junit.Assert.assertNull(int29);
    }

    @Test
    public void test13233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13233");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.xnio.XnioWorker xnioWorker2 = undertowEmbeddedServletContainerFactory1.createWorker();
        undertowEmbeddedServletContainerFactory1.accessLogEnabled = true;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo5 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo5);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.ioThreads = 1;
        org.junit.Assert.assertNotNull(xnioWorker2);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertNotNull(errorPageSet8);
    }

    @Test
    public void test13234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13234");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.net.InetAddress inetAddress9 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress9);
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        io.undertow.servlet.api.DeploymentInfo deploymentInfo13 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo13);
        java.io.File file15 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        boolean boolean16 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int18 = undertowEmbeddedServletContainerFactory17.getSessionTimeout();
        boolean boolean19 = undertowEmbeddedServletContainerFactory17.isPersistSession();
        java.io.File file20 = undertowEmbeddedServletContainerFactory17.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        java.lang.Integer int23 = undertowEmbeddedServletContainerFactory17.buffersPerRegion;
        io.undertow.Undertow.Builder builder25 = undertowEmbeddedServletContainerFactory17.createBuilder(10);
        io.undertow.servlet.api.DeploymentManager deploymentManager26 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer28 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder25, deploymentManager26, (int) (byte) 100);
        java.io.File file29 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file29;
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = true;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1800 + "'", int18 == 1800);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer28);
    }

    @Test
    public void test13235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13235");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        java.lang.String str4 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getPort();
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory5.bufferSize;
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory5.setSessionStoreDir(file8);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getSessionTimeout();
        boolean boolean12 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = undertowEmbeddedServletContainerFactory10.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet14 = undertowEmbeddedServletContainerFactory10.getJspServlet();
        boolean boolean15 = undertowEmbeddedServletContainerFactory10.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet16 = undertowEmbeddedServletContainerFactory10.getErrorPages();
        undertowEmbeddedServletContainerFactory5.setErrorPages(errorPageSet16);
        undertowEmbeddedServletContainerFactory5.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList20 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        undertowEmbeddedServletContainerFactory5.bufferSize = 8080;
        java.net.InetAddress inetAddress23 = undertowEmbeddedServletContainerFactory5.getAddress();
        java.net.InetAddress inetAddress24 = null;
        undertowEmbeddedServletContainerFactory5.setAddress(inetAddress24);
        undertowEmbeddedServletContainerFactory5.setPersistSession(true);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo28 = null;
        undertowEmbeddedServletContainerFactory5.configureErrorPages(deploymentInfo28);
        undertowEmbeddedServletContainerFactory5.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int33 = undertowEmbeddedServletContainerFactory32.getSessionTimeout();
        boolean boolean34 = undertowEmbeddedServletContainerFactory32.isPersistSession();
        undertowEmbeddedServletContainerFactory32.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory32.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int40 = undertowEmbeddedServletContainerFactory39.getSessionTimeout();
        boolean boolean41 = undertowEmbeddedServletContainerFactory39.isPersistSession();
        undertowEmbeddedServletContainerFactory39.setPersistSession(false);
        undertowEmbeddedServletContainerFactory39.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList46 = undertowEmbeddedServletContainerFactory39.deploymentInfoCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList47 = undertowEmbeddedServletContainerFactory39.builderCustomizers;
        undertowEmbeddedServletContainerFactory32.builderCustomizers = undertowBuilderCustomizerList47;
        undertowEmbeddedServletContainerFactory32.workerThreads = 10;
        undertowEmbeddedServletContainerFactory32.setRegisterDefaultServlet(false);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList53 = undertowEmbeddedServletContainerFactory32.builderCustomizers;
        undertowEmbeddedServletContainerFactory5.builderCustomizers = undertowBuilderCustomizerList53;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList53;
        org.springframework.boot.context.embedded.Compression compression56 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.io.File file57 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("0.0.0.0");
        java.net.InetAddress inetAddress60 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress60);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8080 + "'", int6 == 8080);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1800 + "'", int11 == 1800);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList13);
        org.junit.Assert.assertNotNull(jspServlet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(errorPageSet16);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList20);
        org.junit.Assert.assertNull(inetAddress23);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1800 + "'", int33 == 1800);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1800 + "'", int40 == 1800);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList46);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList47);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList53);
        org.junit.Assert.assertNull(compression56);
        org.junit.Assert.assertNull(file57);
    }

    @Test
    public void test13236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13236");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        java.lang.Integer int26 = undertowEmbeddedServletContainerFactory2.bufferSize;
        java.lang.String str27 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet28 = undertowEmbeddedServletContainerFactory2.getErrorPages();
        undertowEmbeddedServletContainerFactory2.setAccessLogPattern("");
        undertowEmbeddedServletContainerFactory2.workerThreads = 100;
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(errorPageSet28);
    }

    @Test
    public void test13237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13237");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList3, undertowDeploymentInfoCustomizerArray2);
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList3;
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        boolean boolean8 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList11 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        io.undertow.server.HttpHandler httpHandler12 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.accesslog.AccessLogHandler accessLogHandler13 = undertowEmbeddedServletContainerFactory0.createAccessLogHandler(httpHandler12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Access log directory is not set");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList11);
    }

    @Test
    public void test13238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13238");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo6 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo6);
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 0);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 35;
        java.io.File file14 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test13239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13239");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory1.accessLogDirectory = file7;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo9 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureAccessLog(deploymentInfo9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test13240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13240");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList14, undertowBuilderCustomizerArray13);
        undertowEmbeddedServletContainerFactory12.builderCustomizers = undertowBuilderCustomizerList14;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection17 = undertowEmbeddedServletContainerFactory12.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection17);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.bufferSize = 0;
        org.springframework.boot.context.embedded.Compression compression22 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression22);
        java.util.concurrent.TimeUnit timeUnit25 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 100, timeUnit25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection17);
        org.junit.Assert.assertNotNull(mimeMappings19);
    }

    @Test
    public void test13241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13241");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory0.directBuffers;
        org.springframework.boot.context.embedded.Compression compression7 = undertowEmbeddedServletContainerFactory0.getCompression();
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        java.net.InetAddress inetAddress10 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int14 = undertowEmbeddedServletContainerFactory13.getSessionTimeout();
        boolean boolean15 = undertowEmbeddedServletContainerFactory13.isPersistSession();
        java.io.File file16 = undertowEmbeddedServletContainerFactory13.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        java.io.File file19 = undertowEmbeddedServletContainerFactory13.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int21 = undertowEmbeddedServletContainerFactory20.getPort();
        java.lang.Integer int22 = undertowEmbeddedServletContainerFactory20.bufferSize;
        java.io.File file23 = null;
        undertowEmbeddedServletContainerFactory20.setSessionStoreDir(file23);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer26 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap25);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray27 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer26 };
        undertowEmbeddedServletContainerFactory20.addInitializers(servletContextInitializerArray27);
        undertowEmbeddedServletContainerFactory13.addInitializers(servletContextInitializerArray27);
        initializer12.initializers = servletContextInitializerArray27;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int32 = undertowEmbeddedServletContainerFactory31.getSessionTimeout();
        boolean boolean33 = undertowEmbeddedServletContainerFactory31.isPersistSession();
        java.io.File file34 = undertowEmbeddedServletContainerFactory31.accessLogDirectory;
        undertowEmbeddedServletContainerFactory31.setRegisterDefaultServlet(true);
        java.lang.Boolean boolean37 = undertowEmbeddedServletContainerFactory31.directBuffers;
        org.springframework.boot.context.embedded.Compression compression38 = undertowEmbeddedServletContainerFactory31.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int40 = undertowEmbeddedServletContainerFactory39.getPort();
        java.lang.Integer int41 = undertowEmbeddedServletContainerFactory39.bufferSize;
        java.io.File file42 = null;
        undertowEmbeddedServletContainerFactory39.setSessionStoreDir(file42);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer47 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap46);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray48 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer47 };
        initializer45.initializers = servletContextInitializerArray48;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer52 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap51);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray53 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer52 };
        initializer50.initializers = servletContextInitializerArray53;
        initializer45.initializers = servletContextInitializerArray53;
        initializer44.initializers = servletContextInitializerArray53;
        undertowEmbeddedServletContainerFactory39.addInitializers(servletContextInitializerArray53);
        undertowEmbeddedServletContainerFactory31.addInitializers(servletContextInitializerArray53);
        initializer12.initializers = servletContextInitializerArray53;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap62 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer63 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap62);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray64 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer63 };
        initializer61.initializers = servletContextInitializerArray64;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap67 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer68 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap67);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray69 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer68 };
        initializer66.initializers = servletContextInitializerArray69;
        initializer61.initializers = servletContextInitializerArray69;
        initializer60.initializers = servletContextInitializerArray69;
        initializer12.initializers = servletContextInitializerArray69;
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray69);
        undertowEmbeddedServletContainerFactory0.ioThreads = 0;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo77 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.configureAccessLog(deploymentInfo77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(compression7);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1800 + "'", int14 == 1800);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8080 + "'", int21 == 8080);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(servletContextInitializerArray27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1800 + "'", int32 == 1800);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNull(compression38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 8080 + "'", int40 == 8080);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(servletContextInitializerArray48);
        org.junit.Assert.assertNotNull(servletContextInitializerArray53);
        org.junit.Assert.assertNotNull(servletContextInitializerArray64);
        org.junit.Assert.assertNotNull(servletContextInitializerArray69);
    }

    @Test
    public void test13242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13242");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.jarPath = "hi!";
        jarResourceManager0.jarPath = "0.0.0.0";
        java.lang.String str5 = jarResourceManager0.jarPath;
        jarResourceManager0.jarPath = "0.0.0.0";
        jarResourceManager0.jarPath = "hi!";
        boolean boolean10 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str11 = jarResourceManager0.jarPath;
        jarResourceManager0.jarPath = "";
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource15 = jarResourceManager0.getResource("");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "0.0.0.0" + "'", str5, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test13243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13243");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        io.undertow.Undertow.Builder builder8 = undertowEmbeddedServletContainerFactory0.createBuilder(10);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test13244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13244");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory1.ioThreads = 1;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1);
        boolean boolean12 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 97;
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test13245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13245");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory2.setPort((-1));
        java.lang.Integer int28 = undertowEmbeddedServletContainerFactory2.bufferSize;
        io.undertow.Undertow.Builder builder30 = undertowEmbeddedServletContainerFactory2.createBuilder(0);
        java.io.File file31 = undertowEmbeddedServletContainerFactory2.getSessionStoreDir();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList32 = undertowEmbeddedServletContainerFactory2.deploymentInfoCustomizers;
        java.lang.Integer int33 = undertowEmbeddedServletContainerFactory2.buffersPerRegion;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int35 = undertowEmbeddedServletContainerFactory34.getSessionTimeout();
        boolean boolean36 = undertowEmbeddedServletContainerFactory34.isPersistSession();
        undertowEmbeddedServletContainerFactory34.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl39 = null;
        undertowEmbeddedServletContainerFactory34.setSsl(ssl39);
        org.springframework.boot.context.embedded.JspServlet jspServlet41 = undertowEmbeddedServletContainerFactory34.getJspServlet();
        undertowEmbeddedServletContainerFactory34.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean46 = undertowEmbeddedServletContainerFactory45.isAccessLogEnabled();
        org.springframework.boot.context.embedded.Ssl ssl47 = undertowEmbeddedServletContainerFactory45.getSsl();
        java.lang.Integer int48 = undertowEmbeddedServletContainerFactory45.bufferSize;
        java.io.File file49 = undertowEmbeddedServletContainerFactory45.getDocumentRoot();
        org.springframework.boot.context.embedded.JspServlet jspServlet50 = undertowEmbeddedServletContainerFactory45.getJspServlet();
        undertowEmbeddedServletContainerFactory34.setJspServlet(jspServlet50);
        undertowEmbeddedServletContainerFactory2.setJspServlet(jspServlet50);
        boolean boolean53 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray54 = undertowEmbeddedServletContainerFactory2.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1800 + "'", int35 == 1800);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jspServlet41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(ssl47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(jspServlet50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test13246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13246");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(1);
        boolean boolean11 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        java.lang.String str12 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = true;
        int int15 = undertowEmbeddedServletContainerFactory0.getPort();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection16 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo17 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo17);
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8080 + "'", int15 == 8080);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection16);
    }

    @Test
    public void test13247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13247");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("hi!");
        io.undertow.servlet.api.DeploymentInfo deploymentInfo10 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo10);
        java.lang.ClassLoader classLoader12 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        java.lang.String str13 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(classLoader12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0.0.0.0" + "'", str13, "0.0.0.0");
    }

    @Test
    public void test13248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13248");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        boolean boolean9 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        boolean boolean11 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        java.lang.String str12 = undertowEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.boot.context.embedded.Ssl ssl13 = undertowEmbeddedServletContainerFactory0.getSsl();
        java.io.File file14 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.ErrorPage errorPage15 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage16 = undertowEmbeddedServletContainerFactory0.getUndertowErrorPage(errorPage15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(ssl13);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test13249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13249");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory0.getSsl();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList12;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection15 = undertowEmbeddedServletContainerFactory10.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer19 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap18);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer21 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap20);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer23 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap22);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer25 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap24);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer19, initParameterConfiguringServletContextInitializer21, initParameterConfiguringServletContextInitializer23, initParameterConfiguringServletContextInitializer25 };
        undertowEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray26);
        undertowEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray26);
        boolean boolean29 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int31 = undertowEmbeddedServletContainerFactory30.getSessionTimeout();
        boolean boolean32 = undertowEmbeddedServletContainerFactory30.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList33 = undertowEmbeddedServletContainerFactory30.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet34 = undertowEmbeddedServletContainerFactory30.getJspServlet();
        boolean boolean35 = undertowEmbeddedServletContainerFactory30.isPersistSession();
        org.springframework.boot.context.embedded.Ssl ssl36 = undertowEmbeddedServletContainerFactory30.getSsl();
        undertowEmbeddedServletContainerFactory30.setJspServletClassName("hi!");
        io.undertow.Undertow.Builder builder40 = undertowEmbeddedServletContainerFactory30.createBuilder((int) 'a');
        io.undertow.servlet.api.DeploymentManager deploymentManager41 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer43 = undertowEmbeddedServletContainerFactory10.getUndertowEmbeddedServletContainer(builder40, deploymentManager41, 1800);
        io.undertow.servlet.api.DeploymentManager deploymentManager44 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer46 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder40, deploymentManager44, (-1));
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection47 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader48 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("hi!");
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(8080);
        java.io.File file53 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file53);
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1800 + "'", int31 == 1800);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList33);
        org.junit.Assert.assertNotNull(jspServlet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(ssl36);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer43);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer46);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection47);
        org.junit.Assert.assertNull(resourceLoader48);
    }

    @Test
    public void test13250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13250");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        java.lang.String str5 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file6);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection8 = undertowEmbeddedServletContainerFactory2.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean11 = undertowEmbeddedServletContainerFactory10.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory10.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory10.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory16.accessLogEnabled = false;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray19 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList20 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList20, undertowBuilderCustomizerArray19);
        undertowEmbeddedServletContainerFactory16.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList20);
        undertowEmbeddedServletContainerFactory10.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList20);
        undertowEmbeddedServletContainerFactory2.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList20);
        org.springframework.core.io.ResourceLoader resourceLoader25 = null;
        undertowEmbeddedServletContainerFactory2.resourceLoader = resourceLoader25;
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test13251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13251");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        java.lang.String str5 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        undertowEmbeddedServletContainerFactory11.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder17 = undertowEmbeddedServletContainerFactory11.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager18 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer20 = undertowEmbeddedServletContainerFactory6.getUndertowEmbeddedServletContainer(builder17, deploymentManager18, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer23 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder17, deploymentManager21, (int) (byte) 100);
        java.lang.Integer int24 = undertowEmbeddedServletContainerFactory2.bufferSize;
        org.springframework.boot.context.embedded.Compression compression25 = undertowEmbeddedServletContainerFactory2.getCompression();
        org.springframework.boot.context.embedded.JspServlet jspServlet26 = undertowEmbeddedServletContainerFactory2.getJspServlet();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet27 = undertowEmbeddedServletContainerFactory2.getErrorPages();
        undertowEmbeddedServletContainerFactory2.setJspServletClassName("");
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer20);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(compression25);
        org.junit.Assert.assertNotNull(jspServlet26);
        org.junit.Assert.assertNotNull(errorPageSet27);
    }

    @Test
    public void test13252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13252");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        boolean boolean3 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader5);
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file7;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file10);
        java.lang.String str12 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        boolean boolean13 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        java.lang.String str14 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList17, undertowBuilderCustomizerArray16);
        undertowEmbeddedServletContainerFactory15.builderCustomizers = undertowBuilderCustomizerList17;
        undertowEmbeddedServletContainerFactory15.workerThreads = 1;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection22 = undertowEmbeddedServletContainerFactory15.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int24 = undertowEmbeddedServletContainerFactory23.getPort();
        java.lang.Integer int25 = undertowEmbeddedServletContainerFactory23.bufferSize;
        boolean boolean26 = undertowEmbeddedServletContainerFactory23.accessLogEnabled;
        java.lang.String str27 = undertowEmbeddedServletContainerFactory23.accessLogPattern;
        org.springframework.core.io.ResourceLoader resourceLoader28 = null;
        undertowEmbeddedServletContainerFactory23.setResourceLoader(resourceLoader28);
        java.io.File file30 = null;
        undertowEmbeddedServletContainerFactory23.accessLogDirectory = file30;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = undertowEmbeddedServletContainerFactory23.getMimeMappings();
        undertowEmbeddedServletContainerFactory15.setMimeMappings(mimeMappings32);
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings32);
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("hi!");
        io.undertow.servlet.api.DeploymentInfo deploymentInfo37 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int39 = undertowEmbeddedServletContainerFactory38.getSessionTimeout();
        boolean boolean40 = undertowEmbeddedServletContainerFactory38.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList41 = undertowEmbeddedServletContainerFactory38.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet42 = undertowEmbeddedServletContainerFactory38.getJspServlet();
        boolean boolean43 = undertowEmbeddedServletContainerFactory38.useForwardHeaders;
        java.io.File file44 = null;
        undertowEmbeddedServletContainerFactory38.accessLogDirectory = file44;
        java.lang.Integer int46 = undertowEmbeddedServletContainerFactory38.buffersPerRegion;
        boolean boolean47 = undertowEmbeddedServletContainerFactory38.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer50 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap49);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray51 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer50 };
        initializer48.initializers = servletContextInitializerArray51;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray53 = initializer48.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int55 = undertowEmbeddedServletContainerFactory54.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer57 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap56);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer59 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap58);
        java.util.Map<java.lang.String, java.lang.String> strMap60 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer61 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap60);
        java.util.Map<java.lang.String, java.lang.String> strMap62 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer63 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap62);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray64 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer57, initParameterConfiguringServletContextInitializer59, initParameterConfiguringServletContextInitializer61, initParameterConfiguringServletContextInitializer63 };
        undertowEmbeddedServletContainerFactory54.addInitializers(servletContextInitializerArray64);
        initializer48.initializers = servletContextInitializerArray64;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray67 = initializer48.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray68 = initializer48.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap70 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer71 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap70);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray72 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer71 };
        initializer69.initializers = servletContextInitializerArray72;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray74 = initializer69.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer75 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int77 = undertowEmbeddedServletContainerFactory76.getSessionTimeout();
        boolean boolean78 = undertowEmbeddedServletContainerFactory76.isPersistSession();
        java.io.File file79 = undertowEmbeddedServletContainerFactory76.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings80 = undertowEmbeddedServletContainerFactory76.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings81 = undertowEmbeddedServletContainerFactory76.getMimeMappings();
        java.io.File file82 = undertowEmbeddedServletContainerFactory76.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory83 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int84 = undertowEmbeddedServletContainerFactory83.getPort();
        java.lang.Integer int85 = undertowEmbeddedServletContainerFactory83.bufferSize;
        java.io.File file86 = null;
        undertowEmbeddedServletContainerFactory83.setSessionStoreDir(file86);
        java.util.Map<java.lang.String, java.lang.String> strMap88 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer89 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap88);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray90 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer89 };
        undertowEmbeddedServletContainerFactory83.addInitializers(servletContextInitializerArray90);
        undertowEmbeddedServletContainerFactory76.addInitializers(servletContextInitializerArray90);
        initializer75.initializers = servletContextInitializerArray90;
        initializer69.initializers = servletContextInitializerArray90;
        initializer48.initializers = servletContextInitializerArray90;
        undertowEmbeddedServletContainerFactory38.addInitializers(servletContextInitializerArray90);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.registerServletContainerInitializerToDriveServletContextInitializers(deploymentInfo37, servletContextInitializerArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8080 + "'", int24 == 8080);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1800 + "'", int39 == 1800);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList41);
        org.junit.Assert.assertNotNull(jspServlet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(servletContextInitializerArray51);
        org.junit.Assert.assertNotNull(servletContextInitializerArray53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1800 + "'", int55 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray64);
        org.junit.Assert.assertNotNull(servletContextInitializerArray67);
        org.junit.Assert.assertNotNull(servletContextInitializerArray68);
        org.junit.Assert.assertNotNull(servletContextInitializerArray72);
        org.junit.Assert.assertNotNull(servletContextInitializerArray74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1800 + "'", int77 == 1800);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNotNull(mimeMappings80);
        org.junit.Assert.assertNotNull(mimeMappings81);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 8080 + "'", int84 == 8080);
        org.junit.Assert.assertNull(int85);
        org.junit.Assert.assertNotNull(servletContextInitializerArray90);
    }

    @Test
    public void test13253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13253");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        jarResourceManager0.jarPath = "hi!";
        java.lang.String str6 = jarResourceManager0.jarPath;
        java.lang.String str7 = jarResourceManager0.jarPath;
        jarResourceManager0.jarPath = "0.0.0.0";
        java.lang.String str10 = jarResourceManager0.jarPath;
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "0.0.0.0" + "'", str10, "0.0.0.0");
    }

    @Test
    public void test13254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13254");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file15);
        java.lang.String str17 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        boolean boolean18 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.io.File file19 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file19);
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        int int23 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        java.io.File file24 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        int int25 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1800 + "'", int23 == 1800);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1800 + "'", int25 == 1800);
    }

    @Test
    public void test13255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13255");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(true);
        undertowEmbeddedServletContainerFactory0.setDisplayName("0.0.0.0");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection8 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = undertowEmbeddedServletContainerFactory11.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet15 = undertowEmbeddedServletContainerFactory11.getJspServlet();
        boolean boolean16 = undertowEmbeddedServletContainerFactory11.useForwardHeaders;
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory11.getSsl();
        java.lang.String str18 = undertowEmbeddedServletContainerFactory11.getDisplayName();
        undertowEmbeddedServletContainerFactory11.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList23 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList23, undertowBuilderCustomizerArray22);
        undertowEmbeddedServletContainerFactory21.builderCustomizers = undertowBuilderCustomizerList23;
        undertowEmbeddedServletContainerFactory21.workerThreads = 1;
        org.xnio.XnioWorker xnioWorker28 = undertowEmbeddedServletContainerFactory21.createWorker();
        undertowEmbeddedServletContainerFactory21.directBuffers = true;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet31 = undertowEmbeddedServletContainerFactory21.getErrorPages();
        undertowEmbeddedServletContainerFactory11.setErrorPages(errorPageSet31);
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet31);
        java.net.InetAddress inetAddress34 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress34);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList14);
        org.junit.Assert.assertNotNull(jspServlet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(xnioWorker28);
        org.junit.Assert.assertNotNull(errorPageSet31);
    }

    @Test
    public void test13256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13256");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        java.lang.String str26 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        undertowEmbeddedServletContainerFactory2.setUseForwardHeaders(true);
        undertowEmbeddedServletContainerFactory2.directBuffers = true;
        org.springframework.boot.context.embedded.Compression compression31 = undertowEmbeddedServletContainerFactory2.getCompression();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection32 = undertowEmbeddedServletContainerFactory2.getBuilderCustomizers();
        org.springframework.boot.context.embedded.Compression compression33 = undertowEmbeddedServletContainerFactory2.getCompression();
        java.io.File file34 = undertowEmbeddedServletContainerFactory2.accessLogDirectory;
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(compression31);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection32);
        org.junit.Assert.assertNull(compression33);
        org.junit.Assert.assertNull(file34);
    }

    @Test
    public void test13257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13257");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.io.File file4 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.net.InetAddress inetAddress11 = undertowEmbeddedServletContainerFactory5.getAddress();
        undertowEmbeddedServletContainerFactory5.setAccessLogPattern("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory16.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader18 = undertowEmbeddedServletContainerFactory16.resourceLoader;
        undertowEmbeddedServletContainerFactory16.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getSessionTimeout();
        boolean boolean23 = undertowEmbeddedServletContainerFactory21.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList24 = undertowEmbeddedServletContainerFactory21.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet25 = undertowEmbeddedServletContainerFactory21.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int27 = undertowEmbeddedServletContainerFactory26.getSessionTimeout();
        boolean boolean28 = undertowEmbeddedServletContainerFactory26.isPersistSession();
        undertowEmbeddedServletContainerFactory26.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder32 = undertowEmbeddedServletContainerFactory26.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager33 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer35 = undertowEmbeddedServletContainerFactory21.getUndertowEmbeddedServletContainer(builder32, deploymentManager33, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager36 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer38 = undertowEmbeddedServletContainerFactory16.getUndertowEmbeddedServletContainer(builder32, deploymentManager36, (int) ' ');
        boolean boolean39 = undertowEmbeddedServletContainerFactory16.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory16.setPort((-1));
        java.lang.Integer int42 = undertowEmbeddedServletContainerFactory16.bufferSize;
        io.undertow.Undertow.Builder builder44 = undertowEmbeddedServletContainerFactory16.createBuilder(0);
        io.undertow.servlet.api.DeploymentManager deploymentManager45 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer47 = undertowEmbeddedServletContainerFactory5.getUndertowEmbeddedServletContainer(builder44, deploymentManager45, (int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager48 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer50 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder44, deploymentManager48, (int) '#');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int52 = undertowEmbeddedServletContainerFactory51.getSessionTimeout();
        boolean boolean53 = undertowEmbeddedServletContainerFactory51.isPersistSession();
        undertowEmbeddedServletContainerFactory51.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder57 = undertowEmbeddedServletContainerFactory51.createBuilder((-1));
        undertowEmbeddedServletContainerFactory51.accessLogEnabled = true;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet60 = undertowEmbeddedServletContainerFactory51.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet60);
        java.io.File file62 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file62);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        undertowEmbeddedServletContainerFactory1.setPersistSession(true);
        org.springframework.boot.context.embedded.JspServlet jspServlet68 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap70 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer71 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap70);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray72 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer71 };
        initializer69.initializers = servletContextInitializerArray72;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray74 = initializer69.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray75 = initializer69.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray76 = initializer69.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int78 = undertowEmbeddedServletContainerFactory77.getSessionTimeout();
        boolean boolean79 = undertowEmbeddedServletContainerFactory77.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList80 = undertowEmbeddedServletContainerFactory77.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet81 = undertowEmbeddedServletContainerFactory77.getJspServlet();
        undertowEmbeddedServletContainerFactory77.directBuffers = true;
        java.io.File file84 = undertowEmbeddedServletContainerFactory77.accessLogDirectory;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory85 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int86 = undertowEmbeddedServletContainerFactory85.getPort();
        java.lang.Integer int87 = undertowEmbeddedServletContainerFactory85.bufferSize;
        java.io.File file88 = null;
        undertowEmbeddedServletContainerFactory85.setSessionStoreDir(file88);
        java.util.Map<java.lang.String, java.lang.String> strMap90 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer91 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap90);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray92 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer91 };
        undertowEmbeddedServletContainerFactory85.addInitializers(servletContextInitializerArray92);
        undertowEmbeddedServletContainerFactory77.addInitializers(servletContextInitializerArray92);
        initializer69.initializers = servletContextInitializerArray92;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.DeploymentManager deploymentManager96 = undertowEmbeddedServletContainerFactory1.createDeploymentManager(servletContextInitializerArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: java.lang.NullPointerException");
        } catch (java.lang.RuntimeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(inetAddress11);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNull(resourceLoader18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1800 + "'", int22 == 1800);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList24);
        org.junit.Assert.assertNotNull(jspServlet25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1800 + "'", int27 == 1800);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer35);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer47);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1800 + "'", int52 == 1800);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(errorPageSet60);
        org.junit.Assert.assertNotNull(jspServlet68);
        org.junit.Assert.assertNotNull(servletContextInitializerArray72);
        org.junit.Assert.assertNotNull(servletContextInitializerArray74);
        org.junit.Assert.assertNotNull(servletContextInitializerArray75);
        org.junit.Assert.assertNotNull(servletContextInitializerArray76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1800 + "'", int78 == 1800);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList80);
        org.junit.Assert.assertNotNull(jspServlet81);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 8080 + "'", int86 == 8080);
        org.junit.Assert.assertNull(int87);
        org.junit.Assert.assertNotNull(servletContextInitializerArray92);
    }

    @Test
    public void test13258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13258");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory2.buffersPerRegion;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        undertowEmbeddedServletContainerFactory6.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder12 = undertowEmbeddedServletContainerFactory6.createBuilder((-1));
        undertowEmbeddedServletContainerFactory6.setBufferSize((java.lang.Integer) 10);
        undertowEmbeddedServletContainerFactory6.useForwardHeaders = false;
        boolean boolean17 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.lang.String str18 = undertowEmbeddedServletContainerFactory6.getContextPath();
        java.io.File file19 = null;
        undertowEmbeddedServletContainerFactory6.setDocumentRoot(file19);
        org.springframework.core.io.ResourceLoader resourceLoader21 = null;
        undertowEmbeddedServletContainerFactory6.setResourceLoader(resourceLoader21);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer25 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap24);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer25 };
        initializer23.initializers = servletContextInitializerArray26;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray28 = initializer23.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray29 = initializer23.initializers;
        undertowEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray29);
        undertowEmbeddedServletContainerFactory2.addInitializers(servletContextInitializerArray29);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(servletContextInitializerArray26);
        org.junit.Assert.assertNotNull(servletContextInitializerArray28);
        org.junit.Assert.assertNotNull(servletContextInitializerArray29);
    }

    @Test
    public void test13259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13259");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 8080;
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) true);
        java.io.File file11 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file11);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 1;
        org.springframework.boot.context.embedded.JspServlet jspServlet15 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.bufferSize = 1800;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(jspServlet15);
    }

    @Test
    public void test13260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13260");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.net.InetAddress inetAddress3 = undertowEmbeddedServletContainerFactory0.getAddress();
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl4);
        boolean boolean6 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.Ssl ssl9 = undertowEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = undertowEmbeddedServletContainerFactory14.builderCustomizers;
        undertowEmbeddedServletContainerFactory12.builderCustomizers = undertowBuilderCustomizerList17;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList17;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inetAddress3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(ssl9);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList17);
    }

    @Test
    public void test13261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13261");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList3, undertowDeploymentInfoCustomizerArray2);
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList3;
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        java.lang.String str9 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList12;
        undertowEmbeddedServletContainerFactory10.workerThreads = 1;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection17 = undertowEmbeddedServletContainerFactory10.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory10.bufferSize = 10;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = undertowEmbeddedServletContainerFactory10.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet20);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory23.setWorkerThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder27 = undertowEmbeddedServletContainerFactory23.createBuilder((int) (byte) -1);
        io.undertow.server.handlers.resource.ResourceManager resourceManager28 = undertowEmbeddedServletContainerFactory23.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int30 = undertowEmbeddedServletContainerFactory29.getSessionTimeout();
        boolean boolean31 = undertowEmbeddedServletContainerFactory29.isPersistSession();
        java.io.File file32 = undertowEmbeddedServletContainerFactory29.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = undertowEmbeddedServletContainerFactory29.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = undertowEmbeddedServletContainerFactory29.getMimeMappings();
        java.lang.Integer int35 = undertowEmbeddedServletContainerFactory29.buffersPerRegion;
        undertowEmbeddedServletContainerFactory29.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int39 = undertowEmbeddedServletContainerFactory38.getSessionTimeout();
        boolean boolean40 = undertowEmbeddedServletContainerFactory38.isPersistSession();
        undertowEmbeddedServletContainerFactory38.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder44 = undertowEmbeddedServletContainerFactory38.createBuilder((-1));
        undertowEmbeddedServletContainerFactory38.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int48 = undertowEmbeddedServletContainerFactory47.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray49 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory47.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray49);
        undertowEmbeddedServletContainerFactory38.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray49);
        undertowEmbeddedServletContainerFactory29.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray49);
        undertowEmbeddedServletContainerFactory23.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray49);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray49);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection55 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader56 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        boolean boolean57 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        java.io.File file58 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file58;
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "0.0.0.0" + "'", str9, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection17);
        org.junit.Assert.assertNotNull(errorPageSet20);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(resourceManager28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1800 + "'", int30 == 1800);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1800 + "'", int39 == 1800);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 8080 + "'", int48 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray49);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection55);
        org.junit.Assert.assertNull(resourceLoader56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test13262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13262");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file9);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("0.0.0.0");
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        org.xnio.XnioWorker xnioWorker18 = undertowEmbeddedServletContainerFactory0.createWorker();
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(xnioWorker18);
    }

    @Test
    public void test13263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13263");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        int int3 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("");
        io.undertow.servlet.api.DeploymentInfo deploymentInfo6 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo6);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1800 + "'", int3 == 1800);
    }

    @Test
    public void test13264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13264");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.net.InetAddress inetAddress6 = undertowEmbeddedServletContainerFactory0.getAddress();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        undertowEmbeddedServletContainerFactory11.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory11.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory11.setDisplayName("hi!");
        boolean boolean20 = undertowEmbeddedServletContainerFactory11.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getSessionTimeout();
        boolean boolean23 = undertowEmbeddedServletContainerFactory21.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList24 = undertowEmbeddedServletContainerFactory21.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet25 = undertowEmbeddedServletContainerFactory21.getJspServlet();
        undertowEmbeddedServletContainerFactory21.directBuffers = true;
        java.io.File file28 = null;
        undertowEmbeddedServletContainerFactory21.setDocumentRoot(file28);
        undertowEmbeddedServletContainerFactory21.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray32 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory21.addBuilderCustomizers(undertowBuilderCustomizerArray32);
        undertowEmbeddedServletContainerFactory11.addBuilderCustomizers(undertowBuilderCustomizerArray32);
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray32);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList36 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection37 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer40 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap39);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray41 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer40 };
        initializer38.initializers = servletContextInitializerArray41;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray43 = initializer38.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int46 = undertowEmbeddedServletContainerFactory45.getSessionTimeout();
        boolean boolean47 = undertowEmbeddedServletContainerFactory45.isPersistSession();
        java.io.File file48 = undertowEmbeddedServletContainerFactory45.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings49 = undertowEmbeddedServletContainerFactory45.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings50 = undertowEmbeddedServletContainerFactory45.getMimeMappings();
        java.io.File file51 = undertowEmbeddedServletContainerFactory45.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int53 = undertowEmbeddedServletContainerFactory52.getPort();
        java.lang.Integer int54 = undertowEmbeddedServletContainerFactory52.bufferSize;
        java.io.File file55 = null;
        undertowEmbeddedServletContainerFactory52.setSessionStoreDir(file55);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer58 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap57);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray59 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer58 };
        undertowEmbeddedServletContainerFactory52.addInitializers(servletContextInitializerArray59);
        undertowEmbeddedServletContainerFactory45.addInitializers(servletContextInitializerArray59);
        initializer44.initializers = servletContextInitializerArray59;
        initializer38.initializers = servletContextInitializerArray59;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray64 = initializer38.initializers;
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray64);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection66 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory67.setJspServletClassName("");
        boolean boolean70 = undertowEmbeddedServletContainerFactory67.useForwardHeaders;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory72.setWorkerThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder76 = undertowEmbeddedServletContainerFactory72.createBuilder((int) (byte) -1);
        io.undertow.server.handlers.resource.ResourceManager resourceManager77 = undertowEmbeddedServletContainerFactory72.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory78 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int79 = undertowEmbeddedServletContainerFactory78.getPort();
        java.lang.Integer int80 = undertowEmbeddedServletContainerFactory78.bufferSize;
        java.io.File file81 = null;
        undertowEmbeddedServletContainerFactory78.setSessionStoreDir(file81);
        java.io.File file83 = null;
        undertowEmbeddedServletContainerFactory78.accessLogDirectory = file83;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings85 = undertowEmbeddedServletContainerFactory78.getMimeMappings();
        undertowEmbeddedServletContainerFactory72.setMimeMappings(mimeMappings85);
        undertowEmbeddedServletContainerFactory67.setMimeMappings(mimeMappings85);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet88 = undertowEmbeddedServletContainerFactory67.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet88);
        java.io.File file90 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file90);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1800 + "'", int22 == 1800);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList24);
        org.junit.Assert.assertNotNull(jspServlet25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray32);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList36);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection37);
        org.junit.Assert.assertNotNull(servletContextInitializerArray41);
        org.junit.Assert.assertNotNull(servletContextInitializerArray43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1800 + "'", int46 == 1800);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(mimeMappings49);
        org.junit.Assert.assertNotNull(mimeMappings50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8080 + "'", int53 == 8080);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(servletContextInitializerArray59);
        org.junit.Assert.assertNotNull(servletContextInitializerArray64);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(resourceManager77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 8080 + "'", int79 == 8080);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertNotNull(mimeMappings85);
        org.junit.Assert.assertNotNull(errorPageSet88);
    }

    @Test
    public void test13265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13265");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file5;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList11 = undertowEmbeddedServletContainerFactory8.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet12 = undertowEmbeddedServletContainerFactory8.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet12);
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader14;
        java.io.File file16 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "";
        org.springframework.boot.context.embedded.Compression compression19 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression19);
        java.io.File file21 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file21);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList11);
        org.junit.Assert.assertNotNull(jspServlet12);
        org.junit.Assert.assertNull(file16);
    }

    @Test
    public void test13266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13266");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader3);
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 0);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory0.getSsl();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNull(ssl10);
    }

    @Test
    public void test13267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13267");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        java.io.File file4 = undertowEmbeddedServletContainerFactory2.getDocumentRoot();
        undertowEmbeddedServletContainerFactory2.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory2.bufferSize = (-1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getSessionTimeout();
        boolean boolean11 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        undertowEmbeddedServletContainerFactory9.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory9.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        java.io.File file19 = undertowEmbeddedServletContainerFactory16.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList20 = undertowEmbeddedServletContainerFactory16.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory9.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList20;
        undertowEmbeddedServletContainerFactory2.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList20;
        java.io.File file23 = undertowEmbeddedServletContainerFactory2.getDocumentRoot();
        io.undertow.server.HttpHandler httpHandler24 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.accesslog.AccessLogHandler accessLogHandler25 = undertowEmbeddedServletContainerFactory2.createAccessLogHandler(httpHandler24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Access log directory is not set");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList20);
        org.junit.Assert.assertNull(file23);
    }

    @Test
    public void test13268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13268");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        int int3 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet4 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        java.io.File file5 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean8 = undertowEmbeddedServletContainerFactory7.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory7.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory7.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory13.accessLogEnabled = false;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList17, undertowBuilderCustomizerArray16);
        undertowEmbeddedServletContainerFactory13.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList17);
        undertowEmbeddedServletContainerFactory7.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList17);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList17;
        java.lang.Boolean boolean22 = undertowEmbeddedServletContainerFactory0.directBuffers;
        java.io.File file23 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file23);
        java.lang.ClassLoader classLoader25 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList26 = null;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList26;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1800 + "'", int3 == 1800);
        org.junit.Assert.assertNotNull(errorPageSet4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(classLoader25);
    }

    @Test
    public void test13269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13269");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        boolean boolean2 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean3 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean4 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str5 = jarResourceManager0.jarPath;
        jarResourceManager0.close();
        boolean boolean7 = jarResourceManager0.isResourceChangeListenerSupported();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener8 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourceManager0.registerResourceChangeListener(resourceChangeListener8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test13270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13270");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file4);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean8 = undertowEmbeddedServletContainerFactory7.isAccessLogEnabled();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = undertowEmbeddedServletContainerFactory7.getMimeMappings();
        java.io.File file10 = undertowEmbeddedServletContainerFactory7.getDocumentRoot();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList11 = undertowEmbeddedServletContainerFactory7.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList11;
        java.lang.String str13 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList11);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test13271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13271");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file5;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression8);
        org.springframework.boot.context.embedded.Compression compression10 = undertowEmbeddedServletContainerFactory0.getCompression();
        undertowEmbeddedServletContainerFactory0.ioThreads = (-1);
        int int13 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNull(compression10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
    }

    @Test
    public void test13272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13272");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet6 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file7);
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        org.springframework.core.io.ResourceLoader resourceLoader11 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        java.io.File file12 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        java.lang.String str15 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(errorPageSet6);
        org.junit.Assert.assertNull(resourceLoader11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "0.0.0.0" + "'", str15, "0.0.0.0");
    }

    @Test
    public void test13273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13273");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer3 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap2);
        java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer5 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap4);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer7 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer3, initParameterConfiguringServletContextInitializer5, initParameterConfiguringServletContextInitializer7, initParameterConfiguringServletContextInitializer9 };
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory0.workerThreads = 0;
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 1);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection16 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file17);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/' and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection16);
    }

    @Test
    public void test13274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13274");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file5;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList11 = undertowEmbeddedServletContainerFactory8.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet12 = undertowEmbeddedServletContainerFactory8.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet12);
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader14;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean18 = undertowEmbeddedServletContainerFactory17.isAccessLogEnabled();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        java.io.File file20 = undertowEmbeddedServletContainerFactory17.getDocumentRoot();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList21 = undertowEmbeddedServletContainerFactory17.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList21;
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        org.xnio.XnioWorker xnioWorker27 = undertowEmbeddedServletContainerFactory0.createWorker();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        undertowEmbeddedServletContainerFactory28.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory28.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray35 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory28.addErrorPages(errorPageArray35);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory37.setJspServletClassName("");
        boolean boolean40 = undertowEmbeddedServletContainerFactory37.useForwardHeaders;
        java.lang.Boolean boolean41 = undertowEmbeddedServletContainerFactory37.directBuffers;
        org.springframework.core.io.ResourceLoader resourceLoader42 = null;
        undertowEmbeddedServletContainerFactory37.setResourceLoader(resourceLoader42);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer46 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap45);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray47 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer46 };
        initializer44.initializers = servletContextInitializerArray47;
        undertowEmbeddedServletContainerFactory37.addInitializers(servletContextInitializerArray47);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings53 = undertowEmbeddedServletContainerFactory52.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader54 = undertowEmbeddedServletContainerFactory52.resourceLoader;
        undertowEmbeddedServletContainerFactory52.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int58 = undertowEmbeddedServletContainerFactory57.getSessionTimeout();
        boolean boolean59 = undertowEmbeddedServletContainerFactory57.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList60 = undertowEmbeddedServletContainerFactory57.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet61 = undertowEmbeddedServletContainerFactory57.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int63 = undertowEmbeddedServletContainerFactory62.getSessionTimeout();
        boolean boolean64 = undertowEmbeddedServletContainerFactory62.isPersistSession();
        undertowEmbeddedServletContainerFactory62.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder68 = undertowEmbeddedServletContainerFactory62.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager69 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer71 = undertowEmbeddedServletContainerFactory57.getUndertowEmbeddedServletContainer(builder68, deploymentManager69, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager72 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer74 = undertowEmbeddedServletContainerFactory52.getUndertowEmbeddedServletContainer(builder68, deploymentManager72, (int) ' ');
        boolean boolean75 = undertowEmbeddedServletContainerFactory52.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory52.setPort((-1));
        java.lang.Integer int78 = undertowEmbeddedServletContainerFactory52.bufferSize;
        io.undertow.Undertow.Builder builder80 = undertowEmbeddedServletContainerFactory52.createBuilder(0);
        io.undertow.servlet.api.DeploymentManager deploymentManager81 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer83 = undertowEmbeddedServletContainerFactory37.getUndertowEmbeddedServletContainer(builder80, deploymentManager81, 1);
        io.undertow.servlet.api.DeploymentManager deploymentManager84 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer86 = undertowEmbeddedServletContainerFactory28.getUndertowEmbeddedServletContainer(builder80, deploymentManager84, (int) (byte) 100);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings87 = undertowEmbeddedServletContainerFactory28.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings88 = undertowEmbeddedServletContainerFactory28.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings88);
        undertowEmbeddedServletContainerFactory0.setDisplayName("0.0.0.0");
        io.undertow.servlet.api.DeploymentInfo deploymentInfo92 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.configureAccessLog(deploymentInfo92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList11);
        org.junit.Assert.assertNotNull(jspServlet12);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList21);
        org.junit.Assert.assertNotNull(xnioWorker27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(errorPageArray35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(servletContextInitializerArray47);
        org.junit.Assert.assertNotNull(mimeMappings53);
        org.junit.Assert.assertNull(resourceLoader54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1800 + "'", int58 == 1800);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList60);
        org.junit.Assert.assertNotNull(jspServlet61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1800 + "'", int63 == 1800);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer71);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer83);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer86);
        org.junit.Assert.assertNotNull(mimeMappings87);
        org.junit.Assert.assertNotNull(mimeMappings88);
    }

    @Test
    public void test13275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13275");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList4 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        int int5 = undertowEmbeddedServletContainerFactory0.getPort();
        io.undertow.server.handlers.resource.ResourceManager resourceManager6 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        org.springframework.core.io.ResourceLoader resourceLoader7 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader7;
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 100);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8080 + "'", int5 == 8080);
        org.junit.Assert.assertNotNull(resourceManager6);
    }

    @Test
    public void test13276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13276");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int4 = undertowEmbeddedServletContainerFactory3.getSessionTimeout();
        boolean boolean5 = undertowEmbeddedServletContainerFactory3.isPersistSession();
        java.io.File file6 = undertowEmbeddedServletContainerFactory3.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = undertowEmbeddedServletContainerFactory3.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = undertowEmbeddedServletContainerFactory3.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getSessionTimeout();
        boolean boolean11 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = undertowEmbeddedServletContainerFactory9.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet13 = undertowEmbeddedServletContainerFactory9.getJspServlet();
        undertowEmbeddedServletContainerFactory3.setJspServlet(jspServlet13);
        undertowEmbeddedServletContainerFactory2.setJspServlet(jspServlet13);
        boolean boolean16 = undertowEmbeddedServletContainerFactory2.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList19 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList19, undertowBuilderCustomizerArray18);
        undertowEmbeddedServletContainerFactory17.builderCustomizers = undertowBuilderCustomizerList19;
        java.lang.Integer int22 = undertowEmbeddedServletContainerFactory17.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int24 = undertowEmbeddedServletContainerFactory23.getSessionTimeout();
        undertowEmbeddedServletContainerFactory23.setSessionTimeout((int) (short) 1);
        java.io.File file27 = null;
        undertowEmbeddedServletContainerFactory23.setSessionStoreDir(file27);
        undertowEmbeddedServletContainerFactory23.setBuffersPerRegion((java.lang.Integer) 10);
        org.springframework.core.io.ResourceLoader resourceLoader31 = null;
        undertowEmbeddedServletContainerFactory23.setResourceLoader(resourceLoader31);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int34 = undertowEmbeddedServletContainerFactory33.getSessionTimeout();
        boolean boolean35 = undertowEmbeddedServletContainerFactory33.isPersistSession();
        java.io.File file36 = undertowEmbeddedServletContainerFactory33.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList37 = undertowEmbeddedServletContainerFactory33.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory33.ioThreads = 0;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = undertowEmbeddedServletContainerFactory33.getMimeMappings();
        undertowEmbeddedServletContainerFactory23.setMimeMappings(mimeMappings40);
        undertowEmbeddedServletContainerFactory17.setMimeMappings(mimeMappings40);
        undertowEmbeddedServletContainerFactory2.setMimeMappings(mimeMappings40);
        java.io.File file44 = null;
        undertowEmbeddedServletContainerFactory2.setSessionStoreDir(file44);
        org.springframework.boot.context.embedded.Ssl ssl46 = undertowEmbeddedServletContainerFactory2.getSsl();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo47 = null;
        undertowEmbeddedServletContainerFactory2.configureErrorPages(deploymentInfo47);
        java.lang.Integer int49 = undertowEmbeddedServletContainerFactory2.ioThreads;
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1800 + "'", int4 == 1800);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList12);
        org.junit.Assert.assertNotNull(jspServlet13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1800 + "'", int24 == 1800);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1800 + "'", int34 == 1800);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList37);
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNull(ssl46);
        org.junit.Assert.assertNull(int49);
    }

    @Test
    public void test13277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13277");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getPort();
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory7.bufferSize;
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory7.setSessionStoreDir(file10);
        java.io.File file12 = null;
        undertowEmbeddedServletContainerFactory7.accessLogDirectory = file12;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = undertowEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int16 = undertowEmbeddedServletContainerFactory15.getSessionTimeout();
        boolean boolean17 = undertowEmbeddedServletContainerFactory15.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList18 = undertowEmbeddedServletContainerFactory15.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = undertowEmbeddedServletContainerFactory15.getJspServlet();
        undertowEmbeddedServletContainerFactory7.setJspServlet(jspServlet19);
        org.springframework.core.io.ResourceLoader resourceLoader21 = null;
        undertowEmbeddedServletContainerFactory7.resourceLoader = resourceLoader21;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean25 = undertowEmbeddedServletContainerFactory24.isAccessLogEnabled();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        java.io.File file27 = undertowEmbeddedServletContainerFactory24.getDocumentRoot();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList28 = undertowEmbeddedServletContainerFactory24.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory7.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList28;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList28;
        org.springframework.boot.context.embedded.Compression compression31 = undertowEmbeddedServletContainerFactory1.getCompression();
        java.lang.Class<?> wildcardClass32 = undertowEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8080 + "'", int8 == 8080);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1800 + "'", int16 == 1800);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList18);
        org.junit.Assert.assertNotNull(jspServlet19);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList28);
        org.junit.Assert.assertNull(compression31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test13278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13278");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory4.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory4.resourceLoader;
        undertowEmbeddedServletContainerFactory4.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getSessionTimeout();
        boolean boolean11 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = undertowEmbeddedServletContainerFactory9.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet13 = undertowEmbeddedServletContainerFactory9.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        undertowEmbeddedServletContainerFactory14.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder20 = undertowEmbeddedServletContainerFactory14.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer23 = undertowEmbeddedServletContainerFactory9.getUndertowEmbeddedServletContainer(builder20, deploymentManager21, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer26 = undertowEmbeddedServletContainerFactory4.getUndertowEmbeddedServletContainer(builder20, deploymentManager24, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer29 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder20, deploymentManager27, (int) (short) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList30 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 100);
        java.lang.Integer int33 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 1);
        org.springframework.core.io.ResourceLoader resourceLoader36 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader36;
        java.lang.ClassLoader classLoader38 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("0.0.0.0");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings47 = undertowEmbeddedServletContainerFactory46.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int49 = undertowEmbeddedServletContainerFactory48.getSessionTimeout();
        boolean boolean50 = undertowEmbeddedServletContainerFactory48.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList51 = undertowEmbeddedServletContainerFactory48.builderCustomizers;
        undertowEmbeddedServletContainerFactory46.builderCustomizers = undertowBuilderCustomizerList51;
        undertowEmbeddedServletContainerFactory43.builderCustomizers = undertowBuilderCustomizerList51;
        org.springframework.boot.context.embedded.JspServlet jspServlet54 = undertowEmbeddedServletContainerFactory43.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet54);
        int int56 = undertowEmbeddedServletContainerFactory0.getPort();
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 8080);
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = true;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList12);
        org.junit.Assert.assertNotNull(jspServlet13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer23);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer26);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer29);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList30);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(mimeMappings47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1800 + "'", int49 == 1800);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList51);
        org.junit.Assert.assertNotNull(jspServlet54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 8080 + "'", int56 == 8080);
    }

    @Test
    public void test13279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13279");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory0.directBuffers;
        io.undertow.Undertow.Builder builder14 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager15 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer17 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder14, deploymentManager15, 1800);
        java.lang.Integer int18 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        undertowEmbeddedServletContainerFactory0.ioThreads = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getSessionTimeout();
        boolean boolean23 = undertowEmbeddedServletContainerFactory21.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList24 = undertowEmbeddedServletContainerFactory21.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet25 = undertowEmbeddedServletContainerFactory21.getJspServlet();
        undertowEmbeddedServletContainerFactory21.directBuffers = true;
        java.lang.Integer int28 = undertowEmbeddedServletContainerFactory21.bufferSize;
        java.io.File file29 = null;
        undertowEmbeddedServletContainerFactory21.setDocumentRoot(file29);
        boolean boolean31 = undertowEmbeddedServletContainerFactory21.isPersistSession();
        undertowEmbeddedServletContainerFactory21.setWorkerThreads((java.lang.Integer) 8080);
        java.lang.String str34 = undertowEmbeddedServletContainerFactory21.getListenAddress();
        undertowEmbeddedServletContainerFactory21.setDisplayName("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int38 = undertowEmbeddedServletContainerFactory37.getSessionTimeout();
        boolean boolean39 = undertowEmbeddedServletContainerFactory37.isPersistSession();
        java.io.File file40 = undertowEmbeddedServletContainerFactory37.accessLogDirectory;
        java.lang.String str41 = undertowEmbeddedServletContainerFactory37.getListenAddress();
        undertowEmbeddedServletContainerFactory37.setIoThreads((java.lang.Integer) 1);
        java.lang.String str44 = undertowEmbeddedServletContainerFactory37.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int46 = undertowEmbeddedServletContainerFactory45.getSessionTimeout();
        boolean boolean47 = undertowEmbeddedServletContainerFactory45.isPersistSession();
        undertowEmbeddedServletContainerFactory45.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory45.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory45.setDisplayName("hi!");
        boolean boolean54 = undertowEmbeddedServletContainerFactory45.isRegisterDefaultServlet();
        java.io.File file55 = undertowEmbeddedServletContainerFactory45.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray56 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory45.addBuilderCustomizers(undertowBuilderCustomizerArray56);
        undertowEmbeddedServletContainerFactory37.addBuilderCustomizers(undertowBuilderCustomizerArray56);
        undertowEmbeddedServletContainerFactory21.addBuilderCustomizers(undertowBuilderCustomizerArray56);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int61 = undertowEmbeddedServletContainerFactory60.getSessionTimeout();
        boolean boolean62 = undertowEmbeddedServletContainerFactory60.isPersistSession();
        undertowEmbeddedServletContainerFactory60.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder66 = undertowEmbeddedServletContainerFactory60.createBuilder((-1));
        undertowEmbeddedServletContainerFactory60.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int70 = undertowEmbeddedServletContainerFactory69.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray71 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory69.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray71);
        undertowEmbeddedServletContainerFactory60.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray71);
        undertowEmbeddedServletContainerFactory21.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray71);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray71);
        org.xnio.XnioWorker xnioWorker76 = undertowEmbeddedServletContainerFactory0.createWorker();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings77 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1800 + "'", int22 == 1800);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList24);
        org.junit.Assert.assertNotNull(jspServlet25);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "0.0.0.0" + "'", str34, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1800 + "'", int38 == 1800);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "0.0.0.0" + "'", str41, "0.0.0.0");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1800 + "'", int46 == 1800);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray56);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1800 + "'", int61 == 1800);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 8080 + "'", int70 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray71);
        org.junit.Assert.assertNotNull(xnioWorker76);
        org.junit.Assert.assertNotNull(mimeMappings77);
    }

    @Test
    public void test13280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13280");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) true);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file4;
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file6);
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader10);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
    }

    @Test
    public void test13281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13281");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        undertowEmbeddedServletContainerFactory2.resourceLoader = resourceLoader4;
        undertowEmbeddedServletContainerFactory2.directBuffers = true;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo8 = null;
        undertowEmbeddedServletContainerFactory2.configureErrorPages(deploymentInfo8);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader10);
        undertowEmbeddedServletContainerFactory2.setIoThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory2.setPort((int) (byte) 10);
        org.junit.Assert.assertNotNull(mimeMappings3);
    }

    @Test
    public void test13282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13282");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.jarPath = "hi!";
        jarResourceManager0.jarPath = "0.0.0.0";
        jarResourceManager0.close();
        java.lang.String str6 = jarResourceManager0.jarPath;
        jarResourceManager0.jarPath = "";
        boolean boolean9 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.jarPath = "";
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource13 = jarResourceManager0.getResource("");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0.0.0.0" + "'", str6, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test13283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13283");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer6 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap5);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray7 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer6 };
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray7);
        java.util.concurrent.TimeUnit timeUnit10 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 10, timeUnit10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray7);
    }

    @Test
    public void test13284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13284");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.net.InetAddress inetAddress6 = undertowEmbeddedServletContainerFactory0.getAddress();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        undertowEmbeddedServletContainerFactory11.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory11.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory11.setDisplayName("hi!");
        boolean boolean20 = undertowEmbeddedServletContainerFactory11.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getSessionTimeout();
        boolean boolean23 = undertowEmbeddedServletContainerFactory21.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList24 = undertowEmbeddedServletContainerFactory21.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet25 = undertowEmbeddedServletContainerFactory21.getJspServlet();
        undertowEmbeddedServletContainerFactory21.directBuffers = true;
        java.io.File file28 = null;
        undertowEmbeddedServletContainerFactory21.setDocumentRoot(file28);
        undertowEmbeddedServletContainerFactory21.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray32 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory21.addBuilderCustomizers(undertowBuilderCustomizerArray32);
        undertowEmbeddedServletContainerFactory11.addBuilderCustomizers(undertowBuilderCustomizerArray32);
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray32);
        java.lang.String str36 = undertowEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.boot.context.embedded.Compression compression37 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression37);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int40 = undertowEmbeddedServletContainerFactory39.getPort();
        java.lang.Integer int41 = undertowEmbeddedServletContainerFactory39.bufferSize;
        java.io.File file42 = null;
        undertowEmbeddedServletContainerFactory39.setSessionStoreDir(file42);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int45 = undertowEmbeddedServletContainerFactory44.getSessionTimeout();
        boolean boolean46 = undertowEmbeddedServletContainerFactory44.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList47 = undertowEmbeddedServletContainerFactory44.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet48 = undertowEmbeddedServletContainerFactory44.getJspServlet();
        boolean boolean49 = undertowEmbeddedServletContainerFactory44.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet50 = undertowEmbeddedServletContainerFactory44.getErrorPages();
        undertowEmbeddedServletContainerFactory39.setErrorPages(errorPageSet50);
        undertowEmbeddedServletContainerFactory39.setBufferSize((java.lang.Integer) 10);
        int int54 = undertowEmbeddedServletContainerFactory39.getPort();
        org.springframework.boot.context.embedded.JspServlet jspServlet55 = undertowEmbeddedServletContainerFactory39.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet55);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1800 + "'", int22 == 1800);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList24);
        org.junit.Assert.assertNotNull(jspServlet25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 8080 + "'", int40 == 8080);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1800 + "'", int45 == 1800);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList47);
        org.junit.Assert.assertNotNull(jspServlet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(errorPageSet50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 8080 + "'", int54 == 8080);
        org.junit.Assert.assertNotNull(jspServlet55);
    }

    @Test
    public void test13285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13285");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.net.InetAddress inetAddress6 = undertowEmbeddedServletContainerFactory0.getAddress();
        boolean boolean7 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        boolean boolean8 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test13286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13286");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getPort();
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory7.bufferSize;
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory7.setSessionStoreDir(file10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory12.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet16 = undertowEmbeddedServletContainerFactory12.getJspServlet();
        boolean boolean17 = undertowEmbeddedServletContainerFactory12.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet18 = undertowEmbeddedServletContainerFactory12.getErrorPages();
        undertowEmbeddedServletContainerFactory7.setErrorPages(errorPageSet18);
        undertowEmbeddedServletContainerFactory7.setBufferSize((java.lang.Integer) 10);
        java.io.File file22 = null;
        undertowEmbeddedServletContainerFactory7.setAccessLogDirectory(file22);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int25 = undertowEmbeddedServletContainerFactory24.getSessionTimeout();
        boolean boolean26 = undertowEmbeddedServletContainerFactory24.isPersistSession();
        java.io.File file27 = undertowEmbeddedServletContainerFactory24.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        undertowEmbeddedServletContainerFactory7.setMimeMappings(mimeMappings29);
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings29);
        java.lang.Integer int32 = undertowEmbeddedServletContainerFactory0.workerThreads;
        java.lang.Integer int33 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8080 + "'", int8 == 8080);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNotNull(jspServlet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(errorPageSet18);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1800 + "'", int25 == 1800);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(int33);
    }

    @Test
    public void test13287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13287");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer6 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap5);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray7 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer6 };
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray7);
        boolean boolean9 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.workerThreads = 10;
        org.springframework.boot.context.embedded.Ssl ssl12 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl12);
        java.io.File file14 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test13288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13288");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory4.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory4.resourceLoader;
        undertowEmbeddedServletContainerFactory4.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getSessionTimeout();
        boolean boolean11 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = undertowEmbeddedServletContainerFactory9.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet13 = undertowEmbeddedServletContainerFactory9.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        undertowEmbeddedServletContainerFactory14.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder20 = undertowEmbeddedServletContainerFactory14.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer23 = undertowEmbeddedServletContainerFactory9.getUndertowEmbeddedServletContainer(builder20, deploymentManager21, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer26 = undertowEmbeddedServletContainerFactory4.getUndertowEmbeddedServletContainer(builder20, deploymentManager24, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer29 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder20, deploymentManager27, (int) (short) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList30 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 100);
        java.lang.Integer int33 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 1);
        org.springframework.core.io.ResourceLoader resourceLoader36 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader36;
        org.springframework.boot.context.embedded.ErrorPage errorPage38 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage39 = undertowEmbeddedServletContainerFactory0.getUndertowErrorPage(errorPage38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList12);
        org.junit.Assert.assertNotNull(jspServlet13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer23);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer26);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer29);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList30);
        org.junit.Assert.assertNull(int33);
    }

    @Test
    public void test13289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13289");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        undertowEmbeddedServletContainerFactory5.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory5.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray12 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory5.addErrorPages(errorPageArray12);
        undertowEmbeddedServletContainerFactory2.addErrorPages(errorPageArray12);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file15);
        java.lang.String str17 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        java.io.File file18 = null;
        undertowEmbeddedServletContainerFactory2.setSessionStoreDir(file18);
        java.lang.Integer int20 = undertowEmbeddedServletContainerFactory2.workerThreads;
        java.io.File file21 = null;
        undertowEmbeddedServletContainerFactory2.setAccessLogDirectory(file21);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(errorPageArray12);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(int20);
    }

    @Test
    public void test13290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13290");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        boolean boolean9 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getPort();
        java.lang.Integer int13 = undertowEmbeddedServletContainerFactory11.bufferSize;
        java.io.File file14 = null;
        undertowEmbeddedServletContainerFactory11.setSessionStoreDir(file14);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList19 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet20 = undertowEmbeddedServletContainerFactory16.getJspServlet();
        boolean boolean21 = undertowEmbeddedServletContainerFactory16.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = undertowEmbeddedServletContainerFactory16.getErrorPages();
        undertowEmbeddedServletContainerFactory11.setErrorPages(errorPageSet22);
        java.lang.Boolean boolean24 = undertowEmbeddedServletContainerFactory11.directBuffers;
        org.springframework.boot.context.embedded.Compression compression25 = null;
        undertowEmbeddedServletContainerFactory11.setCompression(compression25);
        boolean boolean27 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        undertowEmbeddedServletContainerFactory28.setIoThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder34 = undertowEmbeddedServletContainerFactory28.createBuilder((int) (byte) 1);
        io.undertow.servlet.api.DeploymentManager deploymentManager35 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer37 = undertowEmbeddedServletContainerFactory11.getUndertowEmbeddedServletContainer(builder34, deploymentManager35, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager38 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer40 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder34, deploymentManager38, 1);
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection43 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        java.net.InetAddress inetAddress44 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress44);
        java.lang.String str46 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8080 + "'", int12 == 8080);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList19);
        org.junit.Assert.assertNotNull(jspServlet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(errorPageSet22);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer37);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer40);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection43);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test13291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13291");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int4 = undertowEmbeddedServletContainerFactory3.getSessionTimeout();
        boolean boolean5 = undertowEmbeddedServletContainerFactory3.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList6 = undertowEmbeddedServletContainerFactory3.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet7 = undertowEmbeddedServletContainerFactory3.getJspServlet();
        boolean boolean8 = undertowEmbeddedServletContainerFactory3.isPersistSession();
        org.springframework.boot.context.embedded.Ssl ssl9 = undertowEmbeddedServletContainerFactory3.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        boolean boolean13 = undertowEmbeddedServletContainerFactory12.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        undertowEmbeddedServletContainerFactory14.setPersistSession(false);
        undertowEmbeddedServletContainerFactory14.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList21 = undertowEmbeddedServletContainerFactory14.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory12.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList21;
        undertowEmbeddedServletContainerFactory3.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList21;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray25 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList26 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList26, undertowBuilderCustomizerArray25);
        undertowEmbeddedServletContainerFactory24.builderCustomizers = undertowBuilderCustomizerList26;
        java.io.File file29 = null;
        undertowEmbeddedServletContainerFactory24.setSessionStoreDir(file29);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection31 = undertowEmbeddedServletContainerFactory24.getDeploymentInfoCustomizers();
        java.io.File file32 = null;
        undertowEmbeddedServletContainerFactory24.setAccessLogDirectory(file32);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int35 = undertowEmbeddedServletContainerFactory34.getSessionTimeout();
        boolean boolean36 = undertowEmbeddedServletContainerFactory34.isPersistSession();
        undertowEmbeddedServletContainerFactory34.setPersistSession(false);
        undertowEmbeddedServletContainerFactory34.setUseForwardHeaders(true);
        io.undertow.server.handlers.resource.ResourceManager resourceManager41 = undertowEmbeddedServletContainerFactory34.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int43 = undertowEmbeddedServletContainerFactory42.getSessionTimeout();
        boolean boolean44 = undertowEmbeddedServletContainerFactory42.isPersistSession();
        java.io.File file45 = undertowEmbeddedServletContainerFactory42.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings46 = undertowEmbeddedServletContainerFactory42.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings47 = undertowEmbeddedServletContainerFactory42.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int49 = undertowEmbeddedServletContainerFactory48.getSessionTimeout();
        boolean boolean50 = undertowEmbeddedServletContainerFactory48.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList51 = undertowEmbeddedServletContainerFactory48.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet52 = undertowEmbeddedServletContainerFactory48.getJspServlet();
        undertowEmbeddedServletContainerFactory42.setJspServlet(jspServlet52);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray55 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList56 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList56, undertowBuilderCustomizerArray55);
        undertowEmbeddedServletContainerFactory54.builderCustomizers = undertowBuilderCustomizerList56;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection59 = undertowEmbeddedServletContainerFactory54.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory42.setBuilderCustomizers(undertowBuilderCustomizerCollection59);
        undertowEmbeddedServletContainerFactory34.setBuilderCustomizers(undertowBuilderCustomizerCollection59);
        undertowEmbeddedServletContainerFactory24.setBuilderCustomizers(undertowBuilderCustomizerCollection59);
        undertowEmbeddedServletContainerFactory3.setBuilderCustomizers(undertowBuilderCustomizerCollection59);
        undertowEmbeddedServletContainerFactory3.workerThreads = 10;
        undertowEmbeddedServletContainerFactory3.setUseForwardHeaders(false);
        org.springframework.core.io.ResourceLoader resourceLoader68 = undertowEmbeddedServletContainerFactory3.resourceLoader;
        int int69 = undertowEmbeddedServletContainerFactory3.getSessionTimeout();
        boolean boolean70 = undertowEmbeddedServletContainerFactory3.useForwardHeaders;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings71 = undertowEmbeddedServletContainerFactory3.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings71);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1800 + "'", int4 == 1800);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList6);
        org.junit.Assert.assertNotNull(jspServlet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(ssl9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1800 + "'", int35 == 1800);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(resourceManager41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1800 + "'", int43 == 1800);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(mimeMappings46);
        org.junit.Assert.assertNotNull(mimeMappings47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1800 + "'", int49 == 1800);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList51);
        org.junit.Assert.assertNotNull(jspServlet52);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection59);
        org.junit.Assert.assertNull(resourceLoader68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1800 + "'", int69 == 1800);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(mimeMappings71);
    }

    @Test
    public void test13292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13292");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        int int3 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo4 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory0.getSsl();
        java.io.File file7 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        undertowEmbeddedServletContainerFactory8.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder14 = undertowEmbeddedServletContainerFactory8.createBuilder((-1));
        java.io.File file15 = undertowEmbeddedServletContainerFactory8.accessLogDirectory;
        org.springframework.boot.context.embedded.Ssl ssl16 = null;
        undertowEmbeddedServletContainerFactory8.setSsl(ssl16);
        undertowEmbeddedServletContainerFactory8.buffersPerRegion = 1;
        org.springframework.boot.context.embedded.ErrorPage errorPage20 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray21 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage20 };
        undertowEmbeddedServletContainerFactory8.addErrorPages(errorPageArray21);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray21);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1800 + "'", int3 == 1800);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(errorPageArray21);
    }

    @Test
    public void test13293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13293");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory1.ioThreads = 1;
        undertowEmbeddedServletContainerFactory1.setPort(0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer6 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray7 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer6 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray7);
        undertowEmbeddedServletContainerFactory1.ioThreads = 8080;
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 52);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray7);
    }

    @Test
    public void test13294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13294");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file8);
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory0.ioThreads;
        boolean boolean11 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test13295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13295");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray16);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getPort();
        undertowEmbeddedServletContainerFactory18.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean24 = undertowEmbeddedServletContainerFactory23.isAccessLogEnabled();
        java.lang.Integer int25 = undertowEmbeddedServletContainerFactory23.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = undertowEmbeddedServletContainerFactory28.getMimeMappings();
        undertowEmbeddedServletContainerFactory23.setMimeMappings(mimeMappings29);
        undertowEmbeddedServletContainerFactory18.setMimeMappings(mimeMappings29);
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings29);
        int int33 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        int int34 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8080 + "'", int19 == 8080);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1800 + "'", int33 == 1800);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1800 + "'", int34 == 1800);
    }

    @Test
    public void test13296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13296");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.io.File file10 = undertowEmbeddedServletContainerFactory7.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList11 = undertowEmbeddedServletContainerFactory7.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList11;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray13 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UndertowDeploymentInfoCustomizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList11);
    }

    @Test
    public void test13297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13297");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int2 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        boolean boolean3 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        java.io.File file4 = undertowEmbeddedServletContainerFactory1.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getPort();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory8.bufferSize;
        java.io.File file11 = null;
        undertowEmbeddedServletContainerFactory8.setSessionStoreDir(file11);
        java.util.Map<java.lang.String, java.lang.String> strMap13 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer14 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap13);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray15 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer14 };
        undertowEmbeddedServletContainerFactory8.addInitializers(servletContextInitializerArray15);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray15);
        initializer0.initializers = servletContextInitializerArray15;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int20 = undertowEmbeddedServletContainerFactory19.getSessionTimeout();
        boolean boolean21 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        java.io.File file22 = undertowEmbeddedServletContainerFactory19.accessLogDirectory;
        undertowEmbeddedServletContainerFactory19.setRegisterDefaultServlet(true);
        java.lang.Boolean boolean25 = undertowEmbeddedServletContainerFactory19.directBuffers;
        org.springframework.boot.context.embedded.Compression compression26 = undertowEmbeddedServletContainerFactory19.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int28 = undertowEmbeddedServletContainerFactory27.getPort();
        java.lang.Integer int29 = undertowEmbeddedServletContainerFactory27.bufferSize;
        java.io.File file30 = null;
        undertowEmbeddedServletContainerFactory27.setSessionStoreDir(file30);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer35 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap34);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray36 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer35 };
        initializer33.initializers = servletContextInitializerArray36;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer40 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap39);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray41 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer40 };
        initializer38.initializers = servletContextInitializerArray41;
        initializer33.initializers = servletContextInitializerArray41;
        initializer32.initializers = servletContextInitializerArray41;
        undertowEmbeddedServletContainerFactory27.addInitializers(servletContextInitializerArray41);
        undertowEmbeddedServletContainerFactory19.addInitializers(servletContextInitializerArray41);
        initializer0.initializers = servletContextInitializerArray41;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer51 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap50);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray52 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer51 };
        initializer49.initializers = servletContextInitializerArray52;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer56 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap55);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray57 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer56 };
        initializer54.initializers = servletContextInitializerArray57;
        initializer49.initializers = servletContextInitializerArray57;
        initializer48.initializers = servletContextInitializerArray57;
        initializer0.initializers = servletContextInitializerArray57;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer64 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap63);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray65 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer64 };
        initializer62.initializers = servletContextInitializerArray65;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray67 = initializer62.initializers;
        initializer0.initializers = servletContextInitializerArray67;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray69 = initializer0.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray70 = null;
        initializer0.initializers = servletContextInitializerArray70;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1800 + "'", int2 == 1800);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8080 + "'", int9 == 8080);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(servletContextInitializerArray15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(compression26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8080 + "'", int28 == 8080);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(servletContextInitializerArray36);
        org.junit.Assert.assertNotNull(servletContextInitializerArray41);
        org.junit.Assert.assertNotNull(servletContextInitializerArray52);
        org.junit.Assert.assertNotNull(servletContextInitializerArray57);
        org.junit.Assert.assertNotNull(servletContextInitializerArray65);
        org.junit.Assert.assertNotNull(servletContextInitializerArray67);
        org.junit.Assert.assertNotNull(servletContextInitializerArray69);
    }

    @Test
    public void test13298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13298");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        java.lang.String str26 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int28 = undertowEmbeddedServletContainerFactory27.getSessionTimeout();
        boolean boolean29 = undertowEmbeddedServletContainerFactory27.isPersistSession();
        java.io.File file30 = undertowEmbeddedServletContainerFactory27.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = undertowEmbeddedServletContainerFactory27.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = undertowEmbeddedServletContainerFactory27.getMimeMappings();
        java.lang.Integer int33 = undertowEmbeddedServletContainerFactory27.buffersPerRegion;
        io.undertow.Undertow.Builder builder35 = undertowEmbeddedServletContainerFactory27.createBuilder(10);
        boolean boolean36 = undertowEmbeddedServletContainerFactory27.useForwardHeaders;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList37 = undertowEmbeddedServletContainerFactory27.builderCustomizers;
        undertowEmbeddedServletContainerFactory2.builderCustomizers = undertowBuilderCustomizerList37;
        undertowEmbeddedServletContainerFactory2.workerThreads = (-1);
        int int41 = undertowEmbeddedServletContainerFactory2.getSessionTimeout();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1800 + "'", int28 == 1800);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1800 + "'", int41 == 1800);
    }

    @Test
    public void test13299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13299");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        java.io.File file7 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.Ssl ssl8 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl8);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 1;
        boolean boolean12 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.Compression compression13 = undertowEmbeddedServletContainerFactory0.getCompression();
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        int int16 = undertowEmbeddedServletContainerFactory0.getPort();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(compression13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 8080 + "'", int16 == 8080);
    }

    @Test
    public void test13300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13300");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(false);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo10 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo10);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        java.lang.String str14 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test13301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13301");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory0.getAddress();
        int int19 = undertowEmbeddedServletContainerFactory0.getPort();
        java.io.File file20 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "";
        org.springframework.boot.context.embedded.Ssl ssl23 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl23);
        java.io.File file25 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file25);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8080 + "'", int19 == 8080);
        org.junit.Assert.assertNull(file20);
    }

    @Test
    public void test13302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13302");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.jarPath = "hi!";
        jarResourceManager0.jarPath = "0.0.0.0";
        java.lang.String str5 = jarResourceManager0.jarPath;
        boolean boolean6 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean7 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.jarPath = "hi!";
        boolean boolean10 = jarResourceManager0.isResourceChangeListenerSupported();
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource12 = jarResourceManager0.getResource("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "0.0.0.0" + "'", str5, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test13303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13303");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader3);
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.io.File file9 = undertowEmbeddedServletContainerFactory6.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory6.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory6.getMimeMappings();
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory6.buffersPerRegion;
        io.undertow.Undertow.Builder builder14 = undertowEmbeddedServletContainerFactory6.createBuilder(10);
        io.undertow.servlet.api.DeploymentManager deploymentManager15 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer17 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder14, deploymentManager15, 1);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 1800;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int21 = undertowEmbeddedServletContainerFactory20.getSessionTimeout();
        boolean boolean22 = undertowEmbeddedServletContainerFactory20.isPersistSession();
        java.io.File file23 = undertowEmbeddedServletContainerFactory20.accessLogDirectory;
        java.lang.String str24 = undertowEmbeddedServletContainerFactory20.getListenAddress();
        undertowEmbeddedServletContainerFactory20.setIoThreads((java.lang.Integer) 1);
        java.lang.String str27 = undertowEmbeddedServletContainerFactory20.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        undertowEmbeddedServletContainerFactory28.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory28.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory28.setDisplayName("hi!");
        boolean boolean37 = undertowEmbeddedServletContainerFactory28.isRegisterDefaultServlet();
        java.io.File file38 = undertowEmbeddedServletContainerFactory28.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray39 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory28.addBuilderCustomizers(undertowBuilderCustomizerArray39);
        undertowEmbeddedServletContainerFactory20.addBuilderCustomizers(undertowBuilderCustomizerArray39);
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray39);
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = true;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1800 + "'", int21 == 1800);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "0.0.0.0" + "'", str24, "0.0.0.0");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray39);
    }

    @Test
    public void test13304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13304");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.lang.String str9 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        undertowEmbeddedServletContainerFactory11.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory11.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray18 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory11.addErrorPages(errorPageArray18);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray18);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "0.0.0.0" + "'", str9, "0.0.0.0");
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(errorPageArray18);
    }

    @Test
    public void test13305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13305");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int3 = undertowEmbeddedServletContainerFactory2.getSessionTimeout();
        boolean boolean4 = undertowEmbeddedServletContainerFactory2.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList5 = undertowEmbeddedServletContainerFactory2.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet6 = undertowEmbeddedServletContainerFactory2.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory2.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList7;
        org.springframework.boot.context.embedded.Ssl ssl9 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader10;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 10);
        java.lang.ClassLoader classLoader14 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.Integer int15 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1800 + "'", int3 == 1800);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList5);
        org.junit.Assert.assertNotNull(jspServlet6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertNull(ssl9);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test13306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13306");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory0.getAddress();
        java.net.InetAddress inetAddress19 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress19);
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean25 = undertowEmbeddedServletContainerFactory24.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory24.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory24.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings30);
        int int32 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean33 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        undertowEmbeddedServletContainerFactory0.setPort((-1));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1800 + "'", int32 == 1800);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test13307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13307");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file5);
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getSessionTimeout();
        boolean boolean11 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        undertowEmbeddedServletContainerFactory9.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl14 = null;
        undertowEmbeddedServletContainerFactory9.setSsl(ssl14);
        java.lang.String str16 = undertowEmbeddedServletContainerFactory9.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int18 = undertowEmbeddedServletContainerFactory17.getSessionTimeout();
        boolean boolean19 = undertowEmbeddedServletContainerFactory17.isPersistSession();
        undertowEmbeddedServletContainerFactory17.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory17.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int25 = undertowEmbeddedServletContainerFactory24.getSessionTimeout();
        boolean boolean26 = undertowEmbeddedServletContainerFactory24.isPersistSession();
        java.io.File file27 = undertowEmbeddedServletContainerFactory24.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList28 = undertowEmbeddedServletContainerFactory24.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory17.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList28;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory32.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int36 = undertowEmbeddedServletContainerFactory35.getSessionTimeout();
        boolean boolean37 = undertowEmbeddedServletContainerFactory35.isPersistSession();
        undertowEmbeddedServletContainerFactory35.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory35.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray42 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory35.addErrorPages(errorPageArray42);
        undertowEmbeddedServletContainerFactory32.addErrorPages(errorPageArray42);
        undertowEmbeddedServletContainerFactory17.addErrorPages(errorPageArray42);
        undertowEmbeddedServletContainerFactory9.addErrorPages(errorPageArray42);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray42);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int49 = undertowEmbeddedServletContainerFactory48.getSessionTimeout();
        boolean boolean50 = undertowEmbeddedServletContainerFactory48.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList51 = undertowEmbeddedServletContainerFactory48.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet52 = undertowEmbeddedServletContainerFactory48.getJspServlet();
        undertowEmbeddedServletContainerFactory48.directBuffers = true;
        java.io.File file55 = null;
        undertowEmbeddedServletContainerFactory48.setDocumentRoot(file55);
        undertowEmbeddedServletContainerFactory48.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray59 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory48.addBuilderCustomizers(undertowBuilderCustomizerArray59);
        org.springframework.boot.context.embedded.Compression compression61 = null;
        undertowEmbeddedServletContainerFactory48.setCompression(compression61);
        int int63 = undertowEmbeddedServletContainerFactory48.getPort();
        org.springframework.boot.context.embedded.JspServlet jspServlet64 = undertowEmbeddedServletContainerFactory48.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet64);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection66 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection67 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1800 + "'", int18 == 1800);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1800 + "'", int25 == 1800);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList28);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1800 + "'", int36 == 1800);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(errorPageArray42);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1800 + "'", int49 == 1800);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList51);
        org.junit.Assert.assertNotNull(jspServlet52);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray59);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 8080 + "'", int63 == 8080);
        org.junit.Assert.assertNotNull(jspServlet64);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection66);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection67);
    }

    @Test
    public void test13308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13308");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getSessionTimeout();
        boolean boolean11 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        undertowEmbeddedServletContainerFactory9.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder15 = undertowEmbeddedServletContainerFactory9.createBuilder((-1));
        undertowEmbeddedServletContainerFactory9.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray20 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory18.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray20);
        undertowEmbeddedServletContainerFactory9.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray20);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray20);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection24 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        java.lang.String str25 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList28 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8080 + "'", int19 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray20);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList28);
    }

    @Test
    public void test13309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13309");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory4.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory4.resourceLoader;
        undertowEmbeddedServletContainerFactory4.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getSessionTimeout();
        boolean boolean11 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = undertowEmbeddedServletContainerFactory9.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet13 = undertowEmbeddedServletContainerFactory9.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        undertowEmbeddedServletContainerFactory14.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder20 = undertowEmbeddedServletContainerFactory14.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer23 = undertowEmbeddedServletContainerFactory9.getUndertowEmbeddedServletContainer(builder20, deploymentManager21, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer26 = undertowEmbeddedServletContainerFactory4.getUndertowEmbeddedServletContainer(builder20, deploymentManager24, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer29 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder20, deploymentManager27, (int) (short) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList30 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 100);
        java.lang.Integer int33 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.workerThreads = 10;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection40 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray41 = undertowEmbeddedServletContainerFactory0.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList12);
        org.junit.Assert.assertNotNull(jspServlet13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer23);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer26);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer29);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList30);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection40);
    }

    @Test
    public void test13310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13310");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.io.File file10 = undertowEmbeddedServletContainerFactory7.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList11 = undertowEmbeddedServletContainerFactory7.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList11;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.Compression compression14 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression14);
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList11);
        org.junit.Assert.assertNotNull(mimeMappings13);
    }

    @Test
    public void test13311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13311");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.io.File file10 = undertowEmbeddedServletContainerFactory7.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList11 = undertowEmbeddedServletContainerFactory7.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList11;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        int int14 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList11);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1800 + "'", int14 == 1800);
    }

    @Test
    public void test13312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13312");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo6 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo6);
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.lang.Boolean boolean10 = undertowEmbeddedServletContainerFactory0.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory13.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        undertowEmbeddedServletContainerFactory16.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory16.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray23 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory16.addErrorPages(errorPageArray23);
        undertowEmbeddedServletContainerFactory13.addErrorPages(errorPageArray23);
        java.io.File file26 = null;
        undertowEmbeddedServletContainerFactory13.setDocumentRoot(file26);
        undertowEmbeddedServletContainerFactory13.useForwardHeaders = false;
        org.springframework.core.io.ResourceLoader resourceLoader30 = null;
        undertowEmbeddedServletContainerFactory13.setResourceLoader(resourceLoader30);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int33 = undertowEmbeddedServletContainerFactory32.getPort();
        java.lang.Integer int34 = undertowEmbeddedServletContainerFactory32.bufferSize;
        java.io.File file35 = null;
        undertowEmbeddedServletContainerFactory32.setSessionStoreDir(file35);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int38 = undertowEmbeddedServletContainerFactory37.getSessionTimeout();
        boolean boolean39 = undertowEmbeddedServletContainerFactory37.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList40 = undertowEmbeddedServletContainerFactory37.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet41 = undertowEmbeddedServletContainerFactory37.getJspServlet();
        boolean boolean42 = undertowEmbeddedServletContainerFactory37.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet43 = undertowEmbeddedServletContainerFactory37.getErrorPages();
        undertowEmbeddedServletContainerFactory32.setErrorPages(errorPageSet43);
        undertowEmbeddedServletContainerFactory32.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList47 = undertowEmbeddedServletContainerFactory32.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray48 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory32.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray48);
        undertowEmbeddedServletContainerFactory13.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray48);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray48);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(errorPageArray23);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 8080 + "'", int33 == 8080);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1800 + "'", int38 == 1800);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList40);
        org.junit.Assert.assertNotNull(jspServlet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(errorPageSet43);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList47);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray48);
    }

    @Test
    public void test13313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13313");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file7);
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file9;
        java.io.File file11 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file11;
        org.springframework.boot.context.embedded.Compression compression13 = undertowEmbeddedServletContainerFactory0.getCompression();
        io.undertow.Undertow.Builder builder15 = undertowEmbeddedServletContainerFactory0.createBuilder(1800);
        org.springframework.boot.context.embedded.Compression compression16 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression16);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNull(compression13);
        org.junit.Assert.assertNotNull(builder15);
    }

    @Test
    public void test13314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13314");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file7);
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        java.io.File file14 = undertowEmbeddedServletContainerFactory11.accessLogDirectory;
        undertowEmbeddedServletContainerFactory11.setRegisterDefaultServlet(true);
        java.lang.Boolean boolean17 = undertowEmbeddedServletContainerFactory11.directBuffers;
        org.springframework.boot.context.embedded.Compression compression18 = undertowEmbeddedServletContainerFactory11.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int20 = undertowEmbeddedServletContainerFactory19.getSessionTimeout();
        boolean boolean21 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        undertowEmbeddedServletContainerFactory19.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder25 = undertowEmbeddedServletContainerFactory19.createBuilder((-1));
        undertowEmbeddedServletContainerFactory19.setBufferSize((java.lang.Integer) 10);
        java.net.InetAddress inetAddress28 = null;
        undertowEmbeddedServletContainerFactory19.setAddress(inetAddress28);
        undertowEmbeddedServletContainerFactory19.accessLogPattern = "hi!";
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection32 = undertowEmbeddedServletContainerFactory19.getBuilderCustomizers();
        boolean boolean33 = undertowEmbeddedServletContainerFactory19.accessLogEnabled;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int35 = undertowEmbeddedServletContainerFactory34.getSessionTimeout();
        boolean boolean36 = undertowEmbeddedServletContainerFactory34.isPersistSession();
        undertowEmbeddedServletContainerFactory34.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory34.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory34.setDisplayName("hi!");
        boolean boolean43 = undertowEmbeddedServletContainerFactory34.isRegisterDefaultServlet();
        java.io.File file44 = null;
        undertowEmbeddedServletContainerFactory34.accessLogDirectory = file44;
        org.springframework.boot.context.embedded.JspServlet jspServlet46 = undertowEmbeddedServletContainerFactory34.getJspServlet();
        undertowEmbeddedServletContainerFactory19.setJspServlet(jspServlet46);
        undertowEmbeddedServletContainerFactory11.setJspServlet(jspServlet46);
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet46);
        org.springframework.core.io.ResourceLoader resourceLoader50 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int52 = undertowEmbeddedServletContainerFactory51.getPort();
        java.lang.Integer int53 = undertowEmbeddedServletContainerFactory51.bufferSize;
        boolean boolean54 = undertowEmbeddedServletContainerFactory51.accessLogEnabled;
        java.lang.String str55 = undertowEmbeddedServletContainerFactory51.accessLogPattern;
        undertowEmbeddedServletContainerFactory51.setWorkerThreads((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory58.setJspServletClassName("");
        int int61 = undertowEmbeddedServletContainerFactory58.getSessionTimeout();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet62 = undertowEmbeddedServletContainerFactory58.getErrorPages();
        undertowEmbeddedServletContainerFactory51.setErrorPages(errorPageSet62);
        undertowEmbeddedServletContainerFactory51.accessLogPattern = "";
        boolean boolean66 = undertowEmbeddedServletContainerFactory51.useForwardHeaders;
        java.io.File file67 = undertowEmbeddedServletContainerFactory51.accessLogDirectory;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int69 = undertowEmbeddedServletContainerFactory68.getSessionTimeout();
        boolean boolean70 = undertowEmbeddedServletContainerFactory68.isPersistSession();
        undertowEmbeddedServletContainerFactory68.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder74 = undertowEmbeddedServletContainerFactory68.createBuilder((-1));
        undertowEmbeddedServletContainerFactory68.setBufferSize((java.lang.Integer) 10);
        undertowEmbeddedServletContainerFactory68.useForwardHeaders = false;
        boolean boolean79 = undertowEmbeddedServletContainerFactory68.isPersistSession();
        java.lang.String str80 = undertowEmbeddedServletContainerFactory68.getContextPath();
        boolean boolean81 = undertowEmbeddedServletContainerFactory68.accessLogEnabled;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList82 = undertowEmbeddedServletContainerFactory68.builderCustomizers;
        undertowEmbeddedServletContainerFactory51.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList82);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList82;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(compression18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1800 + "'", int35 == 1800);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(jspServlet46);
        org.junit.Assert.assertNull(resourceLoader50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 8080 + "'", int52 == 8080);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1800 + "'", int61 == 1800);
        org.junit.Assert.assertNotNull(errorPageSet62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1800 + "'", int69 == 1800);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList82);
    }

    @Test
    public void test13315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13315");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory0.getAddress();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.io.File file21 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file21);
        org.springframework.boot.context.embedded.JspServlet jspServlet23 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.Integer int25 = undertowEmbeddedServletContainerFactory0.ioThreads;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertNotNull(jspServlet23);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNull(int25);
    }

    @Test
    public void test13316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13316");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.net.InetAddress inetAddress6 = undertowEmbeddedServletContainerFactory0.getAddress();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        undertowEmbeddedServletContainerFactory0.setPort((int) ' ');
        org.springframework.boot.context.embedded.Compression compression12 = undertowEmbeddedServletContainerFactory0.getCompression();
        org.springframework.boot.context.embedded.JspServlet jspServlet13 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("0.0.0.0");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(compression12);
        org.junit.Assert.assertNotNull(jspServlet13);
    }

    @Test
    public void test13317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13317");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        java.lang.String str5 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file6);
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory2.setAccessLogDirectory(file8);
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file10);
        boolean boolean12 = undertowEmbeddedServletContainerFactory2.isPersistSession();
        java.lang.Integer int13 = undertowEmbeddedServletContainerFactory2.ioThreads;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo14 = null;
        undertowEmbeddedServletContainerFactory2.configureErrorPages(deploymentInfo14);
        undertowEmbeddedServletContainerFactory2.workerThreads = 8080;
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(int13);
    }

    @Test
    public void test13318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13318");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file15);
        java.lang.String str17 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        boolean boolean18 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.io.File file19 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file19);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader22 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader22);
        boolean boolean24 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.Ssl ssl25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode26 = undertowEmbeddedServletContainerFactory0.getSslClientAuthMode(ssl25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(errorPageSet21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test13319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13319");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        boolean boolean4 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener8 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourceManager0.registerResourceChangeListener(resourceChangeListener8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test13320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13320");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.io.File file4 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.accessLogEnabled;
        undertowEmbeddedServletContainerFactory1.workerThreads = 10;
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression8);
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int14 = undertowEmbeddedServletContainerFactory13.getSessionTimeout();
        boolean boolean15 = undertowEmbeddedServletContainerFactory13.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList16 = undertowEmbeddedServletContainerFactory13.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet17 = undertowEmbeddedServletContainerFactory13.getJspServlet();
        boolean boolean18 = undertowEmbeddedServletContainerFactory13.isPersistSession();
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory13.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int21 = undertowEmbeddedServletContainerFactory20.getPort();
        java.lang.Integer int22 = undertowEmbeddedServletContainerFactory20.bufferSize;
        java.io.File file23 = null;
        undertowEmbeddedServletContainerFactory20.setSessionStoreDir(file23);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int26 = undertowEmbeddedServletContainerFactory25.getSessionTimeout();
        boolean boolean27 = undertowEmbeddedServletContainerFactory25.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList28 = undertowEmbeddedServletContainerFactory25.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet29 = undertowEmbeddedServletContainerFactory25.getJspServlet();
        boolean boolean30 = undertowEmbeddedServletContainerFactory25.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet31 = undertowEmbeddedServletContainerFactory25.getErrorPages();
        undertowEmbeddedServletContainerFactory20.setErrorPages(errorPageSet31);
        undertowEmbeddedServletContainerFactory20.setIoThreads((java.lang.Integer) 1800);
        java.io.File file35 = null;
        undertowEmbeddedServletContainerFactory20.setSessionStoreDir(file35);
        boolean boolean37 = undertowEmbeddedServletContainerFactory20.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int39 = undertowEmbeddedServletContainerFactory38.getSessionTimeout();
        boolean boolean40 = undertowEmbeddedServletContainerFactory38.isPersistSession();
        undertowEmbeddedServletContainerFactory38.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory38.setPersistSession(true);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet45 = undertowEmbeddedServletContainerFactory38.getErrorPages();
        undertowEmbeddedServletContainerFactory20.setErrorPages(errorPageSet45);
        org.springframework.boot.context.embedded.JspServlet jspServlet47 = undertowEmbeddedServletContainerFactory20.getJspServlet();
        undertowEmbeddedServletContainerFactory13.setJspServlet(jspServlet47);
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet47);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1800 + "'", int14 == 1800);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList16);
        org.junit.Assert.assertNotNull(jspServlet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8080 + "'", int21 == 8080);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1800 + "'", int26 == 1800);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList28);
        org.junit.Assert.assertNotNull(jspServlet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(errorPageSet31);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1800 + "'", int39 == 1800);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(errorPageSet45);
        org.junit.Assert.assertNotNull(jspServlet47);
    }

    @Test
    public void test13321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13321");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int5 = undertowEmbeddedServletContainerFactory4.getSessionTimeout();
        boolean boolean6 = undertowEmbeddedServletContainerFactory4.isPersistSession();
        undertowEmbeddedServletContainerFactory4.setPersistSession(false);
        undertowEmbeddedServletContainerFactory4.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList11 = undertowEmbeddedServletContainerFactory4.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory4.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = undertowEmbeddedServletContainerFactory14.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet18 = undertowEmbeddedServletContainerFactory14.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int20 = undertowEmbeddedServletContainerFactory19.getSessionTimeout();
        boolean boolean21 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        undertowEmbeddedServletContainerFactory19.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder25 = undertowEmbeddedServletContainerFactory19.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager26 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer28 = undertowEmbeddedServletContainerFactory14.getUndertowEmbeddedServletContainer(builder25, deploymentManager26, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager29 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer31 = undertowEmbeddedServletContainerFactory4.getUndertowEmbeddedServletContainer(builder25, deploymentManager29, (int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray32 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList33 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList33, undertowDeploymentInfoCustomizerArray32);
        undertowEmbeddedServletContainerFactory4.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList33;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList33;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder40 = undertowEmbeddedServletContainerFactory0.createBuilder(1800);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList43 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.ioThreads = 1;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 1;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int51 = undertowEmbeddedServletContainerFactory50.getPort();
        java.lang.Integer int52 = undertowEmbeddedServletContainerFactory50.bufferSize;
        java.io.File file53 = undertowEmbeddedServletContainerFactory50.getDocumentRoot();
        java.lang.ClassLoader classLoader54 = undertowEmbeddedServletContainerFactory50.getServletClassLoader();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList55 = undertowEmbeddedServletContainerFactory50.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList55);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1800 + "'", int5 == 1800);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList17);
        org.junit.Assert.assertNotNull(jspServlet18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer28);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer31);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList43);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 8080 + "'", int51 == 8080);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(classLoader54);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList55);
    }

    @Test
    public void test13322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13322");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.lang.ClassLoader classLoader4 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.workerThreads = 1;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection12 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory15.accessLogEnabled = false;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList19 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList19, undertowBuilderCustomizerArray18);
        undertowEmbeddedServletContainerFactory15.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList19);
        undertowEmbeddedServletContainerFactory15.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.Ssl ssl24 = undertowEmbeddedServletContainerFactory15.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int26 = undertowEmbeddedServletContainerFactory25.getPort();
        java.lang.Integer int27 = undertowEmbeddedServletContainerFactory25.bufferSize;
        java.io.File file28 = null;
        undertowEmbeddedServletContainerFactory25.setSessionStoreDir(file28);
        java.io.File file30 = null;
        undertowEmbeddedServletContainerFactory25.accessLogDirectory = file30;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = undertowEmbeddedServletContainerFactory25.getMimeMappings();
        undertowEmbeddedServletContainerFactory25.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl35 = null;
        undertowEmbeddedServletContainerFactory25.setSsl(ssl35);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int38 = undertowEmbeddedServletContainerFactory37.getPort();
        java.lang.Integer int39 = undertowEmbeddedServletContainerFactory37.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader40 = null;
        undertowEmbeddedServletContainerFactory37.setResourceLoader(resourceLoader40);
        java.lang.Integer int42 = undertowEmbeddedServletContainerFactory37.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int44 = undertowEmbeddedServletContainerFactory43.getSessionTimeout();
        boolean boolean45 = undertowEmbeddedServletContainerFactory43.isPersistSession();
        java.io.File file46 = undertowEmbeddedServletContainerFactory43.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings47 = undertowEmbeddedServletContainerFactory43.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings48 = undertowEmbeddedServletContainerFactory43.getMimeMappings();
        java.lang.Integer int49 = undertowEmbeddedServletContainerFactory43.buffersPerRegion;
        io.undertow.Undertow.Builder builder51 = undertowEmbeddedServletContainerFactory43.createBuilder(10);
        io.undertow.servlet.api.DeploymentManager deploymentManager52 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer54 = undertowEmbeddedServletContainerFactory37.getUndertowEmbeddedServletContainer(builder51, deploymentManager52, 1);
        undertowEmbeddedServletContainerFactory37.setJspServletClassName("0.0.0.0");
        java.lang.Integer int57 = undertowEmbeddedServletContainerFactory37.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int59 = undertowEmbeddedServletContainerFactory58.getSessionTimeout();
        boolean boolean60 = undertowEmbeddedServletContainerFactory58.isPersistSession();
        undertowEmbeddedServletContainerFactory58.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory58.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray65 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory58.addErrorPages(errorPageArray65);
        undertowEmbeddedServletContainerFactory37.addErrorPages(errorPageArray65);
        undertowEmbeddedServletContainerFactory25.addErrorPages(errorPageArray65);
        undertowEmbeddedServletContainerFactory15.addErrorPages(errorPageArray65);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int71 = undertowEmbeddedServletContainerFactory70.getSessionTimeout();
        boolean boolean72 = undertowEmbeddedServletContainerFactory70.isPersistSession();
        java.io.File file73 = undertowEmbeddedServletContainerFactory70.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings74 = undertowEmbeddedServletContainerFactory70.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings75 = undertowEmbeddedServletContainerFactory70.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int77 = undertowEmbeddedServletContainerFactory76.getSessionTimeout();
        boolean boolean78 = undertowEmbeddedServletContainerFactory76.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList79 = undertowEmbeddedServletContainerFactory76.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet80 = undertowEmbeddedServletContainerFactory76.getJspServlet();
        undertowEmbeddedServletContainerFactory70.setJspServlet(jspServlet80);
        java.net.InetAddress inetAddress82 = undertowEmbeddedServletContainerFactory70.getAddress();
        java.lang.ClassLoader classLoader83 = undertowEmbeddedServletContainerFactory70.getServletClassLoader();
        java.lang.String str84 = undertowEmbeddedServletContainerFactory70.getListenAddress();
        undertowEmbeddedServletContainerFactory70.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory70.setDisplayName("hi!");
        org.springframework.core.io.ResourceLoader resourceLoader89 = undertowEmbeddedServletContainerFactory70.resourceLoader;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet90 = undertowEmbeddedServletContainerFactory70.getErrorPages();
        undertowEmbeddedServletContainerFactory15.setErrorPages(errorPageSet90);
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet90);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection12);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(ssl24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 8080 + "'", int26 == 8080);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 8080 + "'", int38 == 8080);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1800 + "'", int44 == 1800);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(mimeMappings47);
        org.junit.Assert.assertNotNull(mimeMappings48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer54);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1800 + "'", int59 == 1800);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(errorPageArray65);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1800 + "'", int71 == 1800);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNotNull(mimeMappings74);
        org.junit.Assert.assertNotNull(mimeMappings75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1800 + "'", int77 == 1800);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList79);
        org.junit.Assert.assertNotNull(jspServlet80);
        org.junit.Assert.assertNull(inetAddress82);
        org.junit.Assert.assertNotNull(classLoader83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "0.0.0.0" + "'", str84, "0.0.0.0");
        org.junit.Assert.assertNull(resourceLoader89);
        org.junit.Assert.assertNotNull(errorPageSet90);
    }

    @Test
    public void test13323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13323");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(1);
        boolean boolean11 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        java.lang.String str12 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = true;
        org.springframework.boot.context.embedded.Compression compression15 = undertowEmbeddedServletContainerFactory0.getCompression();
        org.springframework.boot.context.embedded.Compression compression16 = undertowEmbeddedServletContainerFactory0.getCompression();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1800);
        java.lang.Integer int22 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int24 = undertowEmbeddedServletContainerFactory23.getSessionTimeout();
        boolean boolean25 = undertowEmbeddedServletContainerFactory23.isPersistSession();
        undertowEmbeddedServletContainerFactory23.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory23.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory23.setDisplayName("hi!");
        java.net.InetAddress inetAddress32 = undertowEmbeddedServletContainerFactory23.getAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList33 = undertowEmbeddedServletContainerFactory23.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList33;
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(0);
        java.lang.ClassLoader classLoader37 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
        org.junit.Assert.assertNull(compression15);
        org.junit.Assert.assertNull(compression16);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList17);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1800 + "'", int24 == 1800);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(inetAddress32);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList33);
        org.junit.Assert.assertNotNull(classLoader37);
    }

    @Test
    public void test13324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13324");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        boolean boolean3 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getPort();
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory7.bufferSize;
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory7.setSessionStoreDir(file10);
        java.io.File file12 = null;
        undertowEmbeddedServletContainerFactory7.accessLogDirectory = file12;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = undertowEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int16 = undertowEmbeddedServletContainerFactory15.getSessionTimeout();
        boolean boolean17 = undertowEmbeddedServletContainerFactory15.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList18 = undertowEmbeddedServletContainerFactory15.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = undertowEmbeddedServletContainerFactory15.getJspServlet();
        undertowEmbeddedServletContainerFactory7.setJspServlet(jspServlet19);
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet19);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 1800;
        org.springframework.core.io.ResourceLoader resourceLoader24 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader24);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection26 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8080 + "'", int8 == 8080);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1800 + "'", int16 == 1800);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList18);
        org.junit.Assert.assertNotNull(jspServlet19);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection26);
    }

    @Test
    public void test13325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13325");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl4);
        org.springframework.boot.context.embedded.Ssl ssl6 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl6);
        java.io.File file8 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) (-1));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test13326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13326");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.jarPath = "hi!";
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "0.0.0.0";
        java.lang.String str6 = jarResourceManager0.jarPath;
        boolean boolean7 = jarResourceManager0.isResourceChangeListenerSupported();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0.0.0.0" + "'", str6, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test13327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13327");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setDisplayName("");
        undertowEmbeddedServletContainerFactory0.ioThreads = 10;
        java.lang.ClassLoader classLoader7 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(classLoader7);
    }

    @Test
    public void test13328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13328");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        java.io.File file7 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.Ssl ssl8 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl8);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 1;
        org.springframework.boot.context.embedded.ErrorPage errorPage12 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray13 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage12 };
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray13);
        org.springframework.core.io.ResourceLoader resourceLoader15 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getSessionTimeout();
        boolean boolean20 = undertowEmbeddedServletContainerFactory18.isPersistSession();
        undertowEmbeddedServletContainerFactory18.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory18.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory18.setDisplayName("hi!");
        boolean boolean27 = undertowEmbeddedServletContainerFactory18.isRegisterDefaultServlet();
        java.io.File file28 = undertowEmbeddedServletContainerFactory18.getDocumentRoot();
        undertowEmbeddedServletContainerFactory18.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int32 = undertowEmbeddedServletContainerFactory31.getSessionTimeout();
        boolean boolean33 = undertowEmbeddedServletContainerFactory31.isPersistSession();
        undertowEmbeddedServletContainerFactory31.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory31.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory31.setDisplayName("hi!");
        boolean boolean40 = undertowEmbeddedServletContainerFactory31.isRegisterDefaultServlet();
        boolean boolean41 = undertowEmbeddedServletContainerFactory31.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int43 = undertowEmbeddedServletContainerFactory42.getSessionTimeout();
        boolean boolean44 = undertowEmbeddedServletContainerFactory42.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList45 = undertowEmbeddedServletContainerFactory42.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet46 = undertowEmbeddedServletContainerFactory42.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int48 = undertowEmbeddedServletContainerFactory47.getSessionTimeout();
        boolean boolean49 = undertowEmbeddedServletContainerFactory47.isPersistSession();
        undertowEmbeddedServletContainerFactory47.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder53 = undertowEmbeddedServletContainerFactory47.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager54 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer56 = undertowEmbeddedServletContainerFactory42.getUndertowEmbeddedServletContainer(builder53, deploymentManager54, (int) (short) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int58 = undertowEmbeddedServletContainerFactory57.getSessionTimeout();
        boolean boolean59 = undertowEmbeddedServletContainerFactory57.isPersistSession();
        undertowEmbeddedServletContainerFactory57.setPersistSession(false);
        undertowEmbeddedServletContainerFactory57.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList64 = undertowEmbeddedServletContainerFactory57.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory57.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int68 = undertowEmbeddedServletContainerFactory67.getSessionTimeout();
        boolean boolean69 = undertowEmbeddedServletContainerFactory67.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList70 = undertowEmbeddedServletContainerFactory67.builderCustomizers;
        undertowEmbeddedServletContainerFactory57.builderCustomizers = undertowBuilderCustomizerList70;
        undertowEmbeddedServletContainerFactory42.builderCustomizers = undertowBuilderCustomizerList70;
        undertowEmbeddedServletContainerFactory31.builderCustomizers = undertowBuilderCustomizerList70;
        undertowEmbeddedServletContainerFactory18.builderCustomizers = undertowBuilderCustomizerList70;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList70;
        org.springframework.boot.context.embedded.Compression compression76 = undertowEmbeddedServletContainerFactory0.getCompression();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo77 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.configureMimeMappings(deploymentInfo77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(errorPageArray13);
        org.junit.Assert.assertNull(resourceLoader15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1800 + "'", int32 == 1800);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1800 + "'", int43 == 1800);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList45);
        org.junit.Assert.assertNotNull(jspServlet46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1800 + "'", int48 == 1800);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1800 + "'", int58 == 1800);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1800 + "'", int68 == 1800);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList70);
        org.junit.Assert.assertNull(compression76);
    }

    @Test
    public void test13329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13329");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file8);
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList11 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.lang.String str12 = undertowEmbeddedServletContainerFactory0.getContextPath();
        java.io.File file13 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        boolean boolean14 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 0);
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "0.0.0.0";
        boolean boolean19 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        undertowEmbeddedServletContainerFactory0.setPort(10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test13330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13330");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        java.lang.String str5 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file6);
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory2.setAccessLogDirectory(file8);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getPort();
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory10.bufferSize;
        boolean boolean13 = undertowEmbeddedServletContainerFactory10.accessLogEnabled;
        java.lang.String str14 = undertowEmbeddedServletContainerFactory10.accessLogPattern;
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        undertowEmbeddedServletContainerFactory10.setResourceLoader(resourceLoader15);
        boolean boolean17 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getSessionTimeout();
        boolean boolean20 = undertowEmbeddedServletContainerFactory18.isPersistSession();
        undertowEmbeddedServletContainerFactory18.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl23 = null;
        undertowEmbeddedServletContainerFactory18.setSsl(ssl23);
        org.springframework.boot.context.embedded.JspServlet jspServlet25 = undertowEmbeddedServletContainerFactory18.getJspServlet();
        undertowEmbeddedServletContainerFactory10.setJspServlet(jspServlet25);
        undertowEmbeddedServletContainerFactory2.setJspServlet(jspServlet25);
        int int28 = undertowEmbeddedServletContainerFactory2.getPort();
        undertowEmbeddedServletContainerFactory2.workerThreads = 10;
        java.lang.ClassLoader classLoader31 = undertowEmbeddedServletContainerFactory2.getServletClassLoader();
        org.springframework.boot.context.embedded.Compression compression32 = null;
        undertowEmbeddedServletContainerFactory2.setCompression(compression32);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8080 + "'", int11 == 8080);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jspServlet25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(classLoader31);
    }

    @Test
    public void test13331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13331");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int5 = undertowEmbeddedServletContainerFactory4.getSessionTimeout();
        boolean boolean6 = undertowEmbeddedServletContainerFactory4.isPersistSession();
        undertowEmbeddedServletContainerFactory4.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory4.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory4.setDisplayName("hi!");
        boolean boolean13 = undertowEmbeddedServletContainerFactory4.isRegisterDefaultServlet();
        boolean boolean14 = undertowEmbeddedServletContainerFactory4.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int16 = undertowEmbeddedServletContainerFactory15.getSessionTimeout();
        boolean boolean17 = undertowEmbeddedServletContainerFactory15.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList18 = undertowEmbeddedServletContainerFactory15.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = undertowEmbeddedServletContainerFactory15.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int21 = undertowEmbeddedServletContainerFactory20.getSessionTimeout();
        boolean boolean22 = undertowEmbeddedServletContainerFactory20.isPersistSession();
        undertowEmbeddedServletContainerFactory20.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder26 = undertowEmbeddedServletContainerFactory20.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer29 = undertowEmbeddedServletContainerFactory15.getUndertowEmbeddedServletContainer(builder26, deploymentManager27, (int) (short) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int31 = undertowEmbeddedServletContainerFactory30.getSessionTimeout();
        boolean boolean32 = undertowEmbeddedServletContainerFactory30.isPersistSession();
        undertowEmbeddedServletContainerFactory30.setPersistSession(false);
        undertowEmbeddedServletContainerFactory30.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList37 = undertowEmbeddedServletContainerFactory30.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory30.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int41 = undertowEmbeddedServletContainerFactory40.getSessionTimeout();
        boolean boolean42 = undertowEmbeddedServletContainerFactory40.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList43 = undertowEmbeddedServletContainerFactory40.builderCustomizers;
        undertowEmbeddedServletContainerFactory30.builderCustomizers = undertowBuilderCustomizerList43;
        undertowEmbeddedServletContainerFactory15.builderCustomizers = undertowBuilderCustomizerList43;
        undertowEmbeddedServletContainerFactory4.builderCustomizers = undertowBuilderCustomizerList43;
        undertowEmbeddedServletContainerFactory1.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList43);
        boolean boolean48 = undertowEmbeddedServletContainerFactory1.accessLogEnabled;
        java.lang.Boolean boolean49 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int51 = undertowEmbeddedServletContainerFactory50.getSessionTimeout();
        boolean boolean52 = undertowEmbeddedServletContainerFactory50.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList53 = undertowEmbeddedServletContainerFactory50.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet54 = undertowEmbeddedServletContainerFactory50.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet54);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet56 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1800 + "'", int5 == 1800);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1800 + "'", int16 == 1800);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList18);
        org.junit.Assert.assertNotNull(jspServlet19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1800 + "'", int21 == 1800);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1800 + "'", int31 == 1800);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1800 + "'", int41 == 1800);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1800 + "'", int51 == 1800);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList53);
        org.junit.Assert.assertNotNull(jspServlet54);
        org.junit.Assert.assertNotNull(errorPageSet56);
    }

    @Test
    public void test13332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13332");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        boolean boolean2 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean3 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.close();
        java.lang.String str5 = jarResourceManager0.jarPath;
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "0.0.0.0";
        jarResourceManager0.jarPath = "";
        boolean boolean11 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str12 = jarResourceManager0.jarPath;
        boolean boolean13 = jarResourceManager0.isResourceChangeListenerSupported();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test13333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13333");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) '4');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int3 = undertowEmbeddedServletContainerFactory2.getSessionTimeout();
        boolean boolean4 = undertowEmbeddedServletContainerFactory2.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList5 = undertowEmbeddedServletContainerFactory2.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet6 = undertowEmbeddedServletContainerFactory2.getJspServlet();
        boolean boolean7 = undertowEmbeddedServletContainerFactory2.useForwardHeaders;
        java.net.InetAddress inetAddress8 = undertowEmbeddedServletContainerFactory2.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        undertowEmbeddedServletContainerFactory2.resourceLoader = resourceLoader9;
        undertowEmbeddedServletContainerFactory2.accessLogPattern = "hi!";
        org.springframework.boot.context.embedded.JspServlet jspServlet13 = undertowEmbeddedServletContainerFactory2.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet13);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file15);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 0);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo19 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo19);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1800 + "'", int3 == 1800);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList5);
        org.junit.Assert.assertNotNull(jspServlet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(inetAddress8);
        org.junit.Assert.assertNotNull(jspServlet13);
    }

    @Test
    public void test13334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13334");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        java.lang.String str5 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file6);
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory2.setAccessLogDirectory(file8);
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file10);
        java.lang.ClassLoader classLoader12 = undertowEmbeddedServletContainerFactory2.getServletClassLoader();
        boolean boolean13 = undertowEmbeddedServletContainerFactory2.accessLogEnabled;
        boolean boolean14 = undertowEmbeddedServletContainerFactory2.accessLogEnabled;
        org.springframework.boot.context.embedded.Ssl ssl15 = null;
        undertowEmbeddedServletContainerFactory2.setSsl(ssl15);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection17 = undertowEmbeddedServletContainerFactory2.getBuilderCustomizers();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(classLoader12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection17);
    }

    @Test
    public void test13335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13335");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.net.InetAddress inetAddress6 = undertowEmbeddedServletContainerFactory0.getAddress();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        undertowEmbeddedServletContainerFactory0.setPort((int) ' ');
        org.springframework.boot.context.embedded.Compression compression12 = undertowEmbeddedServletContainerFactory0.getCompression();
        io.undertow.Undertow.Builder builder14 = undertowEmbeddedServletContainerFactory0.createBuilder((int) ' ');
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file17);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(compression12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test13336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13336");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.Compression compression4 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression4);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = true;
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(0);
        java.lang.Integer int13 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(int13);
    }

    @Test
    public void test13337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13337");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader3);
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.io.File file9 = undertowEmbeddedServletContainerFactory6.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory6.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory6.getMimeMappings();
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory6.buffersPerRegion;
        io.undertow.Undertow.Builder builder14 = undertowEmbeddedServletContainerFactory6.createBuilder(10);
        io.undertow.servlet.api.DeploymentManager deploymentManager15 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer17 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder14, deploymentManager15, 1);
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("0.0.0.0");
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer17);
    }

    @Test
    public void test13338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13338");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        jarResourceManager0.jarPath = "hi!";
        java.lang.String str6 = jarResourceManager0.jarPath;
        java.lang.String str7 = jarResourceManager0.jarPath;
        jarResourceManager0.close();
        boolean boolean9 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str10 = jarResourceManager0.jarPath;
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "0.0.0.0";
        jarResourceManager0.close();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test13339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13339");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        boolean boolean9 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = undertowEmbeddedServletContainerFactory11.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet15 = undertowEmbeddedServletContainerFactory11.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        undertowEmbeddedServletContainerFactory16.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder22 = undertowEmbeddedServletContainerFactory16.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager23 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer25 = undertowEmbeddedServletContainerFactory11.getUndertowEmbeddedServletContainer(builder22, deploymentManager23, (int) (short) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int27 = undertowEmbeddedServletContainerFactory26.getSessionTimeout();
        boolean boolean28 = undertowEmbeddedServletContainerFactory26.isPersistSession();
        undertowEmbeddedServletContainerFactory26.setPersistSession(false);
        undertowEmbeddedServletContainerFactory26.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList33 = undertowEmbeddedServletContainerFactory26.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory26.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int37 = undertowEmbeddedServletContainerFactory36.getSessionTimeout();
        boolean boolean38 = undertowEmbeddedServletContainerFactory36.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList39 = undertowEmbeddedServletContainerFactory36.builderCustomizers;
        undertowEmbeddedServletContainerFactory26.builderCustomizers = undertowBuilderCustomizerList39;
        undertowEmbeddedServletContainerFactory11.builderCustomizers = undertowBuilderCustomizerList39;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList39;
        java.lang.Boolean boolean43 = undertowEmbeddedServletContainerFactory0.directBuffers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList44 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.net.InetAddress inetAddress45 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress45);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        io.undertow.Undertow.Builder builder50 = undertowEmbeddedServletContainerFactory0.createBuilder((int) (byte) 10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList14);
        org.junit.Assert.assertNotNull(jspServlet15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1800 + "'", int27 == 1800);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1800 + "'", int37 == 1800);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList39);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList44);
        org.junit.Assert.assertNotNull(builder50);
    }

    @Test
    public void test13340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13340");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file5);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file8);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getSessionTimeout();
        boolean boolean12 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        undertowEmbeddedServletContainerFactory10.setPersistSession(false);
        undertowEmbeddedServletContainerFactory10.setUseForwardHeaders(true);
        io.undertow.server.handlers.resource.ResourceManager resourceManager17 = undertowEmbeddedServletContainerFactory10.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getSessionTimeout();
        boolean boolean20 = undertowEmbeddedServletContainerFactory18.isPersistSession();
        java.io.File file21 = undertowEmbeddedServletContainerFactory18.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = undertowEmbeddedServletContainerFactory18.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = undertowEmbeddedServletContainerFactory18.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int25 = undertowEmbeddedServletContainerFactory24.getSessionTimeout();
        boolean boolean26 = undertowEmbeddedServletContainerFactory24.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList27 = undertowEmbeddedServletContainerFactory24.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet28 = undertowEmbeddedServletContainerFactory24.getJspServlet();
        undertowEmbeddedServletContainerFactory18.setJspServlet(jspServlet28);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray31 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList32 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList32, undertowBuilderCustomizerArray31);
        undertowEmbeddedServletContainerFactory30.builderCustomizers = undertowBuilderCustomizerList32;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection35 = undertowEmbeddedServletContainerFactory30.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory18.setBuilderCustomizers(undertowBuilderCustomizerCollection35);
        undertowEmbeddedServletContainerFactory10.setBuilderCustomizers(undertowBuilderCustomizerCollection35);
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection35);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean41 = undertowEmbeddedServletContainerFactory40.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory40.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory40.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory46.accessLogEnabled = false;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray49 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList50 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList50, undertowBuilderCustomizerArray49);
        undertowEmbeddedServletContainerFactory46.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList50);
        undertowEmbeddedServletContainerFactory40.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList50);
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList50);
        java.io.File file55 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        java.lang.Integer int56 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.xnio.XnioWorker xnioWorker57 = undertowEmbeddedServletContainerFactory0.createWorker();
        boolean boolean58 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1800 + "'", int11 == 1800);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(resourceManager17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1800 + "'", int25 == 1800);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList27);
        org.junit.Assert.assertNotNull(jspServlet28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection35);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(xnioWorker57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test13341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13341");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList5 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList9;
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        java.lang.String str13 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        java.lang.String str14 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList17, undertowBuilderCustomizerArray16);
        undertowEmbeddedServletContainerFactory15.builderCustomizers = undertowBuilderCustomizerList17;
        java.io.File file20 = null;
        undertowEmbeddedServletContainerFactory15.setSessionStoreDir(file20);
        org.springframework.core.io.ResourceLoader resourceLoader22 = undertowEmbeddedServletContainerFactory15.resourceLoader;
        undertowEmbeddedServletContainerFactory15.setRegisterJspServlet(true);
        undertowEmbeddedServletContainerFactory15.setPersistSession(false);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList27 = undertowEmbeddedServletContainerFactory15.deploymentInfoCustomizers;
        org.springframework.core.io.ResourceLoader resourceLoader28 = null;
        undertowEmbeddedServletContainerFactory15.setResourceLoader(resourceLoader28);
        java.io.File file30 = undertowEmbeddedServletContainerFactory15.getSessionStoreDir();
        java.lang.Integer int31 = undertowEmbeddedServletContainerFactory15.buffersPerRegion;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int33 = undertowEmbeddedServletContainerFactory32.getSessionTimeout();
        boolean boolean34 = undertowEmbeddedServletContainerFactory32.isPersistSession();
        undertowEmbeddedServletContainerFactory32.setPersistSession(false);
        undertowEmbeddedServletContainerFactory32.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int40 = undertowEmbeddedServletContainerFactory39.getSessionTimeout();
        boolean boolean41 = undertowEmbeddedServletContainerFactory39.isPersistSession();
        undertowEmbeddedServletContainerFactory39.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory39.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int47 = undertowEmbeddedServletContainerFactory46.getSessionTimeout();
        boolean boolean48 = undertowEmbeddedServletContainerFactory46.isPersistSession();
        undertowEmbeddedServletContainerFactory46.setPersistSession(false);
        undertowEmbeddedServletContainerFactory46.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList53 = undertowEmbeddedServletContainerFactory46.deploymentInfoCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList54 = undertowEmbeddedServletContainerFactory46.builderCustomizers;
        undertowEmbeddedServletContainerFactory39.builderCustomizers = undertowBuilderCustomizerList54;
        undertowEmbeddedServletContainerFactory32.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList54);
        undertowEmbeddedServletContainerFactory15.builderCustomizers = undertowBuilderCustomizerList54;
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList54);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0.0.0.0" + "'", str13, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0.0.0.0" + "'", str14, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(resourceLoader22);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList27);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1800 + "'", int33 == 1800);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1800 + "'", int40 == 1800);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1800 + "'", int47 == 1800);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList53);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList54);
    }

    @Test
    public void test13342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13342");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getSessionTimeout();
        boolean boolean11 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        undertowEmbeddedServletContainerFactory9.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder15 = undertowEmbeddedServletContainerFactory9.createBuilder((-1));
        undertowEmbeddedServletContainerFactory9.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray20 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory18.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray20);
        undertowEmbeddedServletContainerFactory9.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray20);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray20);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection24 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList25 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.io.File file26 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file26);
        undertowEmbeddedServletContainerFactory0.setDisplayName("0.0.0.0");
        java.lang.ClassLoader classLoader30 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) '#');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int35 = undertowEmbeddedServletContainerFactory34.getSessionTimeout();
        boolean boolean36 = undertowEmbeddedServletContainerFactory34.isPersistSession();
        undertowEmbeddedServletContainerFactory34.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl39 = null;
        undertowEmbeddedServletContainerFactory34.setSsl(ssl39);
        java.lang.String str41 = undertowEmbeddedServletContainerFactory34.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int43 = undertowEmbeddedServletContainerFactory42.getSessionTimeout();
        boolean boolean44 = undertowEmbeddedServletContainerFactory42.isPersistSession();
        undertowEmbeddedServletContainerFactory42.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory42.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int50 = undertowEmbeddedServletContainerFactory49.getSessionTimeout();
        boolean boolean51 = undertowEmbeddedServletContainerFactory49.isPersistSession();
        java.io.File file52 = undertowEmbeddedServletContainerFactory49.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList53 = undertowEmbeddedServletContainerFactory49.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory42.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList53;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory57.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int61 = undertowEmbeddedServletContainerFactory60.getSessionTimeout();
        boolean boolean62 = undertowEmbeddedServletContainerFactory60.isPersistSession();
        undertowEmbeddedServletContainerFactory60.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory60.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray67 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory60.addErrorPages(errorPageArray67);
        undertowEmbeddedServletContainerFactory57.addErrorPages(errorPageArray67);
        undertowEmbeddedServletContainerFactory42.addErrorPages(errorPageArray67);
        undertowEmbeddedServletContainerFactory34.addErrorPages(errorPageArray67);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int73 = undertowEmbeddedServletContainerFactory72.getSessionTimeout();
        boolean boolean74 = undertowEmbeddedServletContainerFactory72.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList75 = undertowEmbeddedServletContainerFactory72.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int77 = undertowEmbeddedServletContainerFactory76.getSessionTimeout();
        boolean boolean78 = undertowEmbeddedServletContainerFactory76.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList79 = undertowEmbeddedServletContainerFactory76.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet80 = undertowEmbeddedServletContainerFactory76.getJspServlet();
        boolean boolean81 = undertowEmbeddedServletContainerFactory76.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet82 = undertowEmbeddedServletContainerFactory76.getErrorPages();
        undertowEmbeddedServletContainerFactory72.setErrorPages(errorPageSet82);
        undertowEmbeddedServletContainerFactory34.setErrorPages(errorPageSet82);
        undertowEmbeddedServletContainerFactory33.setErrorPages(errorPageSet82);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList86 = undertowEmbeddedServletContainerFactory33.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList86);
        io.undertow.server.handlers.resource.ResourceManager resourceManager88 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        java.net.InetAddress inetAddress89 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress89);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8080 + "'", int19 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray20);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection24);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList25);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1800 + "'", int35 == 1800);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1800 + "'", int43 == 1800);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1800 + "'", int50 == 1800);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList53);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1800 + "'", int61 == 1800);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(errorPageArray67);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1800 + "'", int73 == 1800);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1800 + "'", int77 == 1800);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList79);
        org.junit.Assert.assertNotNull(jspServlet80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(errorPageSet82);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList86);
        org.junit.Assert.assertNotNull(resourceManager88);
    }

    @Test
    public void test13343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13343");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        undertowEmbeddedServletContainerFactory2.resourceLoader = resourceLoader4;
        undertowEmbeddedServletContainerFactory2.directBuffers = true;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo8 = null;
        undertowEmbeddedServletContainerFactory2.configureErrorPages(deploymentInfo8);
        int int10 = undertowEmbeddedServletContainerFactory2.getPort();
        boolean boolean11 = undertowEmbeddedServletContainerFactory2.isAccessLogEnabled();
        java.io.File file12 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file12);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = undertowEmbeddedServletContainerFactory14.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet18 = undertowEmbeddedServletContainerFactory14.getJspServlet();
        undertowEmbeddedServletContainerFactory14.directBuffers = true;
        java.lang.Integer int21 = undertowEmbeddedServletContainerFactory14.bufferSize;
        java.io.File file22 = null;
        undertowEmbeddedServletContainerFactory14.setDocumentRoot(file22);
        boolean boolean24 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList25 = undertowEmbeddedServletContainerFactory14.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory2.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList25;
        java.lang.ClassLoader classLoader27 = undertowEmbeddedServletContainerFactory2.getServletClassLoader();
        java.net.InetAddress inetAddress28 = undertowEmbeddedServletContainerFactory2.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer31 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap30);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray32 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer31 };
        initializer29.initializers = servletContextInitializerArray32;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray34 = initializer29.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int36 = undertowEmbeddedServletContainerFactory35.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer38 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap37);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer40 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap39);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer42 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap41);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer44 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap43);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray45 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer38, initParameterConfiguringServletContextInitializer40, initParameterConfiguringServletContextInitializer42, initParameterConfiguringServletContextInitializer44 };
        undertowEmbeddedServletContainerFactory35.addInitializers(servletContextInitializerArray45);
        initializer29.initializers = servletContextInitializerArray45;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray48 = initializer29.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray49 = initializer29.initializers;
        undertowEmbeddedServletContainerFactory2.addInitializers(servletContextInitializerArray49);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList17);
        org.junit.Assert.assertNotNull(jspServlet18);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList25);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertNull(inetAddress28);
        org.junit.Assert.assertNotNull(servletContextInitializerArray32);
        org.junit.Assert.assertNotNull(servletContextInitializerArray34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1800 + "'", int36 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray45);
        org.junit.Assert.assertNotNull(servletContextInitializerArray48);
        org.junit.Assert.assertNotNull(servletContextInitializerArray49);
    }

    @Test
    public void test13344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13344");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        boolean boolean9 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getPort();
        java.lang.Integer int13 = undertowEmbeddedServletContainerFactory11.bufferSize;
        java.io.File file14 = null;
        undertowEmbeddedServletContainerFactory11.setSessionStoreDir(file14);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList19 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet20 = undertowEmbeddedServletContainerFactory16.getJspServlet();
        boolean boolean21 = undertowEmbeddedServletContainerFactory16.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = undertowEmbeddedServletContainerFactory16.getErrorPages();
        undertowEmbeddedServletContainerFactory11.setErrorPages(errorPageSet22);
        java.lang.Boolean boolean24 = undertowEmbeddedServletContainerFactory11.directBuffers;
        org.springframework.boot.context.embedded.Compression compression25 = null;
        undertowEmbeddedServletContainerFactory11.setCompression(compression25);
        boolean boolean27 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        undertowEmbeddedServletContainerFactory28.setIoThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder34 = undertowEmbeddedServletContainerFactory28.createBuilder((int) (byte) 1);
        io.undertow.servlet.api.DeploymentManager deploymentManager35 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer37 = undertowEmbeddedServletContainerFactory11.getUndertowEmbeddedServletContainer(builder34, deploymentManager35, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager38 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer40 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder34, deploymentManager38, 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int44 = undertowEmbeddedServletContainerFactory43.getSessionTimeout();
        boolean boolean45 = undertowEmbeddedServletContainerFactory43.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList46 = undertowEmbeddedServletContainerFactory43.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet47 = undertowEmbeddedServletContainerFactory43.getJspServlet();
        undertowEmbeddedServletContainerFactory43.directBuffers = true;
        java.lang.Integer int50 = undertowEmbeddedServletContainerFactory43.bufferSize;
        java.io.File file51 = null;
        undertowEmbeddedServletContainerFactory43.setDocumentRoot(file51);
        boolean boolean53 = undertowEmbeddedServletContainerFactory43.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList54 = undertowEmbeddedServletContainerFactory43.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList54;
        java.io.File file56 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file56);
        io.undertow.server.handlers.resource.ResourceManager resourceManager58 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        java.io.File file59 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file59);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) (-1));
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.createAccessLogDirectoryIfNecessary();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Access log directory is not set");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8080 + "'", int12 == 8080);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList19);
        org.junit.Assert.assertNotNull(jspServlet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(errorPageSet22);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer37);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1800 + "'", int44 == 1800);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList46);
        org.junit.Assert.assertNotNull(jspServlet47);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList54);
        org.junit.Assert.assertNotNull(resourceManager58);
    }

    @Test
    public void test13345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13345");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "0.0.0.0";
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 1800);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList11 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.io.File file12 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file12);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList11);
    }

    @Test
    public void test13346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13346");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray1 = initializer0.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int3 = undertowEmbeddedServletContainerFactory2.getSessionTimeout();
        boolean boolean4 = undertowEmbeddedServletContainerFactory2.isPersistSession();
        java.io.File file5 = undertowEmbeddedServletContainerFactory2.accessLogDirectory;
        undertowEmbeddedServletContainerFactory2.setRegisterDefaultServlet(true);
        java.lang.Boolean boolean8 = undertowEmbeddedServletContainerFactory2.directBuffers;
        org.springframework.boot.context.embedded.Compression compression9 = undertowEmbeddedServletContainerFactory2.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getPort();
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory10.bufferSize;
        java.io.File file13 = null;
        undertowEmbeddedServletContainerFactory10.setSessionStoreDir(file13);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer18 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap17);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer18 };
        initializer16.initializers = servletContextInitializerArray19;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer23 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap22);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray24 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer23 };
        initializer21.initializers = servletContextInitializerArray24;
        initializer16.initializers = servletContextInitializerArray24;
        initializer15.initializers = servletContextInitializerArray24;
        undertowEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray24);
        undertowEmbeddedServletContainerFactory2.addInitializers(servletContextInitializerArray24);
        initializer0.initializers = servletContextInitializerArray24;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int32 = undertowEmbeddedServletContainerFactory31.getSessionTimeout();
        boolean boolean33 = undertowEmbeddedServletContainerFactory31.isPersistSession();
        java.io.File file34 = undertowEmbeddedServletContainerFactory31.accessLogDirectory;
        java.io.File file35 = null;
        undertowEmbeddedServletContainerFactory31.setDocumentRoot(file35);
        org.springframework.boot.context.embedded.Ssl ssl37 = undertowEmbeddedServletContainerFactory31.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int39 = undertowEmbeddedServletContainerFactory38.getSessionTimeout();
        boolean boolean40 = undertowEmbeddedServletContainerFactory38.isPersistSession();
        undertowEmbeddedServletContainerFactory38.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory38.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory38.setDisplayName("hi!");
        boolean boolean47 = undertowEmbeddedServletContainerFactory38.isRegisterDefaultServlet();
        java.io.File file48 = null;
        undertowEmbeddedServletContainerFactory38.accessLogDirectory = file48;
        io.undertow.server.handlers.resource.ResourceManager resourceManager50 = undertowEmbeddedServletContainerFactory38.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int52 = undertowEmbeddedServletContainerFactory51.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer54 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap53);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer56 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap55);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer58 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap57);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer60 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap59);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray61 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer54, initParameterConfiguringServletContextInitializer56, initParameterConfiguringServletContextInitializer58, initParameterConfiguringServletContextInitializer60 };
        undertowEmbeddedServletContainerFactory51.addInitializers(servletContextInitializerArray61);
        undertowEmbeddedServletContainerFactory38.addInitializers(servletContextInitializerArray61);
        undertowEmbeddedServletContainerFactory31.addInitializers(servletContextInitializerArray61);
        initializer0.initializers = servletContextInitializerArray61;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray66 = initializer0.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray67 = initializer0.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray68 = initializer0.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray69 = initializer0.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer70 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer72 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap71);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray73 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer72 };
        initializer70.initializers = servletContextInitializerArray73;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray75 = initializer70.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int77 = undertowEmbeddedServletContainerFactory76.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap78 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer79 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap78);
        java.util.Map<java.lang.String, java.lang.String> strMap80 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer81 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap80);
        java.util.Map<java.lang.String, java.lang.String> strMap82 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer83 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap82);
        java.util.Map<java.lang.String, java.lang.String> strMap84 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer85 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap84);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray86 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer79, initParameterConfiguringServletContextInitializer81, initParameterConfiguringServletContextInitializer83, initParameterConfiguringServletContextInitializer85 };
        undertowEmbeddedServletContainerFactory76.addInitializers(servletContextInitializerArray86);
        initializer70.initializers = servletContextInitializerArray86;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray89 = initializer70.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray90 = initializer70.initializers;
        initializer0.initializers = servletContextInitializerArray90;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray92 = initializer0.initializers;
        org.junit.Assert.assertNull(servletContextInitializerArray1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1800 + "'", int3 == 1800);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNull(compression9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8080 + "'", int11 == 8080);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertNotNull(servletContextInitializerArray24);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1800 + "'", int32 == 1800);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(ssl37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1800 + "'", int39 == 1800);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(resourceManager50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1800 + "'", int52 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray61);
        org.junit.Assert.assertNotNull(servletContextInitializerArray66);
        org.junit.Assert.assertNotNull(servletContextInitializerArray67);
        org.junit.Assert.assertNotNull(servletContextInitializerArray68);
        org.junit.Assert.assertNotNull(servletContextInitializerArray69);
        org.junit.Assert.assertNotNull(servletContextInitializerArray73);
        org.junit.Assert.assertNotNull(servletContextInitializerArray75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1800 + "'", int77 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray86);
        org.junit.Assert.assertNotNull(servletContextInitializerArray89);
        org.junit.Assert.assertNotNull(servletContextInitializerArray90);
        org.junit.Assert.assertNotNull(servletContextInitializerArray92);
    }

    @Test
    public void test13347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13347");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.io.File file6 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getPort();
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory7.bufferSize;
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory7.setSessionStoreDir(file10);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray14 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13 };
        undertowEmbeddedServletContainerFactory7.addInitializers(servletContextInitializerArray14);
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray14);
        org.springframework.core.io.ResourceLoader resourceLoader17 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        boolean boolean18 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getSessionTimeout();
        boolean boolean23 = undertowEmbeddedServletContainerFactory21.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList24 = undertowEmbeddedServletContainerFactory21.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet25 = undertowEmbeddedServletContainerFactory21.getJspServlet();
        undertowEmbeddedServletContainerFactory21.directBuffers = true;
        java.lang.Integer int28 = undertowEmbeddedServletContainerFactory21.bufferSize;
        java.io.File file29 = null;
        undertowEmbeddedServletContainerFactory21.setDocumentRoot(file29);
        boolean boolean31 = undertowEmbeddedServletContainerFactory21.isPersistSession();
        undertowEmbeddedServletContainerFactory21.setWorkerThreads((java.lang.Integer) 8080);
        org.xnio.XnioWorker xnioWorker34 = undertowEmbeddedServletContainerFactory21.createWorker();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int36 = undertowEmbeddedServletContainerFactory35.getSessionTimeout();
        undertowEmbeddedServletContainerFactory35.setSessionTimeout((int) (short) 1);
        boolean boolean39 = undertowEmbeddedServletContainerFactory35.useForwardHeaders;
        java.lang.String str40 = undertowEmbeddedServletContainerFactory35.getDisplayName();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings41 = undertowEmbeddedServletContainerFactory35.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int43 = undertowEmbeddedServletContainerFactory42.getSessionTimeout();
        boolean boolean44 = undertowEmbeddedServletContainerFactory42.isPersistSession();
        java.io.File file45 = undertowEmbeddedServletContainerFactory42.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings46 = undertowEmbeddedServletContainerFactory42.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings47 = undertowEmbeddedServletContainerFactory42.getMimeMappings();
        java.lang.Integer int48 = undertowEmbeddedServletContainerFactory42.buffersPerRegion;
        io.undertow.Undertow.Builder builder50 = undertowEmbeddedServletContainerFactory42.createBuilder(10);
        undertowEmbeddedServletContainerFactory42.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str53 = undertowEmbeddedServletContainerFactory42.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int55 = undertowEmbeddedServletContainerFactory54.getSessionTimeout();
        boolean boolean56 = undertowEmbeddedServletContainerFactory54.isPersistSession();
        undertowEmbeddedServletContainerFactory54.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder60 = undertowEmbeddedServletContainerFactory54.createBuilder((-1));
        undertowEmbeddedServletContainerFactory54.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int64 = undertowEmbeddedServletContainerFactory63.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray65 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory63.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray65);
        undertowEmbeddedServletContainerFactory54.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray65);
        undertowEmbeddedServletContainerFactory42.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray65);
        undertowEmbeddedServletContainerFactory35.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray65);
        undertowEmbeddedServletContainerFactory21.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray65);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray65);
        java.io.File file72 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8080 + "'", int8 == 8080);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(servletContextInitializerArray14);
        org.junit.Assert.assertNull(resourceLoader17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1800 + "'", int22 == 1800);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList24);
        org.junit.Assert.assertNotNull(jspServlet25);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(xnioWorker34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1800 + "'", int36 == 1800);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(mimeMappings41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1800 + "'", int43 == 1800);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(mimeMappings46);
        org.junit.Assert.assertNotNull(mimeMappings47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1800 + "'", int55 == 1800);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 8080 + "'", int64 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray65);
        org.junit.Assert.assertNull(file72);
    }

    @Test
    public void test13348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13348");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.Compression compression4 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression4);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = true;
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(0);
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet15 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.boot.context.embedded.Ssl ssl16 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory19.ioThreads = 1;
        undertowEmbeddedServletContainerFactory19.useForwardHeaders = false;
        undertowEmbeddedServletContainerFactory19.setBufferSize((java.lang.Integer) 8080);
        io.undertow.Undertow.Builder builder27 = undertowEmbeddedServletContainerFactory19.createBuilder((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.configureSsl(ssl16, 100, builder27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(errorPageSet15);
        org.junit.Assert.assertNotNull(builder27);
    }

    @Test
    public void test13349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13349");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        boolean boolean2 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean3 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.jarPath = "hi!";
        jarResourceManager0.close();
        boolean boolean7 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str8 = jarResourceManager0.jarPath;
        jarResourceManager0.jarPath = "0.0.0.0";
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test13350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13350");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("hi!");
        io.undertow.servlet.api.DeploymentInfo deploymentInfo10 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo10);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        boolean boolean16 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        boolean boolean17 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test13351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13351");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(97);
    }

    @Test
    public void test13352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13352");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file15);
        java.lang.String str17 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        boolean boolean18 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.io.File file19 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file19);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader22 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader22);
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(errorPageSet21);
    }

    @Test
    public void test13353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13353");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        undertowEmbeddedServletContainerFactory0.workerThreads = 1;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("0.0.0.0");
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.io.File file12 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test13354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13354");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 1);
        boolean boolean4 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.lang.String str5 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file6;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        undertowEmbeddedServletContainerFactory8.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory8.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int16 = undertowEmbeddedServletContainerFactory15.getSessionTimeout();
        boolean boolean17 = undertowEmbeddedServletContainerFactory15.isPersistSession();
        java.io.File file18 = undertowEmbeddedServletContainerFactory15.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList19 = undertowEmbeddedServletContainerFactory15.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory8.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList19;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader22 = null;
        undertowEmbeddedServletContainerFactory8.setResourceLoader(resourceLoader22);
        java.lang.Integer int24 = undertowEmbeddedServletContainerFactory8.bufferSize;
        boolean boolean25 = undertowEmbeddedServletContainerFactory8.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int27 = undertowEmbeddedServletContainerFactory26.getPort();
        java.lang.Integer int28 = undertowEmbeddedServletContainerFactory26.bufferSize;
        java.io.File file29 = null;
        undertowEmbeddedServletContainerFactory26.setSessionStoreDir(file29);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int32 = undertowEmbeddedServletContainerFactory31.getSessionTimeout();
        boolean boolean33 = undertowEmbeddedServletContainerFactory31.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList34 = undertowEmbeddedServletContainerFactory31.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet35 = undertowEmbeddedServletContainerFactory31.getJspServlet();
        boolean boolean36 = undertowEmbeddedServletContainerFactory31.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet37 = undertowEmbeddedServletContainerFactory31.getErrorPages();
        undertowEmbeddedServletContainerFactory26.setErrorPages(errorPageSet37);
        undertowEmbeddedServletContainerFactory26.setIoThreads((java.lang.Integer) 1800);
        java.io.File file41 = null;
        undertowEmbeddedServletContainerFactory26.setSessionStoreDir(file41);
        boolean boolean43 = undertowEmbeddedServletContainerFactory26.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int45 = undertowEmbeddedServletContainerFactory44.getSessionTimeout();
        boolean boolean46 = undertowEmbeddedServletContainerFactory44.isPersistSession();
        undertowEmbeddedServletContainerFactory44.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory44.setPersistSession(true);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet51 = undertowEmbeddedServletContainerFactory44.getErrorPages();
        undertowEmbeddedServletContainerFactory26.setErrorPages(errorPageSet51);
        java.io.File file53 = null;
        undertowEmbeddedServletContainerFactory26.accessLogDirectory = file53;
        boolean boolean55 = undertowEmbeddedServletContainerFactory26.isPersistSession();
        org.springframework.boot.context.embedded.JspServlet jspServlet56 = undertowEmbeddedServletContainerFactory26.getJspServlet();
        undertowEmbeddedServletContainerFactory8.setJspServlet(jspServlet56);
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet56);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo59 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo59);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory61.accessLogEnabled = false;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings70 = undertowEmbeddedServletContainerFactory69.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int72 = undertowEmbeddedServletContainerFactory71.getSessionTimeout();
        boolean boolean73 = undertowEmbeddedServletContainerFactory71.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList74 = undertowEmbeddedServletContainerFactory71.builderCustomizers;
        undertowEmbeddedServletContainerFactory69.builderCustomizers = undertowBuilderCustomizerList74;
        undertowEmbeddedServletContainerFactory66.builderCustomizers = undertowBuilderCustomizerList74;
        undertowEmbeddedServletContainerFactory61.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList74);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory78 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int79 = undertowEmbeddedServletContainerFactory78.getPort();
        java.lang.Integer int80 = undertowEmbeddedServletContainerFactory78.bufferSize;
        boolean boolean81 = undertowEmbeddedServletContainerFactory78.accessLogEnabled;
        java.lang.String str82 = undertowEmbeddedServletContainerFactory78.accessLogPattern;
        org.springframework.core.io.ResourceLoader resourceLoader83 = null;
        undertowEmbeddedServletContainerFactory78.setResourceLoader(resourceLoader83);
        boolean boolean85 = undertowEmbeddedServletContainerFactory78.isPersistSession();
        org.xnio.XnioWorker xnioWorker86 = undertowEmbeddedServletContainerFactory78.createWorker();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings87 = undertowEmbeddedServletContainerFactory78.getMimeMappings();
        undertowEmbeddedServletContainerFactory61.setMimeMappings(mimeMappings87);
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings87);
        boolean boolean90 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1800 + "'", int16 == 1800);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList19);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8080 + "'", int27 == 8080);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1800 + "'", int32 == 1800);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList34);
        org.junit.Assert.assertNotNull(jspServlet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(errorPageSet37);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1800 + "'", int45 == 1800);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(errorPageSet51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(jspServlet56);
        org.junit.Assert.assertNotNull(mimeMappings70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1800 + "'", int72 == 1800);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList74);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 8080 + "'", int79 == 8080);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(xnioWorker86);
        org.junit.Assert.assertNotNull(mimeMappings87);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test13355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13355");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int3 = undertowEmbeddedServletContainerFactory2.getSessionTimeout();
        boolean boolean4 = undertowEmbeddedServletContainerFactory2.isPersistSession();
        undertowEmbeddedServletContainerFactory2.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder8 = undertowEmbeddedServletContainerFactory2.createBuilder((-1));
        undertowEmbeddedServletContainerFactory2.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory11.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray13);
        undertowEmbeddedServletContainerFactory2.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray13);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray13);
        java.lang.String str17 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getSessionTimeout();
        boolean boolean20 = undertowEmbeddedServletContainerFactory18.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList21 = undertowEmbeddedServletContainerFactory18.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet22 = undertowEmbeddedServletContainerFactory18.getJspServlet();
        org.springframework.core.io.ResourceLoader resourceLoader23 = null;
        undertowEmbeddedServletContainerFactory18.setResourceLoader(resourceLoader23);
        boolean boolean25 = undertowEmbeddedServletContainerFactory18.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.JspServlet jspServlet26 = undertowEmbeddedServletContainerFactory18.getJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet26);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1800 + "'", int3 == 1800);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8080 + "'", int12 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "0.0.0.0" + "'", str17, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList21);
        org.junit.Assert.assertNotNull(jspServlet22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(jspServlet26);
    }

    @Test
    public void test13356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13356");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file5);
        org.springframework.core.io.ResourceLoader resourceLoader7 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory0.workerThreads;
        java.io.File file10 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection11 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        java.net.InetAddress inetAddress12 = undertowEmbeddedServletContainerFactory0.getAddress();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(resourceLoader7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection11);
        org.junit.Assert.assertNull(inetAddress12);
    }

    @Test
    public void test13357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13357");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory0.bufferSize;
        int int8 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory0.ioThreads;
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        undertowEmbeddedServletContainerFactory0.setDisplayName("");
        java.net.InetAddress inetAddress14 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress14);
        java.lang.String str16 = undertowEmbeddedServletContainerFactory0.getContextPath();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8080 + "'", int8 == 8080);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test13358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13358");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getSessionTimeout();
        boolean boolean11 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        undertowEmbeddedServletContainerFactory9.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory9.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory9.setDisplayName("hi!");
        boolean boolean18 = undertowEmbeddedServletContainerFactory9.isRegisterDefaultServlet();
        java.io.File file19 = null;
        undertowEmbeddedServletContainerFactory9.accessLogDirectory = file19;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = undertowEmbeddedServletContainerFactory9.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet21);
        io.undertow.Undertow.Builder builder24 = undertowEmbeddedServletContainerFactory1.createBuilder(0);
        java.lang.String str25 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(errorPageSet21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test13359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13359");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection5 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 8080;
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        undertowEmbeddedServletContainerFactory0.workerThreads = 10;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 32);
        java.io.File file16 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file16);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection5);
    }

    @Test
    public void test13360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13360");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        java.lang.String str5 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file6);
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory2.setAccessLogDirectory(file8);
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file10);
        boolean boolean12 = undertowEmbeddedServletContainerFactory2.isPersistSession();
        undertowEmbeddedServletContainerFactory2.useForwardHeaders = true;
        org.springframework.boot.context.embedded.Ssl ssl15 = undertowEmbeddedServletContainerFactory2.getSsl();
        undertowEmbeddedServletContainerFactory2.bufferSize = (-1);
        undertowEmbeddedServletContainerFactory2.setDisplayName("");
        java.lang.Integer int20 = undertowEmbeddedServletContainerFactory2.ioThreads;
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(ssl15);
        org.junit.Assert.assertNull(int20);
    }

    @Test
    public void test13361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13361");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.io.File file8 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getSessionTimeout();
        boolean boolean11 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = undertowEmbeddedServletContainerFactory9.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet13 = undertowEmbeddedServletContainerFactory9.getJspServlet();
        undertowEmbeddedServletContainerFactory9.directBuffers = true;
        java.lang.Integer int16 = undertowEmbeddedServletContainerFactory9.bufferSize;
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory9.setDocumentRoot(file17);
        boolean boolean19 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo20 = null;
        undertowEmbeddedServletContainerFactory9.configureErrorPages(deploymentInfo20);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = undertowEmbeddedServletContainerFactory23.getErrorPages();
        undertowEmbeddedServletContainerFactory9.setErrorPages(errorPageSet24);
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet24);
        java.lang.Boolean boolean27 = undertowEmbeddedServletContainerFactory0.directBuffers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 35;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int31 = undertowEmbeddedServletContainerFactory30.getSessionTimeout();
        boolean boolean32 = undertowEmbeddedServletContainerFactory30.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList33 = undertowEmbeddedServletContainerFactory30.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet34 = undertowEmbeddedServletContainerFactory30.getJspServlet();
        undertowEmbeddedServletContainerFactory30.directBuffers = true;
        java.io.File file37 = null;
        undertowEmbeddedServletContainerFactory30.setDocumentRoot(file37);
        java.lang.Boolean boolean39 = undertowEmbeddedServletContainerFactory30.directBuffers;
        org.springframework.core.io.ResourceLoader resourceLoader40 = undertowEmbeddedServletContainerFactory30.resourceLoader;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList41 = undertowEmbeddedServletContainerFactory30.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList41;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList12);
        org.junit.Assert.assertNotNull(jspServlet13);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(errorPageSet24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1800 + "'", int31 == 1800);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList33);
        org.junit.Assert.assertNotNull(jspServlet34);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + true + "'", boolean39, true);
        org.junit.Assert.assertNull(resourceLoader40);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList41);
    }

    @Test
    public void test13362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13362");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = undertowEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader9 = undertowEmbeddedServletContainerFactory7.resourceLoader;
        java.lang.String str10 = undertowEmbeddedServletContainerFactory7.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = undertowEmbeddedServletContainerFactory11.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet15 = undertowEmbeddedServletContainerFactory11.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        undertowEmbeddedServletContainerFactory16.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder22 = undertowEmbeddedServletContainerFactory16.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager23 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer25 = undertowEmbeddedServletContainerFactory11.getUndertowEmbeddedServletContainer(builder22, deploymentManager23, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager26 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer28 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder22, deploymentManager26, (int) (byte) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager29 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer31 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder22, deploymentManager29, (int) (short) 100);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection32 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        java.lang.String str33 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(0);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory0.setPort((int) (byte) 100);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo42 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo42);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int45 = undertowEmbeddedServletContainerFactory44.getSessionTimeout();
        boolean boolean46 = undertowEmbeddedServletContainerFactory44.isPersistSession();
        undertowEmbeddedServletContainerFactory44.setPersistSession(false);
        undertowEmbeddedServletContainerFactory44.setUseForwardHeaders(true);
        io.undertow.server.handlers.resource.ResourceManager resourceManager51 = undertowEmbeddedServletContainerFactory44.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int53 = undertowEmbeddedServletContainerFactory52.getSessionTimeout();
        boolean boolean54 = undertowEmbeddedServletContainerFactory52.isPersistSession();
        java.io.File file55 = undertowEmbeddedServletContainerFactory52.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings56 = undertowEmbeddedServletContainerFactory52.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings57 = undertowEmbeddedServletContainerFactory52.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int59 = undertowEmbeddedServletContainerFactory58.getSessionTimeout();
        boolean boolean60 = undertowEmbeddedServletContainerFactory58.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList61 = undertowEmbeddedServletContainerFactory58.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet62 = undertowEmbeddedServletContainerFactory58.getJspServlet();
        undertowEmbeddedServletContainerFactory52.setJspServlet(jspServlet62);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray65 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList66 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList66, undertowBuilderCustomizerArray65);
        undertowEmbeddedServletContainerFactory64.builderCustomizers = undertowBuilderCustomizerList66;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection69 = undertowEmbeddedServletContainerFactory64.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory52.setBuilderCustomizers(undertowBuilderCustomizerCollection69);
        undertowEmbeddedServletContainerFactory44.setBuilderCustomizers(undertowBuilderCustomizerCollection69);
        undertowEmbeddedServletContainerFactory44.setPort(0);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList74 = undertowEmbeddedServletContainerFactory44.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList74);
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNull(resourceLoader9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList14);
        org.junit.Assert.assertNotNull(jspServlet15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer25);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer28);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer31);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1800 + "'", int45 == 1800);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(resourceManager51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1800 + "'", int53 == 1800);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(mimeMappings56);
        org.junit.Assert.assertNotNull(mimeMappings57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1800 + "'", int59 == 1800);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList61);
        org.junit.Assert.assertNotNull(jspServlet62);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection69);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList74);
    }

    @Test
    public void test13363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13363");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.Compression compression4 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression4);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = true;
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory0.setDisplayName("0.0.0.0");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet13 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(errorPageSet13);
    }

    @Test
    public void test13364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13364");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        undertowEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader5);
        undertowEmbeddedServletContainerFactory2.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory2.buffersPerRegion;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection11 = undertowEmbeddedServletContainerFactory2.getDeploymentInfoCustomizers();
        java.lang.ClassLoader classLoader12 = undertowEmbeddedServletContainerFactory2.getServletClassLoader();
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        undertowEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader13);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        undertowEmbeddedServletContainerFactory2.setBuffersPerRegion((java.lang.Integer) 32);
        java.io.File file18 = undertowEmbeddedServletContainerFactory2.accessLogDirectory;
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection11);
        org.junit.Assert.assertNotNull(classLoader12);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNull(file18);
    }

    @Test
    public void test13365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13365");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory0.getAddress();
        int int19 = undertowEmbeddedServletContainerFactory0.getPort();
        java.io.File file20 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.Compression compression21 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression21);
        java.io.File file23 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        org.springframework.boot.context.embedded.JspServlet jspServlet24 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        java.io.File file25 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        org.springframework.core.io.ResourceLoader resourceLoader28 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader28);
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList32 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8080 + "'", int19 == 8080);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(jspServlet24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList32);
    }

    @Test
    public void test13366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13366");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        java.io.File file11 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file11;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int14 = undertowEmbeddedServletContainerFactory13.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader19 = undertowEmbeddedServletContainerFactory17.resourceLoader;
        undertowEmbeddedServletContainerFactory17.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int23 = undertowEmbeddedServletContainerFactory22.getSessionTimeout();
        boolean boolean24 = undertowEmbeddedServletContainerFactory22.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList25 = undertowEmbeddedServletContainerFactory22.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet26 = undertowEmbeddedServletContainerFactory22.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int28 = undertowEmbeddedServletContainerFactory27.getSessionTimeout();
        boolean boolean29 = undertowEmbeddedServletContainerFactory27.isPersistSession();
        undertowEmbeddedServletContainerFactory27.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder33 = undertowEmbeddedServletContainerFactory27.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager34 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer36 = undertowEmbeddedServletContainerFactory22.getUndertowEmbeddedServletContainer(builder33, deploymentManager34, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager37 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer39 = undertowEmbeddedServletContainerFactory17.getUndertowEmbeddedServletContainer(builder33, deploymentManager37, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager40 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer42 = undertowEmbeddedServletContainerFactory13.getUndertowEmbeddedServletContainer(builder33, deploymentManager40, (int) (short) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList43 = undertowEmbeddedServletContainerFactory13.builderCustomizers;
        undertowEmbeddedServletContainerFactory13.setIoThreads((java.lang.Integer) 100);
        java.lang.Integer int46 = undertowEmbeddedServletContainerFactory13.buffersPerRegion;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int48 = undertowEmbeddedServletContainerFactory47.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings52 = undertowEmbeddedServletContainerFactory51.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader53 = undertowEmbeddedServletContainerFactory51.resourceLoader;
        undertowEmbeddedServletContainerFactory51.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int57 = undertowEmbeddedServletContainerFactory56.getSessionTimeout();
        boolean boolean58 = undertowEmbeddedServletContainerFactory56.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList59 = undertowEmbeddedServletContainerFactory56.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet60 = undertowEmbeddedServletContainerFactory56.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int62 = undertowEmbeddedServletContainerFactory61.getSessionTimeout();
        boolean boolean63 = undertowEmbeddedServletContainerFactory61.isPersistSession();
        undertowEmbeddedServletContainerFactory61.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder67 = undertowEmbeddedServletContainerFactory61.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager68 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer70 = undertowEmbeddedServletContainerFactory56.getUndertowEmbeddedServletContainer(builder67, deploymentManager68, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager71 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer73 = undertowEmbeddedServletContainerFactory51.getUndertowEmbeddedServletContainer(builder67, deploymentManager71, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager74 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer76 = undertowEmbeddedServletContainerFactory47.getUndertowEmbeddedServletContainer(builder67, deploymentManager74, (int) (short) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList77 = undertowEmbeddedServletContainerFactory47.builderCustomizers;
        undertowEmbeddedServletContainerFactory13.builderCustomizers = undertowBuilderCustomizerList77;
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList77);
        java.lang.Integer int80 = undertowEmbeddedServletContainerFactory0.workerThreads;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8080 + "'", int14 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNull(resourceLoader19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1800 + "'", int23 == 1800);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList25);
        org.junit.Assert.assertNotNull(jspServlet26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1800 + "'", int28 == 1800);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer36);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer39);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer42);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList43);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 8080 + "'", int48 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings52);
        org.junit.Assert.assertNull(resourceLoader53);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1800 + "'", int57 == 1800);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList59);
        org.junit.Assert.assertNotNull(jspServlet60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1800 + "'", int62 == 1800);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer70);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer73);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer76);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList77);
        org.junit.Assert.assertNull(int80);
    }

    @Test
    public void test13367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13367");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        int int15 = undertowEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.JspServlet jspServlet16 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("0.0.0.0");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8080 + "'", int15 == 8080);
        org.junit.Assert.assertNotNull(jspServlet16);
    }

    @Test
    public void test13368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13368");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int5 = undertowEmbeddedServletContainerFactory4.getSessionTimeout();
        boolean boolean6 = undertowEmbeddedServletContainerFactory4.isPersistSession();
        undertowEmbeddedServletContainerFactory4.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory4.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory4.setDisplayName("hi!");
        boolean boolean13 = undertowEmbeddedServletContainerFactory4.isRegisterDefaultServlet();
        boolean boolean14 = undertowEmbeddedServletContainerFactory4.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int16 = undertowEmbeddedServletContainerFactory15.getSessionTimeout();
        boolean boolean17 = undertowEmbeddedServletContainerFactory15.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList18 = undertowEmbeddedServletContainerFactory15.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = undertowEmbeddedServletContainerFactory15.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int21 = undertowEmbeddedServletContainerFactory20.getSessionTimeout();
        boolean boolean22 = undertowEmbeddedServletContainerFactory20.isPersistSession();
        undertowEmbeddedServletContainerFactory20.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder26 = undertowEmbeddedServletContainerFactory20.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer29 = undertowEmbeddedServletContainerFactory15.getUndertowEmbeddedServletContainer(builder26, deploymentManager27, (int) (short) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int31 = undertowEmbeddedServletContainerFactory30.getSessionTimeout();
        boolean boolean32 = undertowEmbeddedServletContainerFactory30.isPersistSession();
        undertowEmbeddedServletContainerFactory30.setPersistSession(false);
        undertowEmbeddedServletContainerFactory30.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList37 = undertowEmbeddedServletContainerFactory30.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory30.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int41 = undertowEmbeddedServletContainerFactory40.getSessionTimeout();
        boolean boolean42 = undertowEmbeddedServletContainerFactory40.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList43 = undertowEmbeddedServletContainerFactory40.builderCustomizers;
        undertowEmbeddedServletContainerFactory30.builderCustomizers = undertowBuilderCustomizerList43;
        undertowEmbeddedServletContainerFactory15.builderCustomizers = undertowBuilderCustomizerList43;
        undertowEmbeddedServletContainerFactory4.builderCustomizers = undertowBuilderCustomizerList43;
        undertowEmbeddedServletContainerFactory1.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList43);
        boolean boolean48 = undertowEmbeddedServletContainerFactory1.accessLogEnabled;
        org.springframework.core.io.ResourceLoader resourceLoader49 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.lang.Integer int50 = undertowEmbeddedServletContainerFactory1.bufferSize;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1800 + "'", int5 == 1800);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1800 + "'", int16 == 1800);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList18);
        org.junit.Assert.assertNotNull(jspServlet19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1800 + "'", int21 == 1800);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1800 + "'", int31 == 1800);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1800 + "'", int41 == 1800);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(resourceLoader49);
        org.junit.Assert.assertNull(int50);
    }

    @Test
    public void test13369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13369");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getSessionTimeout();
        boolean boolean11 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        undertowEmbeddedServletContainerFactory9.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder15 = undertowEmbeddedServletContainerFactory9.createBuilder((-1));
        undertowEmbeddedServletContainerFactory9.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray20 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory18.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray20);
        undertowEmbeddedServletContainerFactory9.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray20);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray20);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection24 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList25 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.io.File file26 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file26);
        undertowEmbeddedServletContainerFactory0.setDisplayName("0.0.0.0");
        boolean boolean30 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo31 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.configureAccessLog(deploymentInfo31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8080 + "'", int19 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray20);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection24);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test13370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13370");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 1;
        undertowEmbeddedServletContainerFactory0.bufferSize = 10;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo5 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo5);
        org.springframework.core.io.ResourceLoader resourceLoader7 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader7);
        java.io.File file9 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getPort();
        undertowEmbeddedServletContainerFactory10.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean16 = undertowEmbeddedServletContainerFactory15.isAccessLogEnabled();
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory15.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory20.getMimeMappings();
        undertowEmbeddedServletContainerFactory15.setMimeMappings(mimeMappings21);
        undertowEmbeddedServletContainerFactory10.setMimeMappings(mimeMappings21);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int25 = undertowEmbeddedServletContainerFactory24.getSessionTimeout();
        boolean boolean26 = undertowEmbeddedServletContainerFactory24.isPersistSession();
        undertowEmbeddedServletContainerFactory24.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory24.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory24.setDisplayName("hi!");
        boolean boolean33 = undertowEmbeddedServletContainerFactory24.isRegisterDefaultServlet();
        java.io.File file34 = null;
        undertowEmbeddedServletContainerFactory24.accessLogDirectory = file34;
        io.undertow.server.handlers.resource.ResourceManager resourceManager36 = undertowEmbeddedServletContainerFactory24.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int38 = undertowEmbeddedServletContainerFactory37.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer40 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap39);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer42 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap41);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer44 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap43);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer46 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap45);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray47 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer40, initParameterConfiguringServletContextInitializer42, initParameterConfiguringServletContextInitializer44, initParameterConfiguringServletContextInitializer46 };
        undertowEmbeddedServletContainerFactory37.addInitializers(servletContextInitializerArray47);
        undertowEmbeddedServletContainerFactory24.addInitializers(servletContextInitializerArray47);
        undertowEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray47);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer51 = undertowEmbeddedServletContainerFactory0.getEmbeddedServletContainer(servletContextInitializerArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: java.lang.NullPointerException");
        } catch (java.lang.RuntimeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8080 + "'", int11 == 8080);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1800 + "'", int25 == 1800);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(resourceManager36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1800 + "'", int38 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray47);
    }

    @Test
    public void test13371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13371");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file5);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("0.0.0.0");
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 0;
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) (-1));
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("hi!");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(mimeMappings14);
    }

    @Test
    public void test13372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13372");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) true);
        java.lang.ClassLoader classLoader8 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        boolean boolean9 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.ioThreads = 35;
        java.lang.String str12 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int14 = undertowEmbeddedServletContainerFactory13.getPort();
        java.lang.Integer int15 = undertowEmbeddedServletContainerFactory13.bufferSize;
        undertowEmbeddedServletContainerFactory13.bufferSize = (-1);
        org.springframework.boot.context.embedded.JspServlet jspServlet18 = undertowEmbeddedServletContainerFactory13.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet18);
        io.undertow.server.HttpHandler httpHandler20 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.accesslog.AccessLogHandler accessLogHandler21 = undertowEmbeddedServletContainerFactory0.createAccessLogHandler(httpHandler20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Access log directory is not set");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8080 + "'", int14 == 8080);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(jspServlet18);
    }

    @Test
    public void test13373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13373");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        boolean boolean9 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = undertowEmbeddedServletContainerFactory11.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet15 = undertowEmbeddedServletContainerFactory11.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        undertowEmbeddedServletContainerFactory16.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder22 = undertowEmbeddedServletContainerFactory16.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager23 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer25 = undertowEmbeddedServletContainerFactory11.getUndertowEmbeddedServletContainer(builder22, deploymentManager23, (int) (short) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int27 = undertowEmbeddedServletContainerFactory26.getSessionTimeout();
        boolean boolean28 = undertowEmbeddedServletContainerFactory26.isPersistSession();
        undertowEmbeddedServletContainerFactory26.setPersistSession(false);
        undertowEmbeddedServletContainerFactory26.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList33 = undertowEmbeddedServletContainerFactory26.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory26.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int37 = undertowEmbeddedServletContainerFactory36.getSessionTimeout();
        boolean boolean38 = undertowEmbeddedServletContainerFactory36.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList39 = undertowEmbeddedServletContainerFactory36.builderCustomizers;
        undertowEmbeddedServletContainerFactory26.builderCustomizers = undertowBuilderCustomizerList39;
        undertowEmbeddedServletContainerFactory11.builderCustomizers = undertowBuilderCustomizerList39;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList39;
        java.lang.Boolean boolean43 = undertowEmbeddedServletContainerFactory0.directBuffers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList44 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.net.InetAddress inetAddress45 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress45);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList47 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList14);
        org.junit.Assert.assertNotNull(jspServlet15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1800 + "'", int27 == 1800);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1800 + "'", int37 == 1800);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList39);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList44);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList47);
    }

    @Test
    public void test13374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13374");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        java.lang.Class<?> wildcardClass8 = errorPageSet7.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test13375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13375");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        boolean boolean7 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        java.lang.ClassLoader classLoader12 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        undertowEmbeddedServletContainerFactory0.setPort(0);
        boolean boolean15 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        java.io.File file19 = undertowEmbeddedServletContainerFactory16.accessLogDirectory;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer22 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap21);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer22 };
        initializer20.initializers = servletContextInitializerArray23;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int26 = undertowEmbeddedServletContainerFactory25.getPort();
        java.lang.Integer int27 = undertowEmbeddedServletContainerFactory25.bufferSize;
        java.io.File file28 = null;
        undertowEmbeddedServletContainerFactory25.setSessionStoreDir(file28);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer31 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap30);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray32 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer31 };
        undertowEmbeddedServletContainerFactory25.addInitializers(servletContextInitializerArray32);
        initializer20.initializers = servletContextInitializerArray32;
        undertowEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray32);
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray32);
        java.lang.String str37 = undertowEmbeddedServletContainerFactory0.getContextPath();
        java.io.File file38 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file38);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(classLoader12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 8080 + "'", int26 == 8080);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(servletContextInitializerArray32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
    }

    @Test
    public void test13376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13376");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        boolean boolean4 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.jarPath = "";
        jarResourceManager0.jarPath = "";
        java.lang.String str9 = jarResourceManager0.jarPath;
        jarResourceManager0.close();
        boolean boolean11 = jarResourceManager0.isResourceChangeListenerSupported();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourceManager0.removeResourceChangeListener(resourceChangeListener12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test13377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13377");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        int int3 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        java.io.File file5 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        boolean boolean6 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray7 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Customizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1800 + "'", int3 == 1800);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test13378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13378");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int20 = undertowEmbeddedServletContainerFactory19.getSessionTimeout();
        boolean boolean21 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList22 = undertowEmbeddedServletContainerFactory19.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet23 = undertowEmbeddedServletContainerFactory19.getJspServlet();
        boolean boolean24 = undertowEmbeddedServletContainerFactory19.useForwardHeaders;
        java.net.InetAddress inetAddress25 = undertowEmbeddedServletContainerFactory19.getAddress();
        java.lang.String str26 = undertowEmbeddedServletContainerFactory19.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int28 = undertowEmbeddedServletContainerFactory27.getSessionTimeout();
        boolean boolean29 = undertowEmbeddedServletContainerFactory27.isPersistSession();
        java.io.File file30 = undertowEmbeddedServletContainerFactory27.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = undertowEmbeddedServletContainerFactory27.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = undertowEmbeddedServletContainerFactory27.getMimeMappings();
        java.lang.Integer int33 = undertowEmbeddedServletContainerFactory27.buffersPerRegion;
        io.undertow.Undertow.Builder builder35 = undertowEmbeddedServletContainerFactory27.createBuilder(10);
        undertowEmbeddedServletContainerFactory27.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str38 = undertowEmbeddedServletContainerFactory27.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int40 = undertowEmbeddedServletContainerFactory39.getSessionTimeout();
        boolean boolean41 = undertowEmbeddedServletContainerFactory39.isPersistSession();
        undertowEmbeddedServletContainerFactory39.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder45 = undertowEmbeddedServletContainerFactory39.createBuilder((-1));
        undertowEmbeddedServletContainerFactory39.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int49 = undertowEmbeddedServletContainerFactory48.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray50 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory48.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray50);
        undertowEmbeddedServletContainerFactory39.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray50);
        undertowEmbeddedServletContainerFactory27.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray50);
        undertowEmbeddedServletContainerFactory19.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray50);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray50);
        java.lang.String str56 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        java.lang.Integer int57 = undertowEmbeddedServletContainerFactory0.ioThreads;
        boolean boolean58 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.createAccessLogDirectoryIfNecessary();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Access log directory is not set");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList22);
        org.junit.Assert.assertNotNull(jspServlet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(inetAddress25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1800 + "'", int28 == 1800);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1800 + "'", int40 == 1800);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 8080 + "'", int49 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray50);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test13379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13379");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file5;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList11 = undertowEmbeddedServletContainerFactory8.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet12 = undertowEmbeddedServletContainerFactory8.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet12);
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader14;
        io.undertow.Undertow.Builder builder17 = undertowEmbeddedServletContainerFactory0.createBuilder((int) ' ');
        org.springframework.boot.context.embedded.Compression compression18 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression18);
        org.xnio.XnioWorker xnioWorker20 = undertowEmbeddedServletContainerFactory0.createWorker();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList11);
        org.junit.Assert.assertNotNull(jspServlet12);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(xnioWorker20);
        org.junit.Assert.assertNotNull(errorPageSet21);
    }

    @Test
    public void test13380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13380");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 8080;
        org.springframework.boot.context.embedded.JspServlet jspServlet7 = null;
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet7);
        java.lang.String str9 = undertowEmbeddedServletContainerFactory0.getContextPath();
        java.io.File file10 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory0.getSsl();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(ssl11);
    }

    @Test
    public void test13381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13381");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPort(0);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        java.lang.String str7 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) true);
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory0.ioThreads;
        org.springframework.boot.context.embedded.Compression compression11 = undertowEmbeddedServletContainerFactory0.getCompression();
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 35;
        undertowEmbeddedServletContainerFactory0.setPort(8080);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(compression11);
    }

    @Test
    public void test13382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13382");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int2 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        boolean boolean3 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        java.io.File file4 = undertowEmbeddedServletContainerFactory1.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getPort();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory8.bufferSize;
        java.io.File file11 = null;
        undertowEmbeddedServletContainerFactory8.setSessionStoreDir(file11);
        java.util.Map<java.lang.String, java.lang.String> strMap13 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer14 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap13);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray15 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer14 };
        undertowEmbeddedServletContainerFactory8.addInitializers(servletContextInitializerArray15);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray15);
        initializer0.initializers = servletContextInitializerArray15;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int20 = undertowEmbeddedServletContainerFactory19.getSessionTimeout();
        boolean boolean21 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        java.io.File file22 = undertowEmbeddedServletContainerFactory19.accessLogDirectory;
        undertowEmbeddedServletContainerFactory19.setRegisterDefaultServlet(true);
        java.lang.Boolean boolean25 = undertowEmbeddedServletContainerFactory19.directBuffers;
        org.springframework.boot.context.embedded.Compression compression26 = undertowEmbeddedServletContainerFactory19.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int28 = undertowEmbeddedServletContainerFactory27.getPort();
        java.lang.Integer int29 = undertowEmbeddedServletContainerFactory27.bufferSize;
        java.io.File file30 = null;
        undertowEmbeddedServletContainerFactory27.setSessionStoreDir(file30);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer35 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap34);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray36 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer35 };
        initializer33.initializers = servletContextInitializerArray36;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer40 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap39);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray41 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer40 };
        initializer38.initializers = servletContextInitializerArray41;
        initializer33.initializers = servletContextInitializerArray41;
        initializer32.initializers = servletContextInitializerArray41;
        undertowEmbeddedServletContainerFactory27.addInitializers(servletContextInitializerArray41);
        undertowEmbeddedServletContainerFactory19.addInitializers(servletContextInitializerArray41);
        initializer0.initializers = servletContextInitializerArray41;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer51 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap50);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray52 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer51 };
        initializer49.initializers = servletContextInitializerArray52;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer56 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap55);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray57 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer56 };
        initializer54.initializers = servletContextInitializerArray57;
        initializer49.initializers = servletContextInitializerArray57;
        initializer48.initializers = servletContextInitializerArray57;
        initializer0.initializers = servletContextInitializerArray57;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray62 = initializer0.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray63 = initializer0.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray64 = initializer0.initializers;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1800 + "'", int2 == 1800);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8080 + "'", int9 == 8080);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(servletContextInitializerArray15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(compression26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8080 + "'", int28 == 8080);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(servletContextInitializerArray36);
        org.junit.Assert.assertNotNull(servletContextInitializerArray41);
        org.junit.Assert.assertNotNull(servletContextInitializerArray52);
        org.junit.Assert.assertNotNull(servletContextInitializerArray57);
        org.junit.Assert.assertNotNull(servletContextInitializerArray62);
        org.junit.Assert.assertNotNull(servletContextInitializerArray63);
        org.junit.Assert.assertNotNull(servletContextInitializerArray64);
    }

    @Test
    public void test13383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13383");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.boot.context.embedded.Compression compression8 = undertowEmbeddedServletContainerFactory0.getCompression();
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNull(compression8);
    }

    @Test
    public void test13384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13384");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file7);
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray11);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int14 = undertowEmbeddedServletContainerFactory13.getSessionTimeout();
        boolean boolean15 = undertowEmbeddedServletContainerFactory13.isPersistSession();
        java.io.File file16 = undertowEmbeddedServletContainerFactory13.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        java.lang.Integer int19 = undertowEmbeddedServletContainerFactory13.buffersPerRegion;
        io.undertow.Undertow.Builder builder21 = undertowEmbeddedServletContainerFactory13.createBuilder(10);
        undertowEmbeddedServletContainerFactory13.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str24 = undertowEmbeddedServletContainerFactory13.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int26 = undertowEmbeddedServletContainerFactory25.getSessionTimeout();
        boolean boolean27 = undertowEmbeddedServletContainerFactory25.isPersistSession();
        undertowEmbeddedServletContainerFactory25.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder31 = undertowEmbeddedServletContainerFactory25.createBuilder((-1));
        undertowEmbeddedServletContainerFactory25.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int35 = undertowEmbeddedServletContainerFactory34.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray36 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory34.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        undertowEmbeddedServletContainerFactory25.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        undertowEmbeddedServletContainerFactory13.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        java.io.File file41 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file41);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int44 = undertowEmbeddedServletContainerFactory43.getSessionTimeout();
        boolean boolean45 = undertowEmbeddedServletContainerFactory43.isPersistSession();
        java.io.File file46 = undertowEmbeddedServletContainerFactory43.accessLogDirectory;
        undertowEmbeddedServletContainerFactory43.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory43.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int52 = undertowEmbeddedServletContainerFactory51.getSessionTimeout();
        boolean boolean53 = undertowEmbeddedServletContainerFactory51.isPersistSession();
        java.io.File file54 = undertowEmbeddedServletContainerFactory51.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings55 = undertowEmbeddedServletContainerFactory51.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings56 = undertowEmbeddedServletContainerFactory51.getMimeMappings();
        java.io.File file57 = undertowEmbeddedServletContainerFactory51.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int59 = undertowEmbeddedServletContainerFactory58.getPort();
        java.lang.Integer int60 = undertowEmbeddedServletContainerFactory58.bufferSize;
        java.io.File file61 = null;
        undertowEmbeddedServletContainerFactory58.setSessionStoreDir(file61);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer64 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap63);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray65 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer64 };
        undertowEmbeddedServletContainerFactory58.addInitializers(servletContextInitializerArray65);
        undertowEmbeddedServletContainerFactory51.addInitializers(servletContextInitializerArray65);
        undertowEmbeddedServletContainerFactory43.addInitializers(servletContextInitializerArray65);
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray65);
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory0.setDisplayName("");
        java.lang.Boolean boolean74 = undertowEmbeddedServletContainerFactory0.directBuffers;
        java.lang.Integer int75 = undertowEmbeddedServletContainerFactory0.ioThreads;
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        java.io.File file78 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file78);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1800 + "'", int14 == 1800);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1800 + "'", int26 == 1800);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 8080 + "'", int35 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray36);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1800 + "'", int44 == 1800);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1800 + "'", int52 == 1800);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(mimeMappings55);
        org.junit.Assert.assertNotNull(mimeMappings56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 8080 + "'", int59 == 8080);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(servletContextInitializerArray65);
        org.junit.Assert.assertEquals("'" + boolean74 + "' != '" + false + "'", boolean74, false);
        org.junit.Assert.assertNull(int75);
    }

    @Test
    public void test13385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13385");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 10);
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory2.ioThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        undertowEmbeddedServletContainerFactory6.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory6.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int14 = undertowEmbeddedServletContainerFactory13.getSessionTimeout();
        boolean boolean15 = undertowEmbeddedServletContainerFactory13.isPersistSession();
        java.io.File file16 = undertowEmbeddedServletContainerFactory13.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList17 = undertowEmbeddedServletContainerFactory13.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory6.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList17;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = undertowEmbeddedServletContainerFactory6.getMimeMappings();
        undertowEmbeddedServletContainerFactory2.setMimeMappings(mimeMappings19);
        java.io.File file21 = null;
        undertowEmbeddedServletContainerFactory2.setSessionStoreDir(file21);
        java.io.File file23 = null;
        undertowEmbeddedServletContainerFactory2.setSessionStoreDir(file23);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1800 + "'", int14 == 1800);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList17);
        org.junit.Assert.assertNotNull(mimeMappings19);
    }

    @Test
    public void test13386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13386");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 0);
        java.lang.Integer int3 = undertowEmbeddedServletContainerFactory2.buffersPerRegion;
        undertowEmbeddedServletContainerFactory2.accessLogPattern = "hi!";
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory2.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        boolean boolean10 = undertowEmbeddedServletContainerFactory9.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        undertowEmbeddedServletContainerFactory11.setPersistSession(false);
        undertowEmbeddedServletContainerFactory11.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList18 = undertowEmbeddedServletContainerFactory11.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory9.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList18;
        undertowEmbeddedServletContainerFactory9.setDisplayName("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int23 = undertowEmbeddedServletContainerFactory22.getSessionTimeout();
        boolean boolean24 = undertowEmbeddedServletContainerFactory22.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList25 = undertowEmbeddedServletContainerFactory22.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet26 = undertowEmbeddedServletContainerFactory22.getJspServlet();
        undertowEmbeddedServletContainerFactory22.directBuffers = true;
        java.lang.Integer int29 = undertowEmbeddedServletContainerFactory22.bufferSize;
        java.io.File file30 = null;
        undertowEmbeddedServletContainerFactory22.setDocumentRoot(file30);
        boolean boolean32 = undertowEmbeddedServletContainerFactory22.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList33 = undertowEmbeddedServletContainerFactory22.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int35 = undertowEmbeddedServletContainerFactory34.getSessionTimeout();
        boolean boolean36 = undertowEmbeddedServletContainerFactory34.isPersistSession();
        undertowEmbeddedServletContainerFactory34.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory34.setUseForwardHeaders(false);
        boolean boolean41 = undertowEmbeddedServletContainerFactory34.useForwardHeaders;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int43 = undertowEmbeddedServletContainerFactory42.getSessionTimeout();
        boolean boolean44 = undertowEmbeddedServletContainerFactory42.isPersistSession();
        undertowEmbeddedServletContainerFactory42.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory42.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory42.setDisplayName("hi!");
        boolean boolean51 = undertowEmbeddedServletContainerFactory42.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int53 = undertowEmbeddedServletContainerFactory52.getSessionTimeout();
        boolean boolean54 = undertowEmbeddedServletContainerFactory52.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList55 = undertowEmbeddedServletContainerFactory52.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet56 = undertowEmbeddedServletContainerFactory52.getJspServlet();
        undertowEmbeddedServletContainerFactory52.directBuffers = true;
        java.io.File file59 = null;
        undertowEmbeddedServletContainerFactory52.setDocumentRoot(file59);
        undertowEmbeddedServletContainerFactory52.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray63 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory52.addBuilderCustomizers(undertowBuilderCustomizerArray63);
        undertowEmbeddedServletContainerFactory42.addBuilderCustomizers(undertowBuilderCustomizerArray63);
        undertowEmbeddedServletContainerFactory34.addBuilderCustomizers(undertowBuilderCustomizerArray63);
        undertowEmbeddedServletContainerFactory22.addBuilderCustomizers(undertowBuilderCustomizerArray63);
        undertowEmbeddedServletContainerFactory9.addBuilderCustomizers(undertowBuilderCustomizerArray63);
        undertowEmbeddedServletContainerFactory2.addBuilderCustomizers(undertowBuilderCustomizerArray63);
        int int70 = undertowEmbeddedServletContainerFactory2.getPort();
        boolean boolean71 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(true);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1800 + "'", int23 == 1800);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList25);
        org.junit.Assert.assertNotNull(jspServlet26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1800 + "'", int35 == 1800);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1800 + "'", int43 == 1800);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1800 + "'", int53 == 1800);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList55);
        org.junit.Assert.assertNotNull(jspServlet56);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray63);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test13387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13387");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory2.setPort((-1));
        undertowEmbeddedServletContainerFactory2.setPort((int) (byte) 0);
        java.lang.Boolean boolean30 = undertowEmbeddedServletContainerFactory2.directBuffers;
        undertowEmbeddedServletContainerFactory2.setPort((int) (short) 10);
        java.io.File file33 = null;
        undertowEmbeddedServletContainerFactory2.setAccessLogDirectory(file33);
        java.net.InetAddress inetAddress35 = undertowEmbeddedServletContainerFactory2.getAddress();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(inetAddress35);
    }

    @Test
    public void test13388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13388");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.core.io.ResourceLoader resourceLoader2 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader2;
        io.undertow.Undertow.Builder builder5 = undertowEmbeddedServletContainerFactory1.createBuilder(8080);
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory1.directBuffers;
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test13389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13389");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory0.directBuffers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList7 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = (-1);
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.lang.Integer int11 = undertowEmbeddedServletContainerFactory0.ioThreads;
        undertowEmbeddedServletContainerFactory0.setPort((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getPort();
        java.lang.Integer int16 = undertowEmbeddedServletContainerFactory14.bufferSize;
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory14.setSessionStoreDir(file17);
        java.io.File file19 = null;
        undertowEmbeddedServletContainerFactory14.accessLogDirectory = file19;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        undertowEmbeddedServletContainerFactory14.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl24 = null;
        undertowEmbeddedServletContainerFactory14.setSsl(ssl24);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo26 = null;
        undertowEmbeddedServletContainerFactory14.configureErrorPages(deploymentInfo26);
        java.io.File file28 = undertowEmbeddedServletContainerFactory14.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList29 = undertowEmbeddedServletContainerFactory14.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList29;
        java.io.File file31 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8080 + "'", int15 == 8080);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList29);
        org.junit.Assert.assertNull(file31);
    }

    @Test
    public void test13390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13390");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        java.lang.String str5 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        undertowEmbeddedServletContainerFactory11.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder17 = undertowEmbeddedServletContainerFactory11.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager18 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer20 = undertowEmbeddedServletContainerFactory6.getUndertowEmbeddedServletContainer(builder17, deploymentManager18, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer23 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder17, deploymentManager21, (int) (byte) 100);
        java.lang.Integer int24 = undertowEmbeddedServletContainerFactory2.bufferSize;
        java.lang.String str25 = undertowEmbeddedServletContainerFactory2.getListenAddress();
        io.undertow.server.handlers.resource.ResourceManager resourceManager26 = undertowEmbeddedServletContainerFactory2.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int28 = undertowEmbeddedServletContainerFactory27.getPort();
        java.lang.Integer int29 = undertowEmbeddedServletContainerFactory27.bufferSize;
        java.io.File file30 = null;
        undertowEmbeddedServletContainerFactory27.setSessionStoreDir(file30);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int33 = undertowEmbeddedServletContainerFactory32.getSessionTimeout();
        boolean boolean34 = undertowEmbeddedServletContainerFactory32.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList35 = undertowEmbeddedServletContainerFactory32.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet36 = undertowEmbeddedServletContainerFactory32.getJspServlet();
        boolean boolean37 = undertowEmbeddedServletContainerFactory32.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet38 = undertowEmbeddedServletContainerFactory32.getErrorPages();
        undertowEmbeddedServletContainerFactory27.setErrorPages(errorPageSet38);
        undertowEmbeddedServletContainerFactory27.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList42 = undertowEmbeddedServletContainerFactory27.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer43 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray44 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer43 };
        undertowEmbeddedServletContainerFactory27.addBuilderCustomizers(undertowBuilderCustomizerArray44);
        undertowEmbeddedServletContainerFactory2.addBuilderCustomizers(undertowBuilderCustomizerArray44);
        java.lang.Integer int47 = undertowEmbeddedServletContainerFactory2.ioThreads;
        java.io.File file48 = undertowEmbeddedServletContainerFactory2.accessLogDirectory;
        undertowEmbeddedServletContainerFactory2.directBuffers = false;
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer20);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "0.0.0.0" + "'", str25, "0.0.0.0");
        org.junit.Assert.assertNotNull(resourceManager26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8080 + "'", int28 == 8080);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1800 + "'", int33 == 1800);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList35);
        org.junit.Assert.assertNotNull(jspServlet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(errorPageSet38);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList42);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray44);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNull(file48);
    }

    @Test
    public void test13391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13391");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory0.directBuffers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList7 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = (-1);
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.net.InetAddress inetAddress11 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test13392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13392");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.setDisplayName("");
    }

    @Test
    public void test13393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13393");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader3);
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 0);
        int int7 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean10 = undertowEmbeddedServletContainerFactory9.isAccessLogEnabled();
        java.lang.Integer int11 = undertowEmbeddedServletContainerFactory9.bufferSize;
        org.springframework.boot.context.embedded.Compression compression12 = null;
        undertowEmbeddedServletContainerFactory9.setCompression(compression12);
        undertowEmbeddedServletContainerFactory9.useForwardHeaders = true;
        org.springframework.boot.context.embedded.Compression compression16 = undertowEmbeddedServletContainerFactory9.getCompression();
        boolean boolean17 = undertowEmbeddedServletContainerFactory9.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory18.accessLogEnabled = false;
        org.springframework.core.io.ResourceLoader resourceLoader21 = null;
        undertowEmbeddedServletContainerFactory18.setResourceLoader(resourceLoader21);
        boolean boolean23 = undertowEmbeddedServletContainerFactory18.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean26 = undertowEmbeddedServletContainerFactory25.isAccessLogEnabled();
        org.springframework.boot.context.embedded.Ssl ssl27 = undertowEmbeddedServletContainerFactory25.getSsl();
        boolean boolean28 = undertowEmbeddedServletContainerFactory25.useForwardHeaders;
        undertowEmbeddedServletContainerFactory25.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int32 = undertowEmbeddedServletContainerFactory31.getSessionTimeout();
        undertowEmbeddedServletContainerFactory31.setSessionTimeout((int) (short) 1);
        boolean boolean35 = undertowEmbeddedServletContainerFactory31.useForwardHeaders;
        java.lang.String str36 = undertowEmbeddedServletContainerFactory31.getDisplayName();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = undertowEmbeddedServletContainerFactory31.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int39 = undertowEmbeddedServletContainerFactory38.getSessionTimeout();
        boolean boolean40 = undertowEmbeddedServletContainerFactory38.isPersistSession();
        java.io.File file41 = undertowEmbeddedServletContainerFactory38.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = undertowEmbeddedServletContainerFactory38.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = undertowEmbeddedServletContainerFactory38.getMimeMappings();
        java.lang.Integer int44 = undertowEmbeddedServletContainerFactory38.buffersPerRegion;
        io.undertow.Undertow.Builder builder46 = undertowEmbeddedServletContainerFactory38.createBuilder(10);
        undertowEmbeddedServletContainerFactory38.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str49 = undertowEmbeddedServletContainerFactory38.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int51 = undertowEmbeddedServletContainerFactory50.getSessionTimeout();
        boolean boolean52 = undertowEmbeddedServletContainerFactory50.isPersistSession();
        undertowEmbeddedServletContainerFactory50.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder56 = undertowEmbeddedServletContainerFactory50.createBuilder((-1));
        undertowEmbeddedServletContainerFactory50.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int60 = undertowEmbeddedServletContainerFactory59.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray61 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory59.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray61);
        undertowEmbeddedServletContainerFactory50.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray61);
        undertowEmbeddedServletContainerFactory38.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray61);
        undertowEmbeddedServletContainerFactory31.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray61);
        undertowEmbeddedServletContainerFactory25.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray61);
        undertowEmbeddedServletContainerFactory18.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray61);
        undertowEmbeddedServletContainerFactory9.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray61);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray61);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(compression16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(ssl27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1800 + "'", int32 == 1800);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1800 + "'", int39 == 1800);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1800 + "'", int51 == 1800);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 8080 + "'", int60 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray61);
    }

    @Test
    public void test13394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13394");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.io.File file10 = undertowEmbeddedServletContainerFactory7.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList11 = undertowEmbeddedServletContainerFactory7.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList11;
        java.lang.String str13 = undertowEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader14;
        boolean boolean16 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        org.springframework.boot.context.embedded.Ssl ssl17 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory19.setJspServletClassName("");
        int int22 = undertowEmbeddedServletContainerFactory19.getSessionTimeout();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo23 = null;
        undertowEmbeddedServletContainerFactory19.configureErrorPages(deploymentInfo23);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int26 = undertowEmbeddedServletContainerFactory25.getSessionTimeout();
        boolean boolean27 = undertowEmbeddedServletContainerFactory25.isPersistSession();
        java.io.File file28 = undertowEmbeddedServletContainerFactory25.accessLogDirectory;
        undertowEmbeddedServletContainerFactory25.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory25.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory25.setBufferSize((java.lang.Integer) 8080);
        undertowEmbeddedServletContainerFactory25.directBuffers = false;
        undertowEmbeddedServletContainerFactory25.bufferSize = (-1);
        java.lang.Integer int39 = undertowEmbeddedServletContainerFactory25.buffersPerRegion;
        io.undertow.Undertow.Builder builder41 = undertowEmbeddedServletContainerFactory25.createBuilder(10);
        io.undertow.servlet.api.DeploymentManager deploymentManager42 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer44 = undertowEmbeddedServletContainerFactory19.getUndertowEmbeddedServletContainer(builder41, deploymentManager42, (int) '#');
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.configureSsl(ssl17, 10, builder41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1800 + "'", int22 == 1800);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1800 + "'", int26 == 1800);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer44);
    }

    @Test
    public void test13395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13395");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory0.directBuffers;
        org.springframework.boot.context.embedded.Compression compression14 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression14);
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        java.lang.Integer int18 = undertowEmbeddedServletContainerFactory0.bufferSize;
        boolean boolean19 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test13396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13396");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        java.lang.String str7 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList11 = undertowEmbeddedServletContainerFactory8.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet12 = undertowEmbeddedServletContainerFactory8.getJspServlet();
        boolean boolean13 = undertowEmbeddedServletContainerFactory8.useForwardHeaders;
        java.net.InetAddress inetAddress14 = undertowEmbeddedServletContainerFactory8.getAddress();
        undertowEmbeddedServletContainerFactory8.setAccessLogPattern("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = undertowEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader21 = undertowEmbeddedServletContainerFactory19.resourceLoader;
        undertowEmbeddedServletContainerFactory19.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int25 = undertowEmbeddedServletContainerFactory24.getSessionTimeout();
        boolean boolean26 = undertowEmbeddedServletContainerFactory24.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList27 = undertowEmbeddedServletContainerFactory24.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet28 = undertowEmbeddedServletContainerFactory24.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int30 = undertowEmbeddedServletContainerFactory29.getSessionTimeout();
        boolean boolean31 = undertowEmbeddedServletContainerFactory29.isPersistSession();
        undertowEmbeddedServletContainerFactory29.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder35 = undertowEmbeddedServletContainerFactory29.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager36 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer38 = undertowEmbeddedServletContainerFactory24.getUndertowEmbeddedServletContainer(builder35, deploymentManager36, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager39 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer41 = undertowEmbeddedServletContainerFactory19.getUndertowEmbeddedServletContainer(builder35, deploymentManager39, (int) ' ');
        boolean boolean42 = undertowEmbeddedServletContainerFactory19.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory19.setPort((-1));
        java.lang.Integer int45 = undertowEmbeddedServletContainerFactory19.bufferSize;
        io.undertow.Undertow.Builder builder47 = undertowEmbeddedServletContainerFactory19.createBuilder(0);
        io.undertow.servlet.api.DeploymentManager deploymentManager48 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer50 = undertowEmbeddedServletContainerFactory8.getUndertowEmbeddedServletContainer(builder47, deploymentManager48, (int) '4');
        java.lang.Boolean boolean51 = undertowEmbeddedServletContainerFactory8.directBuffers;
        io.undertow.Undertow.Builder builder53 = undertowEmbeddedServletContainerFactory8.createBuilder((int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager54 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer56 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder53, deploymentManager54, (int) '#');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int61 = undertowEmbeddedServletContainerFactory60.getSessionTimeout();
        boolean boolean62 = undertowEmbeddedServletContainerFactory60.isPersistSession();
        java.io.File file63 = undertowEmbeddedServletContainerFactory60.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings64 = undertowEmbeddedServletContainerFactory60.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings65 = undertowEmbeddedServletContainerFactory60.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int67 = undertowEmbeddedServletContainerFactory66.getSessionTimeout();
        boolean boolean68 = undertowEmbeddedServletContainerFactory66.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList69 = undertowEmbeddedServletContainerFactory66.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet70 = undertowEmbeddedServletContainerFactory66.getJspServlet();
        undertowEmbeddedServletContainerFactory60.setJspServlet(jspServlet70);
        undertowEmbeddedServletContainerFactory59.setJspServlet(jspServlet70);
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet70);
        java.net.InetAddress inetAddress74 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress74);
        boolean boolean76 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList11);
        org.junit.Assert.assertNotNull(jspServlet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(inetAddress14);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNull(resourceLoader21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1800 + "'", int25 == 1800);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList27);
        org.junit.Assert.assertNotNull(jspServlet28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1800 + "'", int30 == 1800);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer38);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer56);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1800 + "'", int61 == 1800);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(mimeMappings64);
        org.junit.Assert.assertNotNull(mimeMappings65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1800 + "'", int67 == 1800);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList69);
        org.junit.Assert.assertNotNull(jspServlet70);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test13397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13397");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(1);
        boolean boolean11 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        java.lang.String str12 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = true;
        int int15 = undertowEmbeddedServletContainerFactory0.getPort();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection16 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.core.io.ResourceLoader resourceLoader18 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader18;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection20 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8080 + "'", int15 == 8080);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection16);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection20);
    }

    @Test
    public void test13398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13398");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory0.directBuffers;
        org.springframework.boot.context.embedded.Compression compression7 = undertowEmbeddedServletContainerFactory0.getCompression();
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        undertowEmbeddedServletContainerFactory0.ioThreads = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList12 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(1800);
        undertowEmbeddedServletContainerFactory14.accessLogPattern = "";
        boolean boolean17 = undertowEmbeddedServletContainerFactory14.isAccessLogEnabled();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings18);
        org.springframework.core.io.ResourceLoader resourceLoader20 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(compression7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNull(resourceLoader20);
    }

    @Test
    public void test13399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13399");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        boolean boolean9 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl13 = undertowEmbeddedServletContainerFactory0.getSsl();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(ssl13);
    }

    @Test
    public void test13400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13400");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        java.lang.String str5 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file6);
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory2.setAccessLogDirectory(file8);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getSessionTimeout();
        boolean boolean12 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = undertowEmbeddedServletContainerFactory10.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet14 = undertowEmbeddedServletContainerFactory10.getJspServlet();
        boolean boolean15 = undertowEmbeddedServletContainerFactory10.useForwardHeaders;
        java.net.InetAddress inetAddress16 = undertowEmbeddedServletContainerFactory10.getAddress();
        undertowEmbeddedServletContainerFactory10.setAccessLogPattern("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = undertowEmbeddedServletContainerFactory21.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader23 = undertowEmbeddedServletContainerFactory21.resourceLoader;
        undertowEmbeddedServletContainerFactory21.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int27 = undertowEmbeddedServletContainerFactory26.getSessionTimeout();
        boolean boolean28 = undertowEmbeddedServletContainerFactory26.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList29 = undertowEmbeddedServletContainerFactory26.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet30 = undertowEmbeddedServletContainerFactory26.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int32 = undertowEmbeddedServletContainerFactory31.getSessionTimeout();
        boolean boolean33 = undertowEmbeddedServletContainerFactory31.isPersistSession();
        undertowEmbeddedServletContainerFactory31.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder37 = undertowEmbeddedServletContainerFactory31.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager38 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer40 = undertowEmbeddedServletContainerFactory26.getUndertowEmbeddedServletContainer(builder37, deploymentManager38, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager41 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer43 = undertowEmbeddedServletContainerFactory21.getUndertowEmbeddedServletContainer(builder37, deploymentManager41, (int) ' ');
        boolean boolean44 = undertowEmbeddedServletContainerFactory21.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory21.setPort((-1));
        java.lang.Integer int47 = undertowEmbeddedServletContainerFactory21.bufferSize;
        io.undertow.Undertow.Builder builder49 = undertowEmbeddedServletContainerFactory21.createBuilder(0);
        io.undertow.servlet.api.DeploymentManager deploymentManager50 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer52 = undertowEmbeddedServletContainerFactory10.getUndertowEmbeddedServletContainer(builder49, deploymentManager50, (int) '4');
        java.lang.Boolean boolean53 = undertowEmbeddedServletContainerFactory10.directBuffers;
        io.undertow.Undertow.Builder builder55 = undertowEmbeddedServletContainerFactory10.createBuilder((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int57 = undertowEmbeddedServletContainerFactory56.getSessionTimeout();
        boolean boolean58 = undertowEmbeddedServletContainerFactory56.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList59 = undertowEmbeddedServletContainerFactory56.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet60 = undertowEmbeddedServletContainerFactory56.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList61 = undertowEmbeddedServletContainerFactory56.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int63 = undertowEmbeddedServletContainerFactory62.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray64 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory62.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray64);
        undertowEmbeddedServletContainerFactory56.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray64);
        undertowEmbeddedServletContainerFactory10.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray64);
        undertowEmbeddedServletContainerFactory2.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray64);
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        boolean boolean71 = undertowEmbeddedServletContainerFactory2.isAccessLogEnabled();
        java.net.InetAddress inetAddress72 = undertowEmbeddedServletContainerFactory2.getAddress();
        int int73 = undertowEmbeddedServletContainerFactory2.getSessionTimeout();
        boolean boolean74 = undertowEmbeddedServletContainerFactory2.isPersistSession();
        undertowEmbeddedServletContainerFactory2.setWorkerThreads((java.lang.Integer) 1800);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1800 + "'", int11 == 1800);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList13);
        org.junit.Assert.assertNotNull(jspServlet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(inetAddress16);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNull(resourceLoader23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1800 + "'", int27 == 1800);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList29);
        org.junit.Assert.assertNotNull(jspServlet30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1800 + "'", int32 == 1800);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer40);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer52);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1800 + "'", int57 == 1800);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList59);
        org.junit.Assert.assertNotNull(jspServlet60);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 8080 + "'", int63 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray64);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(inetAddress72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1800 + "'", int73 == 1800);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test13401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13401");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        boolean boolean4 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet5 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getPort();
        undertowEmbeddedServletContainerFactory8.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.setPersistSession(false);
        undertowEmbeddedServletContainerFactory12.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList19 = undertowEmbeddedServletContainerFactory12.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory12.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int23 = undertowEmbeddedServletContainerFactory22.getSessionTimeout();
        boolean boolean24 = undertowEmbeddedServletContainerFactory22.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList25 = undertowEmbeddedServletContainerFactory22.builderCustomizers;
        undertowEmbeddedServletContainerFactory12.builderCustomizers = undertowBuilderCustomizerList25;
        java.io.File file27 = null;
        undertowEmbeddedServletContainerFactory12.accessLogDirectory = file27;
        boolean boolean29 = undertowEmbeddedServletContainerFactory12.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int31 = undertowEmbeddedServletContainerFactory30.getSessionTimeout();
        boolean boolean32 = undertowEmbeddedServletContainerFactory30.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList33 = undertowEmbeddedServletContainerFactory30.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet34 = undertowEmbeddedServletContainerFactory30.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList35 = undertowEmbeddedServletContainerFactory30.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int37 = undertowEmbeddedServletContainerFactory36.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray38 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory36.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray38);
        undertowEmbeddedServletContainerFactory30.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray38);
        undertowEmbeddedServletContainerFactory12.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray38);
        undertowEmbeddedServletContainerFactory8.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray38);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray38);
        java.lang.String str44 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList45 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.createAccessLogDirectoryIfNecessary();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Access log directory is not set");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(errorPageSet5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8080 + "'", int9 == 8080);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1800 + "'", int23 == 1800);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1800 + "'", int31 == 1800);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList33);
        org.junit.Assert.assertNotNull(jspServlet34);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8080 + "'", int37 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray38);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList45);
    }

    @Test
    public void test13402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13402");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) '4');
        io.undertow.servlet.api.DeploymentInfo deploymentInfo2 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo2);
        java.lang.Integer int4 = undertowEmbeddedServletContainerFactory1.bufferSize;
        org.junit.Assert.assertNull(int4);
    }

    @Test
    public void test13403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13403");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        java.io.File file11 = undertowEmbeddedServletContainerFactory8.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        java.io.File file14 = undertowEmbeddedServletContainerFactory8.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int16 = undertowEmbeddedServletContainerFactory15.getPort();
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory15.bufferSize;
        java.io.File file18 = null;
        undertowEmbeddedServletContainerFactory15.setSessionStoreDir(file18);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer21 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap20);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray22 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer21 };
        undertowEmbeddedServletContainerFactory15.addInitializers(servletContextInitializerArray22);
        undertowEmbeddedServletContainerFactory8.addInitializers(servletContextInitializerArray22);
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray22);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer26 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray27 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer26 };
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray27);
        java.lang.Integer int29 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file30 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file30);
        java.lang.Integer int32 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean35 = undertowEmbeddedServletContainerFactory34.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory34.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory34.setUseForwardHeaders(true);
        boolean boolean40 = undertowEmbeddedServletContainerFactory34.isPersistSession();
        undertowEmbeddedServletContainerFactory34.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.Ssl ssl43 = null;
        undertowEmbeddedServletContainerFactory34.setSsl(ssl43);
        boolean boolean45 = undertowEmbeddedServletContainerFactory34.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory34.setBufferSize((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.JspServlet jspServlet48 = undertowEmbeddedServletContainerFactory34.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet48);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 8080 + "'", int16 == 8080);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray22);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray27);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(jspServlet48);
    }

    @Test
    public void test13404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13404");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        int int9 = undertowEmbeddedServletContainerFactory0.getPort();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList10 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray13 = undertowEmbeddedServletContainerFactory0.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8080 + "'", int9 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList10);
    }

    @Test
    public void test13405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13405");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file5);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 10);
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file10);
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) -1);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
    }

    @Test
    public void test13406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13406");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader3);
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory0.bufferSize;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 0);
        io.undertow.server.handlers.resource.ResourceManager resourceManager8 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(resourceManager8);
    }

    @Test
    public void test13407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13407");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(1);
        boolean boolean11 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        java.lang.String str12 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = true;
        int int15 = undertowEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        undertowEmbeddedServletContainerFactory16.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl21 = null;
        undertowEmbeddedServletContainerFactory16.setSsl(ssl21);
        java.lang.String str23 = undertowEmbeddedServletContainerFactory16.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int25 = undertowEmbeddedServletContainerFactory24.getSessionTimeout();
        boolean boolean26 = undertowEmbeddedServletContainerFactory24.isPersistSession();
        undertowEmbeddedServletContainerFactory24.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory24.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int32 = undertowEmbeddedServletContainerFactory31.getSessionTimeout();
        boolean boolean33 = undertowEmbeddedServletContainerFactory31.isPersistSession();
        java.io.File file34 = undertowEmbeddedServletContainerFactory31.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList35 = undertowEmbeddedServletContainerFactory31.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory24.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList35;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory39.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int43 = undertowEmbeddedServletContainerFactory42.getSessionTimeout();
        boolean boolean44 = undertowEmbeddedServletContainerFactory42.isPersistSession();
        undertowEmbeddedServletContainerFactory42.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory42.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray49 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory42.addErrorPages(errorPageArray49);
        undertowEmbeddedServletContainerFactory39.addErrorPages(errorPageArray49);
        undertowEmbeddedServletContainerFactory24.addErrorPages(errorPageArray49);
        undertowEmbeddedServletContainerFactory16.addErrorPages(errorPageArray49);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray49);
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = true;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int58 = undertowEmbeddedServletContainerFactory57.getSessionTimeout();
        boolean boolean59 = undertowEmbeddedServletContainerFactory57.isPersistSession();
        java.io.File file60 = undertowEmbeddedServletContainerFactory57.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings61 = undertowEmbeddedServletContainerFactory57.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings62 = undertowEmbeddedServletContainerFactory57.getMimeMappings();
        java.lang.Integer int63 = undertowEmbeddedServletContainerFactory57.buffersPerRegion;
        io.undertow.Undertow.Builder builder65 = undertowEmbeddedServletContainerFactory57.createBuilder(10);
        undertowEmbeddedServletContainerFactory57.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str68 = undertowEmbeddedServletContainerFactory57.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int70 = undertowEmbeddedServletContainerFactory69.getSessionTimeout();
        boolean boolean71 = undertowEmbeddedServletContainerFactory69.isPersistSession();
        undertowEmbeddedServletContainerFactory69.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder75 = undertowEmbeddedServletContainerFactory69.createBuilder((-1));
        undertowEmbeddedServletContainerFactory69.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory78 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int79 = undertowEmbeddedServletContainerFactory78.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray80 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory78.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray80);
        undertowEmbeddedServletContainerFactory69.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray80);
        undertowEmbeddedServletContainerFactory57.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray80);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList84 = undertowEmbeddedServletContainerFactory57.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList84;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) (-1));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8080 + "'", int15 == 8080);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1800 + "'", int25 == 1800);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1800 + "'", int32 == 1800);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList35);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1800 + "'", int43 == 1800);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(errorPageArray49);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1800 + "'", int58 == 1800);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(mimeMappings61);
        org.junit.Assert.assertNotNull(mimeMappings62);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1800 + "'", int70 == 1800);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 8080 + "'", int79 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray80);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList84);
    }

    @Test
    public void test13408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13408");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection5 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        java.io.File file6 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.xnio.XnioWorker xnioWorker7 = undertowEmbeddedServletContainerFactory0.createWorker();
        org.springframework.core.io.ResourceLoader resourceLoader8 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection9 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.Compression compression10 = undertowEmbeddedServletContainerFactory0.getCompression();
        io.undertow.server.handlers.resource.ResourceManager resourceManager11 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.setIoThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((int) (byte) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer21 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap20);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray22 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer21 };
        initializer19.initializers = servletContextInitializerArray22;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray24 = initializer19.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int26 = undertowEmbeddedServletContainerFactory25.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer28 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap27);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer30 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap29);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer32 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap31);
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer34 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap33);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray35 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer28, initParameterConfiguringServletContextInitializer30, initParameterConfiguringServletContextInitializer32, initParameterConfiguringServletContextInitializer34 };
        undertowEmbeddedServletContainerFactory25.addInitializers(servletContextInitializerArray35);
        initializer19.initializers = servletContextInitializerArray35;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray38 = initializer19.initializers;
        undertowEmbeddedServletContainerFactory12.addInitializers(servletContextInitializerArray38);
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray38);
        int int41 = undertowEmbeddedServletContainerFactory0.getPort();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(xnioWorker7);
        org.junit.Assert.assertNull(resourceLoader8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection9);
        org.junit.Assert.assertNull(compression10);
        org.junit.Assert.assertNotNull(resourceManager11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(servletContextInitializerArray22);
        org.junit.Assert.assertNotNull(servletContextInitializerArray24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1800 + "'", int26 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray35);
        org.junit.Assert.assertNotNull(servletContextInitializerArray38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 8080 + "'", int41 == 8080);
    }

    @Test
    public void test13409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13409");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet6 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 1);
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file9);
        boolean boolean11 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        boolean boolean12 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory0.setPort((int) ' ');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(errorPageSet6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test13410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13410");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file15);
        java.lang.String str17 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        boolean boolean18 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.io.File file19 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file19);
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("0.0.0.0");
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList25 = null;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList25;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int28 = undertowEmbeddedServletContainerFactory27.getSessionTimeout();
        boolean boolean29 = undertowEmbeddedServletContainerFactory27.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList30 = undertowEmbeddedServletContainerFactory27.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet31 = undertowEmbeddedServletContainerFactory27.getJspServlet();
        undertowEmbeddedServletContainerFactory27.directBuffers = true;
        undertowEmbeddedServletContainerFactory27.accessLogPattern = "hi!";
        java.io.File file36 = null;
        undertowEmbeddedServletContainerFactory27.setDocumentRoot(file36);
        undertowEmbeddedServletContainerFactory27.setWorkerThreads((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int41 = undertowEmbeddedServletContainerFactory40.getSessionTimeout();
        boolean boolean42 = undertowEmbeddedServletContainerFactory40.isPersistSession();
        java.io.File file43 = undertowEmbeddedServletContainerFactory40.accessLogDirectory;
        java.lang.String str44 = undertowEmbeddedServletContainerFactory40.getListenAddress();
        undertowEmbeddedServletContainerFactory40.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory40.useForwardHeaders = false;
        java.lang.Boolean boolean49 = undertowEmbeddedServletContainerFactory40.directBuffers;
        org.springframework.boot.context.embedded.Compression compression50 = null;
        undertowEmbeddedServletContainerFactory40.setCompression(compression50);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int53 = undertowEmbeddedServletContainerFactory52.getSessionTimeout();
        boolean boolean54 = undertowEmbeddedServletContainerFactory52.isPersistSession();
        undertowEmbeddedServletContainerFactory52.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory52.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int60 = undertowEmbeddedServletContainerFactory59.getSessionTimeout();
        boolean boolean61 = undertowEmbeddedServletContainerFactory59.isPersistSession();
        java.io.File file62 = undertowEmbeddedServletContainerFactory59.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList63 = undertowEmbeddedServletContainerFactory59.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory52.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList63;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory67.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int71 = undertowEmbeddedServletContainerFactory70.getSessionTimeout();
        boolean boolean72 = undertowEmbeddedServletContainerFactory70.isPersistSession();
        undertowEmbeddedServletContainerFactory70.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory70.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray77 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory70.addErrorPages(errorPageArray77);
        undertowEmbeddedServletContainerFactory67.addErrorPages(errorPageArray77);
        undertowEmbeddedServletContainerFactory52.addErrorPages(errorPageArray77);
        undertowEmbeddedServletContainerFactory40.addErrorPages(errorPageArray77);
        undertowEmbeddedServletContainerFactory27.addErrorPages(errorPageArray77);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray77);
        org.springframework.boot.context.embedded.Ssl ssl84 = undertowEmbeddedServletContainerFactory0.getSsl();
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1800 + "'", int28 == 1800);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList30);
        org.junit.Assert.assertNotNull(jspServlet31);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1800 + "'", int41 == 1800);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "0.0.0.0" + "'", str44, "0.0.0.0");
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1800 + "'", int53 == 1800);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1800 + "'", int60 == 1800);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList63);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1800 + "'", int71 == 1800);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(errorPageArray77);
        org.junit.Assert.assertNull(ssl84);
    }

    @Test
    public void test13411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13411");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file7);
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file9;
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "0.0.0.0";
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection13 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        java.io.File file14 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file14);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        java.io.File file19 = undertowEmbeddedServletContainerFactory16.accessLogDirectory;
        boolean boolean20 = undertowEmbeddedServletContainerFactory16.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = undertowEmbeddedServletContainerFactory16.getErrorPages();
        undertowEmbeddedServletContainerFactory16.setWorkerThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int25 = undertowEmbeddedServletContainerFactory24.getPort();
        undertowEmbeddedServletContainerFactory24.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        undertowEmbeddedServletContainerFactory28.setPersistSession(false);
        undertowEmbeddedServletContainerFactory28.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList35 = undertowEmbeddedServletContainerFactory28.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory28.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int39 = undertowEmbeddedServletContainerFactory38.getSessionTimeout();
        boolean boolean40 = undertowEmbeddedServletContainerFactory38.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList41 = undertowEmbeddedServletContainerFactory38.builderCustomizers;
        undertowEmbeddedServletContainerFactory28.builderCustomizers = undertowBuilderCustomizerList41;
        java.io.File file43 = null;
        undertowEmbeddedServletContainerFactory28.accessLogDirectory = file43;
        boolean boolean45 = undertowEmbeddedServletContainerFactory28.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int47 = undertowEmbeddedServletContainerFactory46.getSessionTimeout();
        boolean boolean48 = undertowEmbeddedServletContainerFactory46.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList49 = undertowEmbeddedServletContainerFactory46.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet50 = undertowEmbeddedServletContainerFactory46.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList51 = undertowEmbeddedServletContainerFactory46.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int53 = undertowEmbeddedServletContainerFactory52.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray54 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory52.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray54);
        undertowEmbeddedServletContainerFactory46.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray54);
        undertowEmbeddedServletContainerFactory28.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray54);
        undertowEmbeddedServletContainerFactory24.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray54);
        undertowEmbeddedServletContainerFactory16.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray54);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList60 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        boolean boolean61 = undertowEmbeddedServletContainerFactory16.useForwardHeaders;
        undertowEmbeddedServletContainerFactory16.useForwardHeaders = false;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList64 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList64;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(errorPageSet21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 8080 + "'", int25 == 8080);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1800 + "'", int39 == 1800);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1800 + "'", int47 == 1800);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList49);
        org.junit.Assert.assertNotNull(jspServlet50);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8080 + "'", int53 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray54);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList64);
    }

    @Test
    public void test13412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13412");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet10);
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        int int14 = undertowEmbeddedServletContainerFactory0.getPort();
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 0);
        org.springframework.boot.context.embedded.JspServlet jspServlet17 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList18 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8080 + "'", int14 == 8080);
        org.junit.Assert.assertNotNull(jspServlet17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList18);
    }

    @Test
    public void test13413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13413");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        io.undertow.server.handlers.resource.ResourceManager resourceManager7 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        java.io.File file8 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        java.io.File file9 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        java.net.InetAddress inetAddress10 = undertowEmbeddedServletContainerFactory0.getAddress();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection11 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("0.0.0.0");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(resourceManager7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(inetAddress10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection11);
    }

    @Test
    public void test13414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13414");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.lang.ClassLoader classLoader4 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 32);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(classLoader4);
    }

    @Test
    public void test13415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13415");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory0.getAddress();
        java.net.InetAddress inetAddress19 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress19);
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean25 = undertowEmbeddedServletContainerFactory24.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory24.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory24.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings30);
        java.net.InetAddress inetAddress32 = undertowEmbeddedServletContainerFactory0.getAddress();
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection35 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        java.io.File file36 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection37 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        io.undertow.Undertow.Builder builder39 = undertowEmbeddedServletContainerFactory0.createBuilder(52);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNull(inetAddress32);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection37);
        org.junit.Assert.assertNotNull(builder39);
    }

    @Test
    public void test13416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13416");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder5 = undertowEmbeddedServletContainerFactory1.createBuilder((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.ioThreads = 10;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList8 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getSessionTimeout();
        boolean boolean11 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = undertowEmbeddedServletContainerFactory9.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList12;
        org.springframework.boot.context.embedded.Compression compression14 = undertowEmbeddedServletContainerFactory1.getCompression();
        boolean boolean15 = undertowEmbeddedServletContainerFactory1.accessLogEnabled;
        org.springframework.boot.context.embedded.Compression compression16 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression16);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList12);
        org.junit.Assert.assertNull(compression14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test13417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13417");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory0.getAddress();
        int int19 = undertowEmbeddedServletContainerFactory0.getPort();
        java.io.File file20 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "";
        boolean boolean23 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int25 = undertowEmbeddedServletContainerFactory24.getSessionTimeout();
        boolean boolean26 = undertowEmbeddedServletContainerFactory24.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList27 = undertowEmbeddedServletContainerFactory24.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet28 = undertowEmbeddedServletContainerFactory24.getJspServlet();
        undertowEmbeddedServletContainerFactory24.directBuffers = true;
        java.lang.Integer int31 = undertowEmbeddedServletContainerFactory24.bufferSize;
        java.io.File file32 = null;
        undertowEmbeddedServletContainerFactory24.setDocumentRoot(file32);
        boolean boolean34 = undertowEmbeddedServletContainerFactory24.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList35 = undertowEmbeddedServletContainerFactory24.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int37 = undertowEmbeddedServletContainerFactory36.getSessionTimeout();
        boolean boolean38 = undertowEmbeddedServletContainerFactory36.isPersistSession();
        undertowEmbeddedServletContainerFactory36.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory36.setUseForwardHeaders(false);
        boolean boolean43 = undertowEmbeddedServletContainerFactory36.useForwardHeaders;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int45 = undertowEmbeddedServletContainerFactory44.getSessionTimeout();
        boolean boolean46 = undertowEmbeddedServletContainerFactory44.isPersistSession();
        undertowEmbeddedServletContainerFactory44.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory44.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory44.setDisplayName("hi!");
        boolean boolean53 = undertowEmbeddedServletContainerFactory44.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int55 = undertowEmbeddedServletContainerFactory54.getSessionTimeout();
        boolean boolean56 = undertowEmbeddedServletContainerFactory54.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList57 = undertowEmbeddedServletContainerFactory54.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet58 = undertowEmbeddedServletContainerFactory54.getJspServlet();
        undertowEmbeddedServletContainerFactory54.directBuffers = true;
        java.io.File file61 = null;
        undertowEmbeddedServletContainerFactory54.setDocumentRoot(file61);
        undertowEmbeddedServletContainerFactory54.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray65 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory54.addBuilderCustomizers(undertowBuilderCustomizerArray65);
        undertowEmbeddedServletContainerFactory44.addBuilderCustomizers(undertowBuilderCustomizerArray65);
        undertowEmbeddedServletContainerFactory36.addBuilderCustomizers(undertowBuilderCustomizerArray65);
        undertowEmbeddedServletContainerFactory24.addBuilderCustomizers(undertowBuilderCustomizerArray65);
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray65);
        int int71 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection72 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        java.lang.Integer int73 = undertowEmbeddedServletContainerFactory0.workerThreads;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8080 + "'", int19 == 8080);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1800 + "'", int25 == 1800);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList27);
        org.junit.Assert.assertNotNull(jspServlet28);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1800 + "'", int37 == 1800);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1800 + "'", int45 == 1800);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1800 + "'", int55 == 1800);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList57);
        org.junit.Assert.assertNotNull(jspServlet58);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray65);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1800 + "'", int71 == 1800);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection72);
        org.junit.Assert.assertNull(int73);
    }

    @Test
    public void test13418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13418");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        boolean boolean4 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.jarPath = "";
        jarResourceManager0.jarPath = "";
        java.lang.String str9 = jarResourceManager0.jarPath;
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener10 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourceManager0.registerResourceChangeListener(resourceChangeListener10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test13419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13419");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        boolean boolean4 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean5 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.jarPath = "";
        java.lang.String str8 = jarResourceManager0.jarPath;
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener9 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourceManager0.removeResourceChangeListener(resourceChangeListener9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test13420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13420");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file15);
        java.lang.String str17 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        boolean boolean18 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        java.io.File file21 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file21;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/' and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test13421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13421");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(0);
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) '4');
        int int11 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getPort();
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory12.bufferSize;
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory12.setSessionStoreDir(file15);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int18 = undertowEmbeddedServletContainerFactory17.getSessionTimeout();
        boolean boolean19 = undertowEmbeddedServletContainerFactory17.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList20 = undertowEmbeddedServletContainerFactory17.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet21 = undertowEmbeddedServletContainerFactory17.getJspServlet();
        boolean boolean22 = undertowEmbeddedServletContainerFactory17.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = undertowEmbeddedServletContainerFactory17.getErrorPages();
        undertowEmbeddedServletContainerFactory12.setErrorPages(errorPageSet23);
        undertowEmbeddedServletContainerFactory12.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList27 = undertowEmbeddedServletContainerFactory12.builderCustomizers;
        undertowEmbeddedServletContainerFactory12.bufferSize = 8080;
        java.net.InetAddress inetAddress30 = undertowEmbeddedServletContainerFactory12.getAddress();
        java.io.File file31 = null;
        undertowEmbeddedServletContainerFactory12.accessLogDirectory = file31;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList33 = undertowEmbeddedServletContainerFactory12.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray35 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList36 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList36, undertowBuilderCustomizerArray35);
        undertowEmbeddedServletContainerFactory34.builderCustomizers = undertowBuilderCustomizerList36;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection39 = undertowEmbeddedServletContainerFactory34.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int41 = undertowEmbeddedServletContainerFactory40.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer43 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap42);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer45 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap44);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer47 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap46);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer49 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap48);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray50 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer43, initParameterConfiguringServletContextInitializer45, initParameterConfiguringServletContextInitializer47, initParameterConfiguringServletContextInitializer49 };
        undertowEmbeddedServletContainerFactory40.addInitializers(servletContextInitializerArray50);
        undertowEmbeddedServletContainerFactory34.addInitializers(servletContextInitializerArray50);
        boolean boolean53 = undertowEmbeddedServletContainerFactory34.isPersistSession();
        java.lang.String str54 = undertowEmbeddedServletContainerFactory34.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList55 = undertowEmbeddedServletContainerFactory34.builderCustomizers;
        undertowEmbeddedServletContainerFactory12.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList55);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList55;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8080 + "'", int13 == 8080);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1800 + "'", int18 == 1800);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList20);
        org.junit.Assert.assertNotNull(jspServlet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(errorPageSet23);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList27);
        org.junit.Assert.assertNull(inetAddress30);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList33);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1800 + "'", int41 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "0.0.0.0" + "'", str54, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList55);
    }

    @Test
    public void test13422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13422");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = undertowEmbeddedServletContainerFactory5.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        undertowEmbeddedServletContainerFactory5.builderCustomizers = undertowBuilderCustomizerList10;
        undertowEmbeddedServletContainerFactory2.builderCustomizers = undertowBuilderCustomizerList10;
        boolean boolean13 = undertowEmbeddedServletContainerFactory2.isAccessLogEnabled();
        java.lang.String str14 = undertowEmbeddedServletContainerFactory2.getListenAddress();
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory2.setAccessLogDirectory(file15);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0.0.0.0" + "'", str14, "0.0.0.0");
    }

    @Test
    public void test13423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13423");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        boolean boolean2 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean3 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str4 = jarResourceManager0.jarPath;
        java.lang.String str5 = jarResourceManager0.jarPath;
        jarResourceManager0.close();
        java.lang.String str7 = jarResourceManager0.jarPath;
        java.lang.String str8 = jarResourceManager0.jarPath;
        java.lang.String str9 = jarResourceManager0.jarPath;
        boolean boolean10 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.jarPath = "";
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test13424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13424");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        undertowEmbeddedServletContainerFactory0.workerThreads = 1;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.bufferSize = 10;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader14 = undertowEmbeddedServletContainerFactory12.resourceLoader;
        undertowEmbeddedServletContainerFactory12.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int18 = undertowEmbeddedServletContainerFactory17.getSessionTimeout();
        boolean boolean19 = undertowEmbeddedServletContainerFactory17.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList20 = undertowEmbeddedServletContainerFactory17.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet21 = undertowEmbeddedServletContainerFactory17.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int23 = undertowEmbeddedServletContainerFactory22.getSessionTimeout();
        boolean boolean24 = undertowEmbeddedServletContainerFactory22.isPersistSession();
        undertowEmbeddedServletContainerFactory22.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder28 = undertowEmbeddedServletContainerFactory22.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager29 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer31 = undertowEmbeddedServletContainerFactory17.getUndertowEmbeddedServletContainer(builder28, deploymentManager29, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager32 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer34 = undertowEmbeddedServletContainerFactory12.getUndertowEmbeddedServletContainer(builder28, deploymentManager32, (int) ' ');
        boolean boolean35 = undertowEmbeddedServletContainerFactory12.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory12.setPort((-1));
        java.lang.Integer int38 = undertowEmbeddedServletContainerFactory12.bufferSize;
        io.undertow.Undertow.Builder builder40 = undertowEmbeddedServletContainerFactory12.createBuilder(0);
        io.undertow.servlet.api.DeploymentManager deploymentManager41 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer43 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder40, deploymentManager41, (int) (byte) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int45 = undertowEmbeddedServletContainerFactory44.getPort();
        java.lang.Integer int46 = undertowEmbeddedServletContainerFactory44.bufferSize;
        java.io.File file47 = null;
        undertowEmbeddedServletContainerFactory44.setSessionStoreDir(file47);
        java.io.File file49 = null;
        undertowEmbeddedServletContainerFactory44.accessLogDirectory = file49;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings51 = undertowEmbeddedServletContainerFactory44.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int53 = undertowEmbeddedServletContainerFactory52.getSessionTimeout();
        boolean boolean54 = undertowEmbeddedServletContainerFactory52.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList55 = undertowEmbeddedServletContainerFactory52.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet56 = undertowEmbeddedServletContainerFactory52.getJspServlet();
        undertowEmbeddedServletContainerFactory44.setJspServlet(jspServlet56);
        org.springframework.core.io.ResourceLoader resourceLoader58 = null;
        undertowEmbeddedServletContainerFactory44.resourceLoader = resourceLoader58;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int61 = undertowEmbeddedServletContainerFactory60.getSessionTimeout();
        boolean boolean62 = undertowEmbeddedServletContainerFactory60.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList63 = undertowEmbeddedServletContainerFactory60.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet64 = undertowEmbeddedServletContainerFactory60.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList65 = undertowEmbeddedServletContainerFactory60.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int67 = undertowEmbeddedServletContainerFactory66.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray68 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory66.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray68);
        undertowEmbeddedServletContainerFactory60.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray68);
        undertowEmbeddedServletContainerFactory44.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray68);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray68);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNull(resourceLoader14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1800 + "'", int18 == 1800);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList20);
        org.junit.Assert.assertNotNull(jspServlet21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1800 + "'", int23 == 1800);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer31);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 8080 + "'", int45 == 8080);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(mimeMappings51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1800 + "'", int53 == 1800);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList55);
        org.junit.Assert.assertNotNull(jspServlet56);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1800 + "'", int61 == 1800);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList63);
        org.junit.Assert.assertNotNull(jspServlet64);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 8080 + "'", int67 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray68);
    }

    @Test
    public void test13425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13425");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.jarPath = "hi!";
        jarResourceManager0.jarPath = "0.0.0.0";
        java.lang.String str5 = jarResourceManager0.jarPath;
        boolean boolean6 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.close();
        java.lang.String str8 = jarResourceManager0.jarPath;
        boolean boolean9 = jarResourceManager0.isResourceChangeListenerSupported();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "0.0.0.0" + "'", str5, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test13426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13426");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file5);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file8);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getSessionTimeout();
        boolean boolean12 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        undertowEmbeddedServletContainerFactory10.setPersistSession(false);
        undertowEmbeddedServletContainerFactory10.setUseForwardHeaders(true);
        io.undertow.server.handlers.resource.ResourceManager resourceManager17 = undertowEmbeddedServletContainerFactory10.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getSessionTimeout();
        boolean boolean20 = undertowEmbeddedServletContainerFactory18.isPersistSession();
        java.io.File file21 = undertowEmbeddedServletContainerFactory18.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = undertowEmbeddedServletContainerFactory18.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = undertowEmbeddedServletContainerFactory18.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int25 = undertowEmbeddedServletContainerFactory24.getSessionTimeout();
        boolean boolean26 = undertowEmbeddedServletContainerFactory24.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList27 = undertowEmbeddedServletContainerFactory24.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet28 = undertowEmbeddedServletContainerFactory24.getJspServlet();
        undertowEmbeddedServletContainerFactory18.setJspServlet(jspServlet28);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray31 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList32 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList32, undertowBuilderCustomizerArray31);
        undertowEmbeddedServletContainerFactory30.builderCustomizers = undertowBuilderCustomizerList32;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection35 = undertowEmbeddedServletContainerFactory30.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory18.setBuilderCustomizers(undertowBuilderCustomizerCollection35);
        undertowEmbeddedServletContainerFactory10.setBuilderCustomizers(undertowBuilderCustomizerCollection35);
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection35);
        java.lang.Integer int39 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int41 = undertowEmbeddedServletContainerFactory40.getSessionTimeout();
        boolean boolean42 = undertowEmbeddedServletContainerFactory40.isPersistSession();
        undertowEmbeddedServletContainerFactory40.setPersistSession(false);
        undertowEmbeddedServletContainerFactory40.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int48 = undertowEmbeddedServletContainerFactory47.getSessionTimeout();
        boolean boolean49 = undertowEmbeddedServletContainerFactory47.isPersistSession();
        java.io.File file50 = undertowEmbeddedServletContainerFactory47.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList51 = undertowEmbeddedServletContainerFactory47.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory40.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList51;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList51;
        boolean boolean54 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        org.springframework.core.io.ResourceLoader resourceLoader57 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader57);
        java.io.File file59 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file59;
        java.lang.ClassLoader classLoader61 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1800 + "'", int11 == 1800);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(resourceManager17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1800 + "'", int25 == 1800);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList27);
        org.junit.Assert.assertNotNull(jspServlet28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection35);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1800 + "'", int41 == 1800);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1800 + "'", int48 == 1800);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classLoader61);
    }

    @Test
    public void test13427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13427");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int3 = undertowEmbeddedServletContainerFactory2.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory2.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray4);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray4);
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        undertowEmbeddedServletContainerFactory1.setPersistSession(true);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo12 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo12);
        undertowEmbeddedServletContainerFactory1.ioThreads = 0;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8080 + "'", int3 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray4);
        org.junit.Assert.assertNull(int7);
    }

    @Test
    public void test13428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13428");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl4);
        undertowEmbeddedServletContainerFactory0.setPort((int) (short) 10);
        int int8 = undertowEmbeddedServletContainerFactory0.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader9;
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = true;
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(35);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
    }

    @Test
    public void test13429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13429");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.Compression compression4 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression4);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray7 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList8, undertowBuilderCustomizerArray7);
        undertowEmbeddedServletContainerFactory6.builderCustomizers = undertowBuilderCustomizerList8;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection11 = undertowEmbeddedServletContainerFactory6.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection11);
        java.io.File file13 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file13;
        org.springframework.boot.context.embedded.Compression compression15 = undertowEmbeddedServletContainerFactory0.getCompression();
        org.springframework.boot.context.embedded.ErrorPage errorPage16 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage17 = undertowEmbeddedServletContainerFactory0.getUndertowErrorPage(errorPage16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection11);
        org.junit.Assert.assertNull(compression15);
    }

    @Test
    public void test13430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13430");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection5 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        undertowEmbeddedServletContainerFactory6.setPersistSession(false);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList13 = undertowEmbeddedServletContainerFactory6.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory6.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList19 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        undertowEmbeddedServletContainerFactory6.builderCustomizers = undertowBuilderCustomizerList19;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList19;
        java.lang.String str22 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("0.0.0.0");
        java.io.File file25 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(file25);
    }

    @Test
    public void test13431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13431");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList4 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        int int5 = undertowEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("0.0.0.0");
        java.lang.String str9 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        io.undertow.server.handlers.resource.ResourceManager resourceManager10 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8080 + "'", int5 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "0.0.0.0" + "'", str9, "0.0.0.0");
        org.junit.Assert.assertNotNull(resourceManager10);
    }

    @Test
    public void test13432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13432");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.lang.ClassLoader classLoader4 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "";
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        boolean boolean8 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        int int9 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory0.ioThreads;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        org.springframework.boot.context.embedded.Compression compression12 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression12);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo14 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.configureMimeMappings(deploymentInfo14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8080 + "'", int9 == 8080);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(jspServlet11);
    }

    @Test
    public void test13433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13433");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 1);
        boolean boolean7 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        undertowEmbeddedServletContainerFactory8.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl13 = null;
        undertowEmbeddedServletContainerFactory8.setSsl(ssl13);
        org.springframework.boot.context.embedded.JspServlet jspServlet15 = undertowEmbeddedServletContainerFactory8.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet15);
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList19 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(jspServlet15);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList19);
        org.junit.Assert.assertNotNull(errorPageSet20);
    }

    @Test
    public void test13434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13434");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        boolean boolean2 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.jarPath = "hi!";
        boolean boolean5 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.close();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "0.0.0.0";
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test13435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13435");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.io.File file4 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList7 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList7, undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory5.builderCustomizers = undertowBuilderCustomizerList7;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection10 = undertowEmbeddedServletContainerFactory5.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setBuilderCustomizers(undertowBuilderCustomizerCollection10);
        java.lang.String str12 = undertowEmbeddedServletContainerFactory1.accessLogPattern;
        java.lang.String str13 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        int int14 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1800 + "'", int14 == 1800);
    }

    @Test
    public void test13436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13436");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory0.getAddress();
        java.net.InetAddress inetAddress19 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress19);
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean25 = undertowEmbeddedServletContainerFactory24.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory24.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory24.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings30);
        java.net.InetAddress inetAddress32 = undertowEmbeddedServletContainerFactory0.getAddress();
        java.io.File file33 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        io.undertow.server.handlers.resource.ResourceManager resourceManager34 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        boolean boolean35 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        undertowEmbeddedServletContainerFactory0.ioThreads = (-1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNull(inetAddress32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(resourceManager34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test13437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13437");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        java.io.File file8 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.core.io.ResourceLoader resourceLoader9 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "0.0.0.0";
        undertowEmbeddedServletContainerFactory0.workerThreads = 100;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.workerThreads = 52;
        io.undertow.server.handlers.resource.ResourceManager resourceManager17 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(resourceLoader9);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(resourceManager17);
    }

    @Test
    public void test13438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13438");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.jarPath = "hi!";
        boolean boolean3 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.close();
        boolean boolean5 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.jarPath = "";
        jarResourceManager0.jarPath = "";
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener10 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourceManager0.removeResourceChangeListener(resourceChangeListener10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test13439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13439");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        boolean boolean11 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.lang.String str12 = undertowEmbeddedServletContainerFactory0.getContextPath();
        boolean boolean13 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.net.InetAddress inetAddress15 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress15);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList14);
    }

    @Test
    public void test13440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13440");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory0.getSsl();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.Ssl ssl11 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl11);
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader13;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
    }

    @Test
    public void test13441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13441");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        undertowEmbeddedServletContainerFactory8.setIoThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder14 = undertowEmbeddedServletContainerFactory8.createBuilder((int) (byte) 1);
        io.undertow.servlet.api.DeploymentManager deploymentManager15 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer17 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder14, deploymentManager15, (int) (byte) 10);
        org.springframework.boot.context.embedded.Ssl ssl18 = undertowEmbeddedServletContainerFactory0.getSsl();
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("0.0.0.0");
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((-1));
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = true;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer17);
        org.junit.Assert.assertNull(ssl18);
    }

    @Test
    public void test13442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13442");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        boolean boolean4 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.jarPath = "";
        jarResourceManager0.jarPath = "";
        jarResourceManager0.jarPath = "0.0.0.0";
        boolean boolean11 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str12 = jarResourceManager0.jarPath;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
    }

    @Test
    public void test13443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13443");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file15);
        java.lang.String str17 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        boolean boolean18 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        java.io.File file21 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file21;
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray23 = undertowEmbeddedServletContainerFactory0.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test13444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13444");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 1;
        undertowEmbeddedServletContainerFactory0.ioThreads = 0;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 10);
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file7);
        boolean boolean9 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test13445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13445");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer2 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap1);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer2 };
        initializer0.initializers = servletContextInitializerArray3;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray5 = initializer0.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.io.File file10 = undertowEmbeddedServletContainerFactory7.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory7.getMimeMappings();
        java.io.File file13 = undertowEmbeddedServletContainerFactory7.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getPort();
        java.lang.Integer int16 = undertowEmbeddedServletContainerFactory14.bufferSize;
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory14.setSessionStoreDir(file17);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer20 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap19);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray21 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer20 };
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray21);
        undertowEmbeddedServletContainerFactory7.addInitializers(servletContextInitializerArray21);
        initializer6.initializers = servletContextInitializerArray21;
        initializer0.initializers = servletContextInitializerArray21;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = initializer0.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int31 = undertowEmbeddedServletContainerFactory30.getSessionTimeout();
        boolean boolean32 = undertowEmbeddedServletContainerFactory30.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList33 = undertowEmbeddedServletContainerFactory30.builderCustomizers;
        org.springframework.boot.context.embedded.Compression compression34 = null;
        undertowEmbeddedServletContainerFactory30.setCompression(compression34);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int37 = undertowEmbeddedServletContainerFactory36.getSessionTimeout();
        boolean boolean38 = undertowEmbeddedServletContainerFactory36.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList39 = undertowEmbeddedServletContainerFactory36.builderCustomizers;
        org.springframework.boot.context.embedded.Compression compression40 = null;
        undertowEmbeddedServletContainerFactory36.setCompression(compression40);
        undertowEmbeddedServletContainerFactory36.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory36.accessLogEnabled = true;
        java.io.File file46 = null;
        undertowEmbeddedServletContainerFactory36.setSessionStoreDir(file46);
        java.io.File file48 = undertowEmbeddedServletContainerFactory36.accessLogDirectory;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer52 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap51);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray53 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer52 };
        initializer50.initializers = servletContextInitializerArray53;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer55 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer57 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap56);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray58 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer57 };
        initializer55.initializers = servletContextInitializerArray58;
        initializer50.initializers = servletContextInitializerArray58;
        initializer49.initializers = servletContextInitializerArray58;
        undertowEmbeddedServletContainerFactory36.addInitializers(servletContextInitializerArray58);
        undertowEmbeddedServletContainerFactory30.addInitializers(servletContextInitializerArray58);
        undertowEmbeddedServletContainerFactory29.addInitializers(servletContextInitializerArray58);
        initializer0.initializers = servletContextInitializerArray58;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray66 = initializer0.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray67 = null;
        initializer0.initializers = servletContextInitializerArray67;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray69 = initializer0.initializers;
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8080 + "'", int15 == 8080);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(servletContextInitializerArray21);
        org.junit.Assert.assertNotNull(servletContextInitializerArray26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1800 + "'", int31 == 1800);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1800 + "'", int37 == 1800);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList39);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(servletContextInitializerArray53);
        org.junit.Assert.assertNotNull(servletContextInitializerArray58);
        org.junit.Assert.assertNotNull(servletContextInitializerArray66);
        org.junit.Assert.assertNull(servletContextInitializerArray69);
    }

    @Test
    public void test13446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13446");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory0.directBuffers;
        io.undertow.Undertow.Builder builder14 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager15 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer17 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder14, deploymentManager15, 1800);
        org.springframework.core.io.ResourceLoader resourceLoader18 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader18);
        undertowEmbeddedServletContainerFactory0.ioThreads = 97;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer17);
    }

    @Test
    public void test13447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13447");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.workerThreads = 0;
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.ioThreads = 1800;
        undertowEmbeddedServletContainerFactory0.bufferSize = 1;
        java.lang.String str13 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        java.util.concurrent.TimeUnit timeUnit15 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.setSessionTimeout(1, timeUnit15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0.0.0.0" + "'", str13, "0.0.0.0");
    }

    @Test
    public void test13448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13448");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        boolean boolean3 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory7.setJspServletClassName("");
        int int10 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory7.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "";
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file15);
        boolean boolean17 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        boolean boolean21 = undertowEmbeddedServletContainerFactory20.isRegisterDefaultServlet();
        int int22 = undertowEmbeddedServletContainerFactory20.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int24 = undertowEmbeddedServletContainerFactory23.getSessionTimeout();
        boolean boolean25 = undertowEmbeddedServletContainerFactory23.isPersistSession();
        undertowEmbeddedServletContainerFactory23.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory23.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory23.setDisplayName("hi!");
        boolean boolean32 = undertowEmbeddedServletContainerFactory23.isRegisterDefaultServlet();
        boolean boolean33 = undertowEmbeddedServletContainerFactory23.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList34 = undertowEmbeddedServletContainerFactory23.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int36 = undertowEmbeddedServletContainerFactory35.getPort();
        java.lang.Integer int37 = undertowEmbeddedServletContainerFactory35.bufferSize;
        boolean boolean38 = undertowEmbeddedServletContainerFactory35.accessLogEnabled;
        java.lang.String str39 = undertowEmbeddedServletContainerFactory35.accessLogPattern;
        org.springframework.core.io.ResourceLoader resourceLoader40 = null;
        undertowEmbeddedServletContainerFactory35.setResourceLoader(resourceLoader40);
        boolean boolean42 = undertowEmbeddedServletContainerFactory35.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int44 = undertowEmbeddedServletContainerFactory43.getSessionTimeout();
        boolean boolean45 = undertowEmbeddedServletContainerFactory43.isPersistSession();
        undertowEmbeddedServletContainerFactory43.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl48 = null;
        undertowEmbeddedServletContainerFactory43.setSsl(ssl48);
        org.springframework.boot.context.embedded.JspServlet jspServlet50 = undertowEmbeddedServletContainerFactory43.getJspServlet();
        undertowEmbeddedServletContainerFactory35.setJspServlet(jspServlet50);
        undertowEmbeddedServletContainerFactory23.setJspServlet(jspServlet50);
        undertowEmbeddedServletContainerFactory20.setJspServlet(jspServlet50);
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet50);
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray57 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Customizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1800 + "'", int22 == 1800);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1800 + "'", int24 == 1800);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8080 + "'", int36 == 8080);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1800 + "'", int44 == 1800);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(jspServlet50);
    }

    @Test
    public void test13449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13449");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        java.io.File file7 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.Ssl ssl8 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl8);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 1;
        boolean boolean12 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.Compression compression13 = undertowEmbeddedServletContainerFactory0.getCompression();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection14 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        java.lang.Integer int15 = undertowEmbeddedServletContainerFactory0.bufferSize;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo16 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo16);
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 10);
        boolean boolean20 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer23 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap22);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray24 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer23 };
        initializer21.initializers = servletContextInitializerArray24;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = initializer21.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int28 = undertowEmbeddedServletContainerFactory27.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer30 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap29);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer32 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap31);
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer34 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap33);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer36 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap35);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray37 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer30, initParameterConfiguringServletContextInitializer32, initParameterConfiguringServletContextInitializer34, initParameterConfiguringServletContextInitializer36 };
        undertowEmbeddedServletContainerFactory27.addInitializers(servletContextInitializerArray37);
        initializer21.initializers = servletContextInitializerArray37;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray40 = initializer21.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer43 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap42);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray44 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer43 };
        initializer41.initializers = servletContextInitializerArray44;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int47 = undertowEmbeddedServletContainerFactory46.getPort();
        java.lang.Integer int48 = undertowEmbeddedServletContainerFactory46.bufferSize;
        java.io.File file49 = null;
        undertowEmbeddedServletContainerFactory46.setSessionStoreDir(file49);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer52 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap51);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray53 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer52 };
        undertowEmbeddedServletContainerFactory46.addInitializers(servletContextInitializerArray53);
        initializer41.initializers = servletContextInitializerArray53;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray56 = initializer41.initializers;
        initializer21.initializers = servletContextInitializerArray56;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.DeploymentManager deploymentManager58 = undertowEmbeddedServletContainerFactory0.createDeploymentManager(servletContextInitializerArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: java.lang.NullPointerException");
        } catch (java.lang.RuntimeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(compression13);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray24);
        org.junit.Assert.assertNotNull(servletContextInitializerArray26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1800 + "'", int28 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray37);
        org.junit.Assert.assertNotNull(servletContextInitializerArray40);
        org.junit.Assert.assertNotNull(servletContextInitializerArray44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8080 + "'", int47 == 8080);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(servletContextInitializerArray53);
        org.junit.Assert.assertNotNull(servletContextInitializerArray56);
    }

    @Test
    public void test13450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13450");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        io.undertow.server.handlers.resource.ResourceManager resourceManager7 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        java.io.File file11 = undertowEmbeddedServletContainerFactory8.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = undertowEmbeddedServletContainerFactory14.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet18 = undertowEmbeddedServletContainerFactory14.getJspServlet();
        undertowEmbeddedServletContainerFactory8.setJspServlet(jspServlet18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList22 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList22, undertowBuilderCustomizerArray21);
        undertowEmbeddedServletContainerFactory20.builderCustomizers = undertowBuilderCustomizerList22;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection25 = undertowEmbeddedServletContainerFactory20.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory8.setBuilderCustomizers(undertowBuilderCustomizerCollection25);
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection25);
        java.io.File file28 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file28);
        org.springframework.core.io.ResourceLoader resourceLoader30 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader30);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList32 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList35 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.io.File file36 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file36;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(resourceManager7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList17);
        org.junit.Assert.assertNotNull(jspServlet18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection25);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList32);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList35);
    }

    @Test
    public void test13451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13451");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file7);
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        java.io.File file14 = undertowEmbeddedServletContainerFactory11.accessLogDirectory;
        undertowEmbeddedServletContainerFactory11.setRegisterDefaultServlet(true);
        java.lang.Boolean boolean17 = undertowEmbeddedServletContainerFactory11.directBuffers;
        org.springframework.boot.context.embedded.Compression compression18 = undertowEmbeddedServletContainerFactory11.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int20 = undertowEmbeddedServletContainerFactory19.getSessionTimeout();
        boolean boolean21 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        undertowEmbeddedServletContainerFactory19.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder25 = undertowEmbeddedServletContainerFactory19.createBuilder((-1));
        undertowEmbeddedServletContainerFactory19.setBufferSize((java.lang.Integer) 10);
        java.net.InetAddress inetAddress28 = null;
        undertowEmbeddedServletContainerFactory19.setAddress(inetAddress28);
        undertowEmbeddedServletContainerFactory19.accessLogPattern = "hi!";
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection32 = undertowEmbeddedServletContainerFactory19.getBuilderCustomizers();
        boolean boolean33 = undertowEmbeddedServletContainerFactory19.accessLogEnabled;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int35 = undertowEmbeddedServletContainerFactory34.getSessionTimeout();
        boolean boolean36 = undertowEmbeddedServletContainerFactory34.isPersistSession();
        undertowEmbeddedServletContainerFactory34.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory34.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory34.setDisplayName("hi!");
        boolean boolean43 = undertowEmbeddedServletContainerFactory34.isRegisterDefaultServlet();
        java.io.File file44 = null;
        undertowEmbeddedServletContainerFactory34.accessLogDirectory = file44;
        org.springframework.boot.context.embedded.JspServlet jspServlet46 = undertowEmbeddedServletContainerFactory34.getJspServlet();
        undertowEmbeddedServletContainerFactory19.setJspServlet(jspServlet46);
        undertowEmbeddedServletContainerFactory11.setJspServlet(jspServlet46);
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet46);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo50 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo50);
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("0.0.0.0");
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray54 = undertowEmbeddedServletContainerFactory0.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(compression18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1800 + "'", int35 == 1800);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(jspServlet46);
    }

    @Test
    public void test13452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13452");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet10);
        java.net.InetAddress inetAddress12 = undertowEmbeddedServletContainerFactory0.getAddress();
        java.lang.ClassLoader classLoader13 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        java.lang.String str14 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        org.springframework.core.io.ResourceLoader resourceLoader19 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.core.io.ResourceLoader resourceLoader20 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        java.lang.String str23 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertNull(inetAddress12);
        org.junit.Assert.assertNotNull(classLoader13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0.0.0.0" + "'", str14, "0.0.0.0");
        org.junit.Assert.assertNull(resourceLoader19);
        org.junit.Assert.assertNull(resourceLoader20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
    }

    @Test
    public void test13453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13453");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 1);
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory0.workerThreads;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(int5);
    }

    @Test
    public void test13454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13454");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 100);
        java.lang.String str2 = undertowEmbeddedServletContainerFactory1.accessLogPattern;
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 100);
        java.lang.ClassLoader classLoader5 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.bufferSize = 0;
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        undertowEmbeddedServletContainerFactory1.workerThreads = 8080;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(classLoader5);
    }

    @Test
    public void test13455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13455");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        boolean boolean9 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory0.getSsl();
        org.xnio.XnioWorker xnioWorker12 = undertowEmbeddedServletContainerFactory0.createWorker();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int14 = undertowEmbeddedServletContainerFactory13.getPort();
        java.lang.Integer int15 = undertowEmbeddedServletContainerFactory13.bufferSize;
        java.io.File file16 = null;
        undertowEmbeddedServletContainerFactory13.setSessionStoreDir(file16);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getSessionTimeout();
        boolean boolean20 = undertowEmbeddedServletContainerFactory18.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList21 = undertowEmbeddedServletContainerFactory18.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet22 = undertowEmbeddedServletContainerFactory18.getJspServlet();
        boolean boolean23 = undertowEmbeddedServletContainerFactory18.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = undertowEmbeddedServletContainerFactory18.getErrorPages();
        undertowEmbeddedServletContainerFactory13.setErrorPages(errorPageSet24);
        java.lang.Boolean boolean26 = undertowEmbeddedServletContainerFactory13.directBuffers;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = undertowEmbeddedServletContainerFactory30.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader32 = undertowEmbeddedServletContainerFactory30.resourceLoader;
        undertowEmbeddedServletContainerFactory30.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int36 = undertowEmbeddedServletContainerFactory35.getSessionTimeout();
        boolean boolean37 = undertowEmbeddedServletContainerFactory35.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList38 = undertowEmbeddedServletContainerFactory35.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet39 = undertowEmbeddedServletContainerFactory35.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int41 = undertowEmbeddedServletContainerFactory40.getSessionTimeout();
        boolean boolean42 = undertowEmbeddedServletContainerFactory40.isPersistSession();
        undertowEmbeddedServletContainerFactory40.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder46 = undertowEmbeddedServletContainerFactory40.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager47 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer49 = undertowEmbeddedServletContainerFactory35.getUndertowEmbeddedServletContainer(builder46, deploymentManager47, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager50 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer52 = undertowEmbeddedServletContainerFactory30.getUndertowEmbeddedServletContainer(builder46, deploymentManager50, (int) ' ');
        boolean boolean53 = undertowEmbeddedServletContainerFactory30.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory30.setPort((-1));
        java.lang.Integer int56 = undertowEmbeddedServletContainerFactory30.bufferSize;
        io.undertow.Undertow.Builder builder58 = undertowEmbeddedServletContainerFactory30.createBuilder(0);
        java.io.File file59 = undertowEmbeddedServletContainerFactory30.getSessionStoreDir();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList60 = undertowEmbeddedServletContainerFactory30.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int62 = undertowEmbeddedServletContainerFactory61.getSessionTimeout();
        boolean boolean63 = undertowEmbeddedServletContainerFactory61.isPersistSession();
        undertowEmbeddedServletContainerFactory61.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory61.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray68 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory61.addErrorPages(errorPageArray68);
        undertowEmbeddedServletContainerFactory30.addErrorPages(errorPageArray68);
        undertowEmbeddedServletContainerFactory13.addErrorPages(errorPageArray68);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray68);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertNotNull(xnioWorker12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8080 + "'", int14 == 8080);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList21);
        org.junit.Assert.assertNotNull(jspServlet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(errorPageSet24);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNull(resourceLoader32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1800 + "'", int36 == 1800);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList38);
        org.junit.Assert.assertNotNull(jspServlet39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1800 + "'", int41 == 1800);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer49);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1800 + "'", int62 == 1800);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(errorPageArray68);
    }

    @Test
    public void test13456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13456");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        boolean boolean9 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        java.io.File file13 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file13;
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        org.springframework.boot.context.embedded.Compression compression17 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression17);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test13457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13457");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.net.InetAddress inetAddress6 = undertowEmbeddedServletContainerFactory0.getAddress();
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory11.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader13 = undertowEmbeddedServletContainerFactory11.resourceLoader;
        undertowEmbeddedServletContainerFactory11.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList19 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet20 = undertowEmbeddedServletContainerFactory16.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getSessionTimeout();
        boolean boolean23 = undertowEmbeddedServletContainerFactory21.isPersistSession();
        undertowEmbeddedServletContainerFactory21.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder27 = undertowEmbeddedServletContainerFactory21.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer30 = undertowEmbeddedServletContainerFactory16.getUndertowEmbeddedServletContainer(builder27, deploymentManager28, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager31 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer33 = undertowEmbeddedServletContainerFactory11.getUndertowEmbeddedServletContainer(builder27, deploymentManager31, (int) ' ');
        boolean boolean34 = undertowEmbeddedServletContainerFactory11.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory11.setPort((-1));
        java.lang.Integer int37 = undertowEmbeddedServletContainerFactory11.bufferSize;
        io.undertow.Undertow.Builder builder39 = undertowEmbeddedServletContainerFactory11.createBuilder(0);
        io.undertow.servlet.api.DeploymentManager deploymentManager40 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer42 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder39, deploymentManager40, (int) '4');
        java.lang.Boolean boolean43 = undertowEmbeddedServletContainerFactory0.directBuffers;
        io.undertow.Undertow.Builder builder45 = undertowEmbeddedServletContainerFactory0.createBuilder((int) ' ');
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "";
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        org.xnio.XnioWorker xnioWorker50 = undertowEmbeddedServletContainerFactory0.createWorker();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNull(resourceLoader13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList19);
        org.junit.Assert.assertNotNull(jspServlet20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1800 + "'", int22 == 1800);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer30);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(xnioWorker50);
    }

    @Test
    public void test13458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13458");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory0.directBuffers;
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 8080;
        undertowEmbeddedServletContainerFactory0.setPort(52);
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test13459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13459");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        boolean boolean4 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean5 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.jarPath = "";
        java.lang.String str8 = jarResourceManager0.jarPath;
        jarResourceManager0.jarPath = "";
        jarResourceManager0.jarPath = "";
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener13 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourceManager0.registerResourceChangeListener(resourceChangeListener13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test13460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13460");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory1.ioThreads = 1;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        undertowEmbeddedServletContainerFactory1.accessLogPattern = "hi!";
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList9 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList9);
    }

    @Test
    public void test13461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13461");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList4 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList4, undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList4);
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList11 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList11, undertowBuilderCustomizerArray10);
        undertowEmbeddedServletContainerFactory9.builderCustomizers = undertowBuilderCustomizerList11;
        undertowEmbeddedServletContainerFactory9.workerThreads = 1;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection16 = undertowEmbeddedServletContainerFactory9.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory9.bufferSize = 10;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = undertowEmbeddedServletContainerFactory21.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader23 = undertowEmbeddedServletContainerFactory21.resourceLoader;
        undertowEmbeddedServletContainerFactory21.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int27 = undertowEmbeddedServletContainerFactory26.getSessionTimeout();
        boolean boolean28 = undertowEmbeddedServletContainerFactory26.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList29 = undertowEmbeddedServletContainerFactory26.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet30 = undertowEmbeddedServletContainerFactory26.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int32 = undertowEmbeddedServletContainerFactory31.getSessionTimeout();
        boolean boolean33 = undertowEmbeddedServletContainerFactory31.isPersistSession();
        undertowEmbeddedServletContainerFactory31.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder37 = undertowEmbeddedServletContainerFactory31.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager38 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer40 = undertowEmbeddedServletContainerFactory26.getUndertowEmbeddedServletContainer(builder37, deploymentManager38, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager41 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer43 = undertowEmbeddedServletContainerFactory21.getUndertowEmbeddedServletContainer(builder37, deploymentManager41, (int) ' ');
        boolean boolean44 = undertowEmbeddedServletContainerFactory21.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory21.setPort((-1));
        java.lang.Integer int47 = undertowEmbeddedServletContainerFactory21.bufferSize;
        io.undertow.Undertow.Builder builder49 = undertowEmbeddedServletContainerFactory21.createBuilder(0);
        io.undertow.servlet.api.DeploymentManager deploymentManager50 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer52 = undertowEmbeddedServletContainerFactory9.getUndertowEmbeddedServletContainer(builder49, deploymentManager50, (int) (byte) 1);
        io.undertow.servlet.api.DeploymentManager deploymentManager53 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer55 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder49, deploymentManager53, (int) (short) 100);
        java.lang.String str56 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int58 = undertowEmbeddedServletContainerFactory57.getSessionTimeout();
        boolean boolean59 = undertowEmbeddedServletContainerFactory57.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList60 = undertowEmbeddedServletContainerFactory57.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet61 = undertowEmbeddedServletContainerFactory57.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int63 = undertowEmbeddedServletContainerFactory62.getSessionTimeout();
        boolean boolean64 = undertowEmbeddedServletContainerFactory62.isPersistSession();
        undertowEmbeddedServletContainerFactory62.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder68 = undertowEmbeddedServletContainerFactory62.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager69 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer71 = undertowEmbeddedServletContainerFactory57.getUndertowEmbeddedServletContainer(builder68, deploymentManager69, (int) (short) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int73 = undertowEmbeddedServletContainerFactory72.getSessionTimeout();
        boolean boolean74 = undertowEmbeddedServletContainerFactory72.isPersistSession();
        undertowEmbeddedServletContainerFactory72.setPersistSession(false);
        undertowEmbeddedServletContainerFactory72.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList79 = undertowEmbeddedServletContainerFactory72.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory72.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory82 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int83 = undertowEmbeddedServletContainerFactory82.getSessionTimeout();
        boolean boolean84 = undertowEmbeddedServletContainerFactory82.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList85 = undertowEmbeddedServletContainerFactory82.builderCustomizers;
        undertowEmbeddedServletContainerFactory72.builderCustomizers = undertowBuilderCustomizerList85;
        undertowEmbeddedServletContainerFactory57.builderCustomizers = undertowBuilderCustomizerList85;
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList85);
        java.net.InetAddress inetAddress89 = undertowEmbeddedServletContainerFactory0.getAddress();
        org.xnio.XnioWorker xnioWorker90 = undertowEmbeddedServletContainerFactory0.createWorker();
        java.lang.String str91 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        java.net.InetAddress inetAddress92 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress92);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection16);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNull(resourceLoader23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1800 + "'", int27 == 1800);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList29);
        org.junit.Assert.assertNotNull(jspServlet30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1800 + "'", int32 == 1800);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer40);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer52);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1800 + "'", int58 == 1800);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList60);
        org.junit.Assert.assertNotNull(jspServlet61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1800 + "'", int63 == 1800);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1800 + "'", int73 == 1800);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList79);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1800 + "'", int83 == 1800);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList85);
        org.junit.Assert.assertNull(inetAddress89);
        org.junit.Assert.assertNotNull(xnioWorker90);
        org.junit.Assert.assertNull(str91);
    }

    @Test
    public void test13462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13462");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl5 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl5);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 8080);
        undertowEmbeddedServletContainerFactory0.workerThreads = 0;
        boolean boolean11 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test13463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13463");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader3);
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory0.bufferSize;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 0);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection8 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        java.net.InetAddress inetAddress9 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress9);
        int int11 = undertowEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory13.setWorkerThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder17 = undertowEmbeddedServletContainerFactory13.createBuilder((int) (byte) -1);
        undertowEmbeddedServletContainerFactory13.buffersPerRegion = (-1);
        java.lang.String str20 = undertowEmbeddedServletContainerFactory13.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean23 = undertowEmbeddedServletContainerFactory22.isAccessLogEnabled();
        org.springframework.boot.context.embedded.Ssl ssl24 = undertowEmbeddedServletContainerFactory22.getSsl();
        java.lang.Integer int25 = undertowEmbeddedServletContainerFactory22.bufferSize;
        java.lang.ClassLoader classLoader26 = undertowEmbeddedServletContainerFactory22.getServletClassLoader();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int28 = undertowEmbeddedServletContainerFactory27.getSessionTimeout();
        boolean boolean29 = undertowEmbeddedServletContainerFactory27.isPersistSession();
        undertowEmbeddedServletContainerFactory27.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory27.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray34 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory27.addErrorPages(errorPageArray34);
        undertowEmbeddedServletContainerFactory22.addErrorPages(errorPageArray34);
        undertowEmbeddedServletContainerFactory13.addErrorPages(errorPageArray34);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray34);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int40 = undertowEmbeddedServletContainerFactory39.getSessionTimeout();
        boolean boolean41 = undertowEmbeddedServletContainerFactory39.isPersistSession();
        undertowEmbeddedServletContainerFactory39.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder45 = undertowEmbeddedServletContainerFactory39.createBuilder((-1));
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet46 = undertowEmbeddedServletContainerFactory39.getErrorPages();
        undertowEmbeddedServletContainerFactory39.useForwardHeaders = false;
        java.lang.String str49 = undertowEmbeddedServletContainerFactory39.getContextPath();
        undertowEmbeddedServletContainerFactory39.accessLogEnabled = false;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int53 = undertowEmbeddedServletContainerFactory52.getSessionTimeout();
        boolean boolean54 = undertowEmbeddedServletContainerFactory52.isPersistSession();
        java.io.File file55 = undertowEmbeddedServletContainerFactory52.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList56 = undertowEmbeddedServletContainerFactory52.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.Compression compression57 = null;
        undertowEmbeddedServletContainerFactory52.setCompression(compression57);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory60.ioThreads = 1;
        undertowEmbeddedServletContainerFactory60.setPort(0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer65 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray66 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer65 };
        undertowEmbeddedServletContainerFactory60.addBuilderCustomizers(undertowBuilderCustomizerArray66);
        undertowEmbeddedServletContainerFactory52.addBuilderCustomizers(undertowBuilderCustomizerArray66);
        undertowEmbeddedServletContainerFactory39.addBuilderCustomizers(undertowBuilderCustomizerArray66);
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray66);
        org.springframework.boot.context.embedded.Ssl ssl71 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl71);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8080 + "'", int11 == 8080);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(ssl24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1800 + "'", int28 == 1800);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(errorPageArray34);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1800 + "'", int40 == 1800);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(errorPageSet46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1800 + "'", int53 == 1800);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList56);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray66);
    }

    @Test
    public void test13464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13464");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory0.getSsl();
        boolean boolean7 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.workerThreads = 10;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection12 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory13.setJspServletClassName("");
        int int16 = undertowEmbeddedServletContainerFactory13.getSessionTimeout();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo17 = null;
        undertowEmbeddedServletContainerFactory13.configureErrorPages(deploymentInfo17);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        java.net.InetAddress inetAddress20 = null;
        undertowEmbeddedServletContainerFactory13.setAddress(inetAddress20);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int23 = undertowEmbeddedServletContainerFactory22.getSessionTimeout();
        boolean boolean24 = undertowEmbeddedServletContainerFactory22.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList25 = undertowEmbeddedServletContainerFactory22.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet26 = undertowEmbeddedServletContainerFactory22.getJspServlet();
        undertowEmbeddedServletContainerFactory22.directBuffers = true;
        java.lang.Integer int29 = undertowEmbeddedServletContainerFactory22.bufferSize;
        java.io.File file30 = null;
        undertowEmbeddedServletContainerFactory22.setDocumentRoot(file30);
        boolean boolean32 = undertowEmbeddedServletContainerFactory22.isPersistSession();
        undertowEmbeddedServletContainerFactory22.setWorkerThreads((java.lang.Integer) 8080);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int36 = undertowEmbeddedServletContainerFactory35.getPort();
        java.lang.Integer int37 = undertowEmbeddedServletContainerFactory35.bufferSize;
        java.io.File file38 = null;
        undertowEmbeddedServletContainerFactory35.setSessionStoreDir(file38);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int41 = undertowEmbeddedServletContainerFactory40.getSessionTimeout();
        boolean boolean42 = undertowEmbeddedServletContainerFactory40.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList43 = undertowEmbeddedServletContainerFactory40.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet44 = undertowEmbeddedServletContainerFactory40.getJspServlet();
        boolean boolean45 = undertowEmbeddedServletContainerFactory40.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet46 = undertowEmbeddedServletContainerFactory40.getErrorPages();
        undertowEmbeddedServletContainerFactory35.setErrorPages(errorPageSet46);
        undertowEmbeddedServletContainerFactory35.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList50 = undertowEmbeddedServletContainerFactory35.builderCustomizers;
        undertowEmbeddedServletContainerFactory22.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList50);
        undertowEmbeddedServletContainerFactory22.buffersPerRegion = 100;
        io.undertow.Undertow.Builder builder55 = undertowEmbeddedServletContainerFactory22.createBuilder((int) '#');
        io.undertow.servlet.api.DeploymentManager deploymentManager56 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer58 = undertowEmbeddedServletContainerFactory13.getUndertowEmbeddedServletContainer(builder55, deploymentManager56, 0);
        io.undertow.servlet.api.DeploymentManager deploymentManager59 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer61 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder55, deploymentManager59, 10);
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray62 = undertowEmbeddedServletContainerFactory0.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1800 + "'", int16 == 1800);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1800 + "'", int23 == 1800);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList25);
        org.junit.Assert.assertNotNull(jspServlet26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8080 + "'", int36 == 8080);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1800 + "'", int41 == 1800);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList43);
        org.junit.Assert.assertNotNull(jspServlet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(errorPageSet46);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList50);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer58);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer61);
    }

    @Test
    public void test13465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13465");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        java.lang.String str7 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList11 = undertowEmbeddedServletContainerFactory8.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet12 = undertowEmbeddedServletContainerFactory8.getJspServlet();
        boolean boolean13 = undertowEmbeddedServletContainerFactory8.useForwardHeaders;
        java.net.InetAddress inetAddress14 = undertowEmbeddedServletContainerFactory8.getAddress();
        undertowEmbeddedServletContainerFactory8.setAccessLogPattern("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = undertowEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader21 = undertowEmbeddedServletContainerFactory19.resourceLoader;
        undertowEmbeddedServletContainerFactory19.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int25 = undertowEmbeddedServletContainerFactory24.getSessionTimeout();
        boolean boolean26 = undertowEmbeddedServletContainerFactory24.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList27 = undertowEmbeddedServletContainerFactory24.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet28 = undertowEmbeddedServletContainerFactory24.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int30 = undertowEmbeddedServletContainerFactory29.getSessionTimeout();
        boolean boolean31 = undertowEmbeddedServletContainerFactory29.isPersistSession();
        undertowEmbeddedServletContainerFactory29.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder35 = undertowEmbeddedServletContainerFactory29.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager36 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer38 = undertowEmbeddedServletContainerFactory24.getUndertowEmbeddedServletContainer(builder35, deploymentManager36, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager39 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer41 = undertowEmbeddedServletContainerFactory19.getUndertowEmbeddedServletContainer(builder35, deploymentManager39, (int) ' ');
        boolean boolean42 = undertowEmbeddedServletContainerFactory19.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory19.setPort((-1));
        java.lang.Integer int45 = undertowEmbeddedServletContainerFactory19.bufferSize;
        io.undertow.Undertow.Builder builder47 = undertowEmbeddedServletContainerFactory19.createBuilder(0);
        io.undertow.servlet.api.DeploymentManager deploymentManager48 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer50 = undertowEmbeddedServletContainerFactory8.getUndertowEmbeddedServletContainer(builder47, deploymentManager48, (int) '4');
        java.lang.Boolean boolean51 = undertowEmbeddedServletContainerFactory8.directBuffers;
        io.undertow.Undertow.Builder builder53 = undertowEmbeddedServletContainerFactory8.createBuilder((int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager54 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer56 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder53, deploymentManager54, (int) '#');
        java.io.File file57 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file57);
        java.lang.String str59 = undertowEmbeddedServletContainerFactory0.getContextPath();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        org.springframework.boot.context.embedded.Compression compression62 = undertowEmbeddedServletContainerFactory0.getCompression();
        org.springframework.boot.context.embedded.ErrorPage errorPage63 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage64 = undertowEmbeddedServletContainerFactory0.getUndertowErrorPage(errorPage63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList11);
        org.junit.Assert.assertNotNull(jspServlet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(inetAddress14);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNull(resourceLoader21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1800 + "'", int25 == 1800);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList27);
        org.junit.Assert.assertNotNull(jspServlet28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1800 + "'", int30 == 1800);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer38);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNull(compression62);
    }

    @Test
    public void test13466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13466");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        jarResourceManager0.jarPath = "hi!";
        jarResourceManager0.close();
        java.lang.String str7 = jarResourceManager0.jarPath;
        jarResourceManager0.jarPath = "hi!";
        jarResourceManager0.close();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "hi!";
        boolean boolean14 = jarResourceManager0.isResourceChangeListenerSupported();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener15 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourceManager0.removeResourceChangeListener(resourceChangeListener15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test13467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13467");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        io.undertow.Undertow.Builder builder8 = undertowEmbeddedServletContainerFactory0.createBuilder(10);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str11 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        undertowEmbeddedServletContainerFactory12.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray23 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory21.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray23);
        undertowEmbeddedServletContainerFactory12.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray23);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray23);
        java.net.InetAddress inetAddress27 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress27);
        org.springframework.boot.context.embedded.Compression compression29 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression29);
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        org.springframework.core.io.ResourceLoader resourceLoader33 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader33);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8080 + "'", int22 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray23);
    }

    @Test
    public void test13468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13468");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.Compression compression4 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression4);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = true;
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file10);
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        boolean boolean16 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory0.bufferSize = 100;
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("0.0.0.0");
        java.net.InetAddress inetAddress21 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress21);
        java.lang.String str23 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test13469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13469");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader3);
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.io.File file9 = undertowEmbeddedServletContainerFactory6.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory6.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory6.getMimeMappings();
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory6.buffersPerRegion;
        io.undertow.Undertow.Builder builder14 = undertowEmbeddedServletContainerFactory6.createBuilder(10);
        io.undertow.servlet.api.DeploymentManager deploymentManager15 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer17 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder14, deploymentManager15, 1);
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = (-1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList22 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList23 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.Compression compression24 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression24);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList26 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        boolean boolean27 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList22);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList23);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test13470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13470");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file7);
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        org.springframework.core.io.ResourceLoader resourceLoader11 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer14 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap13);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray15 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer14 };
        initializer12.initializers = servletContextInitializerArray15;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int18 = undertowEmbeddedServletContainerFactory17.getPort();
        java.lang.Integer int19 = undertowEmbeddedServletContainerFactory17.bufferSize;
        java.io.File file20 = null;
        undertowEmbeddedServletContainerFactory17.setSessionStoreDir(file20);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer23 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap22);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray24 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer23 };
        undertowEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray24);
        initializer12.initializers = servletContextInitializerArray24;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray27 = initializer12.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray28 = initializer12.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int30 = undertowEmbeddedServletContainerFactory29.getSessionTimeout();
        boolean boolean31 = undertowEmbeddedServletContainerFactory29.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList32 = undertowEmbeddedServletContainerFactory29.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet33 = undertowEmbeddedServletContainerFactory29.getJspServlet();
        boolean boolean34 = undertowEmbeddedServletContainerFactory29.useForwardHeaders;
        org.springframework.boot.context.embedded.Ssl ssl35 = undertowEmbeddedServletContainerFactory29.getSsl();
        undertowEmbeddedServletContainerFactory29.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int40 = undertowEmbeddedServletContainerFactory39.getSessionTimeout();
        boolean boolean41 = undertowEmbeddedServletContainerFactory39.isPersistSession();
        java.io.File file42 = undertowEmbeddedServletContainerFactory39.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = undertowEmbeddedServletContainerFactory39.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings44 = undertowEmbeddedServletContainerFactory39.getMimeMappings();
        java.io.File file45 = undertowEmbeddedServletContainerFactory39.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int47 = undertowEmbeddedServletContainerFactory46.getPort();
        java.lang.Integer int48 = undertowEmbeddedServletContainerFactory46.bufferSize;
        java.io.File file49 = null;
        undertowEmbeddedServletContainerFactory46.setSessionStoreDir(file49);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer52 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap51);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray53 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer52 };
        undertowEmbeddedServletContainerFactory46.addInitializers(servletContextInitializerArray53);
        undertowEmbeddedServletContainerFactory39.addInitializers(servletContextInitializerArray53);
        initializer38.initializers = servletContextInitializerArray53;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer59 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap58);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray60 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer59 };
        initializer57.initializers = servletContextInitializerArray60;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray62 = initializer57.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int64 = undertowEmbeddedServletContainerFactory63.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer66 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap65);
        java.util.Map<java.lang.String, java.lang.String> strMap67 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer68 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap67);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer70 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap69);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer72 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap71);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray73 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer66, initParameterConfiguringServletContextInitializer68, initParameterConfiguringServletContextInitializer70, initParameterConfiguringServletContextInitializer72 };
        undertowEmbeddedServletContainerFactory63.addInitializers(servletContextInitializerArray73);
        initializer57.initializers = servletContextInitializerArray73;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray76 = initializer57.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray77 = initializer57.initializers;
        initializer38.initializers = servletContextInitializerArray77;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray79 = initializer38.initializers;
        undertowEmbeddedServletContainerFactory29.addInitializers(servletContextInitializerArray79);
        initializer12.initializers = servletContextInitializerArray79;
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray79);
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNull(resourceLoader11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8080 + "'", int18 == 8080);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(servletContextInitializerArray24);
        org.junit.Assert.assertNotNull(servletContextInitializerArray27);
        org.junit.Assert.assertNotNull(servletContextInitializerArray28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1800 + "'", int30 == 1800);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList32);
        org.junit.Assert.assertNotNull(jspServlet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(ssl35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1800 + "'", int40 == 1800);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNotNull(mimeMappings44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8080 + "'", int47 == 8080);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(servletContextInitializerArray53);
        org.junit.Assert.assertNotNull(servletContextInitializerArray60);
        org.junit.Assert.assertNotNull(servletContextInitializerArray62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1800 + "'", int64 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray73);
        org.junit.Assert.assertNotNull(servletContextInitializerArray76);
        org.junit.Assert.assertNotNull(servletContextInitializerArray77);
        org.junit.Assert.assertNotNull(servletContextInitializerArray79);
    }

    @Test
    public void test13471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13471");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        java.lang.String str26 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        java.lang.String str27 = undertowEmbeddedServletContainerFactory2.getContextPath();
        boolean boolean28 = undertowEmbeddedServletContainerFactory2.isPersistSession();
        int int29 = undertowEmbeddedServletContainerFactory2.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = undertowEmbeddedServletContainerFactory32.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader34 = undertowEmbeddedServletContainerFactory32.resourceLoader;
        java.lang.String str35 = undertowEmbeddedServletContainerFactory32.accessLogPattern;
        java.io.File file36 = null;
        undertowEmbeddedServletContainerFactory32.setDocumentRoot(file36);
        java.io.File file38 = null;
        undertowEmbeddedServletContainerFactory32.setAccessLogDirectory(file38);
        java.io.File file40 = null;
        undertowEmbeddedServletContainerFactory32.setDocumentRoot(file40);
        org.springframework.core.io.ResourceLoader resourceLoader42 = null;
        undertowEmbeddedServletContainerFactory32.setResourceLoader(resourceLoader42);
        org.springframework.boot.context.embedded.JspServlet jspServlet44 = undertowEmbeddedServletContainerFactory32.getJspServlet();
        undertowEmbeddedServletContainerFactory2.setJspServlet(jspServlet44);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNull(resourceLoader34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(jspServlet44);
    }

    @Test
    public void test13472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13472");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file5);
        org.springframework.core.io.ResourceLoader resourceLoader7 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        io.undertow.server.handlers.resource.ResourceManager resourceManager9 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        undertowEmbeddedServletContainerFactory0.setDisplayName("0.0.0.0");
        java.io.File file13 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(resourceLoader7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(resourceManager9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test13473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13473");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.net.InetAddress inetAddress6 = undertowEmbeddedServletContainerFactory0.getAddress();
        boolean boolean7 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        boolean boolean11 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test13474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13474");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = true;
        boolean boolean20 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.String str22 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        org.springframework.core.io.ResourceLoader resourceLoader23 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader23;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "0.0.0.0" + "'", str22, "0.0.0.0");
    }

    @Test
    public void test13475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13475");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        io.undertow.Undertow.Builder builder8 = undertowEmbeddedServletContainerFactory0.createBuilder(10);
        java.net.InetAddress inetAddress9 = undertowEmbeddedServletContainerFactory0.getAddress();
        int int10 = undertowEmbeddedServletContainerFactory0.getPort();
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        java.io.File file13 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file13;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(inetAddress9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 8080 + "'", int10 == 8080);
    }

    @Test
    public void test13476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13476");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory2.setWorkerThreads((java.lang.Integer) 1);
        java.io.File file5 = undertowEmbeddedServletContainerFactory2.getSessionStoreDir();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList6 = undertowEmbeddedServletContainerFactory2.deploymentInfoCustomizers;
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList6);
    }

    @Test
    public void test13477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13477");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory0.directBuffers;
        org.springframework.boot.context.embedded.Compression compression14 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression14);
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        java.lang.Integer int18 = undertowEmbeddedServletContainerFactory0.bufferSize;
        boolean boolean19 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.lang.ClassLoader classLoader20 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(classLoader20);
    }

    @Test
    public void test13478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13478");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory0.workerThreads = 1800;
        io.undertow.server.handlers.resource.ResourceManager resourceManager8 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file9);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(resourceManager8);
    }

    @Test
    public void test13479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13479");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.io.File file4 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.accessLogEnabled;
        undertowEmbeddedServletContainerFactory1.bufferSize = 1800;
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = (-1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        java.io.File file15 = undertowEmbeddedServletContainerFactory12.accessLogDirectory;
        undertowEmbeddedServletContainerFactory12.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        undertowEmbeddedServletContainerFactory12.accessLogPattern = "";
        org.springframework.boot.context.embedded.Ssl ssl22 = null;
        undertowEmbeddedServletContainerFactory12.setSsl(ssl22);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = undertowEmbeddedServletContainerFactory12.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int26 = undertowEmbeddedServletContainerFactory25.getPort();
        java.lang.Integer int27 = undertowEmbeddedServletContainerFactory25.bufferSize;
        boolean boolean28 = undertowEmbeddedServletContainerFactory25.accessLogEnabled;
        java.lang.String str29 = undertowEmbeddedServletContainerFactory25.accessLogPattern;
        org.springframework.core.io.ResourceLoader resourceLoader30 = null;
        undertowEmbeddedServletContainerFactory25.setResourceLoader(resourceLoader30);
        boolean boolean32 = undertowEmbeddedServletContainerFactory25.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int34 = undertowEmbeddedServletContainerFactory33.getSessionTimeout();
        boolean boolean35 = undertowEmbeddedServletContainerFactory33.isPersistSession();
        undertowEmbeddedServletContainerFactory33.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl38 = null;
        undertowEmbeddedServletContainerFactory33.setSsl(ssl38);
        org.springframework.boot.context.embedded.JspServlet jspServlet40 = undertowEmbeddedServletContainerFactory33.getJspServlet();
        undertowEmbeddedServletContainerFactory25.setJspServlet(jspServlet40);
        undertowEmbeddedServletContainerFactory12.setJspServlet(jspServlet40);
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet40);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(errorPageSet24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 8080 + "'", int26 == 8080);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1800 + "'", int34 == 1800);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(jspServlet40);
    }

    @Test
    public void test13480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13480");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        boolean boolean2 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean3 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean4 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str5 = jarResourceManager0.jarPath;
        java.lang.String str6 = jarResourceManager0.jarPath;
        boolean boolean7 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.jarPath = "";
        java.lang.String str10 = jarResourceManager0.jarPath;
        jarResourceManager0.jarPath = "";
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test13481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13481");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        boolean boolean4 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet5 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(errorPageSet5);
    }

    @Test
    public void test13482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13482");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        undertowEmbeddedServletContainerFactory5.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory5.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray12 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory5.addErrorPages(errorPageArray12);
        undertowEmbeddedServletContainerFactory2.addErrorPages(errorPageArray12);
        undertowEmbeddedServletContainerFactory2.accessLogEnabled = true;
        undertowEmbeddedServletContainerFactory2.accessLogPattern = "";
        java.lang.String str19 = undertowEmbeddedServletContainerFactory2.getDisplayName();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(errorPageArray12);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test13483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13483");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        java.lang.Boolean boolean4 = undertowEmbeddedServletContainerFactory2.directBuffers;
        undertowEmbeddedServletContainerFactory2.setDisplayName("");
        undertowEmbeddedServletContainerFactory2.accessLogEnabled = true;
        java.net.InetAddress inetAddress9 = undertowEmbeddedServletContainerFactory2.getAddress();
        org.xnio.XnioWorker xnioWorker10 = undertowEmbeddedServletContainerFactory2.createWorker();
        java.io.File file11 = undertowEmbeddedServletContainerFactory2.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory2.accessLogEnabled = true;
        java.io.File file14 = undertowEmbeddedServletContainerFactory2.getSessionStoreDir();
        io.undertow.server.handlers.resource.ResourceManager resourceManager15 = undertowEmbeddedServletContainerFactory2.getDocumentRootResourceManager();
        java.io.File file16 = undertowEmbeddedServletContainerFactory2.getDocumentRoot();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNull(inetAddress9);
        org.junit.Assert.assertNotNull(xnioWorker10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(resourceManager15);
        org.junit.Assert.assertNull(file16);
    }

    @Test
    public void test13484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13484");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPort(0);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        org.springframework.boot.context.embedded.JspServlet jspServlet7 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection8 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(jspServlet7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(int10);
    }

    @Test
    public void test13485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13485");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.xnio.XnioWorker xnioWorker2 = undertowEmbeddedServletContainerFactory1.createWorker();
        int int3 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file4);
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory1.bufferSize;
        org.junit.Assert.assertNotNull(xnioWorker2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1800 + "'", int3 == 1800);
        org.junit.Assert.assertNull(int6);
    }

    @Test
    public void test13486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13486");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        org.springframework.boot.context.embedded.Ssl ssl7 = undertowEmbeddedServletContainerFactory0.getSsl();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file8);
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 1);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo12 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.configureMimeMappings(deploymentInfo12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(ssl7);
    }

    @Test
    public void test13487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13487");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int5 = undertowEmbeddedServletContainerFactory4.getSessionTimeout();
        boolean boolean6 = undertowEmbeddedServletContainerFactory4.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList7 = undertowEmbeddedServletContainerFactory4.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet8 = undertowEmbeddedServletContainerFactory4.getJspServlet();
        boolean boolean9 = undertowEmbeddedServletContainerFactory4.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = undertowEmbeddedServletContainerFactory4.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet10);
        int int12 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.Integer int13 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.net.InetAddress inetAddress14 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress14);
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 35);
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1800 + "'", int5 == 1800);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList7);
        org.junit.Assert.assertNotNull(jspServlet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertNull(int13);
    }

    @Test
    public void test13488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13488");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.lang.ClassLoader classLoader4 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "";
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        boolean boolean8 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory10.setWorkerThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder14 = undertowEmbeddedServletContainerFactory10.createBuilder((int) (byte) -1);
        io.undertow.server.handlers.resource.ResourceManager resourceManager15 = undertowEmbeddedServletContainerFactory10.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        java.io.File file19 = undertowEmbeddedServletContainerFactory16.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = undertowEmbeddedServletContainerFactory16.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory16.getMimeMappings();
        java.lang.Integer int22 = undertowEmbeddedServletContainerFactory16.buffersPerRegion;
        undertowEmbeddedServletContainerFactory16.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int26 = undertowEmbeddedServletContainerFactory25.getSessionTimeout();
        boolean boolean27 = undertowEmbeddedServletContainerFactory25.isPersistSession();
        undertowEmbeddedServletContainerFactory25.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder31 = undertowEmbeddedServletContainerFactory25.createBuilder((-1));
        undertowEmbeddedServletContainerFactory25.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int35 = undertowEmbeddedServletContainerFactory34.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray36 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory34.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        undertowEmbeddedServletContainerFactory25.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        undertowEmbeddedServletContainerFactory16.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        undertowEmbeddedServletContainerFactory10.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        java.lang.String str42 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(resourceManager15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1800 + "'", int26 == 1800);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 8080 + "'", int35 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray36);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "0.0.0.0" + "'", str42, "0.0.0.0");
    }

    @Test
    public void test13489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13489");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(true);
        undertowEmbeddedServletContainerFactory2.setJspServletClassName("");
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory2.setSessionStoreDir(file7);
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory2.setSessionStoreDir(file9);
        org.springframework.boot.context.embedded.Ssl ssl11 = null;
        undertowEmbeddedServletContainerFactory2.setSsl(ssl11);
        undertowEmbeddedServletContainerFactory2.setRegisterDefaultServlet(true);
    }

    @Test
    public void test13490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13490");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        java.io.File file7 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.Ssl ssl8 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl8);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(mimeMappings12);
    }

    @Test
    public void test13491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13491");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
    }

    @Test
    public void test13492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13492");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getSessionTimeout();
        boolean boolean12 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = undertowEmbeddedServletContainerFactory10.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList13;
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file15;
        boolean boolean17 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        boolean boolean18 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int20 = undertowEmbeddedServletContainerFactory19.getPort();
        java.lang.Integer int21 = undertowEmbeddedServletContainerFactory19.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader22 = null;
        undertowEmbeddedServletContainerFactory19.setResourceLoader(resourceLoader22);
        java.lang.Integer int24 = undertowEmbeddedServletContainerFactory19.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int26 = undertowEmbeddedServletContainerFactory25.getSessionTimeout();
        boolean boolean27 = undertowEmbeddedServletContainerFactory25.isPersistSession();
        java.io.File file28 = undertowEmbeddedServletContainerFactory25.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = undertowEmbeddedServletContainerFactory25.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = undertowEmbeddedServletContainerFactory25.getMimeMappings();
        java.lang.Integer int31 = undertowEmbeddedServletContainerFactory25.buffersPerRegion;
        io.undertow.Undertow.Builder builder33 = undertowEmbeddedServletContainerFactory25.createBuilder(10);
        io.undertow.servlet.api.DeploymentManager deploymentManager34 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer36 = undertowEmbeddedServletContainerFactory19.getUndertowEmbeddedServletContainer(builder33, deploymentManager34, 1);
        undertowEmbeddedServletContainerFactory19.setJspServletClassName("0.0.0.0");
        java.lang.Integer int39 = undertowEmbeddedServletContainerFactory19.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int41 = undertowEmbeddedServletContainerFactory40.getSessionTimeout();
        boolean boolean42 = undertowEmbeddedServletContainerFactory40.isPersistSession();
        undertowEmbeddedServletContainerFactory40.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory40.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray47 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory40.addErrorPages(errorPageArray47);
        undertowEmbeddedServletContainerFactory19.addErrorPages(errorPageArray47);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray47);
        org.xnio.XnioWorker xnioWorker51 = undertowEmbeddedServletContainerFactory0.createWorker();
        undertowEmbeddedServletContainerFactory0.setPort((int) 'a');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1800 + "'", int11 == 1800);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8080 + "'", int20 == 8080);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1800 + "'", int26 == 1800);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer36);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1800 + "'", int41 == 1800);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(errorPageArray47);
        org.junit.Assert.assertNotNull(xnioWorker51);
    }

    @Test
    public void test13493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13493");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        boolean boolean2 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean3 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean4 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str5 = jarResourceManager0.jarPath;
        java.lang.String str6 = jarResourceManager0.jarPath;
        java.lang.String str7 = jarResourceManager0.jarPath;
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "hi!";
        java.lang.String str11 = jarResourceManager0.jarPath;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test13494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13494");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.jarPath = "hi!";
        boolean boolean3 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.close();
        jarResourceManager0.close();
        boolean boolean6 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.jarPath = "";
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test13495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13495");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file5);
        org.springframework.core.io.ResourceLoader resourceLoader7 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList12 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.lang.Integer int13 = undertowEmbeddedServletContainerFactory0.ioThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = undertowEmbeddedServletContainerFactory18.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader20 = undertowEmbeddedServletContainerFactory18.resourceLoader;
        undertowEmbeddedServletContainerFactory18.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int24 = undertowEmbeddedServletContainerFactory23.getSessionTimeout();
        boolean boolean25 = undertowEmbeddedServletContainerFactory23.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList26 = undertowEmbeddedServletContainerFactory23.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet27 = undertowEmbeddedServletContainerFactory23.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        undertowEmbeddedServletContainerFactory28.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder34 = undertowEmbeddedServletContainerFactory28.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager35 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer37 = undertowEmbeddedServletContainerFactory23.getUndertowEmbeddedServletContainer(builder34, deploymentManager35, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager38 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer40 = undertowEmbeddedServletContainerFactory18.getUndertowEmbeddedServletContainer(builder34, deploymentManager38, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager41 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer43 = undertowEmbeddedServletContainerFactory14.getUndertowEmbeddedServletContainer(builder34, deploymentManager41, (int) (short) -1);
        undertowEmbeddedServletContainerFactory14.setDisplayName("");
        java.lang.Integer int46 = undertowEmbeddedServletContainerFactory14.bufferSize;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList47 = undertowEmbeddedServletContainerFactory14.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList47;
        io.undertow.server.HttpHandler httpHandler49 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.accesslog.AccessLogHandler accessLogHandler50 = undertowEmbeddedServletContainerFactory0.createAccessLogHandler(httpHandler49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Access log directory is not set");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(resourceLoader7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8080 + "'", int15 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNull(resourceLoader20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1800 + "'", int24 == 1800);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList26);
        org.junit.Assert.assertNotNull(jspServlet27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer37);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer40);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer43);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList47);
    }

    @Test
    public void test13496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13496");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection5 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        undertowEmbeddedServletContainerFactory6.setPersistSession(false);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList13 = undertowEmbeddedServletContainerFactory6.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory6.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList19 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        undertowEmbeddedServletContainerFactory6.builderCustomizers = undertowBuilderCustomizerList19;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList19;
        undertowEmbeddedServletContainerFactory0.setPort((int) ' ');
        org.springframework.boot.context.embedded.Ssl ssl24 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl24);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean28 = undertowEmbeddedServletContainerFactory27.isAccessLogEnabled();
        java.lang.Integer int29 = undertowEmbeddedServletContainerFactory27.bufferSize;
        undertowEmbeddedServletContainerFactory27.setJspServletClassName("0.0.0.0");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int33 = undertowEmbeddedServletContainerFactory32.getSessionTimeout();
        boolean boolean34 = undertowEmbeddedServletContainerFactory32.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList35 = undertowEmbeddedServletContainerFactory32.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet36 = undertowEmbeddedServletContainerFactory32.getJspServlet();
        undertowEmbeddedServletContainerFactory32.directBuffers = true;
        java.io.File file39 = null;
        undertowEmbeddedServletContainerFactory32.setDocumentRoot(file39);
        undertowEmbeddedServletContainerFactory32.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray43 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory32.addBuilderCustomizers(undertowBuilderCustomizerArray43);
        undertowEmbeddedServletContainerFactory27.addBuilderCustomizers(undertowBuilderCustomizerArray43);
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray43);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList19);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1800 + "'", int33 == 1800);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList35);
        org.junit.Assert.assertNotNull(jspServlet36);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray43);
    }

    @Test
    public void test13497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13497");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        io.undertow.server.handlers.resource.ResourceManager resourceManager7 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        java.io.File file11 = undertowEmbeddedServletContainerFactory8.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = undertowEmbeddedServletContainerFactory14.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet18 = undertowEmbeddedServletContainerFactory14.getJspServlet();
        undertowEmbeddedServletContainerFactory8.setJspServlet(jspServlet18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList22 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList22, undertowBuilderCustomizerArray21);
        undertowEmbeddedServletContainerFactory20.builderCustomizers = undertowBuilderCustomizerList22;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection25 = undertowEmbeddedServletContainerFactory20.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory8.setBuilderCustomizers(undertowBuilderCustomizerCollection25);
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection25);
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection30 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        io.undertow.server.handlers.resource.ResourceManager resourceManager31 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        java.io.File file32 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file32);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(resourceManager7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList17);
        org.junit.Assert.assertNotNull(jspServlet18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection25);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection30);
        org.junit.Assert.assertNotNull(resourceManager31);
    }

    @Test
    public void test13498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13498");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file5);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file8);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getSessionTimeout();
        boolean boolean12 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        undertowEmbeddedServletContainerFactory10.setPersistSession(false);
        undertowEmbeddedServletContainerFactory10.setUseForwardHeaders(true);
        io.undertow.server.handlers.resource.ResourceManager resourceManager17 = undertowEmbeddedServletContainerFactory10.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getSessionTimeout();
        boolean boolean20 = undertowEmbeddedServletContainerFactory18.isPersistSession();
        java.io.File file21 = undertowEmbeddedServletContainerFactory18.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = undertowEmbeddedServletContainerFactory18.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = undertowEmbeddedServletContainerFactory18.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int25 = undertowEmbeddedServletContainerFactory24.getSessionTimeout();
        boolean boolean26 = undertowEmbeddedServletContainerFactory24.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList27 = undertowEmbeddedServletContainerFactory24.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet28 = undertowEmbeddedServletContainerFactory24.getJspServlet();
        undertowEmbeddedServletContainerFactory18.setJspServlet(jspServlet28);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray31 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList32 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList32, undertowBuilderCustomizerArray31);
        undertowEmbeddedServletContainerFactory30.builderCustomizers = undertowBuilderCustomizerList32;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection35 = undertowEmbeddedServletContainerFactory30.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory18.setBuilderCustomizers(undertowBuilderCustomizerCollection35);
        undertowEmbeddedServletContainerFactory10.setBuilderCustomizers(undertowBuilderCustomizerCollection35);
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection35);
        java.lang.Integer int39 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int41 = undertowEmbeddedServletContainerFactory40.getSessionTimeout();
        boolean boolean42 = undertowEmbeddedServletContainerFactory40.isPersistSession();
        undertowEmbeddedServletContainerFactory40.setPersistSession(false);
        undertowEmbeddedServletContainerFactory40.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int48 = undertowEmbeddedServletContainerFactory47.getSessionTimeout();
        boolean boolean49 = undertowEmbeddedServletContainerFactory47.isPersistSession();
        java.io.File file50 = undertowEmbeddedServletContainerFactory47.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList51 = undertowEmbeddedServletContainerFactory47.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory40.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList51;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList51;
        boolean boolean54 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("0.0.0.0");
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1800 + "'", int11 == 1800);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(resourceManager17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1800 + "'", int25 == 1800);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList27);
        org.junit.Assert.assertNotNull(jspServlet28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection35);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1800 + "'", int41 == 1800);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1800 + "'", int48 == 1800);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test13499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13499");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        boolean boolean9 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        boolean boolean11 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        org.springframework.core.io.ResourceLoader resourceLoader12 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader12;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet16 = undertowEmbeddedServletContainerFactory15.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet16);
        java.io.File file18 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file18;
        org.xnio.XnioWorker xnioWorker20 = undertowEmbeddedServletContainerFactory0.createWorker();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(errorPageSet16);
        org.junit.Assert.assertNotNull(xnioWorker20);
        org.junit.Assert.assertNotNull(mimeMappings21);
    }

    @Test
    public void test13500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13500");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 0);
        java.lang.String str2 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int5 = undertowEmbeddedServletContainerFactory4.getSessionTimeout();
        boolean boolean6 = undertowEmbeddedServletContainerFactory4.isPersistSession();
        undertowEmbeddedServletContainerFactory4.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory4.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        java.io.File file14 = undertowEmbeddedServletContainerFactory11.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList15 = undertowEmbeddedServletContainerFactory11.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory4.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList15;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int18 = undertowEmbeddedServletContainerFactory17.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = undertowEmbeddedServletContainerFactory21.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader23 = undertowEmbeddedServletContainerFactory21.resourceLoader;
        undertowEmbeddedServletContainerFactory21.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int27 = undertowEmbeddedServletContainerFactory26.getSessionTimeout();
        boolean boolean28 = undertowEmbeddedServletContainerFactory26.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList29 = undertowEmbeddedServletContainerFactory26.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet30 = undertowEmbeddedServletContainerFactory26.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int32 = undertowEmbeddedServletContainerFactory31.getSessionTimeout();
        boolean boolean33 = undertowEmbeddedServletContainerFactory31.isPersistSession();
        undertowEmbeddedServletContainerFactory31.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder37 = undertowEmbeddedServletContainerFactory31.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager38 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer40 = undertowEmbeddedServletContainerFactory26.getUndertowEmbeddedServletContainer(builder37, deploymentManager38, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager41 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer43 = undertowEmbeddedServletContainerFactory21.getUndertowEmbeddedServletContainer(builder37, deploymentManager41, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager44 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer46 = undertowEmbeddedServletContainerFactory17.getUndertowEmbeddedServletContainer(builder37, deploymentManager44, (int) (short) -1);
        io.undertow.servlet.api.DeploymentManager deploymentManager47 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer49 = undertowEmbeddedServletContainerFactory4.getUndertowEmbeddedServletContainer(builder37, deploymentManager47, 10);
        org.springframework.core.io.ResourceLoader resourceLoader50 = null;
        undertowEmbeddedServletContainerFactory4.setResourceLoader(resourceLoader50);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int53 = undertowEmbeddedServletContainerFactory52.getSessionTimeout();
        boolean boolean54 = undertowEmbeddedServletContainerFactory52.isPersistSession();
        undertowEmbeddedServletContainerFactory52.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory52.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory52.setDisplayName("hi!");
        boolean boolean61 = undertowEmbeddedServletContainerFactory52.isRegisterDefaultServlet();
        boolean boolean62 = undertowEmbeddedServletContainerFactory52.isPersistSession();
        boolean boolean63 = undertowEmbeddedServletContainerFactory52.isAccessLogEnabled();
        org.springframework.core.io.ResourceLoader resourceLoader64 = null;
        undertowEmbeddedServletContainerFactory52.resourceLoader = resourceLoader64;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection66 = undertowEmbeddedServletContainerFactory52.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory4.setBuilderCustomizers(undertowBuilderCustomizerCollection66);
        undertowEmbeddedServletContainerFactory1.setBuilderCustomizers(undertowBuilderCustomizerCollection66);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1800);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0.0.0.0" + "'", str2, "0.0.0.0");
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1800 + "'", int5 == 1800);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8080 + "'", int18 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNull(resourceLoader23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1800 + "'", int27 == 1800);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList29);
        org.junit.Assert.assertNotNull(jspServlet30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1800 + "'", int32 == 1800);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer40);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer43);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer46);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1800 + "'", int53 == 1800);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection66);
    }
}

