import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest28 {

    public static boolean debug = false;

    @Test
    public void test14001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14001");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        java.util.Map<java.lang.String, java.lang.String> strMap5 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer6 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap5);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray7 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer6 };
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray7);
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader9;
        java.io.File file11 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file11);
        java.lang.Integer int13 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        int int14 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.Integer int15 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray7);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1800 + "'", int14 == 1800);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test14002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14002");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        boolean boolean4 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.jarPath = "";
        java.lang.String str7 = jarResourceManager0.jarPath;
        boolean boolean8 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.close();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        java.lang.String str13 = jarResourceManager0.jarPath;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test14003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14003");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        io.undertow.server.handlers.resource.ResourceManager resourceManager7 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        java.io.File file11 = undertowEmbeddedServletContainerFactory8.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = undertowEmbeddedServletContainerFactory14.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet18 = undertowEmbeddedServletContainerFactory14.getJspServlet();
        undertowEmbeddedServletContainerFactory8.setJspServlet(jspServlet18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList22 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList22, undertowBuilderCustomizerArray21);
        undertowEmbeddedServletContainerFactory20.builderCustomizers = undertowBuilderCustomizerList22;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection25 = undertowEmbeddedServletContainerFactory20.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory8.setBuilderCustomizers(undertowBuilderCustomizerCollection25);
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection25);
        java.io.File file28 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file28);
        org.springframework.core.io.ResourceLoader resourceLoader30 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader30);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 10);
        java.lang.String str34 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        org.springframework.boot.context.embedded.JspServlet jspServlet35 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(resourceManager7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList17);
        org.junit.Assert.assertNotNull(jspServlet18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection25);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(jspServlet35);
    }

    @Test
    public void test14004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14004");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        java.lang.String str5 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        undertowEmbeddedServletContainerFactory11.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder17 = undertowEmbeddedServletContainerFactory11.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager18 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer20 = undertowEmbeddedServletContainerFactory6.getUndertowEmbeddedServletContainer(builder17, deploymentManager18, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer23 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder17, deploymentManager21, (int) (byte) 100);
        java.net.InetAddress inetAddress24 = undertowEmbeddedServletContainerFactory2.getAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet25 = undertowEmbeddedServletContainerFactory2.getErrorPages();
        undertowEmbeddedServletContainerFactory2.setPort((int) (short) -1);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer20);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer23);
        org.junit.Assert.assertNull(inetAddress24);
        org.junit.Assert.assertNotNull(errorPageSet25);
    }

    @Test
    public void test14005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14005");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory0.getAddress();
        java.net.InetAddress inetAddress19 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress19);
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(8080);
        java.io.File file27 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        java.net.InetAddress inetAddress28 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress28);
        org.springframework.boot.context.embedded.Compression compression30 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression30);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = (-1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertNull(file27);
    }

    @Test
    public void test14006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14006");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory0.getSsl();
        undertowEmbeddedServletContainerFactory0.setPort((int) (byte) 10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(ssl5);
    }

    @Test
    public void test14007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14007");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.net.InetAddress inetAddress9 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress9);
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        io.undertow.servlet.api.DeploymentInfo deploymentInfo13 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo13);
        java.net.InetAddress inetAddress15 = undertowEmbeddedServletContainerFactory0.getAddress();
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        undertowEmbeddedServletContainerFactory0.setDisplayName("");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(inetAddress15);
    }

    @Test
    public void test14008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14008");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPort(0);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        org.springframework.boot.context.embedded.JspServlet jspServlet7 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        undertowEmbeddedServletContainerFactory8.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory8.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory8.setDisplayName("hi!");
        boolean boolean17 = undertowEmbeddedServletContainerFactory8.isRegisterDefaultServlet();
        java.io.File file18 = null;
        undertowEmbeddedServletContainerFactory8.accessLogDirectory = file18;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = undertowEmbeddedServletContainerFactory8.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet20);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory22.setJspServletClassName("");
        int int25 = undertowEmbeddedServletContainerFactory22.getSessionTimeout();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo26 = null;
        undertowEmbeddedServletContainerFactory22.configureErrorPages(deploymentInfo26);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = undertowEmbeddedServletContainerFactory22.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings28);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(jspServlet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(errorPageSet20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1800 + "'", int25 == 1800);
        org.junit.Assert.assertNotNull(mimeMappings28);
    }

    @Test
    public void test14009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14009");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        undertowEmbeddedServletContainerFactory8.setIoThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder14 = undertowEmbeddedServletContainerFactory8.createBuilder((int) (byte) 1);
        io.undertow.servlet.api.DeploymentManager deploymentManager15 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer17 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder14, deploymentManager15, (int) (byte) 10);
        org.springframework.boot.context.embedded.Ssl ssl18 = undertowEmbeddedServletContainerFactory0.getSsl();
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("0.0.0.0");
        java.io.File file21 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.io.File file22 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList23 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int25 = undertowEmbeddedServletContainerFactory24.getSessionTimeout();
        boolean boolean26 = undertowEmbeddedServletContainerFactory24.isPersistSession();
        java.io.File file27 = undertowEmbeddedServletContainerFactory24.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings28);
        java.io.File file30 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file30);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer17);
        org.junit.Assert.assertNull(ssl18);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1800 + "'", int25 == 1800);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(mimeMappings28);
    }

    @Test
    public void test14010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14010");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        int int6 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file8;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("0.0.0.0");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test14011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14011");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.server.handlers.resource.ResourceManager resourceManager3 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.Compression compression4 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression4);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        java.lang.ClassLoader classLoader10 = undertowEmbeddedServletContainerFactory6.getServletClassLoader();
        java.io.File file11 = undertowEmbeddedServletContainerFactory6.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory6.setAccessLogEnabled(true);
        boolean boolean14 = undertowEmbeddedServletContainerFactory6.accessLogEnabled;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int16 = undertowEmbeddedServletContainerFactory15.getSessionTimeout();
        boolean boolean17 = undertowEmbeddedServletContainerFactory15.isPersistSession();
        java.io.File file18 = undertowEmbeddedServletContainerFactory15.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList19 = undertowEmbeddedServletContainerFactory15.deploymentInfoCustomizers;
        int int20 = undertowEmbeddedServletContainerFactory15.getPort();
        undertowEmbeddedServletContainerFactory15.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int24 = undertowEmbeddedServletContainerFactory23.getSessionTimeout();
        boolean boolean25 = undertowEmbeddedServletContainerFactory23.isPersistSession();
        undertowEmbeddedServletContainerFactory23.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory23.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int31 = undertowEmbeddedServletContainerFactory30.getSessionTimeout();
        boolean boolean32 = undertowEmbeddedServletContainerFactory30.isPersistSession();
        undertowEmbeddedServletContainerFactory30.setPersistSession(false);
        undertowEmbeddedServletContainerFactory30.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList37 = undertowEmbeddedServletContainerFactory30.deploymentInfoCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList38 = undertowEmbeddedServletContainerFactory30.builderCustomizers;
        undertowEmbeddedServletContainerFactory23.builderCustomizers = undertowBuilderCustomizerList38;
        undertowEmbeddedServletContainerFactory23.workerThreads = 10;
        boolean boolean42 = undertowEmbeddedServletContainerFactory23.isAccessLogEnabled();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int44 = undertowEmbeddedServletContainerFactory43.getPort();
        java.lang.Integer int45 = undertowEmbeddedServletContainerFactory43.bufferSize;
        java.io.File file46 = null;
        undertowEmbeddedServletContainerFactory43.setSessionStoreDir(file46);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int49 = undertowEmbeddedServletContainerFactory48.getSessionTimeout();
        boolean boolean50 = undertowEmbeddedServletContainerFactory48.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList51 = undertowEmbeddedServletContainerFactory48.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet52 = undertowEmbeddedServletContainerFactory48.getJspServlet();
        boolean boolean53 = undertowEmbeddedServletContainerFactory48.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet54 = undertowEmbeddedServletContainerFactory48.getErrorPages();
        undertowEmbeddedServletContainerFactory43.setErrorPages(errorPageSet54);
        undertowEmbeddedServletContainerFactory23.setErrorPages(errorPageSet54);
        undertowEmbeddedServletContainerFactory15.setErrorPages(errorPageSet54);
        undertowEmbeddedServletContainerFactory6.setErrorPages(errorPageSet54);
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet54);
        org.junit.Assert.assertNotNull(resourceManager3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1800 + "'", int16 == 1800);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8080 + "'", int20 == 8080);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1800 + "'", int24 == 1800);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1800 + "'", int31 == 1800);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList37);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 8080 + "'", int44 == 8080);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1800 + "'", int49 == 1800);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList51);
        org.junit.Assert.assertNotNull(jspServlet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(errorPageSet54);
    }

    @Test
    public void test14012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14012");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.Compression compression4 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression4);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray7 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList8, undertowBuilderCustomizerArray7);
        undertowEmbeddedServletContainerFactory6.builderCustomizers = undertowBuilderCustomizerList8;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection11 = undertowEmbeddedServletContainerFactory6.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection11);
        java.io.File file13 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file13;
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("hi!");
        io.undertow.servlet.api.DeploymentInfo deploymentInfo17 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getSessionTimeout();
        boolean boolean20 = undertowEmbeddedServletContainerFactory18.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList21 = undertowEmbeddedServletContainerFactory18.builderCustomizers;
        org.springframework.boot.context.embedded.Compression compression22 = null;
        undertowEmbeddedServletContainerFactory18.setCompression(compression22);
        undertowEmbeddedServletContainerFactory18.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer28 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap27);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray29 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer28 };
        initializer26.initializers = servletContextInitializerArray29;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray31 = initializer26.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int33 = undertowEmbeddedServletContainerFactory32.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer35 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap34);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer37 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap36);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer39 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer41 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap40);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray42 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer35, initParameterConfiguringServletContextInitializer37, initParameterConfiguringServletContextInitializer39, initParameterConfiguringServletContextInitializer41 };
        undertowEmbeddedServletContainerFactory32.addInitializers(servletContextInitializerArray42);
        initializer26.initializers = servletContextInitializerArray42;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray45 = initializer26.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray46 = initializer26.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer49 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap48);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray50 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer49 };
        initializer47.initializers = servletContextInitializerArray50;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray52 = initializer47.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int55 = undertowEmbeddedServletContainerFactory54.getSessionTimeout();
        boolean boolean56 = undertowEmbeddedServletContainerFactory54.isPersistSession();
        java.io.File file57 = undertowEmbeddedServletContainerFactory54.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings58 = undertowEmbeddedServletContainerFactory54.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings59 = undertowEmbeddedServletContainerFactory54.getMimeMappings();
        java.io.File file60 = undertowEmbeddedServletContainerFactory54.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int62 = undertowEmbeddedServletContainerFactory61.getPort();
        java.lang.Integer int63 = undertowEmbeddedServletContainerFactory61.bufferSize;
        java.io.File file64 = null;
        undertowEmbeddedServletContainerFactory61.setSessionStoreDir(file64);
        java.util.Map<java.lang.String, java.lang.String> strMap66 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer67 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap66);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray68 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer67 };
        undertowEmbeddedServletContainerFactory61.addInitializers(servletContextInitializerArray68);
        undertowEmbeddedServletContainerFactory54.addInitializers(servletContextInitializerArray68);
        initializer53.initializers = servletContextInitializerArray68;
        initializer47.initializers = servletContextInitializerArray68;
        initializer26.initializers = servletContextInitializerArray68;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory74.accessLogEnabled = false;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer77 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap78 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer79 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap78);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray80 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer79 };
        initializer77.initializers = servletContextInitializerArray80;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray82 = initializer77.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray83 = initializer77.initializers;
        undertowEmbeddedServletContainerFactory74.addInitializers(servletContextInitializerArray83);
        initializer26.initializers = servletContextInitializerArray83;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray86 = initializer26.initializers;
        undertowEmbeddedServletContainerFactory18.addInitializers(servletContextInitializerArray86);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.registerServletContainerInitializerToDriveServletContextInitializers(deploymentInfo17, servletContextInitializerArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection11);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList21);
        org.junit.Assert.assertNotNull(servletContextInitializerArray29);
        org.junit.Assert.assertNotNull(servletContextInitializerArray31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1800 + "'", int33 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray42);
        org.junit.Assert.assertNotNull(servletContextInitializerArray45);
        org.junit.Assert.assertNotNull(servletContextInitializerArray46);
        org.junit.Assert.assertNotNull(servletContextInitializerArray50);
        org.junit.Assert.assertNotNull(servletContextInitializerArray52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1800 + "'", int55 == 1800);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(mimeMappings58);
        org.junit.Assert.assertNotNull(mimeMappings59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 8080 + "'", int62 == 8080);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNotNull(servletContextInitializerArray68);
        org.junit.Assert.assertNotNull(servletContextInitializerArray80);
        org.junit.Assert.assertNotNull(servletContextInitializerArray82);
        org.junit.Assert.assertNotNull(servletContextInitializerArray83);
        org.junit.Assert.assertNotNull(servletContextInitializerArray86);
    }

    @Test
    public void test14013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14013");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getSessionTimeout();
        boolean boolean11 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        undertowEmbeddedServletContainerFactory9.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder15 = undertowEmbeddedServletContainerFactory9.createBuilder((-1));
        undertowEmbeddedServletContainerFactory9.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray20 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory18.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray20);
        undertowEmbeddedServletContainerFactory9.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray20);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray20);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection24 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList25 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.io.File file26 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file26);
        undertowEmbeddedServletContainerFactory0.setDisplayName("0.0.0.0");
        java.lang.ClassLoader classLoader30 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        java.io.File file31 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file31);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8080 + "'", int19 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray20);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection24);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList25);
        org.junit.Assert.assertNotNull(classLoader30);
    }

    @Test
    public void test14014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14014");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPort(0);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        org.springframework.boot.context.embedded.JspServlet jspServlet7 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection8 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection9 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory12.setPersistSession(true);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = undertowEmbeddedServletContainerFactory12.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet19);
        org.springframework.core.io.ResourceLoader resourceLoader21 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader21);
        java.lang.String str23 = undertowEmbeddedServletContainerFactory0.getContextPath();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(jspServlet7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test14015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14015");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory4.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory4.resourceLoader;
        undertowEmbeddedServletContainerFactory4.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getSessionTimeout();
        boolean boolean11 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = undertowEmbeddedServletContainerFactory9.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet13 = undertowEmbeddedServletContainerFactory9.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        undertowEmbeddedServletContainerFactory14.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder20 = undertowEmbeddedServletContainerFactory14.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer23 = undertowEmbeddedServletContainerFactory9.getUndertowEmbeddedServletContainer(builder20, deploymentManager21, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer26 = undertowEmbeddedServletContainerFactory4.getUndertowEmbeddedServletContainer(builder20, deploymentManager24, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer29 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder20, deploymentManager27, (int) (short) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList30 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 100);
        java.lang.Integer int33 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        org.springframework.core.io.ResourceLoader resourceLoader34 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        java.lang.Boolean boolean35 = undertowEmbeddedServletContainerFactory0.directBuffers;
        java.lang.Class<?> wildcardClass36 = undertowEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList12);
        org.junit.Assert.assertNotNull(jspServlet13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer23);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer26);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer29);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList30);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNull(resourceLoader34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test14016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14016");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList2 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int4 = undertowEmbeddedServletContainerFactory3.getSessionTimeout();
        boolean boolean5 = undertowEmbeddedServletContainerFactory3.isPersistSession();
        undertowEmbeddedServletContainerFactory3.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory3.setUseForwardHeaders(false);
        boolean boolean10 = undertowEmbeddedServletContainerFactory3.useForwardHeaders;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        undertowEmbeddedServletContainerFactory11.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory11.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory11.setDisplayName("hi!");
        boolean boolean20 = undertowEmbeddedServletContainerFactory11.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getSessionTimeout();
        boolean boolean23 = undertowEmbeddedServletContainerFactory21.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList24 = undertowEmbeddedServletContainerFactory21.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet25 = undertowEmbeddedServletContainerFactory21.getJspServlet();
        undertowEmbeddedServletContainerFactory21.directBuffers = true;
        java.io.File file28 = null;
        undertowEmbeddedServletContainerFactory21.setDocumentRoot(file28);
        undertowEmbeddedServletContainerFactory21.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray32 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory21.addBuilderCustomizers(undertowBuilderCustomizerArray32);
        undertowEmbeddedServletContainerFactory11.addBuilderCustomizers(undertowBuilderCustomizerArray32);
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray32);
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray32);
        java.io.File file37 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file37);
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.core.io.ResourceLoader resourceLoader41 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1800 + "'", int4 == 1800);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1800 + "'", int22 == 1800);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList24);
        org.junit.Assert.assertNotNull(jspServlet25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray32);
        org.junit.Assert.assertNull(resourceLoader41);
    }

    @Test
    public void test14017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14017");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        org.springframework.core.io.ResourceLoader resourceLoader8 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(true);
        org.springframework.boot.context.embedded.Compression compression11 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression11);
        java.net.InetAddress inetAddress13 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress13);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(resourceLoader8);
    }

    @Test
    public void test14018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14018");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file15);
        java.lang.String str17 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        boolean boolean18 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.Ssl ssl21 = undertowEmbeddedServletContainerFactory0.getSsl();
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("");
        io.undertow.Undertow.Builder builder25 = undertowEmbeddedServletContainerFactory0.createBuilder(52);
        java.lang.Integer int26 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        java.io.File file27 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(ssl21);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(file27);
    }

    @Test
    public void test14019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14019");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(1800);
        undertowEmbeddedServletContainerFactory1.accessLogPattern = "";
        boolean boolean4 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        undertowEmbeddedServletContainerFactory6.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory6.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory6.setDisplayName("hi!");
        boolean boolean15 = undertowEmbeddedServletContainerFactory6.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList19 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet20 = undertowEmbeddedServletContainerFactory16.getJspServlet();
        undertowEmbeddedServletContainerFactory16.directBuffers = true;
        java.io.File file23 = null;
        undertowEmbeddedServletContainerFactory16.setDocumentRoot(file23);
        undertowEmbeddedServletContainerFactory16.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray27 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory16.addBuilderCustomizers(undertowBuilderCustomizerArray27);
        undertowEmbeddedServletContainerFactory6.addBuilderCustomizers(undertowBuilderCustomizerArray27);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray27);
        boolean boolean31 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.String str32 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList19);
        org.junit.Assert.assertNotNull(jspServlet20);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test14020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14020");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int3 = undertowEmbeddedServletContainerFactory2.getSessionTimeout();
        boolean boolean4 = undertowEmbeddedServletContainerFactory2.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList5 = undertowEmbeddedServletContainerFactory2.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet6 = undertowEmbeddedServletContainerFactory2.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory2.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList7;
        org.springframework.boot.context.embedded.Ssl ssl9 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader10;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 10);
        java.lang.ClassLoader classLoader14 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.ClassLoader classLoader15 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1800 + "'", int3 == 1800);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList5);
        org.junit.Assert.assertNotNull(jspServlet6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertNull(ssl9);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertNotNull(classLoader15);
    }

    @Test
    public void test14021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14021");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        boolean boolean3 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 1800);
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        java.lang.ClassLoader classLoader8 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        boolean boolean9 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory0.ioThreads;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(int14);
    }

    @Test
    public void test14022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14022");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPort(0);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        java.lang.String str7 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        java.lang.Boolean boolean8 = undertowEmbeddedServletContainerFactory0.directBuffers;
        boolean boolean9 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test14023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14023");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.Compression compression4 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression4);
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(false);
        int int8 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection9 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        java.lang.String str11 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        int int12 = undertowEmbeddedServletContainerFactory0.getPort();
        java.io.File file13 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8080 + "'", int12 == 8080);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test14024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14024");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 1);
        org.xnio.XnioWorker xnioWorker7 = undertowEmbeddedServletContainerFactory0.createWorker();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file8);
        org.springframework.core.io.ResourceLoader resourceLoader10 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(xnioWorker7);
        org.junit.Assert.assertNull(resourceLoader10);
    }

    @Test
    public void test14025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14025");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory2.setPort((-1));
        java.lang.Integer int28 = undertowEmbeddedServletContainerFactory2.bufferSize;
        io.undertow.Undertow.Builder builder30 = undertowEmbeddedServletContainerFactory2.createBuilder(0);
        java.io.File file31 = undertowEmbeddedServletContainerFactory2.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(false);
        java.net.InetAddress inetAddress34 = undertowEmbeddedServletContainerFactory2.getAddress();
        java.lang.String str35 = undertowEmbeddedServletContainerFactory2.getContextPath();
        undertowEmbeddedServletContainerFactory2.setDisplayName("");
        boolean boolean38 = undertowEmbeddedServletContainerFactory2.useForwardHeaders;
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) false);
        boolean boolean41 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo42 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer45 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap44);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray46 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer45 };
        initializer43.initializers = servletContextInitializerArray46;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int49 = undertowEmbeddedServletContainerFactory48.getPort();
        java.lang.Integer int50 = undertowEmbeddedServletContainerFactory48.bufferSize;
        java.io.File file51 = null;
        undertowEmbeddedServletContainerFactory48.setSessionStoreDir(file51);
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer54 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap53);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray55 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer54 };
        undertowEmbeddedServletContainerFactory48.addInitializers(servletContextInitializerArray55);
        initializer43.initializers = servletContextInitializerArray55;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray58 = initializer43.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int61 = undertowEmbeddedServletContainerFactory60.getSessionTimeout();
        boolean boolean62 = undertowEmbeddedServletContainerFactory60.isPersistSession();
        java.io.File file63 = undertowEmbeddedServletContainerFactory60.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings64 = undertowEmbeddedServletContainerFactory60.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings65 = undertowEmbeddedServletContainerFactory60.getMimeMappings();
        java.io.File file66 = undertowEmbeddedServletContainerFactory60.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int68 = undertowEmbeddedServletContainerFactory67.getPort();
        java.lang.Integer int69 = undertowEmbeddedServletContainerFactory67.bufferSize;
        java.io.File file70 = null;
        undertowEmbeddedServletContainerFactory67.setSessionStoreDir(file70);
        java.util.Map<java.lang.String, java.lang.String> strMap72 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer73 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap72);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray74 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer73 };
        undertowEmbeddedServletContainerFactory67.addInitializers(servletContextInitializerArray74);
        undertowEmbeddedServletContainerFactory60.addInitializers(servletContextInitializerArray74);
        initializer59.initializers = servletContextInitializerArray74;
        initializer43.initializers = servletContextInitializerArray74;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory2.registerServletContainerInitializerToDriveServletContextInitializers(deploymentInfo42, servletContextInitializerArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(inetAddress34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(servletContextInitializerArray46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 8080 + "'", int49 == 8080);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(servletContextInitializerArray55);
        org.junit.Assert.assertNotNull(servletContextInitializerArray58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1800 + "'", int61 == 1800);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(mimeMappings64);
        org.junit.Assert.assertNotNull(mimeMappings65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 8080 + "'", int68 == 8080);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertNotNull(servletContextInitializerArray74);
    }

    @Test
    public void test14026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14026");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader3);
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory0.bufferSize;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 0);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection8 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        java.net.InetAddress inetAddress9 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress9);
        java.lang.Integer int11 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getPort();
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory12.bufferSize;
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory12.setSessionStoreDir(file15);
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory12.accessLogDirectory = file17;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int21 = undertowEmbeddedServletContainerFactory20.getSessionTimeout();
        boolean boolean22 = undertowEmbeddedServletContainerFactory20.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList23 = undertowEmbeddedServletContainerFactory20.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet24 = undertowEmbeddedServletContainerFactory20.getJspServlet();
        undertowEmbeddedServletContainerFactory12.setJspServlet(jspServlet24);
        org.springframework.core.io.ResourceLoader resourceLoader26 = null;
        undertowEmbeddedServletContainerFactory12.resourceLoader = resourceLoader26;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean30 = undertowEmbeddedServletContainerFactory29.isAccessLogEnabled();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = undertowEmbeddedServletContainerFactory29.getMimeMappings();
        java.io.File file32 = undertowEmbeddedServletContainerFactory29.getDocumentRoot();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList33 = undertowEmbeddedServletContainerFactory29.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory12.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList33;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList33;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int37 = undertowEmbeddedServletContainerFactory36.getPort();
        java.lang.Integer int38 = undertowEmbeddedServletContainerFactory36.bufferSize;
        java.io.File file39 = null;
        undertowEmbeddedServletContainerFactory36.setSessionStoreDir(file39);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int42 = undertowEmbeddedServletContainerFactory41.getSessionTimeout();
        boolean boolean43 = undertowEmbeddedServletContainerFactory41.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList44 = undertowEmbeddedServletContainerFactory41.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet45 = undertowEmbeddedServletContainerFactory41.getJspServlet();
        boolean boolean46 = undertowEmbeddedServletContainerFactory41.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet47 = undertowEmbeddedServletContainerFactory41.getErrorPages();
        undertowEmbeddedServletContainerFactory36.setErrorPages(errorPageSet47);
        undertowEmbeddedServletContainerFactory36.setBufferSize((java.lang.Integer) 10);
        int int51 = undertowEmbeddedServletContainerFactory36.getPort();
        org.springframework.boot.context.embedded.JspServlet jspServlet52 = undertowEmbeddedServletContainerFactory36.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet52);
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 1);
        org.springframework.boot.context.embedded.Ssl ssl56 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean60 = undertowEmbeddedServletContainerFactory59.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory59.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory59.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings65 = undertowEmbeddedServletContainerFactory59.getMimeMappings();
        java.lang.String str66 = undertowEmbeddedServletContainerFactory59.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int68 = undertowEmbeddedServletContainerFactory67.getSessionTimeout();
        boolean boolean69 = undertowEmbeddedServletContainerFactory67.isPersistSession();
        undertowEmbeddedServletContainerFactory67.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory67.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory67.setDisplayName("hi!");
        boolean boolean76 = undertowEmbeddedServletContainerFactory67.isRegisterDefaultServlet();
        java.io.File file77 = null;
        undertowEmbeddedServletContainerFactory67.accessLogDirectory = file77;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet79 = undertowEmbeddedServletContainerFactory67.getErrorPages();
        undertowEmbeddedServletContainerFactory59.setErrorPages(errorPageSet79);
        io.undertow.Undertow.Builder builder82 = undertowEmbeddedServletContainerFactory59.createBuilder(0);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.configureSsl(ssl56, 8080, builder82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8080 + "'", int13 == 8080);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1800 + "'", int21 == 1800);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList23);
        org.junit.Assert.assertNotNull(jspServlet24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8080 + "'", int37 == 8080);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1800 + "'", int42 == 1800);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList44);
        org.junit.Assert.assertNotNull(jspServlet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(errorPageSet47);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 8080 + "'", int51 == 8080);
        org.junit.Assert.assertNotNull(jspServlet52);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(mimeMappings65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1800 + "'", int68 == 1800);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(errorPageSet79);
        org.junit.Assert.assertNotNull(builder82);
    }

    @Test
    public void test14027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14027");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 1);
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader4;
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
    }

    @Test
    public void test14028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14028");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        int int3 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.Compression compression4 = undertowEmbeddedServletContainerFactory0.getCompression();
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 10);
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection11 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) '#');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int16 = undertowEmbeddedServletContainerFactory15.getSessionTimeout();
        boolean boolean17 = undertowEmbeddedServletContainerFactory15.isPersistSession();
        undertowEmbeddedServletContainerFactory15.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl20 = null;
        undertowEmbeddedServletContainerFactory15.setSsl(ssl20);
        java.lang.String str22 = undertowEmbeddedServletContainerFactory15.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int24 = undertowEmbeddedServletContainerFactory23.getSessionTimeout();
        boolean boolean25 = undertowEmbeddedServletContainerFactory23.isPersistSession();
        undertowEmbeddedServletContainerFactory23.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory23.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int31 = undertowEmbeddedServletContainerFactory30.getSessionTimeout();
        boolean boolean32 = undertowEmbeddedServletContainerFactory30.isPersistSession();
        java.io.File file33 = undertowEmbeddedServletContainerFactory30.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList34 = undertowEmbeddedServletContainerFactory30.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory23.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList34;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory38.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int42 = undertowEmbeddedServletContainerFactory41.getSessionTimeout();
        boolean boolean43 = undertowEmbeddedServletContainerFactory41.isPersistSession();
        undertowEmbeddedServletContainerFactory41.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory41.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray48 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory41.addErrorPages(errorPageArray48);
        undertowEmbeddedServletContainerFactory38.addErrorPages(errorPageArray48);
        undertowEmbeddedServletContainerFactory23.addErrorPages(errorPageArray48);
        undertowEmbeddedServletContainerFactory15.addErrorPages(errorPageArray48);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int54 = undertowEmbeddedServletContainerFactory53.getSessionTimeout();
        boolean boolean55 = undertowEmbeddedServletContainerFactory53.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList56 = undertowEmbeddedServletContainerFactory53.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int58 = undertowEmbeddedServletContainerFactory57.getSessionTimeout();
        boolean boolean59 = undertowEmbeddedServletContainerFactory57.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList60 = undertowEmbeddedServletContainerFactory57.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet61 = undertowEmbeddedServletContainerFactory57.getJspServlet();
        boolean boolean62 = undertowEmbeddedServletContainerFactory57.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet63 = undertowEmbeddedServletContainerFactory57.getErrorPages();
        undertowEmbeddedServletContainerFactory53.setErrorPages(errorPageSet63);
        undertowEmbeddedServletContainerFactory15.setErrorPages(errorPageSet63);
        undertowEmbeddedServletContainerFactory14.setErrorPages(errorPageSet63);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList67 = undertowEmbeddedServletContainerFactory14.builderCustomizers;
        org.springframework.boot.context.embedded.Compression compression68 = undertowEmbeddedServletContainerFactory14.getCompression();
        org.springframework.boot.context.embedded.JspServlet jspServlet69 = null;
        undertowEmbeddedServletContainerFactory14.setJspServlet(jspServlet69);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection71 = undertowEmbeddedServletContainerFactory14.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection71);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1800 + "'", int3 == 1800);
        org.junit.Assert.assertNull(compression4);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1800 + "'", int16 == 1800);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1800 + "'", int24 == 1800);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1800 + "'", int31 == 1800);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList34);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1800 + "'", int42 == 1800);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(errorPageArray48);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1800 + "'", int54 == 1800);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1800 + "'", int58 == 1800);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList60);
        org.junit.Assert.assertNotNull(jspServlet61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(errorPageSet63);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList67);
        org.junit.Assert.assertNull(compression68);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection71);
    }

    @Test
    public void test14029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14029");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        java.lang.String str5 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        undertowEmbeddedServletContainerFactory11.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder17 = undertowEmbeddedServletContainerFactory11.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager18 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer20 = undertowEmbeddedServletContainerFactory6.getUndertowEmbeddedServletContainer(builder17, deploymentManager18, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer23 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder17, deploymentManager21, (int) (byte) 100);
        java.lang.Integer int24 = undertowEmbeddedServletContainerFactory2.bufferSize;
        org.springframework.boot.context.embedded.Compression compression25 = undertowEmbeddedServletContainerFactory2.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray27 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList28 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList28, undertowBuilderCustomizerArray27);
        undertowEmbeddedServletContainerFactory26.builderCustomizers = undertowBuilderCustomizerList28;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection31 = undertowEmbeddedServletContainerFactory26.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int33 = undertowEmbeddedServletContainerFactory32.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer35 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap34);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer37 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap36);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer39 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer41 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap40);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray42 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer35, initParameterConfiguringServletContextInitializer37, initParameterConfiguringServletContextInitializer39, initParameterConfiguringServletContextInitializer41 };
        undertowEmbeddedServletContainerFactory32.addInitializers(servletContextInitializerArray42);
        undertowEmbeddedServletContainerFactory26.addInitializers(servletContextInitializerArray42);
        undertowEmbeddedServletContainerFactory2.addInitializers(servletContextInitializerArray42);
        java.io.File file46 = undertowEmbeddedServletContainerFactory2.getSessionStoreDir();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int48 = undertowEmbeddedServletContainerFactory47.getSessionTimeout();
        boolean boolean49 = undertowEmbeddedServletContainerFactory47.isPersistSession();
        undertowEmbeddedServletContainerFactory47.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder53 = undertowEmbeddedServletContainerFactory47.createBuilder((-1));
        java.io.File file54 = undertowEmbeddedServletContainerFactory47.accessLogDirectory;
        org.springframework.boot.context.embedded.Ssl ssl55 = null;
        undertowEmbeddedServletContainerFactory47.setSsl(ssl55);
        undertowEmbeddedServletContainerFactory47.buffersPerRegion = 1;
        java.lang.ClassLoader classLoader59 = undertowEmbeddedServletContainerFactory47.getServletClassLoader();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList60 = undertowEmbeddedServletContainerFactory47.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory2.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList60;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int63 = undertowEmbeddedServletContainerFactory62.getSessionTimeout();
        boolean boolean64 = undertowEmbeddedServletContainerFactory62.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList65 = undertowEmbeddedServletContainerFactory62.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet66 = undertowEmbeddedServletContainerFactory62.getJspServlet();
        undertowEmbeddedServletContainerFactory62.directBuffers = true;
        java.io.File file69 = null;
        undertowEmbeddedServletContainerFactory62.setDocumentRoot(file69);
        undertowEmbeddedServletContainerFactory62.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray73 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory62.addBuilderCustomizers(undertowBuilderCustomizerArray73);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory75 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int76 = undertowEmbeddedServletContainerFactory75.getSessionTimeout();
        boolean boolean77 = undertowEmbeddedServletContainerFactory75.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList78 = undertowEmbeddedServletContainerFactory75.builderCustomizers;
        java.lang.ClassLoader classLoader79 = undertowEmbeddedServletContainerFactory75.getServletClassLoader();
        java.io.File file80 = undertowEmbeddedServletContainerFactory75.getSessionStoreDir();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet81 = undertowEmbeddedServletContainerFactory75.getErrorPages();
        undertowEmbeddedServletContainerFactory62.setErrorPages(errorPageSet81);
        undertowEmbeddedServletContainerFactory2.setErrorPages(errorPageSet81);
        undertowEmbeddedServletContainerFactory2.setRegisterDefaultServlet(false);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection86 = undertowEmbeddedServletContainerFactory2.getDeploymentInfoCustomizers();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer20);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(compression25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1800 + "'", int33 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray42);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1800 + "'", int48 == 1800);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(classLoader59);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1800 + "'", int63 == 1800);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList65);
        org.junit.Assert.assertNotNull(jspServlet66);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1800 + "'", int76 == 1800);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList78);
        org.junit.Assert.assertNotNull(classLoader79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNotNull(errorPageSet81);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection86);
    }

    @Test
    public void test14030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14030");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        java.io.File file7 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.Ssl ssl8 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl8);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 1;
        boolean boolean12 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.Compression compression13 = undertowEmbeddedServletContainerFactory0.getCompression();
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(true);
        java.lang.String str18 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(compression13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "0.0.0.0" + "'", str18, "0.0.0.0");
    }

    @Test
    public void test14031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14031");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file15);
        java.io.File file17 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList20 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList20);
    }

    @Test
    public void test14032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14032");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        undertowEmbeddedServletContainerFactory1.accessLogPattern = "0.0.0.0";
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getPort();
        java.lang.Integer int11 = undertowEmbeddedServletContainerFactory9.bufferSize;
        boolean boolean12 = undertowEmbeddedServletContainerFactory9.accessLogEnabled;
        java.lang.String str13 = undertowEmbeddedServletContainerFactory9.accessLogPattern;
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory9.setResourceLoader(resourceLoader14);
        boolean boolean16 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int18 = undertowEmbeddedServletContainerFactory17.getSessionTimeout();
        boolean boolean19 = undertowEmbeddedServletContainerFactory17.isPersistSession();
        undertowEmbeddedServletContainerFactory17.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl22 = null;
        undertowEmbeddedServletContainerFactory17.setSsl(ssl22);
        org.springframework.boot.context.embedded.JspServlet jspServlet24 = undertowEmbeddedServletContainerFactory17.getJspServlet();
        undertowEmbeddedServletContainerFactory9.setJspServlet(jspServlet24);
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet24);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        boolean boolean29 = undertowEmbeddedServletContainerFactory1.useForwardHeaders;
        java.lang.String str30 = undertowEmbeddedServletContainerFactory1.accessLogPattern;
        java.io.File file31 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.boot.context.embedded.Compression compression32 = undertowEmbeddedServletContainerFactory1.getCompression();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 8080 + "'", int10 == 8080);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1800 + "'", int18 == 1800);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(jspServlet24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "0.0.0.0" + "'", str30, "0.0.0.0");
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(compression32);
    }

    @Test
    public void test14033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14033");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(1);
        boolean boolean11 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        java.lang.String str12 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = true;
        org.springframework.boot.context.embedded.Compression compression15 = undertowEmbeddedServletContainerFactory0.getCompression();
        java.lang.String str16 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader17);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int20 = undertowEmbeddedServletContainerFactory19.getSessionTimeout();
        boolean boolean21 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList22 = undertowEmbeddedServletContainerFactory19.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet23 = undertowEmbeddedServletContainerFactory19.getJspServlet();
        undertowEmbeddedServletContainerFactory19.directBuffers = true;
        java.lang.Integer int26 = undertowEmbeddedServletContainerFactory19.bufferSize;
        java.io.File file27 = null;
        undertowEmbeddedServletContainerFactory19.setDocumentRoot(file27);
        boolean boolean29 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        undertowEmbeddedServletContainerFactory19.setWorkerThreads((java.lang.Integer) 8080);
        org.xnio.XnioWorker xnioWorker32 = undertowEmbeddedServletContainerFactory19.createWorker();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int34 = undertowEmbeddedServletContainerFactory33.getSessionTimeout();
        undertowEmbeddedServletContainerFactory33.setSessionTimeout((int) (short) 1);
        boolean boolean37 = undertowEmbeddedServletContainerFactory33.useForwardHeaders;
        java.lang.String str38 = undertowEmbeddedServletContainerFactory33.getDisplayName();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = undertowEmbeddedServletContainerFactory33.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int41 = undertowEmbeddedServletContainerFactory40.getSessionTimeout();
        boolean boolean42 = undertowEmbeddedServletContainerFactory40.isPersistSession();
        java.io.File file43 = undertowEmbeddedServletContainerFactory40.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings44 = undertowEmbeddedServletContainerFactory40.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = undertowEmbeddedServletContainerFactory40.getMimeMappings();
        java.lang.Integer int46 = undertowEmbeddedServletContainerFactory40.buffersPerRegion;
        io.undertow.Undertow.Builder builder48 = undertowEmbeddedServletContainerFactory40.createBuilder(10);
        undertowEmbeddedServletContainerFactory40.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str51 = undertowEmbeddedServletContainerFactory40.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int53 = undertowEmbeddedServletContainerFactory52.getSessionTimeout();
        boolean boolean54 = undertowEmbeddedServletContainerFactory52.isPersistSession();
        undertowEmbeddedServletContainerFactory52.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder58 = undertowEmbeddedServletContainerFactory52.createBuilder((-1));
        undertowEmbeddedServletContainerFactory52.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int62 = undertowEmbeddedServletContainerFactory61.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray63 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory61.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray63);
        undertowEmbeddedServletContainerFactory52.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray63);
        undertowEmbeddedServletContainerFactory40.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray63);
        undertowEmbeddedServletContainerFactory33.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray63);
        undertowEmbeddedServletContainerFactory19.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray63);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray63);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory72.buffersPerRegion = (-1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer75 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap76 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer77 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap76);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray78 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer77 };
        initializer75.initializers = servletContextInitializerArray78;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray80 = initializer75.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray81 = initializer75.initializers;
        undertowEmbeddedServletContainerFactory72.addInitializers(servletContextInitializerArray81);
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.DeploymentManager deploymentManager83 = undertowEmbeddedServletContainerFactory0.createDeploymentManager(servletContextInitializerArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: java.lang.NullPointerException");
        } catch (java.lang.RuntimeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
        org.junit.Assert.assertNull(compression15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList22);
        org.junit.Assert.assertNotNull(jspServlet23);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(xnioWorker32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1800 + "'", int34 == 1800);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1800 + "'", int41 == 1800);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(mimeMappings44);
        org.junit.Assert.assertNotNull(mimeMappings45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1800 + "'", int53 == 1800);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 8080 + "'", int62 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray63);
        org.junit.Assert.assertNotNull(servletContextInitializerArray78);
        org.junit.Assert.assertNotNull(servletContextInitializerArray80);
        org.junit.Assert.assertNotNull(servletContextInitializerArray81);
    }

    @Test
    public void test14034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14034");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("hi!");
        io.undertow.servlet.api.DeploymentInfo deploymentInfo10 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo10);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        java.io.File file16 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file16);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
    }

    @Test
    public void test14035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14035");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder5 = undertowEmbeddedServletContainerFactory1.createBuilder((int) (byte) -1);
        io.undertow.server.handlers.resource.ResourceManager resourceManager6 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getPort();
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory7.bufferSize;
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory7.setSessionStoreDir(file10);
        java.io.File file12 = null;
        undertowEmbeddedServletContainerFactory7.accessLogDirectory = file12;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = undertowEmbeddedServletContainerFactory7.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings14);
        java.lang.Boolean boolean16 = undertowEmbeddedServletContainerFactory1.directBuffers;
        java.io.File file17 = undertowEmbeddedServletContainerFactory1.accessLogDirectory;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet18 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(resourceManager6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8080 + "'", int8 == 8080);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(errorPageSet18);
    }

    @Test
    public void test14036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14036");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int4 = undertowEmbeddedServletContainerFactory3.getSessionTimeout();
        boolean boolean5 = undertowEmbeddedServletContainerFactory3.isPersistSession();
        java.io.File file6 = undertowEmbeddedServletContainerFactory3.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = undertowEmbeddedServletContainerFactory3.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = undertowEmbeddedServletContainerFactory3.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getSessionTimeout();
        boolean boolean11 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = undertowEmbeddedServletContainerFactory9.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet13 = undertowEmbeddedServletContainerFactory9.getJspServlet();
        undertowEmbeddedServletContainerFactory3.setJspServlet(jspServlet13);
        undertowEmbeddedServletContainerFactory2.setJspServlet(jspServlet13);
        boolean boolean16 = undertowEmbeddedServletContainerFactory2.isPersistSession();
        org.springframework.core.io.ResourceLoader resourceLoader17 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        io.undertow.server.handlers.resource.ResourceManager resourceManager18 = undertowEmbeddedServletContainerFactory2.getDocumentRootResourceManager();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo19 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory2.configureMimeMappings(deploymentInfo19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1800 + "'", int4 == 1800);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList12);
        org.junit.Assert.assertNotNull(jspServlet13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(resourceLoader17);
        org.junit.Assert.assertNotNull(resourceManager18);
    }

    @Test
    public void test14037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14037");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet10);
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        java.lang.String str14 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        java.io.File file15 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray17 = initializer16.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getSessionTimeout();
        boolean boolean20 = undertowEmbeddedServletContainerFactory18.isPersistSession();
        java.io.File file21 = undertowEmbeddedServletContainerFactory18.accessLogDirectory;
        undertowEmbeddedServletContainerFactory18.setRegisterDefaultServlet(true);
        java.lang.Boolean boolean24 = undertowEmbeddedServletContainerFactory18.directBuffers;
        org.springframework.boot.context.embedded.Compression compression25 = undertowEmbeddedServletContainerFactory18.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int27 = undertowEmbeddedServletContainerFactory26.getPort();
        java.lang.Integer int28 = undertowEmbeddedServletContainerFactory26.bufferSize;
        java.io.File file29 = null;
        undertowEmbeddedServletContainerFactory26.setSessionStoreDir(file29);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer34 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap33);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray35 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer34 };
        initializer32.initializers = servletContextInitializerArray35;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer39 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap38);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray40 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer39 };
        initializer37.initializers = servletContextInitializerArray40;
        initializer32.initializers = servletContextInitializerArray40;
        initializer31.initializers = servletContextInitializerArray40;
        undertowEmbeddedServletContainerFactory26.addInitializers(servletContextInitializerArray40);
        undertowEmbeddedServletContainerFactory18.addInitializers(servletContextInitializerArray40);
        initializer16.initializers = servletContextInitializerArray40;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray47 = initializer16.initializers;
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray47);
        org.springframework.core.io.ResourceLoader resourceLoader49 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader49);
        boolean boolean51 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        org.springframework.boot.context.embedded.Compression compression52 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression52);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(servletContextInitializerArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNull(compression25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8080 + "'", int27 == 8080);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(servletContextInitializerArray35);
        org.junit.Assert.assertNotNull(servletContextInitializerArray40);
        org.junit.Assert.assertNotNull(servletContextInitializerArray47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test14038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14038");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer2 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap1);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer2 };
        initializer0.initializers = servletContextInitializerArray3;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray5 = initializer0.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer11 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap10);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer15 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap14);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray16 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer9, initParameterConfiguringServletContextInitializer11, initParameterConfiguringServletContextInitializer13, initParameterConfiguringServletContextInitializer15 };
        undertowEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray16);
        initializer0.initializers = servletContextInitializerArray16;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = initializer0.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer22 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap21);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer22 };
        initializer20.initializers = servletContextInitializerArray23;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray25 = initializer20.initializers;
        initializer0.initializers = servletContextInitializerArray25;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray27 = initializer0.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray28 = initializer0.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray29 = initializer0.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray30 = null;
        initializer0.initializers = servletContextInitializerArray30;
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray16);
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
        org.junit.Assert.assertNotNull(servletContextInitializerArray25);
        org.junit.Assert.assertNotNull(servletContextInitializerArray27);
        org.junit.Assert.assertNotNull(servletContextInitializerArray28);
        org.junit.Assert.assertNotNull(servletContextInitializerArray29);
    }

    @Test
    public void test14039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14039");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getPort();
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory7.bufferSize;
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory7.setSessionStoreDir(file10);
        java.io.File file12 = null;
        undertowEmbeddedServletContainerFactory7.accessLogDirectory = file12;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = undertowEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int16 = undertowEmbeddedServletContainerFactory15.getSessionTimeout();
        boolean boolean17 = undertowEmbeddedServletContainerFactory15.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList18 = undertowEmbeddedServletContainerFactory15.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = undertowEmbeddedServletContainerFactory15.getJspServlet();
        undertowEmbeddedServletContainerFactory7.setJspServlet(jspServlet19);
        org.springframework.core.io.ResourceLoader resourceLoader21 = null;
        undertowEmbeddedServletContainerFactory7.resourceLoader = resourceLoader21;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean25 = undertowEmbeddedServletContainerFactory24.isAccessLogEnabled();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        java.io.File file27 = undertowEmbeddedServletContainerFactory24.getDocumentRoot();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList28 = undertowEmbeddedServletContainerFactory24.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory7.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList28;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList28;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8080 + "'", int8 == 8080);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1800 + "'", int16 == 1800);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList18);
        org.junit.Assert.assertNotNull(jspServlet19);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList28);
    }

    @Test
    public void test14040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14040");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory0.getSsl();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList12;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection15 = undertowEmbeddedServletContainerFactory10.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer19 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap18);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer21 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap20);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer23 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap22);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer25 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap24);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer19, initParameterConfiguringServletContextInitializer21, initParameterConfiguringServletContextInitializer23, initParameterConfiguringServletContextInitializer25 };
        undertowEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray26);
        undertowEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray26);
        boolean boolean29 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int31 = undertowEmbeddedServletContainerFactory30.getSessionTimeout();
        boolean boolean32 = undertowEmbeddedServletContainerFactory30.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList33 = undertowEmbeddedServletContainerFactory30.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet34 = undertowEmbeddedServletContainerFactory30.getJspServlet();
        boolean boolean35 = undertowEmbeddedServletContainerFactory30.isPersistSession();
        org.springframework.boot.context.embedded.Ssl ssl36 = undertowEmbeddedServletContainerFactory30.getSsl();
        undertowEmbeddedServletContainerFactory30.setJspServletClassName("hi!");
        io.undertow.Undertow.Builder builder40 = undertowEmbeddedServletContainerFactory30.createBuilder((int) 'a');
        io.undertow.servlet.api.DeploymentManager deploymentManager41 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer43 = undertowEmbeddedServletContainerFactory10.getUndertowEmbeddedServletContainer(builder40, deploymentManager41, 1800);
        io.undertow.servlet.api.DeploymentManager deploymentManager44 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer46 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder40, deploymentManager44, (-1));
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection47 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        io.undertow.server.handlers.resource.ResourceManager resourceManager50 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        java.io.File file51 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file51);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1800 + "'", int31 == 1800);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList33);
        org.junit.Assert.assertNotNull(jspServlet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(ssl36);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer43);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer46);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection47);
        org.junit.Assert.assertNotNull(resourceManager50);
    }

    @Test
    public void test14041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14041");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory0.getAddress();
        int int19 = undertowEmbeddedServletContainerFactory0.getPort();
        java.io.File file20 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.Compression compression21 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression21);
        java.lang.String str23 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.ioThreads = 1800;
        undertowEmbeddedServletContainerFactory0.setDisplayName("0.0.0.0");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8080 + "'", int19 == 8080);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "0.0.0.0" + "'", str23, "0.0.0.0");
    }

    @Test
    public void test14042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14042");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory2.setPort((-1));
        java.lang.Integer int28 = undertowEmbeddedServletContainerFactory2.bufferSize;
        io.undertow.Undertow.Builder builder30 = undertowEmbeddedServletContainerFactory2.createBuilder(0);
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(true);
        java.lang.String str35 = undertowEmbeddedServletContainerFactory2.getDisplayName();
        io.undertow.Undertow.Builder builder37 = undertowEmbeddedServletContainerFactory2.createBuilder((int) 'a');
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(builder37);
    }

    @Test
    public void test14043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14043");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file5);
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getSessionTimeout();
        boolean boolean11 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        undertowEmbeddedServletContainerFactory9.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl14 = null;
        undertowEmbeddedServletContainerFactory9.setSsl(ssl14);
        java.lang.String str16 = undertowEmbeddedServletContainerFactory9.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int18 = undertowEmbeddedServletContainerFactory17.getSessionTimeout();
        boolean boolean19 = undertowEmbeddedServletContainerFactory17.isPersistSession();
        undertowEmbeddedServletContainerFactory17.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory17.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int25 = undertowEmbeddedServletContainerFactory24.getSessionTimeout();
        boolean boolean26 = undertowEmbeddedServletContainerFactory24.isPersistSession();
        java.io.File file27 = undertowEmbeddedServletContainerFactory24.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList28 = undertowEmbeddedServletContainerFactory24.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory17.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList28;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory32.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int36 = undertowEmbeddedServletContainerFactory35.getSessionTimeout();
        boolean boolean37 = undertowEmbeddedServletContainerFactory35.isPersistSession();
        undertowEmbeddedServletContainerFactory35.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory35.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray42 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory35.addErrorPages(errorPageArray42);
        undertowEmbeddedServletContainerFactory32.addErrorPages(errorPageArray42);
        undertowEmbeddedServletContainerFactory17.addErrorPages(errorPageArray42);
        undertowEmbeddedServletContainerFactory9.addErrorPages(errorPageArray42);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray42);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int49 = undertowEmbeddedServletContainerFactory48.getSessionTimeout();
        boolean boolean50 = undertowEmbeddedServletContainerFactory48.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList51 = undertowEmbeddedServletContainerFactory48.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet52 = undertowEmbeddedServletContainerFactory48.getJspServlet();
        undertowEmbeddedServletContainerFactory48.directBuffers = true;
        java.io.File file55 = null;
        undertowEmbeddedServletContainerFactory48.setDocumentRoot(file55);
        undertowEmbeddedServletContainerFactory48.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray59 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory48.addBuilderCustomizers(undertowBuilderCustomizerArray59);
        org.springframework.boot.context.embedded.Compression compression61 = null;
        undertowEmbeddedServletContainerFactory48.setCompression(compression61);
        int int63 = undertowEmbeddedServletContainerFactory48.getPort();
        org.springframework.boot.context.embedded.JspServlet jspServlet64 = undertowEmbeddedServletContainerFactory48.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet64);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int67 = undertowEmbeddedServletContainerFactory66.getPort();
        java.lang.Integer int68 = undertowEmbeddedServletContainerFactory66.bufferSize;
        java.io.File file69 = null;
        undertowEmbeddedServletContainerFactory66.setSessionStoreDir(file69);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int72 = undertowEmbeddedServletContainerFactory71.getSessionTimeout();
        boolean boolean73 = undertowEmbeddedServletContainerFactory71.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList74 = undertowEmbeddedServletContainerFactory71.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet75 = undertowEmbeddedServletContainerFactory71.getJspServlet();
        boolean boolean76 = undertowEmbeddedServletContainerFactory71.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet77 = undertowEmbeddedServletContainerFactory71.getErrorPages();
        undertowEmbeddedServletContainerFactory66.setErrorPages(errorPageSet77);
        undertowEmbeddedServletContainerFactory66.setBufferSize((java.lang.Integer) 10);
        java.io.File file81 = null;
        undertowEmbeddedServletContainerFactory66.setAccessLogDirectory(file81);
        java.lang.String str83 = undertowEmbeddedServletContainerFactory66.getDisplayName();
        boolean boolean84 = undertowEmbeddedServletContainerFactory66.useForwardHeaders;
        java.io.File file85 = null;
        undertowEmbeddedServletContainerFactory66.setSessionStoreDir(file85);
        undertowEmbeddedServletContainerFactory66.setJspServletClassName("");
        undertowEmbeddedServletContainerFactory66.setJspServletClassName("0.0.0.0");
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList91 = null;
        undertowEmbeddedServletContainerFactory66.builderCustomizers = undertowBuilderCustomizerList91;
        undertowEmbeddedServletContainerFactory66.setJspServletClassName("0.0.0.0");
        org.springframework.core.io.ResourceLoader resourceLoader95 = undertowEmbeddedServletContainerFactory66.resourceLoader;
        org.springframework.boot.context.embedded.JspServlet jspServlet96 = undertowEmbeddedServletContainerFactory66.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet96);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo98 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo98);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1800 + "'", int18 == 1800);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1800 + "'", int25 == 1800);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList28);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1800 + "'", int36 == 1800);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(errorPageArray42);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1800 + "'", int49 == 1800);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList51);
        org.junit.Assert.assertNotNull(jspServlet52);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray59);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 8080 + "'", int63 == 8080);
        org.junit.Assert.assertNotNull(jspServlet64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 8080 + "'", int67 == 8080);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1800 + "'", int72 == 1800);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList74);
        org.junit.Assert.assertNotNull(jspServlet75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(errorPageSet77);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(resourceLoader95);
        org.junit.Assert.assertNotNull(jspServlet96);
    }

    @Test
    public void test14044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14044");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        undertowEmbeddedServletContainerFactory6.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory6.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int14 = undertowEmbeddedServletContainerFactory13.getSessionTimeout();
        boolean boolean15 = undertowEmbeddedServletContainerFactory13.isPersistSession();
        java.io.File file16 = undertowEmbeddedServletContainerFactory13.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList17 = undertowEmbeddedServletContainerFactory13.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory6.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList17;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int20 = undertowEmbeddedServletContainerFactory19.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = undertowEmbeddedServletContainerFactory23.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader25 = undertowEmbeddedServletContainerFactory23.resourceLoader;
        undertowEmbeddedServletContainerFactory23.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList31 = undertowEmbeddedServletContainerFactory28.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet32 = undertowEmbeddedServletContainerFactory28.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int34 = undertowEmbeddedServletContainerFactory33.getSessionTimeout();
        boolean boolean35 = undertowEmbeddedServletContainerFactory33.isPersistSession();
        undertowEmbeddedServletContainerFactory33.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder39 = undertowEmbeddedServletContainerFactory33.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager40 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer42 = undertowEmbeddedServletContainerFactory28.getUndertowEmbeddedServletContainer(builder39, deploymentManager40, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager43 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer45 = undertowEmbeddedServletContainerFactory23.getUndertowEmbeddedServletContainer(builder39, deploymentManager43, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager46 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer48 = undertowEmbeddedServletContainerFactory19.getUndertowEmbeddedServletContainer(builder39, deploymentManager46, (int) (short) -1);
        io.undertow.servlet.api.DeploymentManager deploymentManager49 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer51 = undertowEmbeddedServletContainerFactory6.getUndertowEmbeddedServletContainer(builder39, deploymentManager49, 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int53 = undertowEmbeddedServletContainerFactory52.getSessionTimeout();
        boolean boolean54 = undertowEmbeddedServletContainerFactory52.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList55 = undertowEmbeddedServletContainerFactory52.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet56 = undertowEmbeddedServletContainerFactory52.getJspServlet();
        undertowEmbeddedServletContainerFactory52.directBuffers = true;
        java.lang.Integer int59 = undertowEmbeddedServletContainerFactory52.bufferSize;
        java.io.File file60 = null;
        undertowEmbeddedServletContainerFactory52.setDocumentRoot(file60);
        boolean boolean62 = undertowEmbeddedServletContainerFactory52.isPersistSession();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo63 = null;
        undertowEmbeddedServletContainerFactory52.configureErrorPages(deploymentInfo63);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet67 = undertowEmbeddedServletContainerFactory66.getErrorPages();
        undertowEmbeddedServletContainerFactory52.setErrorPages(errorPageSet67);
        undertowEmbeddedServletContainerFactory6.setErrorPages(errorPageSet67);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList70 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList70;
        org.springframework.boot.context.embedded.Ssl ssl72 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl72);
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1800 + "'", int14 == 1800);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8080 + "'", int20 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNull(resourceLoader25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList31);
        org.junit.Assert.assertNotNull(jspServlet32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1800 + "'", int34 == 1800);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer42);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer45);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer48);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1800 + "'", int53 == 1800);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList55);
        org.junit.Assert.assertNotNull(jspServlet56);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(errorPageSet67);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList70);
    }

    @Test
    public void test14045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14045");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory0.ioThreads;
        java.lang.Boolean boolean8 = undertowEmbeddedServletContainerFactory0.directBuffers;
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(boolean8);
    }

    @Test
    public void test14046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14046");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.net.InetAddress inetAddress9 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress9);
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection13 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.setDisplayName("");
        org.springframework.boot.context.embedded.Ssl ssl16 = undertowEmbeddedServletContainerFactory0.getSsl();
        java.lang.ClassLoader classLoader17 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection13);
        org.junit.Assert.assertNull(ssl16);
        org.junit.Assert.assertNotNull(classLoader17);
    }

    @Test
    public void test14047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14047");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = true;
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl9);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int18 = undertowEmbeddedServletContainerFactory17.getSessionTimeout();
        boolean boolean19 = undertowEmbeddedServletContainerFactory17.isPersistSession();
        undertowEmbeddedServletContainerFactory17.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory17.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory17.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory17.setSessionTimeout(1);
        boolean boolean28 = undertowEmbeddedServletContainerFactory17.isAccessLogEnabled();
        java.lang.String str29 = undertowEmbeddedServletContainerFactory17.getListenAddress();
        undertowEmbeddedServletContainerFactory17.useForwardHeaders = true;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings32);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray37 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList38 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList38, undertowBuilderCustomizerArray37);
        undertowEmbeddedServletContainerFactory36.builderCustomizers = undertowBuilderCustomizerList38;
        java.io.File file41 = null;
        undertowEmbeddedServletContainerFactory36.setSessionStoreDir(file41);
        org.springframework.core.io.ResourceLoader resourceLoader43 = undertowEmbeddedServletContainerFactory36.resourceLoader;
        undertowEmbeddedServletContainerFactory36.setRegisterJspServlet(true);
        undertowEmbeddedServletContainerFactory36.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory50.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.xnio.XnioWorker xnioWorker55 = undertowEmbeddedServletContainerFactory54.createWorker();
        undertowEmbeddedServletContainerFactory54.accessLogEnabled = true;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo58 = null;
        undertowEmbeddedServletContainerFactory54.configureErrorPages(deploymentInfo58);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList60 = undertowEmbeddedServletContainerFactory54.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory50.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList60;
        undertowEmbeddedServletContainerFactory36.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList60;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList60;
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        io.undertow.server.HttpHandler httpHandler66 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.accesslog.AccessLogHandler accessLogHandler67 = undertowEmbeddedServletContainerFactory0.createAccessLogHandler(httpHandler66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Access log directory is not set");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1800 + "'", int18 == 1800);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "0.0.0.0" + "'", str29, "0.0.0.0");
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(resourceLoader43);
        org.junit.Assert.assertNotNull(xnioWorker55);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList60);
    }

    @Test
    public void test14048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14048");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        undertowEmbeddedServletContainerFactory0.workerThreads = 1;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory0.ioThreads;
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) (-1));
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int14 = undertowEmbeddedServletContainerFactory13.getSessionTimeout();
        boolean boolean15 = undertowEmbeddedServletContainerFactory13.isPersistSession();
        undertowEmbeddedServletContainerFactory13.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder19 = undertowEmbeddedServletContainerFactory13.createBuilder((-1));
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = undertowEmbeddedServletContainerFactory13.getErrorPages();
        undertowEmbeddedServletContainerFactory13.useForwardHeaders = false;
        java.lang.String str23 = undertowEmbeddedServletContainerFactory13.getContextPath();
        undertowEmbeddedServletContainerFactory13.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory13.ioThreads = 10;
        undertowEmbeddedServletContainerFactory13.buffersPerRegion = 0;
        undertowEmbeddedServletContainerFactory13.setWorkerThreads((java.lang.Integer) (-1));
        int int32 = undertowEmbeddedServletContainerFactory13.getPort();
        undertowEmbeddedServletContainerFactory13.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory13.setIoThreads((java.lang.Integer) 8080);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int38 = undertowEmbeddedServletContainerFactory37.getPort();
        java.lang.Integer int39 = undertowEmbeddedServletContainerFactory37.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader40 = null;
        undertowEmbeddedServletContainerFactory37.setResourceLoader(resourceLoader40);
        undertowEmbeddedServletContainerFactory37.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int45 = undertowEmbeddedServletContainerFactory44.getSessionTimeout();
        boolean boolean46 = undertowEmbeddedServletContainerFactory44.isPersistSession();
        undertowEmbeddedServletContainerFactory44.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder50 = undertowEmbeddedServletContainerFactory44.createBuilder((-1));
        undertowEmbeddedServletContainerFactory44.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int54 = undertowEmbeddedServletContainerFactory53.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray55 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory53.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray55);
        undertowEmbeddedServletContainerFactory44.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray55);
        undertowEmbeddedServletContainerFactory37.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray55);
        undertowEmbeddedServletContainerFactory13.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray55);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray55);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1800 + "'", int14 == 1800);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(errorPageSet20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 8080 + "'", int32 == 8080);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 8080 + "'", int38 == 8080);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1800 + "'", int45 == 1800);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 8080 + "'", int54 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray55);
    }

    @Test
    public void test14049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14049");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 100);
        int int9 = undertowEmbeddedServletContainerFactory0.getPort();
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 1800);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8080 + "'", int9 == 8080);
    }

    @Test
    public void test14050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14050");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        boolean boolean3 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory7.setJspServletClassName("");
        int int10 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory7.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "";
        java.lang.String str15 = undertowEmbeddedServletContainerFactory0.getContextPath();
        boolean boolean16 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo17 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.configureMimeMappings(deploymentInfo17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test14051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14051");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList3, undertowDeploymentInfoCustomizerArray2);
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList3;
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        java.lang.String str9 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList12;
        undertowEmbeddedServletContainerFactory10.workerThreads = 1;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection17 = undertowEmbeddedServletContainerFactory10.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory10.bufferSize = 10;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = undertowEmbeddedServletContainerFactory10.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet20);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory23.setWorkerThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder27 = undertowEmbeddedServletContainerFactory23.createBuilder((int) (byte) -1);
        io.undertow.server.handlers.resource.ResourceManager resourceManager28 = undertowEmbeddedServletContainerFactory23.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int30 = undertowEmbeddedServletContainerFactory29.getSessionTimeout();
        boolean boolean31 = undertowEmbeddedServletContainerFactory29.isPersistSession();
        java.io.File file32 = undertowEmbeddedServletContainerFactory29.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = undertowEmbeddedServletContainerFactory29.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = undertowEmbeddedServletContainerFactory29.getMimeMappings();
        java.lang.Integer int35 = undertowEmbeddedServletContainerFactory29.buffersPerRegion;
        undertowEmbeddedServletContainerFactory29.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int39 = undertowEmbeddedServletContainerFactory38.getSessionTimeout();
        boolean boolean40 = undertowEmbeddedServletContainerFactory38.isPersistSession();
        undertowEmbeddedServletContainerFactory38.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder44 = undertowEmbeddedServletContainerFactory38.createBuilder((-1));
        undertowEmbeddedServletContainerFactory38.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int48 = undertowEmbeddedServletContainerFactory47.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray49 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory47.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray49);
        undertowEmbeddedServletContainerFactory38.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray49);
        undertowEmbeddedServletContainerFactory29.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray49);
        undertowEmbeddedServletContainerFactory23.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray49);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray49);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection55 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "0.0.0.0" + "'", str9, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection17);
        org.junit.Assert.assertNotNull(errorPageSet20);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(resourceManager28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1800 + "'", int30 == 1800);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1800 + "'", int39 == 1800);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 8080 + "'", int48 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray49);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection55);
    }

    @Test
    public void test14052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14052");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        boolean boolean3 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader5);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = null;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList7;
        java.lang.String str9 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory12.setBuffersPerRegion((java.lang.Integer) 1);
        boolean boolean19 = undertowEmbeddedServletContainerFactory12.accessLogEnabled;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int21 = undertowEmbeddedServletContainerFactory20.getSessionTimeout();
        boolean boolean22 = undertowEmbeddedServletContainerFactory20.isPersistSession();
        undertowEmbeddedServletContainerFactory20.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl25 = null;
        undertowEmbeddedServletContainerFactory20.setSsl(ssl25);
        org.springframework.boot.context.embedded.JspServlet jspServlet27 = undertowEmbeddedServletContainerFactory20.getJspServlet();
        undertowEmbeddedServletContainerFactory12.setJspServlet(jspServlet27);
        undertowEmbeddedServletContainerFactory12.setPersistSession(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList31 = undertowEmbeddedServletContainerFactory12.builderCustomizers;
        undertowEmbeddedServletContainerFactory12.buffersPerRegion = 8080;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection34 = undertowEmbeddedServletContainerFactory12.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection34);
        java.lang.Integer int36 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "0.0.0.0" + "'", str9, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1800 + "'", int21 == 1800);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(jspServlet27);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList31);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection34);
        org.junit.Assert.assertNull(int36);
    }

    @Test
    public void test14053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14053");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList14, undertowBuilderCustomizerArray13);
        undertowEmbeddedServletContainerFactory12.builderCustomizers = undertowBuilderCustomizerList14;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection17 = undertowEmbeddedServletContainerFactory12.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection17);
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory0.workerThreads = 100;
        java.io.File file23 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file23;
        boolean boolean25 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection17);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test14054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14054");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        undertowEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader5);
        undertowEmbeddedServletContainerFactory2.setRegisterDefaultServlet(true);
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory2.buffersPerRegion;
        int int10 = undertowEmbeddedServletContainerFactory2.getSessionTimeout();
        java.lang.String str11 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        undertowEmbeddedServletContainerFactory2.setBuffersPerRegion((java.lang.Integer) 35);
        io.undertow.server.handlers.resource.ResourceManager resourceManager14 = undertowEmbeddedServletContainerFactory2.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory2.setUseForwardHeaders(false);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(resourceManager14);
    }

    @Test
    public void test14055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14055");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        undertowEmbeddedServletContainerFactory5.setPort(0);
        java.net.InetAddress inetAddress10 = null;
        undertowEmbeddedServletContainerFactory5.setAddress(inetAddress10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList16 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList16, undertowBuilderCustomizerArray15);
        undertowEmbeddedServletContainerFactory12.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList16);
        undertowEmbeddedServletContainerFactory5.builderCustomizers = undertowBuilderCustomizerList16;
        undertowEmbeddedServletContainerFactory2.builderCustomizers = undertowBuilderCustomizerList16;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getSessionTimeout();
        boolean boolean23 = undertowEmbeddedServletContainerFactory21.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList24 = undertowEmbeddedServletContainerFactory21.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet25 = undertowEmbeddedServletContainerFactory21.getJspServlet();
        undertowEmbeddedServletContainerFactory21.directBuffers = true;
        java.io.File file28 = null;
        undertowEmbeddedServletContainerFactory21.setDocumentRoot(file28);
        undertowEmbeddedServletContainerFactory21.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray32 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory21.addBuilderCustomizers(undertowBuilderCustomizerArray32);
        org.springframework.boot.context.embedded.Compression compression34 = null;
        undertowEmbeddedServletContainerFactory21.setCompression(compression34);
        undertowEmbeddedServletContainerFactory21.setBuffersPerRegion((java.lang.Integer) 1800);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo38 = null;
        undertowEmbeddedServletContainerFactory21.configureErrorPages(deploymentInfo38);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection40 = undertowEmbeddedServletContainerFactory21.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory2.setBuilderCustomizers(undertowBuilderCustomizerCollection40);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection42 = undertowEmbeddedServletContainerFactory2.getBuilderCustomizers();
        io.undertow.server.handlers.resource.ResourceManager resourceManager43 = undertowEmbeddedServletContainerFactory2.getDocumentRootResourceManager();
        java.io.File file44 = undertowEmbeddedServletContainerFactory2.getSessionStoreDir();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1800 + "'", int22 == 1800);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList24);
        org.junit.Assert.assertNotNull(jspServlet25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray32);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection40);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection42);
        org.junit.Assert.assertNotNull(resourceManager43);
        org.junit.Assert.assertNull(file44);
    }

    @Test
    public void test14056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14056");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection5 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        java.io.File file6 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        int int7 = undertowEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getSessionTimeout();
        boolean boolean12 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = undertowEmbeddedServletContainerFactory10.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet14 = undertowEmbeddedServletContainerFactory10.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList15 = undertowEmbeddedServletContainerFactory10.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory9.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList15;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList15;
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory0.getAddress();
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        boolean boolean23 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8080 + "'", int7 == 8080);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1800 + "'", int11 == 1800);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList13);
        org.junit.Assert.assertNotNull(jspServlet14);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList15);
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test14057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14057");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file15);
        java.lang.String str17 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        io.undertow.server.handlers.resource.ResourceManager resourceManager18 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        boolean boolean19 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(resourceManager18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test14058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14058");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 1);
        boolean boolean4 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory8.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList9);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection11 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 10;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.setContextPath("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/' and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection11);
    }

    @Test
    public void test14059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14059");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPort(0);
        java.net.InetAddress inetAddress5 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress5);
        boolean boolean7 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        boolean boolean8 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test14060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14060");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file9);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("0.0.0.0");
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.createAccessLogDirectoryIfNecessary();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Access log directory is not set");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
    }

    @Test
    public void test14061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14061");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory1.ioThreads = 1;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        undertowEmbeddedServletContainerFactory1.accessLogPattern = "hi!";
        io.undertow.servlet.api.DeploymentInfo deploymentInfo9 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo9);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test14062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14062");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        boolean boolean3 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.lang.Boolean boolean4 = undertowEmbeddedServletContainerFactory0.directBuffers;
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader5);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer9 };
        initializer7.initializers = servletContextInitializerArray10;
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray10);
        java.lang.Integer int13 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNull(int13);
    }

    @Test
    public void test14063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14063");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "hi!";
        boolean boolean4 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test14064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14064");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        int int3 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet4 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        java.io.File file5 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean8 = undertowEmbeddedServletContainerFactory7.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory7.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory7.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory13.accessLogEnabled = false;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList17, undertowBuilderCustomizerArray16);
        undertowEmbeddedServletContainerFactory13.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList17);
        undertowEmbeddedServletContainerFactory7.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList17);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList17;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection26 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        java.lang.String str27 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        org.springframework.boot.context.embedded.Compression compression28 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression28);
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1800 + "'", int3 == 1800);
        org.junit.Assert.assertNotNull(errorPageSet4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection26);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test14065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14065");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder5 = undertowEmbeddedServletContainerFactory1.createBuilder((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.ioThreads = 10;
        undertowEmbeddedServletContainerFactory1.bufferSize = 0;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection10 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 52);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection10);
    }

    @Test
    public void test14066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14066");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        boolean boolean4 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.close();
        jarResourceManager0.close();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "0.0.0.0";
        java.lang.String str10 = jarResourceManager0.jarPath;
        java.lang.String str11 = jarResourceManager0.jarPath;
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourceManager0.removeResourceChangeListener(resourceChangeListener12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "0.0.0.0" + "'", str10, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "0.0.0.0" + "'", str11, "0.0.0.0");
    }

    @Test
    public void test14067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14067");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory2.setPort((-1));
        java.lang.Integer int28 = undertowEmbeddedServletContainerFactory2.bufferSize;
        io.undertow.Undertow.Builder builder30 = undertowEmbeddedServletContainerFactory2.createBuilder(0);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection31 = undertowEmbeddedServletContainerFactory2.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int33 = undertowEmbeddedServletContainerFactory32.getPort();
        java.lang.Integer int34 = undertowEmbeddedServletContainerFactory32.bufferSize;
        int int35 = undertowEmbeddedServletContainerFactory32.getSessionTimeout();
        java.lang.Boolean boolean36 = undertowEmbeddedServletContainerFactory32.directBuffers;
        org.springframework.core.io.ResourceLoader resourceLoader37 = null;
        undertowEmbeddedServletContainerFactory32.resourceLoader = resourceLoader37;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList39 = undertowEmbeddedServletContainerFactory32.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory2.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList39;
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 8080 + "'", int33 == 8080);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1800 + "'", int35 == 1800);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList39);
    }

    @Test
    public void test14068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14068");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPort(0);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        org.springframework.boot.context.embedded.JspServlet jspServlet7 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection8 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection9 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory12.setPersistSession(true);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = undertowEmbeddedServletContainerFactory12.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet19);
        java.lang.String str21 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        boolean boolean22 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        java.io.File file25 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(jspServlet7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(file25);
    }

    @Test
    public void test14069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14069");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.String str9 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.Ssl ssl11 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl11);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
    }

    @Test
    public void test14070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14070");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file5;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression8);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo10 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo10);
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 35);
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        java.lang.Boolean boolean18 = undertowEmbeddedServletContainerFactory0.directBuffers;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test14071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14071");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory2.setPort((-1));
        java.lang.Integer int28 = undertowEmbeddedServletContainerFactory2.bufferSize;
        io.undertow.Undertow.Builder builder30 = undertowEmbeddedServletContainerFactory2.createBuilder(0);
        java.io.File file31 = undertowEmbeddedServletContainerFactory2.getSessionStoreDir();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList32 = undertowEmbeddedServletContainerFactory2.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int34 = undertowEmbeddedServletContainerFactory33.getSessionTimeout();
        boolean boolean35 = undertowEmbeddedServletContainerFactory33.isPersistSession();
        undertowEmbeddedServletContainerFactory33.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory33.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray40 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory33.addErrorPages(errorPageArray40);
        undertowEmbeddedServletContainerFactory2.addErrorPages(errorPageArray40);
        java.lang.Boolean boolean43 = undertowEmbeddedServletContainerFactory2.directBuffers;
        org.springframework.core.io.ResourceLoader resourceLoader44 = null;
        undertowEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader44);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1800 + "'", int34 == 1800);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(errorPageArray40);
        org.junit.Assert.assertNull(boolean43);
    }

    @Test
    public void test14072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14072");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("hi!");
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 1);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo12 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo12);
        org.springframework.boot.context.embedded.Compression compression14 = undertowEmbeddedServletContainerFactory0.getCompression();
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertNull(compression14);
    }

    @Test
    public void test14073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14073");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        boolean boolean3 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader5);
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file7;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file10);
        java.lang.String str12 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        boolean boolean13 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        java.lang.String str14 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory16.ioThreads = 1;
        java.lang.String str19 = undertowEmbeddedServletContainerFactory16.getDisplayName();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = undertowEmbeddedServletContainerFactory16.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings20);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(mimeMappings20);
    }

    @Test
    public void test14074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14074");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory0.ioThreads;
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory0.workerThreads;
        java.lang.String str9 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        java.net.InetAddress inetAddress10 = undertowEmbeddedServletContainerFactory0.getAddress();
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 100;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "0.0.0.0" + "'", str9, "0.0.0.0");
        org.junit.Assert.assertNull(inetAddress10);
    }

    @Test
    public void test14075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14075");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 1);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file4);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        undertowEmbeddedServletContainerFactory11.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder17 = undertowEmbeddedServletContainerFactory11.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager18 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer20 = undertowEmbeddedServletContainerFactory6.getUndertowEmbeddedServletContainer(builder17, deploymentManager18, (int) (short) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getSessionTimeout();
        boolean boolean23 = undertowEmbeddedServletContainerFactory21.isPersistSession();
        undertowEmbeddedServletContainerFactory21.setPersistSession(false);
        undertowEmbeddedServletContainerFactory21.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList28 = undertowEmbeddedServletContainerFactory21.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory21.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int32 = undertowEmbeddedServletContainerFactory31.getSessionTimeout();
        boolean boolean33 = undertowEmbeddedServletContainerFactory31.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList34 = undertowEmbeddedServletContainerFactory31.builderCustomizers;
        undertowEmbeddedServletContainerFactory21.builderCustomizers = undertowBuilderCustomizerList34;
        undertowEmbeddedServletContainerFactory6.builderCustomizers = undertowBuilderCustomizerList34;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList34;
        java.lang.Integer int38 = undertowEmbeddedServletContainerFactory0.workerThreads;
        java.lang.String str39 = undertowEmbeddedServletContainerFactory0.getContextPath();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1800 + "'", int22 == 1800);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1800 + "'", int32 == 1800);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList34);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
    }

    @Test
    public void test14076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14076");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        undertowEmbeddedServletContainerFactory7.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory7.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        undertowEmbeddedServletContainerFactory14.setPersistSession(false);
        undertowEmbeddedServletContainerFactory14.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList21 = undertowEmbeddedServletContainerFactory14.deploymentInfoCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList22 = undertowEmbeddedServletContainerFactory14.builderCustomizers;
        undertowEmbeddedServletContainerFactory7.builderCustomizers = undertowBuilderCustomizerList22;
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList22);
        int int25 = undertowEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int27 = undertowEmbeddedServletContainerFactory26.getSessionTimeout();
        boolean boolean28 = undertowEmbeddedServletContainerFactory26.isPersistSession();
        undertowEmbeddedServletContainerFactory26.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory26.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory26.setDisplayName("hi!");
        boolean boolean35 = undertowEmbeddedServletContainerFactory26.isRegisterDefaultServlet();
        boolean boolean36 = undertowEmbeddedServletContainerFactory26.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int38 = undertowEmbeddedServletContainerFactory37.getSessionTimeout();
        boolean boolean39 = undertowEmbeddedServletContainerFactory37.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList40 = undertowEmbeddedServletContainerFactory37.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet41 = undertowEmbeddedServletContainerFactory37.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int43 = undertowEmbeddedServletContainerFactory42.getSessionTimeout();
        boolean boolean44 = undertowEmbeddedServletContainerFactory42.isPersistSession();
        undertowEmbeddedServletContainerFactory42.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder48 = undertowEmbeddedServletContainerFactory42.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager49 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer51 = undertowEmbeddedServletContainerFactory37.getUndertowEmbeddedServletContainer(builder48, deploymentManager49, (int) (short) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int53 = undertowEmbeddedServletContainerFactory52.getSessionTimeout();
        boolean boolean54 = undertowEmbeddedServletContainerFactory52.isPersistSession();
        undertowEmbeddedServletContainerFactory52.setPersistSession(false);
        undertowEmbeddedServletContainerFactory52.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList59 = undertowEmbeddedServletContainerFactory52.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory52.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int63 = undertowEmbeddedServletContainerFactory62.getSessionTimeout();
        boolean boolean64 = undertowEmbeddedServletContainerFactory62.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList65 = undertowEmbeddedServletContainerFactory62.builderCustomizers;
        undertowEmbeddedServletContainerFactory52.builderCustomizers = undertowBuilderCustomizerList65;
        undertowEmbeddedServletContainerFactory37.builderCustomizers = undertowBuilderCustomizerList65;
        undertowEmbeddedServletContainerFactory26.builderCustomizers = undertowBuilderCustomizerList65;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int70 = undertowEmbeddedServletContainerFactory69.getSessionTimeout();
        boolean boolean71 = undertowEmbeddedServletContainerFactory69.isPersistSession();
        undertowEmbeddedServletContainerFactory69.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory69.setBuffersPerRegion((java.lang.Integer) 1);
        boolean boolean76 = undertowEmbeddedServletContainerFactory69.accessLogEnabled;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int78 = undertowEmbeddedServletContainerFactory77.getSessionTimeout();
        boolean boolean79 = undertowEmbeddedServletContainerFactory77.isPersistSession();
        undertowEmbeddedServletContainerFactory77.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl82 = null;
        undertowEmbeddedServletContainerFactory77.setSsl(ssl82);
        org.springframework.boot.context.embedded.JspServlet jspServlet84 = undertowEmbeddedServletContainerFactory77.getJspServlet();
        undertowEmbeddedServletContainerFactory69.setJspServlet(jspServlet84);
        undertowEmbeddedServletContainerFactory69.setPersistSession(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList88 = undertowEmbeddedServletContainerFactory69.builderCustomizers;
        undertowEmbeddedServletContainerFactory26.builderCustomizers = undertowBuilderCustomizerList88;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList88;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Customizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 8080 + "'", int25 == 8080);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1800 + "'", int27 == 1800);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1800 + "'", int38 == 1800);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList40);
        org.junit.Assert.assertNotNull(jspServlet41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1800 + "'", int43 == 1800);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1800 + "'", int53 == 1800);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList59);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1800 + "'", int63 == 1800);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList65);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1800 + "'", int70 == 1800);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1800 + "'", int78 == 1800);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(jspServlet84);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList88);
    }

    @Test
    public void test14077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14077");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file15);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int18 = undertowEmbeddedServletContainerFactory17.getSessionTimeout();
        boolean boolean19 = undertowEmbeddedServletContainerFactory17.isPersistSession();
        java.io.File file20 = undertowEmbeddedServletContainerFactory17.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings22);
        org.springframework.core.io.ResourceLoader resourceLoader24 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader24);
        org.springframework.boot.context.embedded.Ssl ssl26 = undertowEmbeddedServletContainerFactory0.getSsl();
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        java.net.InetAddress inetAddress29 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress29);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 32;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1800 + "'", int18 == 1800);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNull(ssl26);
    }

    @Test
    public void test14078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14078");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory2.workerThreads;
        org.springframework.boot.context.embedded.Compression compression6 = undertowEmbeddedServletContainerFactory2.getCompression();
        undertowEmbeddedServletContainerFactory2.setDisplayName("");
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(compression6);
    }

    @Test
    public void test14079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14079");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        io.undertow.Undertow.Builder builder8 = undertowEmbeddedServletContainerFactory0.createBuilder(10);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str11 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        undertowEmbeddedServletContainerFactory12.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray23 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory21.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray23);
        undertowEmbeddedServletContainerFactory12.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray23);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray23);
        java.lang.String str27 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        undertowEmbeddedServletContainerFactory28.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory28.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory28.setDisplayName("hi!");
        boolean boolean37 = undertowEmbeddedServletContainerFactory28.isRegisterDefaultServlet();
        java.io.File file38 = null;
        undertowEmbeddedServletContainerFactory28.accessLogDirectory = file38;
        io.undertow.server.handlers.resource.ResourceManager resourceManager40 = undertowEmbeddedServletContainerFactory28.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int42 = undertowEmbeddedServletContainerFactory41.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer44 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap43);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer46 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap45);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer48 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap47);
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer50 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap49);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray51 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer44, initParameterConfiguringServletContextInitializer46, initParameterConfiguringServletContextInitializer48, initParameterConfiguringServletContextInitializer50 };
        undertowEmbeddedServletContainerFactory41.addInitializers(servletContextInitializerArray51);
        undertowEmbeddedServletContainerFactory28.addInitializers(servletContextInitializerArray51);
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray51);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 32);
        java.io.File file57 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file57);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8080 + "'", int22 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray23);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(resourceManager40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1800 + "'", int42 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray51);
    }

    @Test
    public void test14080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14080");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(1);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray2 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet3 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet3, errorPageArray2);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray7 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList8, undertowBuilderCustomizerArray7);
        undertowEmbeddedServletContainerFactory6.builderCustomizers = undertowBuilderCustomizerList8;
        java.io.File file11 = null;
        undertowEmbeddedServletContainerFactory6.setSessionStoreDir(file11);
        undertowEmbeddedServletContainerFactory6.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int16 = undertowEmbeddedServletContainerFactory15.getSessionTimeout();
        boolean boolean17 = undertowEmbeddedServletContainerFactory15.isPersistSession();
        undertowEmbeddedServletContainerFactory15.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl20 = null;
        undertowEmbeddedServletContainerFactory15.setSsl(ssl20);
        java.lang.String str22 = undertowEmbeddedServletContainerFactory15.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int24 = undertowEmbeddedServletContainerFactory23.getSessionTimeout();
        boolean boolean25 = undertowEmbeddedServletContainerFactory23.isPersistSession();
        undertowEmbeddedServletContainerFactory23.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory23.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int31 = undertowEmbeddedServletContainerFactory30.getSessionTimeout();
        boolean boolean32 = undertowEmbeddedServletContainerFactory30.isPersistSession();
        java.io.File file33 = undertowEmbeddedServletContainerFactory30.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList34 = undertowEmbeddedServletContainerFactory30.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory23.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList34;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory38.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int42 = undertowEmbeddedServletContainerFactory41.getSessionTimeout();
        boolean boolean43 = undertowEmbeddedServletContainerFactory41.isPersistSession();
        undertowEmbeddedServletContainerFactory41.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory41.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray48 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory41.addErrorPages(errorPageArray48);
        undertowEmbeddedServletContainerFactory38.addErrorPages(errorPageArray48);
        undertowEmbeddedServletContainerFactory23.addErrorPages(errorPageArray48);
        undertowEmbeddedServletContainerFactory15.addErrorPages(errorPageArray48);
        undertowEmbeddedServletContainerFactory6.addErrorPages(errorPageArray48);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray48);
        org.junit.Assert.assertNotNull(errorPageArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1800 + "'", int16 == 1800);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1800 + "'", int24 == 1800);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1800 + "'", int31 == 1800);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList34);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1800 + "'", int42 == 1800);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(errorPageArray48);
    }

    @Test
    public void test14081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14081");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file5);
        org.springframework.core.io.ResourceLoader resourceLoader7 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList12 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.io.File file13 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file13;
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader15);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo17 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo17);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 0;
        java.lang.String str21 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int23 = undertowEmbeddedServletContainerFactory22.getSessionTimeout();
        boolean boolean24 = undertowEmbeddedServletContainerFactory22.isPersistSession();
        undertowEmbeddedServletContainerFactory22.setPort(0);
        undertowEmbeddedServletContainerFactory22.useForwardHeaders = false;
        java.lang.String str29 = undertowEmbeddedServletContainerFactory22.getDisplayName();
        undertowEmbeddedServletContainerFactory22.setDirectBuffers((java.lang.Boolean) true);
        java.lang.Integer int32 = undertowEmbeddedServletContainerFactory22.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray34 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList35 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList35, undertowBuilderCustomizerArray34);
        undertowEmbeddedServletContainerFactory33.builderCustomizers = undertowBuilderCustomizerList35;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection38 = undertowEmbeddedServletContainerFactory33.getBuilderCustomizers();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo39 = null;
        undertowEmbeddedServletContainerFactory33.configureErrorPages(deploymentInfo39);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList41 = undertowEmbeddedServletContainerFactory33.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory22.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList41;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList41;
        java.lang.Class<?> wildcardClass44 = undertowEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(resourceLoader7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList12);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1800 + "'", int23 == 1800);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection38);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList41);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test14082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14082");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList5 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList9;
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        java.lang.String str13 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        java.lang.String str14 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        org.springframework.boot.context.embedded.Compression compression15 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression15);
        org.springframework.boot.context.embedded.Compression compression17 = undertowEmbeddedServletContainerFactory0.getCompression();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0.0.0.0" + "'", str13, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0.0.0.0" + "'", str14, "0.0.0.0");
        org.junit.Assert.assertNull(compression17);
    }

    @Test
    public void test14083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14083");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        int int3 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        int int4 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file5);
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("");
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1800 + "'", int3 == 1800);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1800 + "'", int4 == 1800);
    }

    @Test
    public void test14084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14084");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory9.ioThreads = 1;
        undertowEmbeddedServletContainerFactory9.setPort(0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = undertowEmbeddedServletContainerFactory14.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet18 = undertowEmbeddedServletContainerFactory14.getJspServlet();
        boolean boolean19 = undertowEmbeddedServletContainerFactory14.useForwardHeaders;
        java.net.InetAddress inetAddress20 = undertowEmbeddedServletContainerFactory14.getAddress();
        java.lang.String str21 = undertowEmbeddedServletContainerFactory14.getDisplayName();
        undertowEmbeddedServletContainerFactory14.directBuffers = false;
        org.springframework.boot.context.embedded.Ssl ssl24 = undertowEmbeddedServletContainerFactory14.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int26 = undertowEmbeddedServletContainerFactory25.getSessionTimeout();
        boolean boolean27 = undertowEmbeddedServletContainerFactory25.isPersistSession();
        undertowEmbeddedServletContainerFactory25.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory25.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory25.setDisplayName("hi!");
        boolean boolean34 = undertowEmbeddedServletContainerFactory25.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int36 = undertowEmbeddedServletContainerFactory35.getSessionTimeout();
        boolean boolean37 = undertowEmbeddedServletContainerFactory35.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList38 = undertowEmbeddedServletContainerFactory35.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet39 = undertowEmbeddedServletContainerFactory35.getJspServlet();
        undertowEmbeddedServletContainerFactory35.directBuffers = true;
        java.io.File file42 = null;
        undertowEmbeddedServletContainerFactory35.setDocumentRoot(file42);
        undertowEmbeddedServletContainerFactory35.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray46 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory35.addBuilderCustomizers(undertowBuilderCustomizerArray46);
        undertowEmbeddedServletContainerFactory25.addBuilderCustomizers(undertowBuilderCustomizerArray46);
        undertowEmbeddedServletContainerFactory14.addBuilderCustomizers(undertowBuilderCustomizerArray46);
        undertowEmbeddedServletContainerFactory9.addBuilderCustomizers(undertowBuilderCustomizerArray46);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray46);
        io.undertow.Undertow.Builder builder53 = undertowEmbeddedServletContainerFactory1.createBuilder((int) '#');
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList17);
        org.junit.Assert.assertNotNull(jspServlet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(inetAddress20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(ssl24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1800 + "'", int26 == 1800);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1800 + "'", int36 == 1800);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList38);
        org.junit.Assert.assertNotNull(jspServlet39);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray46);
        org.junit.Assert.assertNotNull(builder53);
    }

    @Test
    public void test14085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14085");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection5 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        undertowEmbeddedServletContainerFactory6.setPersistSession(false);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList13 = undertowEmbeddedServletContainerFactory6.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory6.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList19 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        undertowEmbeddedServletContainerFactory6.builderCustomizers = undertowBuilderCustomizerList19;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList19;
        java.lang.String str22 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = true;
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("0.0.0.0");
        java.io.File file27 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file27;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo29 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo29);
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.server.handlers.resource.ResourceManager resourceManager33 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(resourceManager33);
    }

    @Test
    public void test14086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14086");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList4 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        int int5 = undertowEmbeddedServletContainerFactory0.getPort();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo6 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo6);
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 35);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8080 + "'", int5 == 8080);
    }

    @Test
    public void test14087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14087");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory2.setBufferSize((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory2.setRegisterDefaultServlet(false);
        int int7 = undertowEmbeddedServletContainerFactory2.getPort();
        java.net.InetAddress inetAddress8 = null;
        undertowEmbeddedServletContainerFactory2.setAddress(inetAddress8);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test14088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14088");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList14, undertowBuilderCustomizerArray13);
        undertowEmbeddedServletContainerFactory12.builderCustomizers = undertowBuilderCustomizerList14;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection17 = undertowEmbeddedServletContainerFactory12.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection17);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.io.File file20 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file20);
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray22 = undertowEmbeddedServletContainerFactory0.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection17);
        org.junit.Assert.assertNotNull(mimeMappings19);
    }

    @Test
    public void test14089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14089");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        boolean boolean10 = undertowEmbeddedServletContainerFactory9.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        undertowEmbeddedServletContainerFactory11.setPersistSession(false);
        undertowEmbeddedServletContainerFactory11.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList18 = undertowEmbeddedServletContainerFactory11.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory9.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList18;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList18;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList23 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList23, undertowBuilderCustomizerArray22);
        undertowEmbeddedServletContainerFactory21.builderCustomizers = undertowBuilderCustomizerList23;
        java.io.File file26 = null;
        undertowEmbeddedServletContainerFactory21.setSessionStoreDir(file26);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection28 = undertowEmbeddedServletContainerFactory21.getDeploymentInfoCustomizers();
        java.io.File file29 = null;
        undertowEmbeddedServletContainerFactory21.setAccessLogDirectory(file29);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int32 = undertowEmbeddedServletContainerFactory31.getSessionTimeout();
        boolean boolean33 = undertowEmbeddedServletContainerFactory31.isPersistSession();
        undertowEmbeddedServletContainerFactory31.setPersistSession(false);
        undertowEmbeddedServletContainerFactory31.setUseForwardHeaders(true);
        io.undertow.server.handlers.resource.ResourceManager resourceManager38 = undertowEmbeddedServletContainerFactory31.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int40 = undertowEmbeddedServletContainerFactory39.getSessionTimeout();
        boolean boolean41 = undertowEmbeddedServletContainerFactory39.isPersistSession();
        java.io.File file42 = undertowEmbeddedServletContainerFactory39.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = undertowEmbeddedServletContainerFactory39.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings44 = undertowEmbeddedServletContainerFactory39.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int46 = undertowEmbeddedServletContainerFactory45.getSessionTimeout();
        boolean boolean47 = undertowEmbeddedServletContainerFactory45.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList48 = undertowEmbeddedServletContainerFactory45.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet49 = undertowEmbeddedServletContainerFactory45.getJspServlet();
        undertowEmbeddedServletContainerFactory39.setJspServlet(jspServlet49);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray52 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList53 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList53, undertowBuilderCustomizerArray52);
        undertowEmbeddedServletContainerFactory51.builderCustomizers = undertowBuilderCustomizerList53;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection56 = undertowEmbeddedServletContainerFactory51.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory39.setBuilderCustomizers(undertowBuilderCustomizerCollection56);
        undertowEmbeddedServletContainerFactory31.setBuilderCustomizers(undertowBuilderCustomizerCollection56);
        undertowEmbeddedServletContainerFactory21.setBuilderCustomizers(undertowBuilderCustomizerCollection56);
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection56);
        org.springframework.boot.context.embedded.Ssl ssl61 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl61);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int64 = undertowEmbeddedServletContainerFactory63.getSessionTimeout();
        boolean boolean65 = undertowEmbeddedServletContainerFactory63.isPersistSession();
        java.io.File file66 = undertowEmbeddedServletContainerFactory63.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList67 = undertowEmbeddedServletContainerFactory63.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList67;
        java.io.File file69 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file69);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1800 + "'", int32 == 1800);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resourceManager38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1800 + "'", int40 == 1800);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNotNull(mimeMappings44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1800 + "'", int46 == 1800);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList48);
        org.junit.Assert.assertNotNull(jspServlet49);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection56);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1800 + "'", int64 == 1800);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList67);
    }

    @Test
    public void test14090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14090");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = true;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet9 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        undertowEmbeddedServletContainerFactory0.ioThreads = (-1);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        org.springframework.boot.context.embedded.Compression compression14 = undertowEmbeddedServletContainerFactory0.getCompression();
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(errorPageSet9);
        org.junit.Assert.assertNull(compression14);
    }

    @Test
    public void test14091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14091");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = true;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet9 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader10);
        undertowEmbeddedServletContainerFactory0.bufferSize = 100;
        java.lang.Boolean boolean14 = undertowEmbeddedServletContainerFactory0.directBuffers;
        undertowEmbeddedServletContainerFactory0.bufferSize = (-1);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory0.getSsl();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(errorPageSet9);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(ssl17);
    }

    @Test
    public void test14092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14092");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.net.InetAddress inetAddress9 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress9);
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection13 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.setDisplayName("");
        org.springframework.boot.context.embedded.Ssl ssl16 = undertowEmbeddedServletContainerFactory0.getSsl();
        org.xnio.XnioWorker xnioWorker17 = undertowEmbeddedServletContainerFactory0.createWorker();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getSessionTimeout();
        boolean boolean20 = undertowEmbeddedServletContainerFactory18.isPersistSession();
        java.io.File file21 = undertowEmbeddedServletContainerFactory18.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = undertowEmbeddedServletContainerFactory18.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = undertowEmbeddedServletContainerFactory18.getMimeMappings();
        java.lang.Integer int24 = undertowEmbeddedServletContainerFactory18.buffersPerRegion;
        org.springframework.boot.context.embedded.Ssl ssl25 = undertowEmbeddedServletContainerFactory18.getSsl();
        java.io.File file26 = null;
        undertowEmbeddedServletContainerFactory18.setDocumentRoot(file26);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        undertowEmbeddedServletContainerFactory28.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory28.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory28.setDisplayName("hi!");
        boolean boolean37 = undertowEmbeddedServletContainerFactory28.isRegisterDefaultServlet();
        boolean boolean38 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList39 = undertowEmbeddedServletContainerFactory28.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int41 = undertowEmbeddedServletContainerFactory40.getPort();
        java.lang.Integer int42 = undertowEmbeddedServletContainerFactory40.bufferSize;
        boolean boolean43 = undertowEmbeddedServletContainerFactory40.accessLogEnabled;
        java.lang.String str44 = undertowEmbeddedServletContainerFactory40.accessLogPattern;
        org.springframework.core.io.ResourceLoader resourceLoader45 = null;
        undertowEmbeddedServletContainerFactory40.setResourceLoader(resourceLoader45);
        boolean boolean47 = undertowEmbeddedServletContainerFactory40.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int49 = undertowEmbeddedServletContainerFactory48.getSessionTimeout();
        boolean boolean50 = undertowEmbeddedServletContainerFactory48.isPersistSession();
        undertowEmbeddedServletContainerFactory48.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl53 = null;
        undertowEmbeddedServletContainerFactory48.setSsl(ssl53);
        org.springframework.boot.context.embedded.JspServlet jspServlet55 = undertowEmbeddedServletContainerFactory48.getJspServlet();
        undertowEmbeddedServletContainerFactory40.setJspServlet(jspServlet55);
        undertowEmbeddedServletContainerFactory28.setJspServlet(jspServlet55);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray58 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory28.addBuilderCustomizers(undertowBuilderCustomizerArray58);
        undertowEmbeddedServletContainerFactory18.addBuilderCustomizers(undertowBuilderCustomizerArray58);
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray58);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int63 = undertowEmbeddedServletContainerFactory62.getSessionTimeout();
        boolean boolean64 = undertowEmbeddedServletContainerFactory62.isPersistSession();
        undertowEmbeddedServletContainerFactory62.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory62.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory62.setDisplayName("hi!");
        boolean boolean71 = undertowEmbeddedServletContainerFactory62.isRegisterDefaultServlet();
        boolean boolean72 = undertowEmbeddedServletContainerFactory62.isPersistSession();
        boolean boolean73 = undertowEmbeddedServletContainerFactory62.isAccessLogEnabled();
        org.springframework.core.io.ResourceLoader resourceLoader74 = null;
        undertowEmbeddedServletContainerFactory62.resourceLoader = resourceLoader74;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection76 = undertowEmbeddedServletContainerFactory62.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection76);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection13);
        org.junit.Assert.assertNull(ssl16);
        org.junit.Assert.assertNotNull(xnioWorker17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(ssl25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 8080 + "'", int41 == 8080);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1800 + "'", int49 == 1800);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(jspServlet55);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray58);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1800 + "'", int63 == 1800);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection76);
    }

    @Test
    public void test14093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14093");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file15);
        java.lang.String str17 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        boolean boolean18 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.Ssl ssl21 = undertowEmbeddedServletContainerFactory0.getSsl();
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("");
        io.undertow.Undertow.Builder builder25 = undertowEmbeddedServletContainerFactory0.createBuilder(52);
        java.lang.Integer int26 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer30 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap29);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray31 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer30 };
        initializer28.initializers = servletContextInitializerArray31;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int34 = undertowEmbeddedServletContainerFactory33.getPort();
        java.lang.Integer int35 = undertowEmbeddedServletContainerFactory33.bufferSize;
        java.io.File file36 = null;
        undertowEmbeddedServletContainerFactory33.setSessionStoreDir(file36);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer39 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap38);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray40 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer39 };
        undertowEmbeddedServletContainerFactory33.addInitializers(servletContextInitializerArray40);
        initializer28.initializers = servletContextInitializerArray40;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.registerServletContainerInitializerToDriveServletContextInitializers(deploymentInfo27, servletContextInitializerArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(ssl21);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(servletContextInitializerArray31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 8080 + "'", int34 == 8080);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(servletContextInitializerArray40);
    }

    @Test
    public void test14094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14094");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPort(0);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 1);
        java.io.File file7 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file8);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader10);
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("hi!");
        undertowEmbeddedServletContainerFactory0.bufferSize = 35;
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 32);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test14095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14095");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        java.lang.String str4 = jarResourceManager0.jarPath;
        jarResourceManager0.jarPath = "hi!";
        jarResourceManager0.jarPath = "0.0.0.0";
        java.lang.String str9 = jarResourceManager0.jarPath;
        jarResourceManager0.close();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "hi!";
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "0.0.0.0" + "'", str9, "0.0.0.0");
    }

    @Test
    public void test14096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14096");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        java.io.File file4 = undertowEmbeddedServletContainerFactory2.getDocumentRoot();
        undertowEmbeddedServletContainerFactory2.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory2.setPersistSession(false);
        undertowEmbeddedServletContainerFactory2.bufferSize = 35;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = undertowEmbeddedServletContainerFactory11.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet15 = undertowEmbeddedServletContainerFactory11.getJspServlet();
        org.springframework.core.io.ResourceLoader resourceLoader16 = null;
        undertowEmbeddedServletContainerFactory11.setResourceLoader(resourceLoader16);
        undertowEmbeddedServletContainerFactory11.setPersistSession(false);
        boolean boolean20 = undertowEmbeddedServletContainerFactory11.useForwardHeaders;
        org.springframework.boot.context.embedded.JspServlet jspServlet21 = undertowEmbeddedServletContainerFactory11.getJspServlet();
        undertowEmbeddedServletContainerFactory2.setJspServlet(jspServlet21);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList14);
        org.junit.Assert.assertNotNull(jspServlet15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jspServlet21);
    }

    @Test
    public void test14097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14097");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection2 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        java.lang.Integer int3 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        boolean boolean4 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test14098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14098");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file15);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo17 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo17);
        org.springframework.core.io.ResourceLoader resourceLoader19 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        java.net.InetAddress inetAddress20 = undertowEmbeddedServletContainerFactory0.getAddress();
        java.io.File file21 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file21;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(resourceLoader19);
        org.junit.Assert.assertNull(inetAddress20);
    }

    @Test
    public void test14099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14099");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        java.io.File file10 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        java.io.File file11 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        java.lang.ClassLoader classLoader12 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(classLoader12);
    }

    @Test
    public void test14100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14100");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        boolean boolean3 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.io.File file4 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        java.io.File file5 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        io.undertow.Undertow.Builder builder7 = undertowEmbeddedServletContainerFactory0.createBuilder((int) (short) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory9.ioThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getPort();
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory12.bufferSize;
        int int15 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        org.springframework.boot.context.embedded.Compression compression16 = undertowEmbeddedServletContainerFactory12.getCompression();
        undertowEmbeddedServletContainerFactory12.directBuffers = false;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = undertowEmbeddedServletContainerFactory12.getErrorPages();
        undertowEmbeddedServletContainerFactory9.setErrorPages(errorPageSet19);
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet19);
        java.lang.String str22 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        java.net.InetAddress inetAddress25 = undertowEmbeddedServletContainerFactory0.getAddress();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8080 + "'", int13 == 8080);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertNull(compression16);
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(inetAddress25);
    }

    @Test
    public void test14101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14101");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.io.File file10 = undertowEmbeddedServletContainerFactory7.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList11 = undertowEmbeddedServletContainerFactory7.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList11;
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray13 = undertowEmbeddedServletContainerFactory0.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList11);
    }

    @Test
    public void test14102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14102");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        boolean boolean3 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader5);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = null;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList7;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList9 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.io.File file10 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray12 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList13, undertowBuilderCustomizerArray12);
        undertowEmbeddedServletContainerFactory11.builderCustomizers = undertowBuilderCustomizerList13;
        org.springframework.boot.context.embedded.Compression compression16 = undertowEmbeddedServletContainerFactory11.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory17.setJspServletClassName("");
        int int20 = undertowEmbeddedServletContainerFactory17.getSessionTimeout();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = undertowEmbeddedServletContainerFactory17.getErrorPages();
        undertowEmbeddedServletContainerFactory11.setErrorPages(errorPageSet21);
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet21);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int25 = undertowEmbeddedServletContainerFactory24.getSessionTimeout();
        boolean boolean26 = undertowEmbeddedServletContainerFactory24.isPersistSession();
        undertowEmbeddedServletContainerFactory24.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder30 = undertowEmbeddedServletContainerFactory24.createBuilder((-1));
        undertowEmbeddedServletContainerFactory24.accessLogEnabled = true;
        org.xnio.XnioWorker xnioWorker33 = undertowEmbeddedServletContainerFactory24.createWorker();
        org.springframework.core.io.ResourceLoader resourceLoader34 = null;
        undertowEmbeddedServletContainerFactory24.resourceLoader = resourceLoader34;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int37 = undertowEmbeddedServletContainerFactory36.getPort();
        java.lang.Integer int38 = undertowEmbeddedServletContainerFactory36.bufferSize;
        java.io.File file39 = null;
        undertowEmbeddedServletContainerFactory36.setSessionStoreDir(file39);
        java.io.File file41 = null;
        undertowEmbeddedServletContainerFactory36.accessLogDirectory = file41;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = undertowEmbeddedServletContainerFactory36.getMimeMappings();
        undertowEmbeddedServletContainerFactory36.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl46 = null;
        undertowEmbeddedServletContainerFactory36.setSsl(ssl46);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int49 = undertowEmbeddedServletContainerFactory48.getPort();
        java.lang.Integer int50 = undertowEmbeddedServletContainerFactory48.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader51 = null;
        undertowEmbeddedServletContainerFactory48.setResourceLoader(resourceLoader51);
        java.lang.Integer int53 = undertowEmbeddedServletContainerFactory48.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int55 = undertowEmbeddedServletContainerFactory54.getSessionTimeout();
        boolean boolean56 = undertowEmbeddedServletContainerFactory54.isPersistSession();
        java.io.File file57 = undertowEmbeddedServletContainerFactory54.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings58 = undertowEmbeddedServletContainerFactory54.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings59 = undertowEmbeddedServletContainerFactory54.getMimeMappings();
        java.lang.Integer int60 = undertowEmbeddedServletContainerFactory54.buffersPerRegion;
        io.undertow.Undertow.Builder builder62 = undertowEmbeddedServletContainerFactory54.createBuilder(10);
        io.undertow.servlet.api.DeploymentManager deploymentManager63 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer65 = undertowEmbeddedServletContainerFactory48.getUndertowEmbeddedServletContainer(builder62, deploymentManager63, 1);
        undertowEmbeddedServletContainerFactory48.setJspServletClassName("0.0.0.0");
        java.lang.Integer int68 = undertowEmbeddedServletContainerFactory48.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int70 = undertowEmbeddedServletContainerFactory69.getSessionTimeout();
        boolean boolean71 = undertowEmbeddedServletContainerFactory69.isPersistSession();
        undertowEmbeddedServletContainerFactory69.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory69.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray76 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory69.addErrorPages(errorPageArray76);
        undertowEmbeddedServletContainerFactory48.addErrorPages(errorPageArray76);
        undertowEmbeddedServletContainerFactory36.addErrorPages(errorPageArray76);
        undertowEmbeddedServletContainerFactory24.addErrorPages(errorPageArray76);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray76);
        int int82 = undertowEmbeddedServletContainerFactory0.getPort();
        java.io.File file83 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(undertowDeploymentInfoCustomizerList9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(compression16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertNotNull(errorPageSet21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1800 + "'", int25 == 1800);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(xnioWorker33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8080 + "'", int37 == 8080);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 8080 + "'", int49 == 8080);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1800 + "'", int55 == 1800);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(mimeMappings58);
        org.junit.Assert.assertNotNull(mimeMappings59);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer65);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1800 + "'", int70 == 1800);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(errorPageArray76);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 8080 + "'", int82 == 8080);
        org.junit.Assert.assertNull(file83);
    }

    @Test
    public void test14103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14103");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file9);
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 100);
        java.io.File file13 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file13);
        int int15 = undertowEmbeddedServletContainerFactory0.getPort();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8080 + "'", int15 == 8080);
    }

    @Test
    public void test14104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14104");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getSessionTimeout();
        boolean boolean12 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = undertowEmbeddedServletContainerFactory10.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList13;
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file15;
        java.lang.String str17 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        org.springframework.core.io.ResourceLoader resourceLoader18 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader18;
        boolean boolean20 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "0.0.0.0";
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection23 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo24 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.configureAccessLog(deploymentInfo24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1800 + "'", int11 == 1800);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection23);
    }

    @Test
    public void test14105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14105");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.Ssl ssl3 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.Integer int4 = undertowEmbeddedServletContainerFactory1.bufferSize;
        java.io.File file5 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.io.File file6 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 10);
        java.lang.Boolean boolean11 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory12.setUseForwardHeaders(false);
        boolean boolean19 = undertowEmbeddedServletContainerFactory12.useForwardHeaders;
        undertowEmbeddedServletContainerFactory12.setRegisterJspServlet(false);
        boolean boolean22 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        org.springframework.boot.context.embedded.JspServlet jspServlet23 = undertowEmbeddedServletContainerFactory12.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int25 = undertowEmbeddedServletContainerFactory24.getSessionTimeout();
        boolean boolean26 = undertowEmbeddedServletContainerFactory24.isPersistSession();
        undertowEmbeddedServletContainerFactory24.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory24.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory24.setDisplayName("hi!");
        boolean boolean33 = undertowEmbeddedServletContainerFactory24.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int35 = undertowEmbeddedServletContainerFactory34.getSessionTimeout();
        boolean boolean36 = undertowEmbeddedServletContainerFactory34.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList37 = undertowEmbeddedServletContainerFactory34.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet38 = undertowEmbeddedServletContainerFactory34.getJspServlet();
        undertowEmbeddedServletContainerFactory34.directBuffers = true;
        java.io.File file41 = null;
        undertowEmbeddedServletContainerFactory34.setDocumentRoot(file41);
        undertowEmbeddedServletContainerFactory34.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray45 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory34.addBuilderCustomizers(undertowBuilderCustomizerArray45);
        undertowEmbeddedServletContainerFactory24.addBuilderCustomizers(undertowBuilderCustomizerArray45);
        undertowEmbeddedServletContainerFactory12.addBuilderCustomizers(undertowBuilderCustomizerArray45);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray45);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList50 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(ssl3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(jspServlet23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1800 + "'", int25 == 1800);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1800 + "'", int35 == 1800);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList37);
        org.junit.Assert.assertNotNull(jspServlet38);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray45);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList50);
    }

    @Test
    public void test14106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14106");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        boolean boolean3 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory5.setWorkerThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder9 = undertowEmbeddedServletContainerFactory5.createBuilder((int) (byte) -1);
        io.undertow.server.handlers.resource.ResourceManager resourceManager10 = undertowEmbeddedServletContainerFactory5.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getPort();
        java.lang.Integer int13 = undertowEmbeddedServletContainerFactory11.bufferSize;
        java.io.File file14 = null;
        undertowEmbeddedServletContainerFactory11.setSessionStoreDir(file14);
        java.io.File file16 = null;
        undertowEmbeddedServletContainerFactory11.accessLogDirectory = file16;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory11.getMimeMappings();
        undertowEmbeddedServletContainerFactory5.setMimeMappings(mimeMappings18);
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings18);
        java.lang.String str21 = undertowEmbeddedServletContainerFactory0.getContextPath();
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection24 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        int int25 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.String str26 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        java.io.File file27 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file27);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(resourceManager10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8080 + "'", int12 == 8080);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 8080 + "'", int25 == 8080);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
    }

    @Test
    public void test14107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14107");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) true);
        java.io.File file4 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) (-1));
        io.undertow.server.handlers.resource.ResourceManager resourceManager8 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resourceManager8);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test14108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14108");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer2 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap1);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer2 };
        initializer0.initializers = servletContextInitializerArray3;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray5 = initializer0.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray6 = initializer0.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer9 };
        initializer7.initializers = servletContextInitializerArray10;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = initializer7.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = initializer7.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray14 = null;
        initializer7.initializers = servletContextInitializerArray14;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList19 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        org.springframework.boot.context.embedded.Compression compression20 = null;
        undertowEmbeddedServletContainerFactory16.setCompression(compression20);
        undertowEmbeddedServletContainerFactory16.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory16.accessLogEnabled = true;
        java.io.File file26 = null;
        undertowEmbeddedServletContainerFactory16.setSessionStoreDir(file26);
        java.io.File file28 = undertowEmbeddedServletContainerFactory16.accessLogDirectory;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer32 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap31);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray33 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer32 };
        initializer30.initializers = servletContextInitializerArray33;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer37 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap36);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray38 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer37 };
        initializer35.initializers = servletContextInitializerArray38;
        initializer30.initializers = servletContextInitializerArray38;
        initializer29.initializers = servletContextInitializerArray38;
        undertowEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray38);
        initializer7.initializers = servletContextInitializerArray38;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray44 = initializer7.initializers;
        initializer0.initializers = servletContextInitializerArray44;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray46 = null;
        initializer0.initializers = servletContextInitializerArray46;
        org.junit.Assert.assertNotNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray5);
        org.junit.Assert.assertNotNull(servletContextInitializerArray6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList19);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(servletContextInitializerArray33);
        org.junit.Assert.assertNotNull(servletContextInitializerArray38);
        org.junit.Assert.assertNotNull(servletContextInitializerArray44);
    }

    @Test
    public void test14109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14109");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory10.accessLogEnabled = false;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList14, undertowBuilderCustomizerArray13);
        undertowEmbeddedServletContainerFactory10.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList14);
        undertowEmbeddedServletContainerFactory10.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray20 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList21 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList21, undertowBuilderCustomizerArray20);
        undertowEmbeddedServletContainerFactory19.builderCustomizers = undertowBuilderCustomizerList21;
        undertowEmbeddedServletContainerFactory19.workerThreads = 1;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection26 = undertowEmbeddedServletContainerFactory19.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory19.bufferSize = 10;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = undertowEmbeddedServletContainerFactory31.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader33 = undertowEmbeddedServletContainerFactory31.resourceLoader;
        undertowEmbeddedServletContainerFactory31.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int37 = undertowEmbeddedServletContainerFactory36.getSessionTimeout();
        boolean boolean38 = undertowEmbeddedServletContainerFactory36.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList39 = undertowEmbeddedServletContainerFactory36.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet40 = undertowEmbeddedServletContainerFactory36.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int42 = undertowEmbeddedServletContainerFactory41.getSessionTimeout();
        boolean boolean43 = undertowEmbeddedServletContainerFactory41.isPersistSession();
        undertowEmbeddedServletContainerFactory41.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder47 = undertowEmbeddedServletContainerFactory41.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager48 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer50 = undertowEmbeddedServletContainerFactory36.getUndertowEmbeddedServletContainer(builder47, deploymentManager48, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager51 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer53 = undertowEmbeddedServletContainerFactory31.getUndertowEmbeddedServletContainer(builder47, deploymentManager51, (int) ' ');
        boolean boolean54 = undertowEmbeddedServletContainerFactory31.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory31.setPort((-1));
        java.lang.Integer int57 = undertowEmbeddedServletContainerFactory31.bufferSize;
        io.undertow.Undertow.Builder builder59 = undertowEmbeddedServletContainerFactory31.createBuilder(0);
        io.undertow.servlet.api.DeploymentManager deploymentManager60 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer62 = undertowEmbeddedServletContainerFactory19.getUndertowEmbeddedServletContainer(builder59, deploymentManager60, (int) (byte) 1);
        io.undertow.servlet.api.DeploymentManager deploymentManager63 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer65 = undertowEmbeddedServletContainerFactory10.getUndertowEmbeddedServletContainer(builder59, deploymentManager63, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager66 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer68 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder59, deploymentManager66, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = (-1);
        java.lang.Boolean boolean73 = undertowEmbeddedServletContainerFactory0.directBuffers;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertNotNull(classLoader9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection26);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNull(resourceLoader33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1800 + "'", int37 == 1800);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList39);
        org.junit.Assert.assertNotNull(jspServlet40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1800 + "'", int42 == 1800);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer50);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer62);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer65);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer68);
        org.junit.Assert.assertNull(boolean73);
    }

    @Test
    public void test14110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14110");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory0.directBuffers;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader19 = undertowEmbeddedServletContainerFactory17.resourceLoader;
        undertowEmbeddedServletContainerFactory17.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int23 = undertowEmbeddedServletContainerFactory22.getSessionTimeout();
        boolean boolean24 = undertowEmbeddedServletContainerFactory22.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList25 = undertowEmbeddedServletContainerFactory22.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet26 = undertowEmbeddedServletContainerFactory22.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int28 = undertowEmbeddedServletContainerFactory27.getSessionTimeout();
        boolean boolean29 = undertowEmbeddedServletContainerFactory27.isPersistSession();
        undertowEmbeddedServletContainerFactory27.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder33 = undertowEmbeddedServletContainerFactory27.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager34 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer36 = undertowEmbeddedServletContainerFactory22.getUndertowEmbeddedServletContainer(builder33, deploymentManager34, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager37 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer39 = undertowEmbeddedServletContainerFactory17.getUndertowEmbeddedServletContainer(builder33, deploymentManager37, (int) ' ');
        boolean boolean40 = undertowEmbeddedServletContainerFactory17.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory17.setPort((-1));
        java.lang.Integer int43 = undertowEmbeddedServletContainerFactory17.bufferSize;
        io.undertow.Undertow.Builder builder45 = undertowEmbeddedServletContainerFactory17.createBuilder(0);
        java.io.File file46 = undertowEmbeddedServletContainerFactory17.getSessionStoreDir();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList47 = undertowEmbeddedServletContainerFactory17.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int49 = undertowEmbeddedServletContainerFactory48.getSessionTimeout();
        boolean boolean50 = undertowEmbeddedServletContainerFactory48.isPersistSession();
        undertowEmbeddedServletContainerFactory48.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory48.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray55 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory48.addErrorPages(errorPageArray55);
        undertowEmbeddedServletContainerFactory17.addErrorPages(errorPageArray55);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray55);
        org.springframework.core.io.ResourceLoader resourceLoader59 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader59);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNull(resourceLoader19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1800 + "'", int23 == 1800);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList25);
        org.junit.Assert.assertNotNull(jspServlet26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1800 + "'", int28 == 1800);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer36);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1800 + "'", int49 == 1800);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(errorPageArray55);
    }

    @Test
    public void test14111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14111");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 0);
        org.springframework.boot.context.embedded.Ssl ssl3 = null;
        undertowEmbeddedServletContainerFactory2.setSsl(ssl3);
        undertowEmbeddedServletContainerFactory2.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory2.setContextPath("");
    }

    @Test
    public void test14112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14112");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = true;
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl9);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.Ssl ssl15 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl15);
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(true);
        org.springframework.boot.context.embedded.Ssl ssl19 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl19);
        java.lang.Integer int21 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(int21);
    }

    @Test
    public void test14113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14113");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 0;
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(int6);
    }

    @Test
    public void test14114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14114");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        boolean boolean2 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.jarPath = "hi!";
        boolean boolean5 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.jarPath = "0.0.0.0";
        java.lang.String str8 = jarResourceManager0.jarPath;
        jarResourceManager0.jarPath = "";
        java.lang.String str11 = jarResourceManager0.jarPath;
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourceManager0.removeResourceChangeListener(resourceChangeListener12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test14115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14115");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        undertowEmbeddedServletContainerFactory5.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory5.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray12 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory5.addErrorPages(errorPageArray12);
        undertowEmbeddedServletContainerFactory2.addErrorPages(errorPageArray12);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file15);
        undertowEmbeddedServletContainerFactory2.useForwardHeaders = false;
        org.springframework.core.io.ResourceLoader resourceLoader19 = null;
        undertowEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader19);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getPort();
        java.lang.Integer int23 = undertowEmbeddedServletContainerFactory21.bufferSize;
        java.io.File file24 = null;
        undertowEmbeddedServletContainerFactory21.setSessionStoreDir(file24);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int27 = undertowEmbeddedServletContainerFactory26.getSessionTimeout();
        boolean boolean28 = undertowEmbeddedServletContainerFactory26.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList29 = undertowEmbeddedServletContainerFactory26.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet30 = undertowEmbeddedServletContainerFactory26.getJspServlet();
        boolean boolean31 = undertowEmbeddedServletContainerFactory26.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet32 = undertowEmbeddedServletContainerFactory26.getErrorPages();
        undertowEmbeddedServletContainerFactory21.setErrorPages(errorPageSet32);
        undertowEmbeddedServletContainerFactory21.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList36 = undertowEmbeddedServletContainerFactory21.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray37 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory21.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray37);
        undertowEmbeddedServletContainerFactory2.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray37);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int41 = undertowEmbeddedServletContainerFactory40.getSessionTimeout();
        boolean boolean42 = undertowEmbeddedServletContainerFactory40.isPersistSession();
        undertowEmbeddedServletContainerFactory40.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory40.setUseForwardHeaders(false);
        boolean boolean47 = undertowEmbeddedServletContainerFactory40.useForwardHeaders;
        undertowEmbeddedServletContainerFactory40.setAccessLogEnabled(false);
        java.lang.Integer int50 = undertowEmbeddedServletContainerFactory40.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int52 = undertowEmbeddedServletContainerFactory51.getPort();
        java.lang.Integer int53 = undertowEmbeddedServletContainerFactory51.bufferSize;
        boolean boolean54 = undertowEmbeddedServletContainerFactory51.accessLogEnabled;
        java.lang.String str55 = undertowEmbeddedServletContainerFactory51.accessLogPattern;
        undertowEmbeddedServletContainerFactory51.setWorkerThreads((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory58.setJspServletClassName("");
        int int61 = undertowEmbeddedServletContainerFactory58.getSessionTimeout();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet62 = undertowEmbeddedServletContainerFactory58.getErrorPages();
        undertowEmbeddedServletContainerFactory51.setErrorPages(errorPageSet62);
        undertowEmbeddedServletContainerFactory51.accessLogPattern = "";
        boolean boolean66 = undertowEmbeddedServletContainerFactory51.useForwardHeaders;
        org.springframework.boot.context.embedded.Ssl ssl67 = null;
        undertowEmbeddedServletContainerFactory51.setSsl(ssl67);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int70 = undertowEmbeddedServletContainerFactory69.getSessionTimeout();
        boolean boolean71 = undertowEmbeddedServletContainerFactory69.isPersistSession();
        undertowEmbeddedServletContainerFactory69.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory69.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory69.setDisplayName("hi!");
        boolean boolean78 = undertowEmbeddedServletContainerFactory69.isRegisterDefaultServlet();
        java.io.File file79 = undertowEmbeddedServletContainerFactory69.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory80 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int81 = undertowEmbeddedServletContainerFactory80.getSessionTimeout();
        boolean boolean82 = undertowEmbeddedServletContainerFactory80.isPersistSession();
        undertowEmbeddedServletContainerFactory80.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory80.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray87 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory80.addErrorPages(errorPageArray87);
        undertowEmbeddedServletContainerFactory69.addErrorPages(errorPageArray87);
        undertowEmbeddedServletContainerFactory69.ioThreads = 1800;
        undertowEmbeddedServletContainerFactory69.setAccessLogPattern("hi!");
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList94 = undertowEmbeddedServletContainerFactory69.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory51.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList94;
        undertowEmbeddedServletContainerFactory40.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList94;
        undertowEmbeddedServletContainerFactory2.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList94;
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(errorPageArray12);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8080 + "'", int22 == 8080);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1800 + "'", int27 == 1800);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList29);
        org.junit.Assert.assertNotNull(jspServlet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(errorPageSet32);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList36);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1800 + "'", int41 == 1800);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 8080 + "'", int52 == 8080);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1800 + "'", int61 == 1800);
        org.junit.Assert.assertNotNull(errorPageSet62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1800 + "'", int70 == 1800);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1800 + "'", int81 == 1800);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(errorPageArray87);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList94);
    }

    @Test
    public void test14116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14116");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(true);
        undertowEmbeddedServletContainerFactory1.accessLogPattern = "0.0.0.0";
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getPort();
        java.lang.Integer int11 = undertowEmbeddedServletContainerFactory9.bufferSize;
        boolean boolean12 = undertowEmbeddedServletContainerFactory9.accessLogEnabled;
        java.lang.String str13 = undertowEmbeddedServletContainerFactory9.accessLogPattern;
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory9.setResourceLoader(resourceLoader14);
        boolean boolean16 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int18 = undertowEmbeddedServletContainerFactory17.getSessionTimeout();
        boolean boolean19 = undertowEmbeddedServletContainerFactory17.isPersistSession();
        undertowEmbeddedServletContainerFactory17.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl22 = null;
        undertowEmbeddedServletContainerFactory17.setSsl(ssl22);
        org.springframework.boot.context.embedded.JspServlet jspServlet24 = undertowEmbeddedServletContainerFactory17.getJspServlet();
        undertowEmbeddedServletContainerFactory9.setJspServlet(jspServlet24);
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet24);
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        java.lang.Boolean boolean29 = undertowEmbeddedServletContainerFactory1.directBuffers;
        java.io.File file30 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file30);
        java.io.File file32 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        boolean boolean35 = undertowEmbeddedServletContainerFactory1.accessLogEnabled;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 8080 + "'", int10 == 8080);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1800 + "'", int18 == 1800);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(jspServlet24);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test14117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14117");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.xnio.XnioWorker xnioWorker2 = undertowEmbeddedServletContainerFactory1.createWorker();
        undertowEmbeddedServletContainerFactory1.accessLogEnabled = true;
        undertowEmbeddedServletContainerFactory1.setPersistSession(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.junit.Assert.assertNotNull(xnioWorker2);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
    }

    @Test
    public void test14118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14118");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int2 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        boolean boolean3 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        java.io.File file4 = undertowEmbeddedServletContainerFactory1.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.io.File file7 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getPort();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory8.bufferSize;
        java.io.File file11 = null;
        undertowEmbeddedServletContainerFactory8.setSessionStoreDir(file11);
        java.util.Map<java.lang.String, java.lang.String> strMap13 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer14 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap13);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray15 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer14 };
        undertowEmbeddedServletContainerFactory8.addInitializers(servletContextInitializerArray15);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray15);
        initializer0.initializers = servletContextInitializerArray15;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int20 = undertowEmbeddedServletContainerFactory19.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = undertowEmbeddedServletContainerFactory23.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader25 = undertowEmbeddedServletContainerFactory23.resourceLoader;
        undertowEmbeddedServletContainerFactory23.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList31 = undertowEmbeddedServletContainerFactory28.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet32 = undertowEmbeddedServletContainerFactory28.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int34 = undertowEmbeddedServletContainerFactory33.getSessionTimeout();
        boolean boolean35 = undertowEmbeddedServletContainerFactory33.isPersistSession();
        undertowEmbeddedServletContainerFactory33.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder39 = undertowEmbeddedServletContainerFactory33.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager40 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer42 = undertowEmbeddedServletContainerFactory28.getUndertowEmbeddedServletContainer(builder39, deploymentManager40, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager43 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer45 = undertowEmbeddedServletContainerFactory23.getUndertowEmbeddedServletContainer(builder39, deploymentManager43, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager46 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer48 = undertowEmbeddedServletContainerFactory19.getUndertowEmbeddedServletContainer(builder39, deploymentManager46, (int) (short) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList49 = undertowEmbeddedServletContainerFactory19.builderCustomizers;
        undertowEmbeddedServletContainerFactory19.setIoThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory19.useForwardHeaders = true;
        org.springframework.core.io.ResourceLoader resourceLoader54 = undertowEmbeddedServletContainerFactory19.resourceLoader;
        undertowEmbeddedServletContainerFactory19.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer59 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap58);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray60 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer59 };
        initializer57.initializers = servletContextInitializerArray60;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer64 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap63);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray65 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer64 };
        initializer62.initializers = servletContextInitializerArray65;
        initializer57.initializers = servletContextInitializerArray65;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int69 = undertowEmbeddedServletContainerFactory68.getSessionTimeout();
        boolean boolean70 = undertowEmbeddedServletContainerFactory68.isPersistSession();
        java.io.File file71 = undertowEmbeddedServletContainerFactory68.accessLogDirectory;
        undertowEmbeddedServletContainerFactory68.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory68.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int77 = undertowEmbeddedServletContainerFactory76.getSessionTimeout();
        boolean boolean78 = undertowEmbeddedServletContainerFactory76.isPersistSession();
        java.io.File file79 = undertowEmbeddedServletContainerFactory76.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings80 = undertowEmbeddedServletContainerFactory76.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings81 = undertowEmbeddedServletContainerFactory76.getMimeMappings();
        java.io.File file82 = undertowEmbeddedServletContainerFactory76.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory83 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int84 = undertowEmbeddedServletContainerFactory83.getPort();
        java.lang.Integer int85 = undertowEmbeddedServletContainerFactory83.bufferSize;
        java.io.File file86 = null;
        undertowEmbeddedServletContainerFactory83.setSessionStoreDir(file86);
        java.util.Map<java.lang.String, java.lang.String> strMap88 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer89 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap88);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray90 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer89 };
        undertowEmbeddedServletContainerFactory83.addInitializers(servletContextInitializerArray90);
        undertowEmbeddedServletContainerFactory76.addInitializers(servletContextInitializerArray90);
        undertowEmbeddedServletContainerFactory68.addInitializers(servletContextInitializerArray90);
        initializer57.initializers = servletContextInitializerArray90;
        undertowEmbeddedServletContainerFactory19.addInitializers(servletContextInitializerArray90);
        initializer0.initializers = servletContextInitializerArray90;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray97 = initializer0.initializers;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1800 + "'", int2 == 1800);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8080 + "'", int9 == 8080);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(servletContextInitializerArray15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8080 + "'", int20 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNull(resourceLoader25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList31);
        org.junit.Assert.assertNotNull(jspServlet32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1800 + "'", int34 == 1800);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer42);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer45);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer48);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList49);
        org.junit.Assert.assertNull(resourceLoader54);
        org.junit.Assert.assertNotNull(servletContextInitializerArray60);
        org.junit.Assert.assertNotNull(servletContextInitializerArray65);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1800 + "'", int69 == 1800);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1800 + "'", int77 == 1800);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNotNull(mimeMappings80);
        org.junit.Assert.assertNotNull(mimeMappings81);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 8080 + "'", int84 == 8080);
        org.junit.Assert.assertNull(int85);
        org.junit.Assert.assertNotNull(servletContextInitializerArray90);
        org.junit.Assert.assertNotNull(servletContextInitializerArray97);
    }

    @Test
    public void test14119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14119");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        undertowEmbeddedServletContainerFactory5.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory5.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray12 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory5.addErrorPages(errorPageArray12);
        undertowEmbeddedServletContainerFactory2.addErrorPages(errorPageArray12);
        org.springframework.boot.context.embedded.Ssl ssl15 = null;
        undertowEmbeddedServletContainerFactory2.setSsl(ssl15);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer19 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap18);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray20 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer19 };
        initializer17.initializers = servletContextInitializerArray20;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer24 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap23);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray25 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer24 };
        initializer22.initializers = servletContextInitializerArray25;
        initializer17.initializers = servletContextInitializerArray25;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        java.io.File file31 = undertowEmbeddedServletContainerFactory28.accessLogDirectory;
        undertowEmbeddedServletContainerFactory28.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int37 = undertowEmbeddedServletContainerFactory36.getSessionTimeout();
        boolean boolean38 = undertowEmbeddedServletContainerFactory36.isPersistSession();
        java.io.File file39 = undertowEmbeddedServletContainerFactory36.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = undertowEmbeddedServletContainerFactory36.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings41 = undertowEmbeddedServletContainerFactory36.getMimeMappings();
        java.io.File file42 = undertowEmbeddedServletContainerFactory36.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int44 = undertowEmbeddedServletContainerFactory43.getPort();
        java.lang.Integer int45 = undertowEmbeddedServletContainerFactory43.bufferSize;
        java.io.File file46 = null;
        undertowEmbeddedServletContainerFactory43.setSessionStoreDir(file46);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer49 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap48);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray50 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer49 };
        undertowEmbeddedServletContainerFactory43.addInitializers(servletContextInitializerArray50);
        undertowEmbeddedServletContainerFactory36.addInitializers(servletContextInitializerArray50);
        undertowEmbeddedServletContainerFactory28.addInitializers(servletContextInitializerArray50);
        initializer17.initializers = servletContextInitializerArray50;
        undertowEmbeddedServletContainerFactory2.addInitializers(servletContextInitializerArray50);
        org.springframework.boot.context.embedded.Ssl ssl56 = null;
        undertowEmbeddedServletContainerFactory2.setSsl(ssl56);
        java.lang.Integer int58 = undertowEmbeddedServletContainerFactory2.workerThreads;
        undertowEmbeddedServletContainerFactory2.accessLogEnabled = false;
        org.springframework.boot.context.embedded.Compression compression61 = null;
        undertowEmbeddedServletContainerFactory2.setCompression(compression61);
        undertowEmbeddedServletContainerFactory2.setContextPath("");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(errorPageArray12);
        org.junit.Assert.assertNotNull(servletContextInitializerArray20);
        org.junit.Assert.assertNotNull(servletContextInitializerArray25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1800 + "'", int37 == 1800);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNotNull(mimeMappings41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 8080 + "'", int44 == 8080);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(servletContextInitializerArray50);
        org.junit.Assert.assertNull(int58);
    }

    @Test
    public void test14120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14120");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPort(0);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        java.lang.String str7 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) true);
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory0.ioThreads;
        org.springframework.boot.context.embedded.Compression compression11 = undertowEmbeddedServletContainerFactory0.getCompression();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = true;
        undertowEmbeddedServletContainerFactory0.setDisplayName("0.0.0.0");
        org.xnio.XnioWorker xnioWorker16 = undertowEmbeddedServletContainerFactory0.createWorker();
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(compression11);
        org.junit.Assert.assertNotNull(xnioWorker16);
    }

    @Test
    public void test14121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14121");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        undertowEmbeddedServletContainerFactory8.setIoThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder14 = undertowEmbeddedServletContainerFactory8.createBuilder((int) (byte) 1);
        io.undertow.servlet.api.DeploymentManager deploymentManager15 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer17 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder14, deploymentManager15, (int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory18.setJspServletClassName("");
        int int21 = undertowEmbeddedServletContainerFactory18.getSessionTimeout();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = undertowEmbeddedServletContainerFactory18.getErrorPages();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList23 = undertowEmbeddedServletContainerFactory18.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList23);
        java.io.File file25 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        java.io.File file26 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file26);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1800 + "'", int21 == 1800);
        org.junit.Assert.assertNotNull(errorPageSet22);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList23);
        org.junit.Assert.assertNull(file25);
    }

    @Test
    public void test14122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14122");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory2.setPort((-1));
        java.lang.Integer int28 = undertowEmbeddedServletContainerFactory2.bufferSize;
        io.undertow.Undertow.Builder builder30 = undertowEmbeddedServletContainerFactory2.createBuilder(0);
        java.io.File file31 = undertowEmbeddedServletContainerFactory2.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(false);
        java.net.InetAddress inetAddress34 = undertowEmbeddedServletContainerFactory2.getAddress();
        java.io.File file35 = undertowEmbeddedServletContainerFactory2.getDocumentRoot();
        undertowEmbeddedServletContainerFactory2.setAccessLogPattern("");
        undertowEmbeddedServletContainerFactory2.setSessionTimeout(1800);
        undertowEmbeddedServletContainerFactory2.setPersistSession(true);
        undertowEmbeddedServletContainerFactory2.setPersistSession(false);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(inetAddress34);
        org.junit.Assert.assertNull(file35);
    }

    @Test
    public void test14123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14123");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory0.getAddress();
        java.net.InetAddress inetAddress19 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress19);
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(8080);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 8080);
        boolean boolean29 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test14124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14124");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        undertowEmbeddedServletContainerFactory5.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory5.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray12 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory5.addErrorPages(errorPageArray12);
        undertowEmbeddedServletContainerFactory2.addErrorPages(errorPageArray12);
        org.springframework.boot.context.embedded.Ssl ssl15 = null;
        undertowEmbeddedServletContainerFactory2.setSsl(ssl15);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer19 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap18);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray20 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer19 };
        initializer17.initializers = servletContextInitializerArray20;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer24 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap23);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray25 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer24 };
        initializer22.initializers = servletContextInitializerArray25;
        initializer17.initializers = servletContextInitializerArray25;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        java.io.File file31 = undertowEmbeddedServletContainerFactory28.accessLogDirectory;
        undertowEmbeddedServletContainerFactory28.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int37 = undertowEmbeddedServletContainerFactory36.getSessionTimeout();
        boolean boolean38 = undertowEmbeddedServletContainerFactory36.isPersistSession();
        java.io.File file39 = undertowEmbeddedServletContainerFactory36.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = undertowEmbeddedServletContainerFactory36.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings41 = undertowEmbeddedServletContainerFactory36.getMimeMappings();
        java.io.File file42 = undertowEmbeddedServletContainerFactory36.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int44 = undertowEmbeddedServletContainerFactory43.getPort();
        java.lang.Integer int45 = undertowEmbeddedServletContainerFactory43.bufferSize;
        java.io.File file46 = null;
        undertowEmbeddedServletContainerFactory43.setSessionStoreDir(file46);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer49 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap48);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray50 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer49 };
        undertowEmbeddedServletContainerFactory43.addInitializers(servletContextInitializerArray50);
        undertowEmbeddedServletContainerFactory36.addInitializers(servletContextInitializerArray50);
        undertowEmbeddedServletContainerFactory28.addInitializers(servletContextInitializerArray50);
        initializer17.initializers = servletContextInitializerArray50;
        undertowEmbeddedServletContainerFactory2.addInitializers(servletContextInitializerArray50);
        org.springframework.boot.context.embedded.Ssl ssl56 = null;
        undertowEmbeddedServletContainerFactory2.setSsl(ssl56);
        undertowEmbeddedServletContainerFactory2.buffersPerRegion = 10;
        org.springframework.core.io.ResourceLoader resourceLoader60 = null;
        undertowEmbeddedServletContainerFactory2.resourceLoader = resourceLoader60;
        int int62 = undertowEmbeddedServletContainerFactory2.getPort();
        java.io.File file63 = null;
        undertowEmbeddedServletContainerFactory2.setAccessLogDirectory(file63);
        boolean boolean65 = undertowEmbeddedServletContainerFactory2.accessLogEnabled;
        java.net.InetAddress inetAddress66 = undertowEmbeddedServletContainerFactory2.getAddress();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(errorPageArray12);
        org.junit.Assert.assertNotNull(servletContextInitializerArray20);
        org.junit.Assert.assertNotNull(servletContextInitializerArray25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1800 + "'", int37 == 1800);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNotNull(mimeMappings41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 8080 + "'", int44 == 8080);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(servletContextInitializerArray50);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(inetAddress66);
    }

    @Test
    public void test14125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14125");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory4.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory4.resourceLoader;
        undertowEmbeddedServletContainerFactory4.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getSessionTimeout();
        boolean boolean11 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = undertowEmbeddedServletContainerFactory9.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet13 = undertowEmbeddedServletContainerFactory9.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        undertowEmbeddedServletContainerFactory14.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder20 = undertowEmbeddedServletContainerFactory14.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer23 = undertowEmbeddedServletContainerFactory9.getUndertowEmbeddedServletContainer(builder20, deploymentManager21, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer26 = undertowEmbeddedServletContainerFactory4.getUndertowEmbeddedServletContainer(builder20, deploymentManager24, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer29 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder20, deploymentManager27, (int) (short) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList30 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 100);
        java.lang.Integer int33 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) (-1));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList12);
        org.junit.Assert.assertNotNull(jspServlet13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer23);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer26);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer29);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList30);
        org.junit.Assert.assertNull(int33);
    }

    @Test
    public void test14126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14126");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory2.setBufferSize((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory2.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl7 = undertowEmbeddedServletContainerFactory2.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean10 = undertowEmbeddedServletContainerFactory9.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory9.setRegisterDefaultServlet(true);
        java.io.File file13 = null;
        undertowEmbeddedServletContainerFactory9.setAccessLogDirectory(file13);
        org.xnio.XnioWorker xnioWorker15 = undertowEmbeddedServletContainerFactory9.createWorker();
        io.undertow.Undertow.Builder builder17 = undertowEmbeddedServletContainerFactory9.createBuilder(0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory20.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader22 = undertowEmbeddedServletContainerFactory20.resourceLoader;
        undertowEmbeddedServletContainerFactory20.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int26 = undertowEmbeddedServletContainerFactory25.getSessionTimeout();
        boolean boolean27 = undertowEmbeddedServletContainerFactory25.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList28 = undertowEmbeddedServletContainerFactory25.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet29 = undertowEmbeddedServletContainerFactory25.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int31 = undertowEmbeddedServletContainerFactory30.getSessionTimeout();
        boolean boolean32 = undertowEmbeddedServletContainerFactory30.isPersistSession();
        undertowEmbeddedServletContainerFactory30.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder36 = undertowEmbeddedServletContainerFactory30.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager37 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer39 = undertowEmbeddedServletContainerFactory25.getUndertowEmbeddedServletContainer(builder36, deploymentManager37, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager40 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer42 = undertowEmbeddedServletContainerFactory20.getUndertowEmbeddedServletContainer(builder36, deploymentManager40, (int) ' ');
        boolean boolean43 = undertowEmbeddedServletContainerFactory20.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory20.setPort((-1));
        java.lang.Integer int46 = undertowEmbeddedServletContainerFactory20.bufferSize;
        io.undertow.Undertow.Builder builder48 = undertowEmbeddedServletContainerFactory20.createBuilder(0);
        java.io.File file49 = undertowEmbeddedServletContainerFactory20.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory20.setRegisterJspServlet(false);
        java.net.InetAddress inetAddress52 = undertowEmbeddedServletContainerFactory20.getAddress();
        undertowEmbeddedServletContainerFactory20.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int56 = undertowEmbeddedServletContainerFactory55.getSessionTimeout();
        boolean boolean57 = undertowEmbeddedServletContainerFactory55.isPersistSession();
        undertowEmbeddedServletContainerFactory55.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder61 = undertowEmbeddedServletContainerFactory55.createBuilder((-1));
        undertowEmbeddedServletContainerFactory55.setBufferSize((java.lang.Integer) 10);
        java.net.InetAddress inetAddress64 = null;
        undertowEmbeddedServletContainerFactory55.setAddress(inetAddress64);
        undertowEmbeddedServletContainerFactory55.accessLogPattern = "hi!";
        io.undertow.servlet.api.DeploymentInfo deploymentInfo68 = null;
        undertowEmbeddedServletContainerFactory55.configureErrorPages(deploymentInfo68);
        java.io.File file70 = undertowEmbeddedServletContainerFactory55.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory55.bufferSize = 1800;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray73 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        undertowEmbeddedServletContainerFactory55.addInitializers(servletContextInitializerArray73);
        io.undertow.servlet.api.DeploymentManager deploymentManager75 = undertowEmbeddedServletContainerFactory20.createDeploymentManager(servletContextInitializerArray73);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer77 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder17, deploymentManager75, (int) (byte) -1);
        org.junit.Assert.assertNull(ssl7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(xnioWorker15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNull(resourceLoader22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1800 + "'", int26 == 1800);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList28);
        org.junit.Assert.assertNotNull(jspServlet29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1800 + "'", int31 == 1800);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer39);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(inetAddress52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1800 + "'", int56 == 1800);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNotNull(servletContextInitializerArray73);
        org.junit.Assert.assertNotNull(deploymentManager75);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer77);
    }

    @Test
    public void test14127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14127");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory0.getSsl();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList12;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection15 = undertowEmbeddedServletContainerFactory10.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer19 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap18);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer21 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap20);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer23 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap22);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer25 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap24);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer19, initParameterConfiguringServletContextInitializer21, initParameterConfiguringServletContextInitializer23, initParameterConfiguringServletContextInitializer25 };
        undertowEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray26);
        undertowEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray26);
        boolean boolean29 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int31 = undertowEmbeddedServletContainerFactory30.getSessionTimeout();
        boolean boolean32 = undertowEmbeddedServletContainerFactory30.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList33 = undertowEmbeddedServletContainerFactory30.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet34 = undertowEmbeddedServletContainerFactory30.getJspServlet();
        boolean boolean35 = undertowEmbeddedServletContainerFactory30.isPersistSession();
        org.springframework.boot.context.embedded.Ssl ssl36 = undertowEmbeddedServletContainerFactory30.getSsl();
        undertowEmbeddedServletContainerFactory30.setJspServletClassName("hi!");
        io.undertow.Undertow.Builder builder40 = undertowEmbeddedServletContainerFactory30.createBuilder((int) 'a');
        io.undertow.servlet.api.DeploymentManager deploymentManager41 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer43 = undertowEmbeddedServletContainerFactory10.getUndertowEmbeddedServletContainer(builder40, deploymentManager41, 1800);
        io.undertow.servlet.api.DeploymentManager deploymentManager44 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer46 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder40, deploymentManager44, (-1));
        org.springframework.core.io.ResourceLoader resourceLoader47 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader47);
        java.lang.Integer int49 = undertowEmbeddedServletContainerFactory0.bufferSize;
        undertowEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.JspServlet jspServlet52 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 52);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1800 + "'", int31 == 1800);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList33);
        org.junit.Assert.assertNotNull(jspServlet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(ssl36);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer43);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer46);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(jspServlet52);
    }

    @Test
    public void test14128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14128");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        java.lang.String str5 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file6);
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory2.setAccessLogDirectory(file8);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getSessionTimeout();
        boolean boolean12 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = undertowEmbeddedServletContainerFactory10.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet14 = undertowEmbeddedServletContainerFactory10.getJspServlet();
        boolean boolean15 = undertowEmbeddedServletContainerFactory10.useForwardHeaders;
        java.net.InetAddress inetAddress16 = undertowEmbeddedServletContainerFactory10.getAddress();
        undertowEmbeddedServletContainerFactory10.setAccessLogPattern("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = undertowEmbeddedServletContainerFactory21.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader23 = undertowEmbeddedServletContainerFactory21.resourceLoader;
        undertowEmbeddedServletContainerFactory21.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int27 = undertowEmbeddedServletContainerFactory26.getSessionTimeout();
        boolean boolean28 = undertowEmbeddedServletContainerFactory26.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList29 = undertowEmbeddedServletContainerFactory26.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet30 = undertowEmbeddedServletContainerFactory26.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int32 = undertowEmbeddedServletContainerFactory31.getSessionTimeout();
        boolean boolean33 = undertowEmbeddedServletContainerFactory31.isPersistSession();
        undertowEmbeddedServletContainerFactory31.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder37 = undertowEmbeddedServletContainerFactory31.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager38 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer40 = undertowEmbeddedServletContainerFactory26.getUndertowEmbeddedServletContainer(builder37, deploymentManager38, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager41 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer43 = undertowEmbeddedServletContainerFactory21.getUndertowEmbeddedServletContainer(builder37, deploymentManager41, (int) ' ');
        boolean boolean44 = undertowEmbeddedServletContainerFactory21.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory21.setPort((-1));
        java.lang.Integer int47 = undertowEmbeddedServletContainerFactory21.bufferSize;
        io.undertow.Undertow.Builder builder49 = undertowEmbeddedServletContainerFactory21.createBuilder(0);
        io.undertow.servlet.api.DeploymentManager deploymentManager50 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer52 = undertowEmbeddedServletContainerFactory10.getUndertowEmbeddedServletContainer(builder49, deploymentManager50, (int) '4');
        java.lang.Boolean boolean53 = undertowEmbeddedServletContainerFactory10.directBuffers;
        io.undertow.Undertow.Builder builder55 = undertowEmbeddedServletContainerFactory10.createBuilder((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int57 = undertowEmbeddedServletContainerFactory56.getSessionTimeout();
        boolean boolean58 = undertowEmbeddedServletContainerFactory56.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList59 = undertowEmbeddedServletContainerFactory56.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet60 = undertowEmbeddedServletContainerFactory56.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList61 = undertowEmbeddedServletContainerFactory56.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int63 = undertowEmbeddedServletContainerFactory62.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray64 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory62.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray64);
        undertowEmbeddedServletContainerFactory56.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray64);
        undertowEmbeddedServletContainerFactory10.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray64);
        undertowEmbeddedServletContainerFactory2.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray64);
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory2.setPersistSession(false);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1800 + "'", int11 == 1800);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList13);
        org.junit.Assert.assertNotNull(jspServlet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(inetAddress16);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNull(resourceLoader23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1800 + "'", int27 == 1800);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList29);
        org.junit.Assert.assertNotNull(jspServlet30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1800 + "'", int32 == 1800);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer40);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer52);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1800 + "'", int57 == 1800);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList59);
        org.junit.Assert.assertNotNull(jspServlet60);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 8080 + "'", int63 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray64);
    }

    @Test
    public void test14129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14129");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory4.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory4.resourceLoader;
        undertowEmbeddedServletContainerFactory4.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getSessionTimeout();
        boolean boolean11 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = undertowEmbeddedServletContainerFactory9.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet13 = undertowEmbeddedServletContainerFactory9.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        undertowEmbeddedServletContainerFactory14.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder20 = undertowEmbeddedServletContainerFactory14.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer23 = undertowEmbeddedServletContainerFactory9.getUndertowEmbeddedServletContainer(builder20, deploymentManager21, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer26 = undertowEmbeddedServletContainerFactory4.getUndertowEmbeddedServletContainer(builder20, deploymentManager24, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer29 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder20, deploymentManager27, (int) (short) -1);
        undertowEmbeddedServletContainerFactory0.setDisplayName("");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet32 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        java.lang.String str37 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        boolean boolean38 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        io.undertow.server.HttpHandler httpHandler39 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.accesslog.AccessLogHandler accessLogHandler40 = undertowEmbeddedServletContainerFactory0.createAccessLogHandler(httpHandler39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Access log directory is not set");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList12);
        org.junit.Assert.assertNotNull(jspServlet13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer23);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer26);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer29);
        org.junit.Assert.assertNotNull(errorPageSet32);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test14130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14130");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        boolean boolean7 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        org.springframework.boot.context.embedded.Ssl ssl14 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl14);
        java.lang.Boolean boolean16 = undertowEmbeddedServletContainerFactory0.directBuffers;
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(35);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + false + "'", boolean16, false);
    }

    @Test
    public void test14131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14131");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory4.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory4.resourceLoader;
        undertowEmbeddedServletContainerFactory4.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getSessionTimeout();
        boolean boolean11 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = undertowEmbeddedServletContainerFactory9.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet13 = undertowEmbeddedServletContainerFactory9.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        undertowEmbeddedServletContainerFactory14.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder20 = undertowEmbeddedServletContainerFactory14.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer23 = undertowEmbeddedServletContainerFactory9.getUndertowEmbeddedServletContainer(builder20, deploymentManager21, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer26 = undertowEmbeddedServletContainerFactory4.getUndertowEmbeddedServletContainer(builder20, deploymentManager24, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer29 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder20, deploymentManager27, (int) (short) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList30 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection31 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 0;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList34 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray37 = undertowEmbeddedServletContainerFactory0.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList12);
        org.junit.Assert.assertNotNull(jspServlet13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer23);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer26);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer29);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList30);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection31);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList34);
    }

    @Test
    public void test14132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14132");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 100);
        java.lang.String str2 = undertowEmbeddedServletContainerFactory1.accessLogPattern;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList3 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 35;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getPort();
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory6.bufferSize;
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory6.setSessionStoreDir(file9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = undertowEmbeddedServletContainerFactory11.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet15 = undertowEmbeddedServletContainerFactory11.getJspServlet();
        boolean boolean16 = undertowEmbeddedServletContainerFactory11.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = undertowEmbeddedServletContainerFactory11.getErrorPages();
        undertowEmbeddedServletContainerFactory6.setErrorPages(errorPageSet17);
        undertowEmbeddedServletContainerFactory6.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList21 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        undertowEmbeddedServletContainerFactory6.bufferSize = 8080;
        java.net.InetAddress inetAddress24 = undertowEmbeddedServletContainerFactory6.getAddress();
        int int25 = undertowEmbeddedServletContainerFactory6.getPort();
        org.springframework.boot.context.embedded.Compression compression26 = undertowEmbeddedServletContainerFactory6.getCompression();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList27 = undertowEmbeddedServletContainerFactory6.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList31 = undertowEmbeddedServletContainerFactory28.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet32 = undertowEmbeddedServletContainerFactory28.getJspServlet();
        boolean boolean33 = undertowEmbeddedServletContainerFactory28.useForwardHeaders;
        java.net.InetAddress inetAddress34 = undertowEmbeddedServletContainerFactory28.getAddress();
        boolean boolean35 = undertowEmbeddedServletContainerFactory28.isAccessLogEnabled();
        org.springframework.core.io.ResourceLoader resourceLoader36 = undertowEmbeddedServletContainerFactory28.resourceLoader;
        undertowEmbeddedServletContainerFactory28.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int40 = undertowEmbeddedServletContainerFactory39.getSessionTimeout();
        boolean boolean41 = undertowEmbeddedServletContainerFactory39.isPersistSession();
        undertowEmbeddedServletContainerFactory39.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder45 = undertowEmbeddedServletContainerFactory39.createBuilder((-1));
        undertowEmbeddedServletContainerFactory39.setBufferSize((java.lang.Integer) 10);
        java.net.InetAddress inetAddress48 = null;
        undertowEmbeddedServletContainerFactory39.setAddress(inetAddress48);
        undertowEmbeddedServletContainerFactory39.accessLogPattern = "hi!";
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection52 = undertowEmbeddedServletContainerFactory39.getBuilderCustomizers();
        boolean boolean53 = undertowEmbeddedServletContainerFactory39.accessLogEnabled;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int55 = undertowEmbeddedServletContainerFactory54.getSessionTimeout();
        boolean boolean56 = undertowEmbeddedServletContainerFactory54.isPersistSession();
        undertowEmbeddedServletContainerFactory54.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory54.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory54.setDisplayName("hi!");
        boolean boolean63 = undertowEmbeddedServletContainerFactory54.isRegisterDefaultServlet();
        java.io.File file64 = null;
        undertowEmbeddedServletContainerFactory54.accessLogDirectory = file64;
        org.springframework.boot.context.embedded.JspServlet jspServlet66 = undertowEmbeddedServletContainerFactory54.getJspServlet();
        undertowEmbeddedServletContainerFactory39.setJspServlet(jspServlet66);
        io.undertow.Undertow.Builder builder69 = undertowEmbeddedServletContainerFactory39.createBuilder((int) '4');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int71 = undertowEmbeddedServletContainerFactory70.getSessionTimeout();
        boolean boolean72 = undertowEmbeddedServletContainerFactory70.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList73 = undertowEmbeddedServletContainerFactory70.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet74 = undertowEmbeddedServletContainerFactory70.getJspServlet();
        undertowEmbeddedServletContainerFactory70.directBuffers = true;
        undertowEmbeddedServletContainerFactory70.accessLogPattern = "hi!";
        java.io.File file79 = null;
        undertowEmbeddedServletContainerFactory70.setDocumentRoot(file79);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory81 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int82 = undertowEmbeddedServletContainerFactory81.getSessionTimeout();
        boolean boolean83 = undertowEmbeddedServletContainerFactory81.isPersistSession();
        java.io.File file84 = undertowEmbeddedServletContainerFactory81.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings85 = undertowEmbeddedServletContainerFactory81.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings86 = undertowEmbeddedServletContainerFactory81.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory87 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int88 = undertowEmbeddedServletContainerFactory87.getSessionTimeout();
        boolean boolean89 = undertowEmbeddedServletContainerFactory87.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList90 = undertowEmbeddedServletContainerFactory87.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet91 = undertowEmbeddedServletContainerFactory87.getJspServlet();
        undertowEmbeddedServletContainerFactory81.setJspServlet(jspServlet91);
        undertowEmbeddedServletContainerFactory70.setJspServlet(jspServlet91);
        undertowEmbeddedServletContainerFactory39.setJspServlet(jspServlet91);
        undertowEmbeddedServletContainerFactory28.setJspServlet(jspServlet91);
        undertowEmbeddedServletContainerFactory6.setJspServlet(jspServlet91);
        undertowEmbeddedServletContainerFactory1.setJspServlet(jspServlet91);
        org.springframework.boot.context.embedded.Ssl ssl98 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode99 = undertowEmbeddedServletContainerFactory1.getSslClientAuthMode(ssl98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8080 + "'", int7 == 8080);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList14);
        org.junit.Assert.assertNotNull(jspServlet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(errorPageSet17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList21);
        org.junit.Assert.assertNull(inetAddress24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 8080 + "'", int25 == 8080);
        org.junit.Assert.assertNull(compression26);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList31);
        org.junit.Assert.assertNotNull(jspServlet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(inetAddress34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(resourceLoader36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1800 + "'", int40 == 1800);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1800 + "'", int55 == 1800);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(jspServlet66);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1800 + "'", int71 == 1800);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList73);
        org.junit.Assert.assertNotNull(jspServlet74);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1800 + "'", int82 == 1800);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNotNull(mimeMappings85);
        org.junit.Assert.assertNotNull(mimeMappings86);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1800 + "'", int88 == 1800);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList90);
        org.junit.Assert.assertNotNull(jspServlet91);
    }

    @Test
    public void test14133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14133");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.jarPath = "hi!";
        boolean boolean3 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str4 = jarResourceManager0.jarPath;
        jarResourceManager0.jarPath = "";
        boolean boolean7 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean8 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.close();
        boolean boolean10 = jarResourceManager0.isResourceChangeListenerSupported();
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource12 = jarResourceManager0.getResource("hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test14134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14134");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory0.directBuffers;
        org.springframework.boot.context.embedded.Compression compression7 = undertowEmbeddedServletContainerFactory0.getCompression();
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        undertowEmbeddedServletContainerFactory0.ioThreads = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList12 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(1800);
        undertowEmbeddedServletContainerFactory14.accessLogPattern = "";
        boolean boolean17 = undertowEmbeddedServletContainerFactory14.isAccessLogEnabled();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings18);
        java.io.File file20 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(compression7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNull(file20);
    }

    @Test
    public void test14135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14135");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.lang.ClassLoader classLoader4 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "";
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getPort();
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory10.bufferSize;
        java.io.File file13 = null;
        undertowEmbeddedServletContainerFactory10.setSessionStoreDir(file13);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int16 = undertowEmbeddedServletContainerFactory15.getSessionTimeout();
        boolean boolean17 = undertowEmbeddedServletContainerFactory15.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList18 = undertowEmbeddedServletContainerFactory15.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = undertowEmbeddedServletContainerFactory15.getJspServlet();
        boolean boolean20 = undertowEmbeddedServletContainerFactory15.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = undertowEmbeddedServletContainerFactory15.getErrorPages();
        undertowEmbeddedServletContainerFactory10.setErrorPages(errorPageSet21);
        undertowEmbeddedServletContainerFactory10.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList25 = undertowEmbeddedServletContainerFactory10.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer26 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray27 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer26 };
        undertowEmbeddedServletContainerFactory10.addBuilderCustomizers(undertowBuilderCustomizerArray27);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection29 = undertowEmbeddedServletContainerFactory10.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = undertowEmbeddedServletContainerFactory10.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings30);
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 100);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8080 + "'", int11 == 8080);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1800 + "'", int16 == 1800);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList18);
        org.junit.Assert.assertNotNull(jspServlet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(errorPageSet21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray27);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection29);
        org.junit.Assert.assertNotNull(mimeMappings30);
    }

    @Test
    public void test14136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14136");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(0);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file4);
    }

    @Test
    public void test14137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14137");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl5 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl5);
        org.springframework.boot.context.embedded.JspServlet jspServlet7 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean12 = undertowEmbeddedServletContainerFactory11.isAccessLogEnabled();
        org.springframework.boot.context.embedded.Ssl ssl13 = undertowEmbeddedServletContainerFactory11.getSsl();
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory11.bufferSize;
        java.io.File file15 = undertowEmbeddedServletContainerFactory11.getDocumentRoot();
        org.springframework.boot.context.embedded.JspServlet jspServlet16 = undertowEmbeddedServletContainerFactory11.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet16);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory20.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader22 = undertowEmbeddedServletContainerFactory20.resourceLoader;
        java.lang.String str23 = undertowEmbeddedServletContainerFactory20.accessLogPattern;
        java.io.File file24 = null;
        undertowEmbeddedServletContainerFactory20.setDocumentRoot(file24);
        java.io.File file26 = null;
        undertowEmbeddedServletContainerFactory20.setAccessLogDirectory(file26);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList31 = undertowEmbeddedServletContainerFactory28.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet32 = undertowEmbeddedServletContainerFactory28.getJspServlet();
        boolean boolean33 = undertowEmbeddedServletContainerFactory28.useForwardHeaders;
        java.net.InetAddress inetAddress34 = undertowEmbeddedServletContainerFactory28.getAddress();
        undertowEmbeddedServletContainerFactory28.setAccessLogPattern("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = undertowEmbeddedServletContainerFactory39.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader41 = undertowEmbeddedServletContainerFactory39.resourceLoader;
        undertowEmbeddedServletContainerFactory39.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int45 = undertowEmbeddedServletContainerFactory44.getSessionTimeout();
        boolean boolean46 = undertowEmbeddedServletContainerFactory44.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList47 = undertowEmbeddedServletContainerFactory44.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet48 = undertowEmbeddedServletContainerFactory44.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int50 = undertowEmbeddedServletContainerFactory49.getSessionTimeout();
        boolean boolean51 = undertowEmbeddedServletContainerFactory49.isPersistSession();
        undertowEmbeddedServletContainerFactory49.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder55 = undertowEmbeddedServletContainerFactory49.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager56 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer58 = undertowEmbeddedServletContainerFactory44.getUndertowEmbeddedServletContainer(builder55, deploymentManager56, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager59 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer61 = undertowEmbeddedServletContainerFactory39.getUndertowEmbeddedServletContainer(builder55, deploymentManager59, (int) ' ');
        boolean boolean62 = undertowEmbeddedServletContainerFactory39.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory39.setPort((-1));
        java.lang.Integer int65 = undertowEmbeddedServletContainerFactory39.bufferSize;
        io.undertow.Undertow.Builder builder67 = undertowEmbeddedServletContainerFactory39.createBuilder(0);
        io.undertow.servlet.api.DeploymentManager deploymentManager68 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer70 = undertowEmbeddedServletContainerFactory28.getUndertowEmbeddedServletContainer(builder67, deploymentManager68, (int) '4');
        java.lang.Boolean boolean71 = undertowEmbeddedServletContainerFactory28.directBuffers;
        io.undertow.Undertow.Builder builder73 = undertowEmbeddedServletContainerFactory28.createBuilder((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int75 = undertowEmbeddedServletContainerFactory74.getSessionTimeout();
        boolean boolean76 = undertowEmbeddedServletContainerFactory74.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList77 = undertowEmbeddedServletContainerFactory74.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet78 = undertowEmbeddedServletContainerFactory74.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList79 = undertowEmbeddedServletContainerFactory74.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory80 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int81 = undertowEmbeddedServletContainerFactory80.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray82 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory80.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray82);
        undertowEmbeddedServletContainerFactory74.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray82);
        undertowEmbeddedServletContainerFactory28.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray82);
        undertowEmbeddedServletContainerFactory20.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray82);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray82);
        org.springframework.core.io.ResourceLoader resourceLoader88 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader88;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet90 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(jspServlet7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(ssl13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(jspServlet16);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNull(resourceLoader22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList31);
        org.junit.Assert.assertNotNull(jspServlet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(inetAddress34);
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNull(resourceLoader41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1800 + "'", int45 == 1800);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList47);
        org.junit.Assert.assertNotNull(jspServlet48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1800 + "'", int50 == 1800);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer58);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer70);
        org.junit.Assert.assertNull(boolean71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1800 + "'", int75 == 1800);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList77);
        org.junit.Assert.assertNotNull(jspServlet78);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 8080 + "'", int81 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray82);
        org.junit.Assert.assertNotNull(errorPageSet90);
    }

    @Test
    public void test14138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14138");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader3);
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.io.File file9 = undertowEmbeddedServletContainerFactory6.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory6.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory6.getMimeMappings();
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory6.buffersPerRegion;
        io.undertow.Undertow.Builder builder14 = undertowEmbeddedServletContainerFactory6.createBuilder(10);
        io.undertow.servlet.api.DeploymentManager deploymentManager15 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer17 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder14, deploymentManager15, 1);
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo20 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo20);
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        org.xnio.XnioWorker xnioWorker24 = undertowEmbeddedServletContainerFactory0.createWorker();
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("0.0.0.0");
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.lang.Integer int29 = undertowEmbeddedServletContainerFactory0.workerThreads;
        java.io.File file30 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file30;
        int int32 = undertowEmbeddedServletContainerFactory0.getPort();
        java.io.File file33 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer17);
        org.junit.Assert.assertNotNull(xnioWorker24);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 8080 + "'", int32 == 8080);
        org.junit.Assert.assertNull(file33);
    }

    @Test
    public void test14139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14139");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory0.getAddress();
        java.net.InetAddress inetAddress19 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress19);
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean25 = undertowEmbeddedServletContainerFactory24.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory24.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory24.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings30);
        int int32 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.Compression compression35 = null;
        undertowEmbeddedServletContainerFactory34.setCompression(compression35);
        boolean boolean37 = undertowEmbeddedServletContainerFactory34.isRegisterDefaultServlet();
        boolean boolean38 = undertowEmbeddedServletContainerFactory34.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet39 = undertowEmbeddedServletContainerFactory34.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int43 = undertowEmbeddedServletContainerFactory42.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray44 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory42.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray44);
        undertowEmbeddedServletContainerFactory41.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray44);
        undertowEmbeddedServletContainerFactory34.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray44);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray44);
        java.lang.String str49 = undertowEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.boot.context.embedded.Ssl ssl50 = undertowEmbeddedServletContainerFactory0.getSsl();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1800 + "'", int32 == 1800);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(errorPageSet39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 8080 + "'", int43 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray44);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNull(ssl50);
    }

    @Test
    public void test14140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14140");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory0.directBuffers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList7 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = (-1);
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        boolean boolean11 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.lang.String str12 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.ioThreads = 10;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
    }

    @Test
    public void test14141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14141");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        int int6 = undertowEmbeddedServletContainerFactory0.getPort();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.Ssl ssl9 = undertowEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getSessionTimeout();
        boolean boolean12 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = undertowEmbeddedServletContainerFactory10.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet14 = undertowEmbeddedServletContainerFactory10.getJspServlet();
        undertowEmbeddedServletContainerFactory10.directBuffers = true;
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory10.bufferSize;
        java.io.File file18 = null;
        undertowEmbeddedServletContainerFactory10.setDocumentRoot(file18);
        boolean boolean20 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        undertowEmbeddedServletContainerFactory10.setWorkerThreads((java.lang.Integer) 8080);
        org.xnio.XnioWorker xnioWorker23 = undertowEmbeddedServletContainerFactory10.createWorker();
        org.xnio.XnioWorker xnioWorker24 = undertowEmbeddedServletContainerFactory10.createWorker();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList25 = undertowEmbeddedServletContainerFactory10.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList25;
        org.springframework.boot.context.embedded.Compression compression27 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression27);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection29 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8080 + "'", int6 == 8080);
        org.junit.Assert.assertNull(ssl9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1800 + "'", int11 == 1800);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList13);
        org.junit.Assert.assertNotNull(jspServlet14);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(xnioWorker23);
        org.junit.Assert.assertNotNull(xnioWorker24);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection29);
    }

    @Test
    public void test14142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14142");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList14, undertowBuilderCustomizerArray13);
        undertowEmbeddedServletContainerFactory12.builderCustomizers = undertowBuilderCustomizerList14;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection17 = undertowEmbeddedServletContainerFactory12.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection17);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        boolean boolean22 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        io.undertow.server.handlers.resource.ResourceManager resourceManager23 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        org.springframework.core.io.ResourceLoader resourceLoader24 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        java.lang.String str25 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = true;
        org.springframework.core.io.ResourceLoader resourceLoader28 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.Compression compression29 = undertowEmbeddedServletContainerFactory0.getCompression();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection17);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(resourceManager23);
        org.junit.Assert.assertNull(resourceLoader24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "0.0.0.0" + "'", str25, "0.0.0.0");
        org.junit.Assert.assertNull(resourceLoader28);
        org.junit.Assert.assertNull(compression29);
    }

    @Test
    public void test14143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14143");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        undertowEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader5);
        undertowEmbeddedServletContainerFactory2.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        undertowEmbeddedServletContainerFactory2.setAccessLogPattern("0.0.0.0");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection12 = undertowEmbeddedServletContainerFactory2.getDeploymentInfoCustomizers();
        io.undertow.server.handlers.resource.ResourceManager resourceManager13 = undertowEmbeddedServletContainerFactory2.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(true);
        java.lang.Integer int16 = undertowEmbeddedServletContainerFactory2.workerThreads;
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory2.setAccessLogDirectory(file17);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection12);
        org.junit.Assert.assertNotNull(resourceManager13);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test14144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14144");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        boolean boolean2 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean3 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str4 = jarResourceManager0.jarPath;
        java.lang.String str5 = jarResourceManager0.jarPath;
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        jarResourceManager0.close();
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource11 = jarResourceManager0.getResource("hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test14145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14145");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.workerThreads = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory11.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader13 = undertowEmbeddedServletContainerFactory11.resourceLoader;
        undertowEmbeddedServletContainerFactory11.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList19 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet20 = undertowEmbeddedServletContainerFactory16.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getSessionTimeout();
        boolean boolean23 = undertowEmbeddedServletContainerFactory21.isPersistSession();
        undertowEmbeddedServletContainerFactory21.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder27 = undertowEmbeddedServletContainerFactory21.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer30 = undertowEmbeddedServletContainerFactory16.getUndertowEmbeddedServletContainer(builder27, deploymentManager28, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager31 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer33 = undertowEmbeddedServletContainerFactory11.getUndertowEmbeddedServletContainer(builder27, deploymentManager31, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager34 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer36 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder27, deploymentManager34, (int) (short) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList37 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList37);
        java.net.InetAddress inetAddress39 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress39);
        org.springframework.boot.context.embedded.Ssl ssl41 = undertowEmbeddedServletContainerFactory0.getSsl();
        io.undertow.Undertow.Builder builder43 = undertowEmbeddedServletContainerFactory0.createBuilder(1800);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 97;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8080 + "'", int8 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNull(resourceLoader13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList19);
        org.junit.Assert.assertNotNull(jspServlet20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1800 + "'", int22 == 1800);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer30);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer33);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer36);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList37);
        org.junit.Assert.assertNull(ssl41);
        org.junit.Assert.assertNotNull(builder43);
    }

    @Test
    public void test14146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14146");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet10);
        java.net.InetAddress inetAddress12 = undertowEmbeddedServletContainerFactory0.getAddress();
        java.lang.ClassLoader classLoader13 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        java.lang.String str14 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        java.io.File file19 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.net.InetAddress inetAddress20 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress20);
        java.lang.String str22 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int24 = undertowEmbeddedServletContainerFactory23.getSessionTimeout();
        boolean boolean25 = undertowEmbeddedServletContainerFactory23.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList26 = undertowEmbeddedServletContainerFactory23.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet27 = undertowEmbeddedServletContainerFactory23.getJspServlet();
        boolean boolean28 = undertowEmbeddedServletContainerFactory23.isPersistSession();
        java.lang.Boolean boolean29 = undertowEmbeddedServletContainerFactory23.directBuffers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet30 = undertowEmbeddedServletContainerFactory23.getErrorPages();
        undertowEmbeddedServletContainerFactory23.ioThreads = 1800;
        java.lang.String str33 = undertowEmbeddedServletContainerFactory23.getDisplayName();
        org.springframework.boot.context.embedded.JspServlet jspServlet34 = undertowEmbeddedServletContainerFactory23.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet34);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertNull(inetAddress12);
        org.junit.Assert.assertNotNull(classLoader13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0.0.0.0" + "'", str14, "0.0.0.0");
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1800 + "'", int24 == 1800);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList26);
        org.junit.Assert.assertNotNull(jspServlet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(errorPageSet30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(jspServlet34);
    }

    @Test
    public void test14147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14147");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file5);
        java.lang.String str7 = undertowEmbeddedServletContainerFactory0.getContextPath();
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 52;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection10 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection10);
    }

    @Test
    public void test14148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14148");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        boolean boolean3 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.lang.Boolean boolean4 = undertowEmbeddedServletContainerFactory0.directBuffers;
        java.lang.String str5 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test14149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14149");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl4);
        undertowEmbeddedServletContainerFactory0.setPort((int) (short) 10);
        int int8 = undertowEmbeddedServletContainerFactory0.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader9;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray14 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13 };
        initializer11.initializers = servletContextInitializerArray14;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray16 = initializer11.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int18 = undertowEmbeddedServletContainerFactory17.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer20 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap19);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer22 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap21);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer24 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap23);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer26 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap25);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray27 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer20, initParameterConfiguringServletContextInitializer22, initParameterConfiguringServletContextInitializer24, initParameterConfiguringServletContextInitializer26 };
        undertowEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray27);
        initializer11.initializers = servletContextInitializerArray27;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray30 = initializer11.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer33 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap32);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray34 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer33 };
        initializer31.initializers = servletContextInitializerArray34;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray36 = initializer31.initializers;
        initializer11.initializers = servletContextInitializerArray36;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray38 = initializer11.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int40 = undertowEmbeddedServletContainerFactory39.getSessionTimeout();
        boolean boolean41 = undertowEmbeddedServletContainerFactory39.isPersistSession();
        undertowEmbeddedServletContainerFactory39.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory39.workerThreads = 0;
        undertowEmbeddedServletContainerFactory39.setPersistSession(false);
        undertowEmbeddedServletContainerFactory39.ioThreads = 1800;
        java.lang.String str50 = undertowEmbeddedServletContainerFactory39.getContextPath();
        java.io.File file51 = null;
        undertowEmbeddedServletContainerFactory39.setSessionStoreDir(file51);
        undertowEmbeddedServletContainerFactory39.setAccessLogPattern("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer55 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer57 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap56);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray58 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer57 };
        initializer55.initializers = servletContextInitializerArray58;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray60 = initializer55.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int62 = undertowEmbeddedServletContainerFactory61.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer64 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap63);
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer66 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap65);
        java.util.Map<java.lang.String, java.lang.String> strMap67 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer68 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap67);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer70 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap69);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray71 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer64, initParameterConfiguringServletContextInitializer66, initParameterConfiguringServletContextInitializer68, initParameterConfiguringServletContextInitializer70 };
        undertowEmbeddedServletContainerFactory61.addInitializers(servletContextInitializerArray71);
        initializer55.initializers = servletContextInitializerArray71;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray74 = initializer55.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer75 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap76 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer77 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap76);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray78 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer77 };
        initializer75.initializers = servletContextInitializerArray78;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray80 = initializer75.initializers;
        initializer55.initializers = servletContextInitializerArray80;
        undertowEmbeddedServletContainerFactory39.addInitializers(servletContextInitializerArray80);
        initializer11.initializers = servletContextInitializerArray80;
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray80);
        java.io.File file85 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file85);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertNotNull(servletContextInitializerArray14);
        org.junit.Assert.assertNotNull(servletContextInitializerArray16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1800 + "'", int18 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray27);
        org.junit.Assert.assertNotNull(servletContextInitializerArray30);
        org.junit.Assert.assertNotNull(servletContextInitializerArray34);
        org.junit.Assert.assertNotNull(servletContextInitializerArray36);
        org.junit.Assert.assertNotNull(servletContextInitializerArray38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1800 + "'", int40 == 1800);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(servletContextInitializerArray58);
        org.junit.Assert.assertNotNull(servletContextInitializerArray60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1800 + "'", int62 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray71);
        org.junit.Assert.assertNotNull(servletContextInitializerArray74);
        org.junit.Assert.assertNotNull(servletContextInitializerArray78);
        org.junit.Assert.assertNotNull(servletContextInitializerArray80);
    }

    @Test
    public void test14150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14150");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.xnio.XnioWorker xnioWorker2 = undertowEmbeddedServletContainerFactory1.createWorker();
        undertowEmbeddedServletContainerFactory1.accessLogEnabled = true;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo5 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo5);
        java.net.InetAddress inetAddress7 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress7);
        java.io.File file9 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList12;
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory10.setSessionStoreDir(file15);
        undertowEmbeddedServletContainerFactory10.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int20 = undertowEmbeddedServletContainerFactory19.getSessionTimeout();
        boolean boolean21 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        undertowEmbeddedServletContainerFactory19.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl24 = null;
        undertowEmbeddedServletContainerFactory19.setSsl(ssl24);
        java.lang.String str26 = undertowEmbeddedServletContainerFactory19.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int28 = undertowEmbeddedServletContainerFactory27.getSessionTimeout();
        boolean boolean29 = undertowEmbeddedServletContainerFactory27.isPersistSession();
        undertowEmbeddedServletContainerFactory27.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory27.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int35 = undertowEmbeddedServletContainerFactory34.getSessionTimeout();
        boolean boolean36 = undertowEmbeddedServletContainerFactory34.isPersistSession();
        java.io.File file37 = undertowEmbeddedServletContainerFactory34.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList38 = undertowEmbeddedServletContainerFactory34.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory27.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList38;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory42.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int46 = undertowEmbeddedServletContainerFactory45.getSessionTimeout();
        boolean boolean47 = undertowEmbeddedServletContainerFactory45.isPersistSession();
        undertowEmbeddedServletContainerFactory45.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory45.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray52 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory45.addErrorPages(errorPageArray52);
        undertowEmbeddedServletContainerFactory42.addErrorPages(errorPageArray52);
        undertowEmbeddedServletContainerFactory27.addErrorPages(errorPageArray52);
        undertowEmbeddedServletContainerFactory19.addErrorPages(errorPageArray52);
        undertowEmbeddedServletContainerFactory10.addErrorPages(errorPageArray52);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray52);
        boolean boolean59 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.junit.Assert.assertNotNull(xnioWorker2);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1800 + "'", int28 == 1800);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1800 + "'", int35 == 1800);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList38);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1800 + "'", int46 == 1800);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(errorPageArray52);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test14151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14151");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.lang.Integer int3 = undertowEmbeddedServletContainerFactory1.bufferSize;
        org.springframework.boot.context.embedded.Compression compression4 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression4);
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.accessLogEnabled = true;
        org.xnio.XnioWorker xnioWorker9 = undertowEmbeddedServletContainerFactory1.createWorker();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(xnioWorker9);
        org.junit.Assert.assertNull(int10);
    }

    @Test
    public void test14152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14152");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        io.undertow.server.handlers.resource.ResourceManager resourceManager7 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        java.io.File file11 = undertowEmbeddedServletContainerFactory8.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = undertowEmbeddedServletContainerFactory14.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet18 = undertowEmbeddedServletContainerFactory14.getJspServlet();
        undertowEmbeddedServletContainerFactory8.setJspServlet(jspServlet18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList22 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList22, undertowBuilderCustomizerArray21);
        undertowEmbeddedServletContainerFactory20.builderCustomizers = undertowBuilderCustomizerList22;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection25 = undertowEmbeddedServletContainerFactory20.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory8.setBuilderCustomizers(undertowBuilderCustomizerCollection25);
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection25);
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection30 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        io.undertow.server.handlers.resource.ResourceManager resourceManager31 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        java.lang.String str32 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(resourceManager7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList17);
        org.junit.Assert.assertNotNull(jspServlet18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection25);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection30);
        org.junit.Assert.assertNotNull(resourceManager31);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test14153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14153");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        java.lang.Integer int26 = undertowEmbeddedServletContainerFactory2.bufferSize;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.Ssl ssl29 = null;
        undertowEmbeddedServletContainerFactory2.setSsl(ssl29);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory33.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int37 = undertowEmbeddedServletContainerFactory36.getSessionTimeout();
        boolean boolean38 = undertowEmbeddedServletContainerFactory36.isPersistSession();
        undertowEmbeddedServletContainerFactory36.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory36.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray43 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory36.addErrorPages(errorPageArray43);
        undertowEmbeddedServletContainerFactory33.addErrorPages(errorPageArray43);
        org.springframework.core.io.ResourceLoader resourceLoader46 = undertowEmbeddedServletContainerFactory33.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int48 = undertowEmbeddedServletContainerFactory47.getSessionTimeout();
        boolean boolean49 = undertowEmbeddedServletContainerFactory47.isPersistSession();
        undertowEmbeddedServletContainerFactory47.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder53 = undertowEmbeddedServletContainerFactory47.createBuilder((-1));
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet54 = undertowEmbeddedServletContainerFactory47.getErrorPages();
        java.lang.Integer int55 = undertowEmbeddedServletContainerFactory47.ioThreads;
        java.io.File file56 = undertowEmbeddedServletContainerFactory47.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList57 = undertowEmbeddedServletContainerFactory47.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory47.setContextPath("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int61 = undertowEmbeddedServletContainerFactory60.getSessionTimeout();
        boolean boolean62 = undertowEmbeddedServletContainerFactory60.isPersistSession();
        undertowEmbeddedServletContainerFactory60.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory60.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory60.setDisplayName("hi!");
        boolean boolean69 = undertowEmbeddedServletContainerFactory60.isRegisterDefaultServlet();
        java.io.File file70 = undertowEmbeddedServletContainerFactory60.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int72 = undertowEmbeddedServletContainerFactory71.getSessionTimeout();
        boolean boolean73 = undertowEmbeddedServletContainerFactory71.isPersistSession();
        undertowEmbeddedServletContainerFactory71.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory71.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray78 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory71.addErrorPages(errorPageArray78);
        undertowEmbeddedServletContainerFactory60.addErrorPages(errorPageArray78);
        undertowEmbeddedServletContainerFactory47.addErrorPages(errorPageArray78);
        undertowEmbeddedServletContainerFactory33.addErrorPages(errorPageArray78);
        undertowEmbeddedServletContainerFactory2.addErrorPages(errorPageArray78);
        org.springframework.boot.context.embedded.JspServlet jspServlet84 = undertowEmbeddedServletContainerFactory2.getJspServlet();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1800 + "'", int37 == 1800);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(errorPageArray43);
        org.junit.Assert.assertNull(resourceLoader46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1800 + "'", int48 == 1800);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(errorPageSet54);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1800 + "'", int61 == 1800);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1800 + "'", int72 == 1800);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(errorPageArray78);
        org.junit.Assert.assertNotNull(jspServlet84);
    }

    @Test
    public void test14154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14154");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int5 = undertowEmbeddedServletContainerFactory4.getSessionTimeout();
        boolean boolean6 = undertowEmbeddedServletContainerFactory4.isPersistSession();
        undertowEmbeddedServletContainerFactory4.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory4.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory4.setDisplayName("hi!");
        boolean boolean13 = undertowEmbeddedServletContainerFactory4.isRegisterDefaultServlet();
        boolean boolean14 = undertowEmbeddedServletContainerFactory4.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int16 = undertowEmbeddedServletContainerFactory15.getSessionTimeout();
        boolean boolean17 = undertowEmbeddedServletContainerFactory15.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList18 = undertowEmbeddedServletContainerFactory15.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet19 = undertowEmbeddedServletContainerFactory15.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int21 = undertowEmbeddedServletContainerFactory20.getSessionTimeout();
        boolean boolean22 = undertowEmbeddedServletContainerFactory20.isPersistSession();
        undertowEmbeddedServletContainerFactory20.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder26 = undertowEmbeddedServletContainerFactory20.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer29 = undertowEmbeddedServletContainerFactory15.getUndertowEmbeddedServletContainer(builder26, deploymentManager27, (int) (short) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int31 = undertowEmbeddedServletContainerFactory30.getSessionTimeout();
        boolean boolean32 = undertowEmbeddedServletContainerFactory30.isPersistSession();
        undertowEmbeddedServletContainerFactory30.setPersistSession(false);
        undertowEmbeddedServletContainerFactory30.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList37 = undertowEmbeddedServletContainerFactory30.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory30.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int41 = undertowEmbeddedServletContainerFactory40.getSessionTimeout();
        boolean boolean42 = undertowEmbeddedServletContainerFactory40.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList43 = undertowEmbeddedServletContainerFactory40.builderCustomizers;
        undertowEmbeddedServletContainerFactory30.builderCustomizers = undertowBuilderCustomizerList43;
        undertowEmbeddedServletContainerFactory15.builderCustomizers = undertowBuilderCustomizerList43;
        undertowEmbeddedServletContainerFactory4.builderCustomizers = undertowBuilderCustomizerList43;
        undertowEmbeddedServletContainerFactory1.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList43);
        boolean boolean48 = undertowEmbeddedServletContainerFactory1.accessLogEnabled;
        java.lang.Boolean boolean49 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        undertowEmbeddedServletContainerFactory1.accessLogPattern = "";
        io.undertow.server.HttpHandler httpHandler54 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.accesslog.AccessLogHandler accessLogHandler55 = undertowEmbeddedServletContainerFactory1.createAccessLogHandler(httpHandler54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Access log directory is not set");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1800 + "'", int5 == 1800);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1800 + "'", int16 == 1800);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList18);
        org.junit.Assert.assertNotNull(jspServlet19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1800 + "'", int21 == 1800);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1800 + "'", int31 == 1800);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1800 + "'", int41 == 1800);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(boolean49);
    }

    @Test
    public void test14155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14155");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        jarResourceManager0.close();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "0.0.0.0";
        boolean boolean8 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str9 = jarResourceManager0.jarPath;
        jarResourceManager0.jarPath = "";
        boolean boolean12 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.jarPath = "hi!";
        boolean boolean15 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean16 = jarResourceManager0.isResourceChangeListenerSupported();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "0.0.0.0" + "'", str9, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test14156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14156");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        boolean boolean9 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.io.File file10 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        undertowEmbeddedServletContainerFactory11.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory11.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray18 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory11.addErrorPages(errorPageArray18);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray18);
        java.lang.String str21 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(false);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.createAccessLogDirectoryIfNecessary();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Access log directory is not set");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(errorPageArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "0.0.0.0" + "'", str21, "0.0.0.0");
    }

    @Test
    public void test14157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14157");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer16 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer16 };
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection19 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList22 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList22, undertowBuilderCustomizerArray21);
        undertowEmbeddedServletContainerFactory20.builderCustomizers = undertowBuilderCustomizerList22;
        org.springframework.boot.context.embedded.Compression compression25 = undertowEmbeddedServletContainerFactory20.getCompression();
        java.io.File file26 = undertowEmbeddedServletContainerFactory20.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory20.bufferSize = 10;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int30 = undertowEmbeddedServletContainerFactory29.getSessionTimeout();
        boolean boolean31 = undertowEmbeddedServletContainerFactory29.isPersistSession();
        undertowEmbeddedServletContainerFactory29.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory29.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory29.setDisplayName("hi!");
        boolean boolean38 = undertowEmbeddedServletContainerFactory29.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int40 = undertowEmbeddedServletContainerFactory39.getSessionTimeout();
        boolean boolean41 = undertowEmbeddedServletContainerFactory39.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList42 = undertowEmbeddedServletContainerFactory39.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet43 = undertowEmbeddedServletContainerFactory39.getJspServlet();
        undertowEmbeddedServletContainerFactory39.directBuffers = true;
        java.io.File file46 = null;
        undertowEmbeddedServletContainerFactory39.setDocumentRoot(file46);
        undertowEmbeddedServletContainerFactory39.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray50 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory39.addBuilderCustomizers(undertowBuilderCustomizerArray50);
        undertowEmbeddedServletContainerFactory29.addBuilderCustomizers(undertowBuilderCustomizerArray50);
        undertowEmbeddedServletContainerFactory20.addBuilderCustomizers(undertowBuilderCustomizerArray50);
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray50);
        java.io.File file55 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList56 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection19);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(compression25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1800 + "'", int30 == 1800);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1800 + "'", int40 == 1800);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList42);
        org.junit.Assert.assertNotNull(jspServlet43);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray50);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList56);
    }

    @Test
    public void test14158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14158");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        java.lang.String str5 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file6);
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory2.setAccessLogDirectory(file8);
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file10);
        java.lang.ClassLoader classLoader12 = undertowEmbeddedServletContainerFactory2.getServletClassLoader();
        org.springframework.boot.context.embedded.Ssl ssl13 = undertowEmbeddedServletContainerFactory2.getSsl();
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory2.bufferSize;
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(classLoader12);
        org.junit.Assert.assertNull(ssl13);
        org.junit.Assert.assertNull(int14);
    }

    @Test
    public void test14159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14159");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        boolean boolean8 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.lang.ClassLoader classLoader9 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(classLoader9);
    }

    @Test
    public void test14160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14160");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        undertowEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader5);
        undertowEmbeddedServletContainerFactory2.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        undertowEmbeddedServletContainerFactory2.setAccessLogPattern("0.0.0.0");
        undertowEmbeddedServletContainerFactory2.ioThreads = 0;
        java.io.File file14 = undertowEmbeddedServletContainerFactory2.getSessionStoreDir();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int16 = undertowEmbeddedServletContainerFactory15.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory15.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray17);
        undertowEmbeddedServletContainerFactory2.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray17);
        int int20 = undertowEmbeddedServletContainerFactory2.getSessionTimeout();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 8080 + "'", int16 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertNotNull(mimeMappings21);
    }

    @Test
    public void test14161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14161");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1800);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file15);
        boolean boolean17 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.io.File file18 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        boolean boolean19 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test14162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14162");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.lang.ClassLoader classLoader4 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        org.springframework.core.io.ResourceLoader resourceLoader7 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader7;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(classLoader4);
    }

    @Test
    public void test14163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14163");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        boolean boolean2 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean3 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean4 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str5 = jarResourceManager0.jarPath;
        jarResourceManager0.jarPath = "";
        boolean boolean8 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.jarPath = "";
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        jarResourceManager0.close();
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource16 = jarResourceManager0.getResource("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test14164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14164");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.net.InetAddress inetAddress6 = undertowEmbeddedServletContainerFactory0.getAddress();
        int int7 = undertowEmbeddedServletContainerFactory0.getPort();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file8);
        org.xnio.XnioWorker xnioWorker10 = undertowEmbeddedServletContainerFactory0.createWorker();
        java.lang.Integer int11 = undertowEmbeddedServletContainerFactory0.bufferSize;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        java.io.File file14 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8080 + "'", int7 == 8080);
        org.junit.Assert.assertNotNull(xnioWorker10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test14165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14165");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.lang.ClassLoader classLoader4 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        java.io.File file5 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory0.getSsl();
        org.springframework.core.io.ResourceLoader resourceLoader7 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader7;
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(true);
        undertowEmbeddedServletContainerFactory0.bufferSize = 32;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection13 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getPort();
        java.lang.Integer int16 = undertowEmbeddedServletContainerFactory14.bufferSize;
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory14.setSessionStoreDir(file17);
        java.io.File file19 = null;
        undertowEmbeddedServletContainerFactory14.accessLogDirectory = file19;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int23 = undertowEmbeddedServletContainerFactory22.getSessionTimeout();
        boolean boolean24 = undertowEmbeddedServletContainerFactory22.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList25 = undertowEmbeddedServletContainerFactory22.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet26 = undertowEmbeddedServletContainerFactory22.getJspServlet();
        undertowEmbeddedServletContainerFactory14.setJspServlet(jspServlet26);
        org.springframework.core.io.ResourceLoader resourceLoader28 = null;
        undertowEmbeddedServletContainerFactory14.resourceLoader = resourceLoader28;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int31 = undertowEmbeddedServletContainerFactory30.getSessionTimeout();
        boolean boolean32 = undertowEmbeddedServletContainerFactory30.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList33 = undertowEmbeddedServletContainerFactory30.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet34 = undertowEmbeddedServletContainerFactory30.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList35 = undertowEmbeddedServletContainerFactory30.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int37 = undertowEmbeddedServletContainerFactory36.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray38 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory36.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray38);
        undertowEmbeddedServletContainerFactory30.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray38);
        undertowEmbeddedServletContainerFactory14.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray38);
        java.lang.String str42 = undertowEmbeddedServletContainerFactory14.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int44 = undertowEmbeddedServletContainerFactory43.getSessionTimeout();
        boolean boolean45 = undertowEmbeddedServletContainerFactory43.isPersistSession();
        undertowEmbeddedServletContainerFactory43.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory43.setBuffersPerRegion((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory43.setRegisterJspServlet(false);
        int int52 = undertowEmbeddedServletContainerFactory43.getPort();
        boolean boolean53 = undertowEmbeddedServletContainerFactory43.accessLogEnabled;
        boolean boolean54 = undertowEmbeddedServletContainerFactory43.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int56 = undertowEmbeddedServletContainerFactory55.getSessionTimeout();
        boolean boolean57 = undertowEmbeddedServletContainerFactory55.isPersistSession();
        java.io.File file58 = undertowEmbeddedServletContainerFactory55.accessLogDirectory;
        undertowEmbeddedServletContainerFactory55.setRegisterDefaultServlet(true);
        java.lang.Boolean boolean61 = undertowEmbeddedServletContainerFactory55.directBuffers;
        org.springframework.boot.context.embedded.Compression compression62 = undertowEmbeddedServletContainerFactory55.getCompression();
        undertowEmbeddedServletContainerFactory55.setUseForwardHeaders(true);
        undertowEmbeddedServletContainerFactory55.ioThreads = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList67 = undertowEmbeddedServletContainerFactory55.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory43.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList67;
        undertowEmbeddedServletContainerFactory14.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList67;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList67;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8080 + "'", int15 == 8080);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1800 + "'", int23 == 1800);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList25);
        org.junit.Assert.assertNotNull(jspServlet26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1800 + "'", int31 == 1800);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList33);
        org.junit.Assert.assertNotNull(jspServlet34);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8080 + "'", int37 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray38);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1800 + "'", int44 == 1800);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 8080 + "'", int52 == 8080);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1800 + "'", int56 == 1800);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(boolean61);
        org.junit.Assert.assertNull(compression62);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList67);
    }

    @Test
    public void test14166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14166");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        io.undertow.server.handlers.resource.ResourceManager resourceManager7 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        java.io.File file11 = undertowEmbeddedServletContainerFactory8.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = undertowEmbeddedServletContainerFactory14.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet18 = undertowEmbeddedServletContainerFactory14.getJspServlet();
        undertowEmbeddedServletContainerFactory8.setJspServlet(jspServlet18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList22 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList22, undertowBuilderCustomizerArray21);
        undertowEmbeddedServletContainerFactory20.builderCustomizers = undertowBuilderCustomizerList22;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection25 = undertowEmbeddedServletContainerFactory20.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory8.setBuilderCustomizers(undertowBuilderCustomizerCollection25);
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection25);
        java.io.File file28 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file28);
        java.net.InetAddress inetAddress30 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress30);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet32 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        int int33 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.io.File file41 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file41);
        boolean boolean43 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(resourceManager7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList17);
        org.junit.Assert.assertNotNull(jspServlet18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection25);
        org.junit.Assert.assertNotNull(errorPageSet32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1800 + "'", int33 == 1800);
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test14167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14167");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        undertowEmbeddedServletContainerFactory2.useForwardHeaders = false;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        boolean boolean11 = undertowEmbeddedServletContainerFactory6.useForwardHeaders;
        java.net.InetAddress inetAddress12 = undertowEmbeddedServletContainerFactory6.getAddress();
        java.lang.String str13 = undertowEmbeddedServletContainerFactory6.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        java.io.File file17 = undertowEmbeddedServletContainerFactory14.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        java.lang.Integer int20 = undertowEmbeddedServletContainerFactory14.buffersPerRegion;
        io.undertow.Undertow.Builder builder22 = undertowEmbeddedServletContainerFactory14.createBuilder(10);
        undertowEmbeddedServletContainerFactory14.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str25 = undertowEmbeddedServletContainerFactory14.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int27 = undertowEmbeddedServletContainerFactory26.getSessionTimeout();
        boolean boolean28 = undertowEmbeddedServletContainerFactory26.isPersistSession();
        undertowEmbeddedServletContainerFactory26.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder32 = undertowEmbeddedServletContainerFactory26.createBuilder((-1));
        undertowEmbeddedServletContainerFactory26.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int36 = undertowEmbeddedServletContainerFactory35.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray37 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory35.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray37);
        undertowEmbeddedServletContainerFactory26.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray37);
        undertowEmbeddedServletContainerFactory14.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray37);
        undertowEmbeddedServletContainerFactory6.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray37);
        undertowEmbeddedServletContainerFactory2.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray37);
        undertowEmbeddedServletContainerFactory2.workerThreads = 100;
        java.io.File file45 = null;
        undertowEmbeddedServletContainerFactory2.setSessionStoreDir(file45);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(inetAddress12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1800 + "'", int27 == 1800);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8080 + "'", int36 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray37);
    }

    @Test
    public void test14168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14168");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        boolean boolean9 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        boolean boolean11 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory0.workerThreads = 1800;
        org.springframework.boot.context.embedded.Compression compression14 = undertowEmbeddedServletContainerFactory0.getCompression();
        java.lang.String str15 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        org.springframework.boot.context.embedded.Ssl ssl16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode17 = undertowEmbeddedServletContainerFactory0.getSslClientAuthMode(ssl16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(compression14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "0.0.0.0" + "'", str15, "0.0.0.0");
    }

    @Test
    public void test14169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14169");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 100);
        java.lang.String str2 = undertowEmbeddedServletContainerFactory1.accessLogPattern;
        int int3 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean6 = undertowEmbeddedServletContainerFactory5.isAccessLogEnabled();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = undertowEmbeddedServletContainerFactory5.getMimeMappings();
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory5.buffersPerRegion;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray9 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory5.addErrorPages(errorPageArray9);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray9);
        java.io.File file12 = null;
        undertowEmbeddedServletContainerFactory1.accessLogDirectory = file12;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 0);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        java.io.File file18 = null;
        undertowEmbeddedServletContainerFactory1.accessLogDirectory = file18;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(errorPageArray9);
    }

    @Test
    public void test14170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14170");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        java.lang.Integer int26 = undertowEmbeddedServletContainerFactory2.bufferSize;
        java.lang.String str27 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(false);
        boolean boolean30 = undertowEmbeddedServletContainerFactory2.isAccessLogEnabled();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test14171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14171");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file5);
        org.springframework.core.io.ResourceLoader resourceLoader7 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList12 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader13);
        java.io.File file15 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        io.undertow.servlet.api.DeploymentInfo deploymentInfo20 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo20);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(resourceLoader7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList12);
        org.junit.Assert.assertNull(file15);
    }

    @Test
    public void test14172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14172");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory9.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getPort();
        java.lang.Integer int13 = undertowEmbeddedServletContainerFactory11.bufferSize;
        java.io.File file14 = null;
        undertowEmbeddedServletContainerFactory11.setSessionStoreDir(file14);
        java.io.File file16 = null;
        undertowEmbeddedServletContainerFactory11.accessLogDirectory = file16;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory11.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int20 = undertowEmbeddedServletContainerFactory19.getSessionTimeout();
        boolean boolean21 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList22 = undertowEmbeddedServletContainerFactory19.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet23 = undertowEmbeddedServletContainerFactory19.getJspServlet();
        undertowEmbeddedServletContainerFactory11.setJspServlet(jspServlet23);
        undertowEmbeddedServletContainerFactory9.setJspServlet(jspServlet23);
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet23);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory0.setPort((int) '#');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8080 + "'", int12 == 8080);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList22);
        org.junit.Assert.assertNotNull(jspServlet23);
    }

    @Test
    public void test14173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14173");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        io.undertow.Undertow.Builder builder9 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager10 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer12 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder9, deploymentManager10, 0);
        java.lang.Integer int13 = undertowEmbeddedServletContainerFactory0.workerThreads;
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file15 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        undertowEmbeddedServletContainerFactory16.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory16.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int24 = undertowEmbeddedServletContainerFactory23.getSessionTimeout();
        boolean boolean25 = undertowEmbeddedServletContainerFactory23.isPersistSession();
        undertowEmbeddedServletContainerFactory23.setPersistSession(false);
        undertowEmbeddedServletContainerFactory23.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList30 = undertowEmbeddedServletContainerFactory23.deploymentInfoCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList31 = undertowEmbeddedServletContainerFactory23.builderCustomizers;
        undertowEmbeddedServletContainerFactory16.builderCustomizers = undertowBuilderCustomizerList31;
        undertowEmbeddedServletContainerFactory16.workerThreads = 10;
        undertowEmbeddedServletContainerFactory16.setRegisterDefaultServlet(false);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList37 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        undertowEmbeddedServletContainerFactory16.setDisplayName("hi!");
        org.springframework.core.io.ResourceLoader resourceLoader40 = undertowEmbeddedServletContainerFactory16.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int42 = undertowEmbeddedServletContainerFactory41.getSessionTimeout();
        boolean boolean43 = undertowEmbeddedServletContainerFactory41.isPersistSession();
        undertowEmbeddedServletContainerFactory41.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory41.setBuffersPerRegion((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory41.setRegisterJspServlet(false);
        java.lang.String str50 = undertowEmbeddedServletContainerFactory41.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int52 = undertowEmbeddedServletContainerFactory51.getSessionTimeout();
        boolean boolean53 = undertowEmbeddedServletContainerFactory51.isPersistSession();
        undertowEmbeddedServletContainerFactory51.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder57 = undertowEmbeddedServletContainerFactory51.createBuilder((-1));
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet58 = undertowEmbeddedServletContainerFactory51.getErrorPages();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings59 = undertowEmbeddedServletContainerFactory51.getMimeMappings();
        undertowEmbeddedServletContainerFactory41.setMimeMappings(mimeMappings59);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int62 = undertowEmbeddedServletContainerFactory61.getSessionTimeout();
        boolean boolean63 = undertowEmbeddedServletContainerFactory61.isPersistSession();
        undertowEmbeddedServletContainerFactory61.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder67 = undertowEmbeddedServletContainerFactory61.createBuilder((-1));
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet68 = undertowEmbeddedServletContainerFactory61.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int70 = undertowEmbeddedServletContainerFactory69.getSessionTimeout();
        boolean boolean71 = undertowEmbeddedServletContainerFactory69.isPersistSession();
        undertowEmbeddedServletContainerFactory69.setIoThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder75 = undertowEmbeddedServletContainerFactory69.createBuilder((int) (byte) 1);
        io.undertow.servlet.api.DeploymentManager deploymentManager76 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer78 = undertowEmbeddedServletContainerFactory61.getUndertowEmbeddedServletContainer(builder75, deploymentManager76, (int) (byte) 10);
        org.springframework.boot.context.embedded.Ssl ssl79 = undertowEmbeddedServletContainerFactory61.getSsl();
        undertowEmbeddedServletContainerFactory61.setAccessLogPattern("0.0.0.0");
        java.io.File file82 = undertowEmbeddedServletContainerFactory61.accessLogDirectory;
        java.io.File file83 = undertowEmbeddedServletContainerFactory61.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList84 = undertowEmbeddedServletContainerFactory61.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory85 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int86 = undertowEmbeddedServletContainerFactory85.getSessionTimeout();
        boolean boolean87 = undertowEmbeddedServletContainerFactory85.isPersistSession();
        java.io.File file88 = undertowEmbeddedServletContainerFactory85.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings89 = undertowEmbeddedServletContainerFactory85.getMimeMappings();
        undertowEmbeddedServletContainerFactory61.setMimeMappings(mimeMappings89);
        undertowEmbeddedServletContainerFactory41.setMimeMappings(mimeMappings89);
        undertowEmbeddedServletContainerFactory16.setMimeMappings(mimeMappings89);
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings89);
        java.lang.String str94 = undertowEmbeddedServletContainerFactory0.getContextPath();
        java.lang.String str95 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1800 + "'", int24 == 1800);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList30);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList31);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList37);
        org.junit.Assert.assertNull(resourceLoader40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1800 + "'", int42 == 1800);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1800 + "'", int52 == 1800);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(errorPageSet58);
        org.junit.Assert.assertNotNull(mimeMappings59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1800 + "'", int62 == 1800);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(errorPageSet68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1800 + "'", int70 == 1800);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer78);
        org.junit.Assert.assertNull(ssl79);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1800 + "'", int86 == 1800);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(file88);
        org.junit.Assert.assertNotNull(mimeMappings89);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "" + "'", str94, "");
        org.junit.Assert.assertNull(str95);
    }

    @Test
    public void test14174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14174");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.jarPath = "hi!";
        boolean boolean3 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean4 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str5 = jarResourceManager0.jarPath;
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "0.0.0.0";
        jarResourceManager0.jarPath = "";
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourceManager0.removeResourceChangeListener(resourceChangeListener11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
    }

    @Test
    public void test14175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14175");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl5 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl5);
        org.springframework.boot.context.embedded.JspServlet jspServlet7 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory12.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.xnio.XnioWorker xnioWorker17 = undertowEmbeddedServletContainerFactory16.createWorker();
        undertowEmbeddedServletContainerFactory16.accessLogEnabled = true;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo20 = null;
        undertowEmbeddedServletContainerFactory16.configureErrorPages(deploymentInfo20);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList22 = undertowEmbeddedServletContainerFactory16.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory12.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList22;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList22;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int26 = undertowEmbeddedServletContainerFactory25.getSessionTimeout();
        boolean boolean27 = undertowEmbeddedServletContainerFactory25.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList28 = undertowEmbeddedServletContainerFactory25.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet29 = undertowEmbeddedServletContainerFactory25.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList30 = undertowEmbeddedServletContainerFactory25.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int32 = undertowEmbeddedServletContainerFactory31.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray33 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory31.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray33);
        undertowEmbeddedServletContainerFactory25.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray33);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection36 = undertowEmbeddedServletContainerFactory25.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection36);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(jspServlet7);
        org.junit.Assert.assertNotNull(xnioWorker17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1800 + "'", int26 == 1800);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList28);
        org.junit.Assert.assertNotNull(jspServlet29);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 8080 + "'", int32 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray33);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection36);
    }

    @Test
    public void test14176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14176");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory2.setPort((-1));
        java.lang.Integer int28 = undertowEmbeddedServletContainerFactory2.bufferSize;
        io.undertow.Undertow.Builder builder30 = undertowEmbeddedServletContainerFactory2.createBuilder(0);
        java.io.File file31 = undertowEmbeddedServletContainerFactory2.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(false);
        java.net.InetAddress inetAddress34 = undertowEmbeddedServletContainerFactory2.getAddress();
        java.lang.String str35 = undertowEmbeddedServletContainerFactory2.getContextPath();
        undertowEmbeddedServletContainerFactory2.useForwardHeaders = true;
        org.springframework.core.io.ResourceLoader resourceLoader38 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet39 = undertowEmbeddedServletContainerFactory2.getErrorPages();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(inetAddress34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(resourceLoader38);
        org.junit.Assert.assertNotNull(errorPageSet39);
    }

    @Test
    public void test14177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14177");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.io.File file10 = undertowEmbeddedServletContainerFactory7.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList11 = undertowEmbeddedServletContainerFactory7.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList11;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.Ssl ssl15 = undertowEmbeddedServletContainerFactory0.getSsl();
        java.net.InetAddress inetAddress16 = undertowEmbeddedServletContainerFactory0.getAddress();
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("hi!");
        boolean boolean19 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList11);
        org.junit.Assert.assertNull(ssl15);
        org.junit.Assert.assertNull(inetAddress16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test14178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14178");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        boolean boolean3 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.lang.Boolean boolean4 = undertowEmbeddedServletContainerFactory0.directBuffers;
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader5);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer9 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer9 };
        initializer7.initializers = servletContextInitializerArray10;
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray10);
        boolean boolean13 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        io.undertow.Undertow.Builder builder15 = undertowEmbeddedServletContainerFactory0.createBuilder(52);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo16 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.configureAccessLog(deploymentInfo16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(builder15);
    }

    @Test
    public void test14179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14179");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        boolean boolean2 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean3 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean4 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str5 = jarResourceManager0.jarPath;
        boolean boolean6 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str7 = jarResourceManager0.jarPath;
        jarResourceManager0.jarPath = "";
        boolean boolean10 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.close();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test14180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14180");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        boolean boolean9 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file10;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int14 = undertowEmbeddedServletContainerFactory13.getSessionTimeout();
        boolean boolean15 = undertowEmbeddedServletContainerFactory13.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList16 = undertowEmbeddedServletContainerFactory13.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet17 = undertowEmbeddedServletContainerFactory13.getJspServlet();
        boolean boolean18 = undertowEmbeddedServletContainerFactory13.useForwardHeaders;
        java.net.InetAddress inetAddress19 = undertowEmbeddedServletContainerFactory13.getAddress();
        undertowEmbeddedServletContainerFactory13.setAccessLogPattern("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader26 = undertowEmbeddedServletContainerFactory24.resourceLoader;
        undertowEmbeddedServletContainerFactory24.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int30 = undertowEmbeddedServletContainerFactory29.getSessionTimeout();
        boolean boolean31 = undertowEmbeddedServletContainerFactory29.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList32 = undertowEmbeddedServletContainerFactory29.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet33 = undertowEmbeddedServletContainerFactory29.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int35 = undertowEmbeddedServletContainerFactory34.getSessionTimeout();
        boolean boolean36 = undertowEmbeddedServletContainerFactory34.isPersistSession();
        undertowEmbeddedServletContainerFactory34.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder40 = undertowEmbeddedServletContainerFactory34.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager41 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer43 = undertowEmbeddedServletContainerFactory29.getUndertowEmbeddedServletContainer(builder40, deploymentManager41, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager44 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer46 = undertowEmbeddedServletContainerFactory24.getUndertowEmbeddedServletContainer(builder40, deploymentManager44, (int) ' ');
        boolean boolean47 = undertowEmbeddedServletContainerFactory24.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory24.setPort((-1));
        java.lang.Integer int50 = undertowEmbeddedServletContainerFactory24.bufferSize;
        io.undertow.Undertow.Builder builder52 = undertowEmbeddedServletContainerFactory24.createBuilder(0);
        io.undertow.servlet.api.DeploymentManager deploymentManager53 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer55 = undertowEmbeddedServletContainerFactory13.getUndertowEmbeddedServletContainer(builder52, deploymentManager53, (int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager56 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer58 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder52, deploymentManager56, (int) 'a');
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection59 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        java.lang.Integer int60 = undertowEmbeddedServletContainerFactory0.workerThreads;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(errorPageSet12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1800 + "'", int14 == 1800);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList16);
        org.junit.Assert.assertNotNull(jspServlet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(inetAddress19);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNull(resourceLoader26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1800 + "'", int30 == 1800);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList32);
        org.junit.Assert.assertNotNull(jspServlet33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1800 + "'", int35 == 1800);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer43);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer55);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer58);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection59);
        org.junit.Assert.assertNull(int60);
    }

    @Test
    public void test14181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14181");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        undertowEmbeddedServletContainerFactory0.ioThreads = 0;
        java.net.InetAddress inetAddress10 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
    }

    @Test
    public void test14182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14182");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory2.setPort((-1));
        undertowEmbeddedServletContainerFactory2.bufferSize = 100;
        boolean boolean30 = undertowEmbeddedServletContainerFactory2.accessLogEnabled;
        java.io.File file31 = null;
        undertowEmbeddedServletContainerFactory2.setAccessLogDirectory(file31);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test14183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14183");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        java.lang.String str4 = jarResourceManager0.jarPath;
        boolean boolean5 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str6 = jarResourceManager0.jarPath;
        boolean boolean7 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean8 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str9 = jarResourceManager0.jarPath;
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener10 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourceManager0.removeResourceChangeListener(resourceChangeListener10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test14184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14184");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        boolean boolean7 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection12 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader13;
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        org.springframework.boot.context.embedded.Compression compression17 = undertowEmbeddedServletContainerFactory0.getCompression();
        undertowEmbeddedServletContainerFactory0.ioThreads = 0;
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("0.0.0.0");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int23 = undertowEmbeddedServletContainerFactory22.getSessionTimeout();
        boolean boolean24 = undertowEmbeddedServletContainerFactory22.isPersistSession();
        java.io.File file25 = undertowEmbeddedServletContainerFactory22.accessLogDirectory;
        java.lang.String str26 = undertowEmbeddedServletContainerFactory22.getListenAddress();
        undertowEmbeddedServletContainerFactory22.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory22.useForwardHeaders = false;
        org.springframework.core.io.ResourceLoader resourceLoader31 = null;
        undertowEmbeddedServletContainerFactory22.resourceLoader = resourceLoader31;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection33 = undertowEmbeddedServletContainerFactory22.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int35 = undertowEmbeddedServletContainerFactory34.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = undertowEmbeddedServletContainerFactory38.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader40 = undertowEmbeddedServletContainerFactory38.resourceLoader;
        undertowEmbeddedServletContainerFactory38.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int44 = undertowEmbeddedServletContainerFactory43.getSessionTimeout();
        boolean boolean45 = undertowEmbeddedServletContainerFactory43.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList46 = undertowEmbeddedServletContainerFactory43.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet47 = undertowEmbeddedServletContainerFactory43.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int49 = undertowEmbeddedServletContainerFactory48.getSessionTimeout();
        boolean boolean50 = undertowEmbeddedServletContainerFactory48.isPersistSession();
        undertowEmbeddedServletContainerFactory48.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder54 = undertowEmbeddedServletContainerFactory48.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager55 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer57 = undertowEmbeddedServletContainerFactory43.getUndertowEmbeddedServletContainer(builder54, deploymentManager55, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager58 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer60 = undertowEmbeddedServletContainerFactory38.getUndertowEmbeddedServletContainer(builder54, deploymentManager58, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager61 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer63 = undertowEmbeddedServletContainerFactory34.getUndertowEmbeddedServletContainer(builder54, deploymentManager61, (int) (short) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList64 = undertowEmbeddedServletContainerFactory34.builderCustomizers;
        undertowEmbeddedServletContainerFactory34.setIoThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory34.useForwardHeaders = true;
        org.springframework.core.io.ResourceLoader resourceLoader69 = undertowEmbeddedServletContainerFactory34.resourceLoader;
        undertowEmbeddedServletContainerFactory34.setPersistSession(true);
        undertowEmbeddedServletContainerFactory34.setSessionTimeout(0);
        java.io.File file74 = null;
        undertowEmbeddedServletContainerFactory34.setAccessLogDirectory(file74);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList76 = undertowEmbeddedServletContainerFactory34.builderCustomizers;
        undertowEmbeddedServletContainerFactory22.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList76);
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList76);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection12);
        org.junit.Assert.assertNull(compression17);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1800 + "'", int23 == 1800);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0.0.0.0" + "'", str26, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 8080 + "'", int35 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNull(resourceLoader40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1800 + "'", int44 == 1800);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList46);
        org.junit.Assert.assertNotNull(jspServlet47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1800 + "'", int49 == 1800);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer57);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer60);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer63);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList64);
        org.junit.Assert.assertNull(resourceLoader69);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList76);
    }

    @Test
    public void test14185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14185");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        boolean boolean4 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.jarPath = "";
        jarResourceManager0.close();
        jarResourceManager0.close();
        boolean boolean9 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str10 = jarResourceManager0.jarPath;
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourceManager0.removeResourceChangeListener(resourceChangeListener11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test14186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14186");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl5 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl5);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        boolean boolean12 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        org.springframework.boot.context.embedded.Ssl ssl13 = undertowEmbeddedServletContainerFactory7.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        boolean boolean17 = undertowEmbeddedServletContainerFactory16.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getSessionTimeout();
        boolean boolean20 = undertowEmbeddedServletContainerFactory18.isPersistSession();
        undertowEmbeddedServletContainerFactory18.setPersistSession(false);
        undertowEmbeddedServletContainerFactory18.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList25 = undertowEmbeddedServletContainerFactory18.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory16.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList25;
        undertowEmbeddedServletContainerFactory7.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList25;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray29 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList30 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList30, undertowBuilderCustomizerArray29);
        undertowEmbeddedServletContainerFactory28.builderCustomizers = undertowBuilderCustomizerList30;
        java.io.File file33 = null;
        undertowEmbeddedServletContainerFactory28.setSessionStoreDir(file33);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection35 = undertowEmbeddedServletContainerFactory28.getDeploymentInfoCustomizers();
        java.io.File file36 = null;
        undertowEmbeddedServletContainerFactory28.setAccessLogDirectory(file36);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int39 = undertowEmbeddedServletContainerFactory38.getSessionTimeout();
        boolean boolean40 = undertowEmbeddedServletContainerFactory38.isPersistSession();
        undertowEmbeddedServletContainerFactory38.setPersistSession(false);
        undertowEmbeddedServletContainerFactory38.setUseForwardHeaders(true);
        io.undertow.server.handlers.resource.ResourceManager resourceManager45 = undertowEmbeddedServletContainerFactory38.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int47 = undertowEmbeddedServletContainerFactory46.getSessionTimeout();
        boolean boolean48 = undertowEmbeddedServletContainerFactory46.isPersistSession();
        java.io.File file49 = undertowEmbeddedServletContainerFactory46.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings50 = undertowEmbeddedServletContainerFactory46.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings51 = undertowEmbeddedServletContainerFactory46.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int53 = undertowEmbeddedServletContainerFactory52.getSessionTimeout();
        boolean boolean54 = undertowEmbeddedServletContainerFactory52.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList55 = undertowEmbeddedServletContainerFactory52.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet56 = undertowEmbeddedServletContainerFactory52.getJspServlet();
        undertowEmbeddedServletContainerFactory46.setJspServlet(jspServlet56);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray59 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList60 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList60, undertowBuilderCustomizerArray59);
        undertowEmbeddedServletContainerFactory58.builderCustomizers = undertowBuilderCustomizerList60;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection63 = undertowEmbeddedServletContainerFactory58.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory46.setBuilderCustomizers(undertowBuilderCustomizerCollection63);
        undertowEmbeddedServletContainerFactory38.setBuilderCustomizers(undertowBuilderCustomizerCollection63);
        undertowEmbeddedServletContainerFactory28.setBuilderCustomizers(undertowBuilderCustomizerCollection63);
        undertowEmbeddedServletContainerFactory7.setBuilderCustomizers(undertowBuilderCustomizerCollection63);
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection63);
        java.lang.Integer int69 = undertowEmbeddedServletContainerFactory0.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean72 = undertowEmbeddedServletContainerFactory71.isAccessLogEnabled();
        org.springframework.boot.context.embedded.Ssl ssl73 = undertowEmbeddedServletContainerFactory71.getSsl();
        java.lang.Integer int74 = undertowEmbeddedServletContainerFactory71.bufferSize;
        java.lang.ClassLoader classLoader75 = undertowEmbeddedServletContainerFactory71.getServletClassLoader();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int77 = undertowEmbeddedServletContainerFactory76.getSessionTimeout();
        boolean boolean78 = undertowEmbeddedServletContainerFactory76.isPersistSession();
        undertowEmbeddedServletContainerFactory76.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory76.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray83 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory76.addErrorPages(errorPageArray83);
        undertowEmbeddedServletContainerFactory71.addErrorPages(errorPageArray83);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray83);
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        java.io.File file89 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(ssl13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1800 + "'", int39 == 1800);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(resourceManager45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1800 + "'", int47 == 1800);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(mimeMappings50);
        org.junit.Assert.assertNotNull(mimeMappings51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1800 + "'", int53 == 1800);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList55);
        org.junit.Assert.assertNotNull(jspServlet56);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection63);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(ssl73);
        org.junit.Assert.assertNull(int74);
        org.junit.Assert.assertNotNull(classLoader75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1800 + "'", int77 == 1800);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(errorPageArray83);
        org.junit.Assert.assertNull(file89);
    }

    @Test
    public void test14187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14187");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection5 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        java.io.File file6 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        undertowEmbeddedServletContainerFactory0.ioThreads = 1800;
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("0.0.0.0");
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("hi!");
        boolean boolean13 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test14188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14188");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        int int3 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        int int4 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file5);
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("");
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 52);
        boolean boolean13 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList14 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.net.InetAddress inetAddress15 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress15);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1800 + "'", int3 == 1800);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1800 + "'", int4 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList14);
    }

    @Test
    public void test14189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14189");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        boolean boolean3 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory2.useForwardHeaders = false;
        undertowEmbeddedServletContainerFactory2.setBuffersPerRegion((java.lang.Integer) 100);
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory2.workerThreads;
        java.lang.String str9 = undertowEmbeddedServletContainerFactory2.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = undertowEmbeddedServletContainerFactory2.getErrorPages();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "0.0.0.0" + "'", str9, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet10);
    }

    @Test
    public void test14190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14190");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        jarResourceManager0.jarPath = "hi!";
        java.lang.String str6 = jarResourceManager0.jarPath;
        jarResourceManager0.jarPath = "hi!";
        jarResourceManager0.jarPath = "0.0.0.0";
        jarResourceManager0.close();
        boolean boolean12 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str13 = jarResourceManager0.jarPath;
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener14 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourceManager0.removeResourceChangeListener(resourceChangeListener14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0.0.0.0" + "'", str13, "0.0.0.0");
    }

    @Test
    public void test14191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14191");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        java.lang.String str4 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo8 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureMimeMappings(deploymentInfo8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test14192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14192");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl5 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl5);
        org.springframework.boot.context.embedded.JspServlet jspServlet7 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory12.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.xnio.XnioWorker xnioWorker17 = undertowEmbeddedServletContainerFactory16.createWorker();
        undertowEmbeddedServletContainerFactory16.accessLogEnabled = true;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo20 = null;
        undertowEmbeddedServletContainerFactory16.configureErrorPages(deploymentInfo20);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList22 = undertowEmbeddedServletContainerFactory16.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory12.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList22;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList22;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        java.lang.Boolean boolean27 = undertowEmbeddedServletContainerFactory0.directBuffers;
        boolean boolean28 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(jspServlet7);
        org.junit.Assert.assertNotNull(xnioWorker17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList22);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test14193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14193");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.net.InetAddress inetAddress6 = undertowEmbeddedServletContainerFactory0.getAddress();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        undertowEmbeddedServletContainerFactory11.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory11.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory11.setDisplayName("hi!");
        boolean boolean20 = undertowEmbeddedServletContainerFactory11.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getSessionTimeout();
        boolean boolean23 = undertowEmbeddedServletContainerFactory21.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList24 = undertowEmbeddedServletContainerFactory21.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet25 = undertowEmbeddedServletContainerFactory21.getJspServlet();
        undertowEmbeddedServletContainerFactory21.directBuffers = true;
        java.io.File file28 = null;
        undertowEmbeddedServletContainerFactory21.setDocumentRoot(file28);
        undertowEmbeddedServletContainerFactory21.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray32 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory21.addBuilderCustomizers(undertowBuilderCustomizerArray32);
        undertowEmbeddedServletContainerFactory11.addBuilderCustomizers(undertowBuilderCustomizerArray32);
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray32);
        org.springframework.core.io.ResourceLoader resourceLoader36 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader36;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet38 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        java.io.File file39 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file39;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1800 + "'", int22 == 1800);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList24);
        org.junit.Assert.assertNotNull(jspServlet25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray32);
        org.junit.Assert.assertNotNull(errorPageSet38);
    }

    @Test
    public void test14194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14194");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.lang.ClassLoader classLoader4 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        java.io.File file5 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory0.getSsl();
        org.springframework.core.io.ResourceLoader resourceLoader7 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader7;
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(true);
        java.net.InetAddress inetAddress11 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList13 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList13);
    }

    @Test
    public void test14195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14195");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.Compression compression4 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression4);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = true;
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file10);
        java.io.File file12 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        boolean boolean13 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo14 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo14);
        java.lang.String str16 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.lang.Integer int18 = undertowEmbeddedServletContainerFactory0.workerThreads;
        java.lang.ClassLoader classLoader19 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(classLoader19);
    }

    @Test
    public void test14196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14196");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory0.directBuffers;
        io.undertow.Undertow.Builder builder14 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager15 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer17 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder14, deploymentManager15, 1800);
        java.lang.Integer int18 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        undertowEmbeddedServletContainerFactory0.ioThreads = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getSessionTimeout();
        boolean boolean23 = undertowEmbeddedServletContainerFactory21.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList24 = undertowEmbeddedServletContainerFactory21.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet25 = undertowEmbeddedServletContainerFactory21.getJspServlet();
        undertowEmbeddedServletContainerFactory21.directBuffers = true;
        java.lang.Integer int28 = undertowEmbeddedServletContainerFactory21.bufferSize;
        java.io.File file29 = null;
        undertowEmbeddedServletContainerFactory21.setDocumentRoot(file29);
        boolean boolean31 = undertowEmbeddedServletContainerFactory21.isPersistSession();
        undertowEmbeddedServletContainerFactory21.setWorkerThreads((java.lang.Integer) 8080);
        java.lang.String str34 = undertowEmbeddedServletContainerFactory21.getListenAddress();
        undertowEmbeddedServletContainerFactory21.setDisplayName("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int38 = undertowEmbeddedServletContainerFactory37.getSessionTimeout();
        boolean boolean39 = undertowEmbeddedServletContainerFactory37.isPersistSession();
        java.io.File file40 = undertowEmbeddedServletContainerFactory37.accessLogDirectory;
        java.lang.String str41 = undertowEmbeddedServletContainerFactory37.getListenAddress();
        undertowEmbeddedServletContainerFactory37.setIoThreads((java.lang.Integer) 1);
        java.lang.String str44 = undertowEmbeddedServletContainerFactory37.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int46 = undertowEmbeddedServletContainerFactory45.getSessionTimeout();
        boolean boolean47 = undertowEmbeddedServletContainerFactory45.isPersistSession();
        undertowEmbeddedServletContainerFactory45.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory45.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory45.setDisplayName("hi!");
        boolean boolean54 = undertowEmbeddedServletContainerFactory45.isRegisterDefaultServlet();
        java.io.File file55 = undertowEmbeddedServletContainerFactory45.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray56 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory45.addBuilderCustomizers(undertowBuilderCustomizerArray56);
        undertowEmbeddedServletContainerFactory37.addBuilderCustomizers(undertowBuilderCustomizerArray56);
        undertowEmbeddedServletContainerFactory21.addBuilderCustomizers(undertowBuilderCustomizerArray56);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int61 = undertowEmbeddedServletContainerFactory60.getSessionTimeout();
        boolean boolean62 = undertowEmbeddedServletContainerFactory60.isPersistSession();
        undertowEmbeddedServletContainerFactory60.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder66 = undertowEmbeddedServletContainerFactory60.createBuilder((-1));
        undertowEmbeddedServletContainerFactory60.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int70 = undertowEmbeddedServletContainerFactory69.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray71 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory69.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray71);
        undertowEmbeddedServletContainerFactory60.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray71);
        undertowEmbeddedServletContainerFactory21.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray71);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray71);
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1800 + "'", int22 == 1800);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList24);
        org.junit.Assert.assertNotNull(jspServlet25);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "0.0.0.0" + "'", str34, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1800 + "'", int38 == 1800);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "0.0.0.0" + "'", str41, "0.0.0.0");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1800 + "'", int46 == 1800);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray56);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1800 + "'", int61 == 1800);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 8080 + "'", int70 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray71);
    }

    @Test
    public void test14197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14197");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory0.getSsl();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        java.io.File file9 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.bufferSize = 97;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test14198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14198");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory2.setPort((-1));
        undertowEmbeddedServletContainerFactory2.setPort((int) (byte) 0);
        boolean boolean30 = undertowEmbeddedServletContainerFactory2.accessLogEnabled;
        java.lang.Integer int31 = undertowEmbeddedServletContainerFactory2.ioThreads;
        java.io.File file32 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file32);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(int31);
    }

    @Test
    public void test14199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14199");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        java.lang.String str4 = jarResourceManager0.jarPath;
        jarResourceManager0.jarPath = "hi!";
        java.lang.String str7 = jarResourceManager0.jarPath;
        jarResourceManager0.jarPath = "0.0.0.0";
        jarResourceManager0.jarPath = "0.0.0.0";
        jarResourceManager0.jarPath = "0.0.0.0";
        jarResourceManager0.jarPath = "hi!";
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test14200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14200");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file5);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file8);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getSessionTimeout();
        boolean boolean12 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        undertowEmbeddedServletContainerFactory10.setPersistSession(false);
        undertowEmbeddedServletContainerFactory10.setUseForwardHeaders(true);
        io.undertow.server.handlers.resource.ResourceManager resourceManager17 = undertowEmbeddedServletContainerFactory10.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getSessionTimeout();
        boolean boolean20 = undertowEmbeddedServletContainerFactory18.isPersistSession();
        java.io.File file21 = undertowEmbeddedServletContainerFactory18.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = undertowEmbeddedServletContainerFactory18.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = undertowEmbeddedServletContainerFactory18.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int25 = undertowEmbeddedServletContainerFactory24.getSessionTimeout();
        boolean boolean26 = undertowEmbeddedServletContainerFactory24.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList27 = undertowEmbeddedServletContainerFactory24.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet28 = undertowEmbeddedServletContainerFactory24.getJspServlet();
        undertowEmbeddedServletContainerFactory18.setJspServlet(jspServlet28);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray31 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList32 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList32, undertowBuilderCustomizerArray31);
        undertowEmbeddedServletContainerFactory30.builderCustomizers = undertowBuilderCustomizerList32;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection35 = undertowEmbeddedServletContainerFactory30.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory18.setBuilderCustomizers(undertowBuilderCustomizerCollection35);
        undertowEmbeddedServletContainerFactory10.setBuilderCustomizers(undertowBuilderCustomizerCollection35);
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection35);
        java.lang.Integer int39 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int41 = undertowEmbeddedServletContainerFactory40.getSessionTimeout();
        boolean boolean42 = undertowEmbeddedServletContainerFactory40.isPersistSession();
        undertowEmbeddedServletContainerFactory40.setPersistSession(false);
        undertowEmbeddedServletContainerFactory40.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int48 = undertowEmbeddedServletContainerFactory47.getSessionTimeout();
        boolean boolean49 = undertowEmbeddedServletContainerFactory47.isPersistSession();
        java.io.File file50 = undertowEmbeddedServletContainerFactory47.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList51 = undertowEmbeddedServletContainerFactory47.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory40.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList51;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList51;
        org.springframework.boot.context.embedded.JspServlet jspServlet54 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        java.lang.String str55 = undertowEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.boot.context.embedded.Ssl ssl56 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode57 = undertowEmbeddedServletContainerFactory0.getSslClientAuthMode(ssl56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1800 + "'", int11 == 1800);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(resourceManager17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1800 + "'", int25 == 1800);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList27);
        org.junit.Assert.assertNotNull(jspServlet28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection35);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1800 + "'", int41 == 1800);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1800 + "'", int48 == 1800);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList51);
        org.junit.Assert.assertNotNull(jspServlet54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
    }

    @Test
    public void test14201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14201");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.Compression compression4 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression4);
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file6;
        java.io.File file8 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("0.0.0.0");
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test14202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14202");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.Compression compression4 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression4);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray7 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList8, undertowBuilderCustomizerArray7);
        undertowEmbeddedServletContainerFactory6.builderCustomizers = undertowBuilderCustomizerList8;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection11 = undertowEmbeddedServletContainerFactory6.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection11);
        java.io.File file13 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file13;
        org.springframework.boot.context.embedded.Compression compression15 = undertowEmbeddedServletContainerFactory0.getCompression();
        org.springframework.boot.context.embedded.JspServlet jspServlet16 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory0.ioThreads;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection11);
        org.junit.Assert.assertNull(compression15);
        org.junit.Assert.assertNotNull(jspServlet16);
        org.junit.Assert.assertNull(int17);
    }

    @Test
    public void test14203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14203");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        undertowEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader5);
        undertowEmbeddedServletContainerFactory2.setRegisterDefaultServlet(true);
        org.springframework.core.io.ResourceLoader resourceLoader9 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        org.springframework.core.io.ResourceLoader resourceLoader10 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        boolean boolean11 = undertowEmbeddedServletContainerFactory2.useForwardHeaders;
        boolean boolean12 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNull(resourceLoader9);
        org.junit.Assert.assertNull(resourceLoader10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test14204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14204");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        boolean boolean9 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getPort();
        java.lang.Integer int13 = undertowEmbeddedServletContainerFactory11.bufferSize;
        java.io.File file14 = null;
        undertowEmbeddedServletContainerFactory11.setSessionStoreDir(file14);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList19 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet20 = undertowEmbeddedServletContainerFactory16.getJspServlet();
        boolean boolean21 = undertowEmbeddedServletContainerFactory16.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = undertowEmbeddedServletContainerFactory16.getErrorPages();
        undertowEmbeddedServletContainerFactory11.setErrorPages(errorPageSet22);
        java.lang.Boolean boolean24 = undertowEmbeddedServletContainerFactory11.directBuffers;
        org.springframework.boot.context.embedded.Compression compression25 = null;
        undertowEmbeddedServletContainerFactory11.setCompression(compression25);
        boolean boolean27 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        undertowEmbeddedServletContainerFactory28.setIoThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder34 = undertowEmbeddedServletContainerFactory28.createBuilder((int) (byte) 1);
        io.undertow.servlet.api.DeploymentManager deploymentManager35 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer37 = undertowEmbeddedServletContainerFactory11.getUndertowEmbeddedServletContainer(builder34, deploymentManager35, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager38 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer40 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder34, deploymentManager38, 1);
        java.lang.String str41 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        undertowEmbeddedServletContainerFactory0.ioThreads = 100;
        java.lang.ClassLoader classLoader44 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8080 + "'", int12 == 8080);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList19);
        org.junit.Assert.assertNotNull(jspServlet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(errorPageSet22);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer37);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(classLoader44);
    }

    @Test
    public void test14205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14205");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "";
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory12.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int20 = undertowEmbeddedServletContainerFactory19.getSessionTimeout();
        boolean boolean21 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        java.io.File file22 = undertowEmbeddedServletContainerFactory19.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList23 = undertowEmbeddedServletContainerFactory19.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory12.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList23;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader26 = null;
        undertowEmbeddedServletContainerFactory12.setResourceLoader(resourceLoader26);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        undertowEmbeddedServletContainerFactory28.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory28.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory28.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory28.setSessionTimeout(1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList39 = undertowEmbeddedServletContainerFactory28.builderCustomizers;
        undertowEmbeddedServletContainerFactory12.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList39);
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList39);
        java.io.File file42 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList43 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        int int44 = undertowEmbeddedServletContainerFactory0.getPort();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList23);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList39);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
    }

    @Test
    public void test14206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14206");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory0.directBuffers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList7 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = (-1);
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        org.springframework.core.io.ResourceLoader resourceLoader11 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader11;
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 97);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test14207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14207");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList3, undertowDeploymentInfoCustomizerArray2);
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList3;
        org.springframework.boot.context.embedded.Compression compression6 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression6);
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file8;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 32);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test14208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14208");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file5);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("0.0.0.0");
        java.lang.ClassLoader classLoader10 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        org.springframework.boot.context.embedded.Compression compression11 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression11);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int14 = undertowEmbeddedServletContainerFactory13.getPort();
        java.lang.Integer int15 = undertowEmbeddedServletContainerFactory13.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader16 = null;
        undertowEmbeddedServletContainerFactory13.setResourceLoader(resourceLoader16);
        java.lang.Integer int18 = undertowEmbeddedServletContainerFactory13.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int20 = undertowEmbeddedServletContainerFactory19.getSessionTimeout();
        boolean boolean21 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        java.io.File file22 = undertowEmbeddedServletContainerFactory19.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = undertowEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = undertowEmbeddedServletContainerFactory19.getMimeMappings();
        java.lang.Integer int25 = undertowEmbeddedServletContainerFactory19.buffersPerRegion;
        io.undertow.Undertow.Builder builder27 = undertowEmbeddedServletContainerFactory19.createBuilder(10);
        io.undertow.servlet.api.DeploymentManager deploymentManager28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer30 = undertowEmbeddedServletContainerFactory13.getUndertowEmbeddedServletContainer(builder27, deploymentManager28, 1);
        undertowEmbeddedServletContainerFactory13.setJspServletClassName("0.0.0.0");
        java.lang.Integer int33 = undertowEmbeddedServletContainerFactory13.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int35 = undertowEmbeddedServletContainerFactory34.getSessionTimeout();
        boolean boolean36 = undertowEmbeddedServletContainerFactory34.isPersistSession();
        undertowEmbeddedServletContainerFactory34.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory34.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray41 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory34.addErrorPages(errorPageArray41);
        undertowEmbeddedServletContainerFactory13.addErrorPages(errorPageArray41);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray41);
        java.io.File file45 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) '4');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int49 = undertowEmbeddedServletContainerFactory48.getSessionTimeout();
        boolean boolean50 = undertowEmbeddedServletContainerFactory48.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList51 = undertowEmbeddedServletContainerFactory48.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet52 = undertowEmbeddedServletContainerFactory48.getJspServlet();
        boolean boolean53 = undertowEmbeddedServletContainerFactory48.useForwardHeaders;
        java.net.InetAddress inetAddress54 = undertowEmbeddedServletContainerFactory48.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader55 = null;
        undertowEmbeddedServletContainerFactory48.resourceLoader = resourceLoader55;
        undertowEmbeddedServletContainerFactory48.accessLogPattern = "hi!";
        org.springframework.boot.context.embedded.JspServlet jspServlet59 = undertowEmbeddedServletContainerFactory48.getJspServlet();
        undertowEmbeddedServletContainerFactory47.setJspServlet(jspServlet59);
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet59);
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 35);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet64 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8080 + "'", int14 == 8080);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer30);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1800 + "'", int35 == 1800);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(errorPageArray41);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1800 + "'", int49 == 1800);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList51);
        org.junit.Assert.assertNotNull(jspServlet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(inetAddress54);
        org.junit.Assert.assertNotNull(jspServlet59);
        org.junit.Assert.assertNotNull(errorPageSet64);
    }

    @Test
    public void test14209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14209");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.xnio.XnioWorker xnioWorker7 = undertowEmbeddedServletContainerFactory6.createWorker();
        undertowEmbeddedServletContainerFactory6.accessLogEnabled = true;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo10 = null;
        undertowEmbeddedServletContainerFactory6.configureErrorPages(deploymentInfo10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList12 = undertowEmbeddedServletContainerFactory6.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory2.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList12;
        undertowEmbeddedServletContainerFactory2.accessLogPattern = "hi!";
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.boot.context.embedded.Ssl ssl17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode18 = undertowEmbeddedServletContainerFactory2.getSslClientAuthMode(ssl17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(xnioWorker7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList12);
        org.junit.Assert.assertNotNull(mimeMappings16);
    }

    @Test
    public void test14210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14210");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = undertowEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader9 = undertowEmbeddedServletContainerFactory7.resourceLoader;
        java.lang.String str10 = undertowEmbeddedServletContainerFactory7.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = undertowEmbeddedServletContainerFactory11.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet15 = undertowEmbeddedServletContainerFactory11.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        undertowEmbeddedServletContainerFactory16.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder22 = undertowEmbeddedServletContainerFactory16.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager23 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer25 = undertowEmbeddedServletContainerFactory11.getUndertowEmbeddedServletContainer(builder22, deploymentManager23, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager26 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer28 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder22, deploymentManager26, (int) (byte) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager29 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer31 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder22, deploymentManager29, (int) (short) 100);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection32 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        java.lang.String str33 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(0);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory0.setPort((int) (byte) 100);
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(8080);
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNull(resourceLoader9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList14);
        org.junit.Assert.assertNotNull(jspServlet15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer25);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer28);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer31);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection32);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test14211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14211");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        int int3 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet4 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory0.ioThreads;
        java.io.File file6 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory9.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray14 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13 };
        initializer11.initializers = servletContextInitializerArray14;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer18 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap17);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer18 };
        initializer16.initializers = servletContextInitializerArray19;
        initializer11.initializers = servletContextInitializerArray19;
        undertowEmbeddedServletContainerFactory9.addInitializers(servletContextInitializerArray19);
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray19);
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        org.springframework.core.io.ResourceLoader resourceLoader26 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1800 + "'", int3 == 1800);
        org.junit.Assert.assertNotNull(errorPageSet4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(servletContextInitializerArray14);
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertNull(resourceLoader26);
    }

    @Test
    public void test14212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14212");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.jarPath = "hi!";
        boolean boolean3 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str4 = jarResourceManager0.jarPath;
        jarResourceManager0.jarPath = "";
        boolean boolean7 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "hi!";
        boolean boolean11 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.jarPath = "hi!";
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test14213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14213");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getSessionTimeout();
        boolean boolean12 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = undertowEmbeddedServletContainerFactory10.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList13;
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file15;
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file17);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1800 + "'", int11 == 1800);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList13);
    }

    @Test
    public void test14214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14214");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer8 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap7);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray9 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer8 };
        initializer6.initializers = servletContextInitializerArray9;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray11 = initializer6.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int14 = undertowEmbeddedServletContainerFactory13.getSessionTimeout();
        boolean boolean15 = undertowEmbeddedServletContainerFactory13.isPersistSession();
        java.io.File file16 = undertowEmbeddedServletContainerFactory13.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        java.io.File file19 = undertowEmbeddedServletContainerFactory13.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int21 = undertowEmbeddedServletContainerFactory20.getPort();
        java.lang.Integer int22 = undertowEmbeddedServletContainerFactory20.bufferSize;
        java.io.File file23 = null;
        undertowEmbeddedServletContainerFactory20.setSessionStoreDir(file23);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer26 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap25);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray27 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer26 };
        undertowEmbeddedServletContainerFactory20.addInitializers(servletContextInitializerArray27);
        undertowEmbeddedServletContainerFactory13.addInitializers(servletContextInitializerArray27);
        initializer12.initializers = servletContextInitializerArray27;
        initializer6.initializers = servletContextInitializerArray27;
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray27);
        boolean boolean33 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        java.util.concurrent.TimeUnit timeUnit37 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.setSessionTimeout(35, timeUnit37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray9);
        org.junit.Assert.assertNotNull(servletContextInitializerArray11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1800 + "'", int14 == 1800);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8080 + "'", int21 == 8080);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(servletContextInitializerArray27);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test14215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14215");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file7);
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray11);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int14 = undertowEmbeddedServletContainerFactory13.getSessionTimeout();
        boolean boolean15 = undertowEmbeddedServletContainerFactory13.isPersistSession();
        java.io.File file16 = undertowEmbeddedServletContainerFactory13.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        java.lang.Integer int19 = undertowEmbeddedServletContainerFactory13.buffersPerRegion;
        io.undertow.Undertow.Builder builder21 = undertowEmbeddedServletContainerFactory13.createBuilder(10);
        undertowEmbeddedServletContainerFactory13.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str24 = undertowEmbeddedServletContainerFactory13.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int26 = undertowEmbeddedServletContainerFactory25.getSessionTimeout();
        boolean boolean27 = undertowEmbeddedServletContainerFactory25.isPersistSession();
        undertowEmbeddedServletContainerFactory25.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder31 = undertowEmbeddedServletContainerFactory25.createBuilder((-1));
        undertowEmbeddedServletContainerFactory25.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int35 = undertowEmbeddedServletContainerFactory34.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray36 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory34.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        undertowEmbeddedServletContainerFactory25.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        undertowEmbeddedServletContainerFactory13.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        java.io.File file41 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file41);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int44 = undertowEmbeddedServletContainerFactory43.getSessionTimeout();
        boolean boolean45 = undertowEmbeddedServletContainerFactory43.isPersistSession();
        java.io.File file46 = undertowEmbeddedServletContainerFactory43.accessLogDirectory;
        undertowEmbeddedServletContainerFactory43.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory43.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int52 = undertowEmbeddedServletContainerFactory51.getSessionTimeout();
        boolean boolean53 = undertowEmbeddedServletContainerFactory51.isPersistSession();
        java.io.File file54 = undertowEmbeddedServletContainerFactory51.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings55 = undertowEmbeddedServletContainerFactory51.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings56 = undertowEmbeddedServletContainerFactory51.getMimeMappings();
        java.io.File file57 = undertowEmbeddedServletContainerFactory51.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int59 = undertowEmbeddedServletContainerFactory58.getPort();
        java.lang.Integer int60 = undertowEmbeddedServletContainerFactory58.bufferSize;
        java.io.File file61 = null;
        undertowEmbeddedServletContainerFactory58.setSessionStoreDir(file61);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer64 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap63);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray65 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer64 };
        undertowEmbeddedServletContainerFactory58.addInitializers(servletContextInitializerArray65);
        undertowEmbeddedServletContainerFactory51.addInitializers(servletContextInitializerArray65);
        undertowEmbeddedServletContainerFactory43.addInitializers(servletContextInitializerArray65);
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray65);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray71 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList72 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList72, undertowBuilderCustomizerArray71);
        undertowEmbeddedServletContainerFactory70.builderCustomizers = undertowBuilderCustomizerList72;
        java.io.File file75 = null;
        undertowEmbeddedServletContainerFactory70.setSessionStoreDir(file75);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection77 = undertowEmbeddedServletContainerFactory70.getDeploymentInfoCustomizers();
        boolean boolean78 = undertowEmbeddedServletContainerFactory70.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList79 = undertowEmbeddedServletContainerFactory70.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList79;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo81 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.configureAccessLog(deploymentInfo81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1800 + "'", int14 == 1800);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1800 + "'", int26 == 1800);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 8080 + "'", int35 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray36);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1800 + "'", int44 == 1800);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1800 + "'", int52 == 1800);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(mimeMappings55);
        org.junit.Assert.assertNotNull(mimeMappings56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 8080 + "'", int59 == 8080);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(servletContextInitializerArray65);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList79);
    }

    @Test
    public void test14216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14216");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file5);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file8);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getSessionTimeout();
        boolean boolean12 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        undertowEmbeddedServletContainerFactory10.setPersistSession(false);
        undertowEmbeddedServletContainerFactory10.setUseForwardHeaders(true);
        io.undertow.server.handlers.resource.ResourceManager resourceManager17 = undertowEmbeddedServletContainerFactory10.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getSessionTimeout();
        boolean boolean20 = undertowEmbeddedServletContainerFactory18.isPersistSession();
        java.io.File file21 = undertowEmbeddedServletContainerFactory18.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = undertowEmbeddedServletContainerFactory18.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = undertowEmbeddedServletContainerFactory18.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int25 = undertowEmbeddedServletContainerFactory24.getSessionTimeout();
        boolean boolean26 = undertowEmbeddedServletContainerFactory24.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList27 = undertowEmbeddedServletContainerFactory24.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet28 = undertowEmbeddedServletContainerFactory24.getJspServlet();
        undertowEmbeddedServletContainerFactory18.setJspServlet(jspServlet28);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray31 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList32 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList32, undertowBuilderCustomizerArray31);
        undertowEmbeddedServletContainerFactory30.builderCustomizers = undertowBuilderCustomizerList32;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection35 = undertowEmbeddedServletContainerFactory30.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory18.setBuilderCustomizers(undertowBuilderCustomizerCollection35);
        undertowEmbeddedServletContainerFactory10.setBuilderCustomizers(undertowBuilderCustomizerCollection35);
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection35);
        undertowEmbeddedServletContainerFactory0.bufferSize = 1800;
        java.lang.Integer int41 = undertowEmbeddedServletContainerFactory0.ioThreads;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1800 + "'", int11 == 1800);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(resourceManager17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1800 + "'", int25 == 1800);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList27);
        org.junit.Assert.assertNotNull(jspServlet28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection35);
        org.junit.Assert.assertNull(int41);
    }

    @Test
    public void test14217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14217");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        java.lang.String str26 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        java.lang.String str27 = undertowEmbeddedServletContainerFactory2.getContextPath();
        org.springframework.core.io.ResourceLoader resourceLoader28 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        boolean boolean29 = undertowEmbeddedServletContainerFactory2.isPersistSession();
        org.springframework.boot.context.embedded.Ssl ssl30 = null;
        undertowEmbeddedServletContainerFactory2.setSsl(ssl30);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(resourceLoader28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test14218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14218");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file15);
        java.lang.String str17 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        boolean boolean18 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int21 = undertowEmbeddedServletContainerFactory0.ioThreads;
        org.springframework.boot.context.embedded.Compression compression22 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression22);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 100);
        java.io.File file28 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file28);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection30 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection30);
    }

    @Test
    public void test14219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14219");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.lang.Integer int3 = undertowEmbeddedServletContainerFactory1.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = undertowEmbeddedServletContainerFactory6.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings7);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer11 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap10);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer11 };
        initializer9.initializers = servletContextInitializerArray12;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray14 = initializer9.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        java.io.File file19 = undertowEmbeddedServletContainerFactory16.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = undertowEmbeddedServletContainerFactory16.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory16.getMimeMappings();
        java.io.File file22 = undertowEmbeddedServletContainerFactory16.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int24 = undertowEmbeddedServletContainerFactory23.getPort();
        java.lang.Integer int25 = undertowEmbeddedServletContainerFactory23.bufferSize;
        java.io.File file26 = null;
        undertowEmbeddedServletContainerFactory23.setSessionStoreDir(file26);
        java.util.Map<java.lang.String, java.lang.String> strMap28 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer29 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap28);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray30 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer29 };
        undertowEmbeddedServletContainerFactory23.addInitializers(servletContextInitializerArray30);
        undertowEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray30);
        initializer15.initializers = servletContextInitializerArray30;
        initializer9.initializers = servletContextInitializerArray30;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int37 = undertowEmbeddedServletContainerFactory36.getSessionTimeout();
        boolean boolean38 = undertowEmbeddedServletContainerFactory36.isPersistSession();
        java.io.File file39 = undertowEmbeddedServletContainerFactory36.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = undertowEmbeddedServletContainerFactory36.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings41 = undertowEmbeddedServletContainerFactory36.getMimeMappings();
        java.io.File file42 = undertowEmbeddedServletContainerFactory36.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int44 = undertowEmbeddedServletContainerFactory43.getPort();
        java.lang.Integer int45 = undertowEmbeddedServletContainerFactory43.bufferSize;
        java.io.File file46 = null;
        undertowEmbeddedServletContainerFactory43.setSessionStoreDir(file46);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer49 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap48);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray50 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer49 };
        undertowEmbeddedServletContainerFactory43.addInitializers(servletContextInitializerArray50);
        undertowEmbeddedServletContainerFactory36.addInitializers(servletContextInitializerArray50);
        initializer35.initializers = servletContextInitializerArray50;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray54 = initializer35.initializers;
        initializer9.initializers = servletContextInitializerArray54;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray56 = initializer9.initializers;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.DeploymentManager deploymentManager57 = undertowEmbeddedServletContainerFactory1.createDeploymentManager(servletContextInitializerArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: java.lang.NullPointerException");
        } catch (java.lang.RuntimeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertNotNull(servletContextInitializerArray14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8080 + "'", int24 == 8080);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(servletContextInitializerArray30);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1800 + "'", int37 == 1800);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNotNull(mimeMappings41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 8080 + "'", int44 == 8080);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(servletContextInitializerArray50);
        org.junit.Assert.assertNotNull(servletContextInitializerArray54);
        org.junit.Assert.assertNotNull(servletContextInitializerArray56);
    }

    @Test
    public void test14220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14220");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.io.File file4 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.accessLogEnabled;
        undertowEmbeddedServletContainerFactory1.setPersistSession(false);
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.accessLogPattern;
        java.lang.String str9 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        int int10 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = undertowEmbeddedServletContainerFactory11.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet15 = undertowEmbeddedServletContainerFactory11.getJspServlet();
        boolean boolean16 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory11.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        boolean boolean21 = undertowEmbeddedServletContainerFactory20.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int23 = undertowEmbeddedServletContainerFactory22.getSessionTimeout();
        boolean boolean24 = undertowEmbeddedServletContainerFactory22.isPersistSession();
        undertowEmbeddedServletContainerFactory22.setPersistSession(false);
        undertowEmbeddedServletContainerFactory22.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList29 = undertowEmbeddedServletContainerFactory22.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory20.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList29;
        undertowEmbeddedServletContainerFactory11.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList29;
        boolean boolean32 = undertowEmbeddedServletContainerFactory11.isRegisterDefaultServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection33 = undertowEmbeddedServletContainerFactory11.getDeploymentInfoCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList34 = undertowEmbeddedServletContainerFactory11.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList34;
        org.springframework.boot.context.embedded.Compression compression36 = null;
        undertowEmbeddedServletContainerFactory1.setCompression(compression36);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList38 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList14);
        org.junit.Assert.assertNotNull(jspServlet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1800 + "'", int23 == 1800);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection33);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList34);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList38);
    }

    @Test
    public void test14221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14221");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPort(0);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        java.lang.String str7 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection8 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection8);
    }

    @Test
    public void test14222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14222");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        undertowEmbeddedServletContainerFactory7.setPersistSession(false);
        undertowEmbeddedServletContainerFactory7.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList14 = undertowEmbeddedServletContainerFactory7.deploymentInfoCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList15;
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file17);
        boolean boolean19 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList20 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList14);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList20);
    }

    @Test
    public void test14223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14223");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        org.xnio.XnioWorker xnioWorker13 = undertowEmbeddedServletContainerFactory0.createWorker();
        java.io.File file14 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file14);
        io.undertow.Undertow.Builder builder17 = undertowEmbeddedServletContainerFactory0.createBuilder((int) (short) 1);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 1);
        java.lang.Integer int20 = undertowEmbeddedServletContainerFactory0.workerThreads;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(xnioWorker13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(int20);
    }

    @Test
    public void test14224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14224");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        java.lang.String str4 = jarResourceManager0.jarPath;
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "0.0.0.0";
        boolean boolean8 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.close();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test14225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14225");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory2.setPort((-1));
        java.lang.Integer int28 = undertowEmbeddedServletContainerFactory2.bufferSize;
        io.undertow.Undertow.Builder builder30 = undertowEmbeddedServletContainerFactory2.createBuilder(0);
        java.io.File file31 = undertowEmbeddedServletContainerFactory2.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(false);
        java.net.InetAddress inetAddress34 = undertowEmbeddedServletContainerFactory2.getAddress();
        java.lang.String str35 = undertowEmbeddedServletContainerFactory2.getContextPath();
        undertowEmbeddedServletContainerFactory2.setDisplayName("");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection38 = undertowEmbeddedServletContainerFactory2.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int40 = undertowEmbeddedServletContainerFactory39.getSessionTimeout();
        boolean boolean41 = undertowEmbeddedServletContainerFactory39.isPersistSession();
        undertowEmbeddedServletContainerFactory39.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory39.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory39.setDisplayName("hi!");
        boolean boolean48 = undertowEmbeddedServletContainerFactory39.isRegisterDefaultServlet();
        java.lang.Integer int49 = undertowEmbeddedServletContainerFactory39.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray51 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList52 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList52, undertowBuilderCustomizerArray51);
        undertowEmbeddedServletContainerFactory50.builderCustomizers = undertowBuilderCustomizerList52;
        java.io.File file55 = null;
        undertowEmbeddedServletContainerFactory50.setSessionStoreDir(file55);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection57 = undertowEmbeddedServletContainerFactory50.getDeploymentInfoCustomizers();
        java.io.File file58 = null;
        undertowEmbeddedServletContainerFactory50.setAccessLogDirectory(file58);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray61 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList62 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList62, undertowBuilderCustomizerArray61);
        undertowEmbeddedServletContainerFactory60.builderCustomizers = undertowBuilderCustomizerList62;
        undertowEmbeddedServletContainerFactory60.buffersPerRegion = 8080;
        undertowEmbeddedServletContainerFactory60.accessLogPattern = "hi!";
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap70 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer71 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap70);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray72 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer71 };
        initializer69.initializers = servletContextInitializerArray72;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer74 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer76 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap75);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray77 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer76 };
        initializer74.initializers = servletContextInitializerArray77;
        initializer69.initializers = servletContextInitializerArray77;
        undertowEmbeddedServletContainerFactory60.addInitializers(servletContextInitializerArray77);
        undertowEmbeddedServletContainerFactory50.addInitializers(servletContextInitializerArray77);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory82 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int83 = undertowEmbeddedServletContainerFactory82.getPort();
        java.lang.Integer int84 = undertowEmbeddedServletContainerFactory82.bufferSize;
        boolean boolean85 = undertowEmbeddedServletContainerFactory82.accessLogEnabled;
        java.lang.String str86 = undertowEmbeddedServletContainerFactory82.accessLogPattern;
        org.springframework.core.io.ResourceLoader resourceLoader87 = null;
        undertowEmbeddedServletContainerFactory82.setResourceLoader(resourceLoader87);
        boolean boolean89 = undertowEmbeddedServletContainerFactory82.isPersistSession();
        org.xnio.XnioWorker xnioWorker90 = undertowEmbeddedServletContainerFactory82.createWorker();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings91 = undertowEmbeddedServletContainerFactory82.getMimeMappings();
        undertowEmbeddedServletContainerFactory50.setMimeMappings(mimeMappings91);
        undertowEmbeddedServletContainerFactory39.setMimeMappings(mimeMappings91);
        undertowEmbeddedServletContainerFactory2.setMimeMappings(mimeMappings91);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(inetAddress34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1800 + "'", int40 == 1800);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection57);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray72);
        org.junit.Assert.assertNotNull(servletContextInitializerArray77);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 8080 + "'", int83 == 8080);
        org.junit.Assert.assertNull(int84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(xnioWorker90);
        org.junit.Assert.assertNotNull(mimeMappings91);
    }

    @Test
    public void test14226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14226");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        boolean boolean9 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        boolean boolean11 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory0.workerThreads = 1800;
        org.springframework.boot.context.embedded.Compression compression14 = undertowEmbeddedServletContainerFactory0.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int16 = undertowEmbeddedServletContainerFactory15.getPort();
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory15.bufferSize;
        int int18 = undertowEmbeddedServletContainerFactory15.getSessionTimeout();
        org.springframework.boot.context.embedded.Compression compression19 = undertowEmbeddedServletContainerFactory15.getCompression();
        undertowEmbeddedServletContainerFactory15.directBuffers = false;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = undertowEmbeddedServletContainerFactory15.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet22);
        org.springframework.boot.context.embedded.Compression compression24 = undertowEmbeddedServletContainerFactory0.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory25.setJspServletClassName("");
        boolean boolean28 = undertowEmbeddedServletContainerFactory25.useForwardHeaders;
        java.lang.Boolean boolean29 = undertowEmbeddedServletContainerFactory25.directBuffers;
        org.springframework.core.io.ResourceLoader resourceLoader30 = null;
        undertowEmbeddedServletContainerFactory25.setResourceLoader(resourceLoader30);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer34 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap33);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray35 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer34 };
        initializer32.initializers = servletContextInitializerArray35;
        undertowEmbeddedServletContainerFactory25.addInitializers(servletContextInitializerArray35);
        boolean boolean38 = undertowEmbeddedServletContainerFactory25.accessLogEnabled;
        undertowEmbeddedServletContainerFactory25.setDisplayName("");
        undertowEmbeddedServletContainerFactory25.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory25.setIoThreads((java.lang.Integer) 35);
        java.lang.String str45 = undertowEmbeddedServletContainerFactory25.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray46 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory25.addBuilderCustomizers(undertowBuilderCustomizerArray46);
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray46);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(compression14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 8080 + "'", int16 == 8080);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1800 + "'", int18 == 1800);
        org.junit.Assert.assertNull(compression19);
        org.junit.Assert.assertNotNull(errorPageSet22);
        org.junit.Assert.assertNull(compression24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(servletContextInitializerArray35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray46);
    }

    @Test
    public void test14227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14227");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) '#');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int4 = undertowEmbeddedServletContainerFactory3.getSessionTimeout();
        boolean boolean5 = undertowEmbeddedServletContainerFactory3.isPersistSession();
        undertowEmbeddedServletContainerFactory3.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl8 = null;
        undertowEmbeddedServletContainerFactory3.setSsl(ssl8);
        java.lang.String str10 = undertowEmbeddedServletContainerFactory3.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        undertowEmbeddedServletContainerFactory11.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory11.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getSessionTimeout();
        boolean boolean20 = undertowEmbeddedServletContainerFactory18.isPersistSession();
        java.io.File file21 = undertowEmbeddedServletContainerFactory18.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList22 = undertowEmbeddedServletContainerFactory18.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory11.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList22;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory26.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int30 = undertowEmbeddedServletContainerFactory29.getSessionTimeout();
        boolean boolean31 = undertowEmbeddedServletContainerFactory29.isPersistSession();
        undertowEmbeddedServletContainerFactory29.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory29.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray36 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory29.addErrorPages(errorPageArray36);
        undertowEmbeddedServletContainerFactory26.addErrorPages(errorPageArray36);
        undertowEmbeddedServletContainerFactory11.addErrorPages(errorPageArray36);
        undertowEmbeddedServletContainerFactory3.addErrorPages(errorPageArray36);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int42 = undertowEmbeddedServletContainerFactory41.getSessionTimeout();
        boolean boolean43 = undertowEmbeddedServletContainerFactory41.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList44 = undertowEmbeddedServletContainerFactory41.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int46 = undertowEmbeddedServletContainerFactory45.getSessionTimeout();
        boolean boolean47 = undertowEmbeddedServletContainerFactory45.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList48 = undertowEmbeddedServletContainerFactory45.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet49 = undertowEmbeddedServletContainerFactory45.getJspServlet();
        boolean boolean50 = undertowEmbeddedServletContainerFactory45.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet51 = undertowEmbeddedServletContainerFactory45.getErrorPages();
        undertowEmbeddedServletContainerFactory41.setErrorPages(errorPageSet51);
        undertowEmbeddedServletContainerFactory3.setErrorPages(errorPageSet51);
        undertowEmbeddedServletContainerFactory2.setErrorPages(errorPageSet51);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList55 = undertowEmbeddedServletContainerFactory2.builderCustomizers;
        org.springframework.core.io.ResourceLoader resourceLoader56 = null;
        undertowEmbeddedServletContainerFactory2.resourceLoader = resourceLoader56;
        boolean boolean58 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        java.lang.Integer int59 = undertowEmbeddedServletContainerFactory2.bufferSize;
        java.lang.ClassLoader classLoader60 = undertowEmbeddedServletContainerFactory2.getServletClassLoader();
        java.lang.Integer int61 = undertowEmbeddedServletContainerFactory2.workerThreads;
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1800 + "'", int4 == 1800);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList22);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1800 + "'", int30 == 1800);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(errorPageArray36);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1800 + "'", int42 == 1800);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1800 + "'", int46 == 1800);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList48);
        org.junit.Assert.assertNotNull(jspServlet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(errorPageSet51);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(classLoader60);
        org.junit.Assert.assertNull(int61);
    }

    @Test
    public void test14228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14228");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        boolean boolean2 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean3 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str4 = jarResourceManager0.jarPath;
        java.lang.String str5 = jarResourceManager0.jarPath;
        jarResourceManager0.close();
        java.lang.String str7 = jarResourceManager0.jarPath;
        java.lang.String str8 = jarResourceManager0.jarPath;
        java.lang.String str9 = jarResourceManager0.jarPath;
        boolean boolean10 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str11 = jarResourceManager0.jarPath;
        jarResourceManager0.jarPath = "hi!";
        java.lang.String str14 = jarResourceManager0.jarPath;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test14229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14229");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file8);
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 8080);
        java.lang.String str13 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        java.io.File file14 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.net.InetAddress inetAddress15 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress15);
        org.springframework.boot.context.embedded.JspServlet jspServlet17 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        java.io.File file18 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int21 = undertowEmbeddedServletContainerFactory20.getSessionTimeout();
        boolean boolean22 = undertowEmbeddedServletContainerFactory20.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList23 = undertowEmbeddedServletContainerFactory20.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet24 = undertowEmbeddedServletContainerFactory20.getJspServlet();
        undertowEmbeddedServletContainerFactory20.directBuffers = true;
        java.io.File file27 = null;
        undertowEmbeddedServletContainerFactory20.setDocumentRoot(file27);
        undertowEmbeddedServletContainerFactory20.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray31 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory20.addBuilderCustomizers(undertowBuilderCustomizerArray31);
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray31);
        java.lang.Integer int34 = undertowEmbeddedServletContainerFactory0.ioThreads;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0.0.0.0" + "'", str13, "0.0.0.0");
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(jspServlet17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1800 + "'", int21 == 1800);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList23);
        org.junit.Assert.assertNotNull(jspServlet24);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray31);
        org.junit.Assert.assertNull(int34);
    }

    @Test
    public void test14230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14230");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.lang.Integer int3 = undertowEmbeddedServletContainerFactory1.bufferSize;
        java.io.File file4 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection5 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo6 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo6);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection8 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.lang.String str9 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection5);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test14231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14231");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file5;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList11 = undertowEmbeddedServletContainerFactory8.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet12 = undertowEmbeddedServletContainerFactory8.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet12);
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader14;
        io.undertow.Undertow.Builder builder17 = undertowEmbeddedServletContainerFactory0.createBuilder((int) ' ');
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList11);
        org.junit.Assert.assertNotNull(jspServlet12);
        org.junit.Assert.assertNotNull(builder17);
    }

    @Test
    public void test14232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14232");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.net.InetAddress inetAddress9 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress9);
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection13 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.setDisplayName("");
        org.springframework.boot.context.embedded.Ssl ssl16 = undertowEmbeddedServletContainerFactory0.getSsl();
        org.xnio.XnioWorker xnioWorker17 = undertowEmbeddedServletContainerFactory0.createWorker();
        org.springframework.boot.context.embedded.Ssl ssl18 = undertowEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer21 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap20);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray22 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer21 };
        initializer19.initializers = servletContextInitializerArray22;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray24 = initializer19.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int26 = undertowEmbeddedServletContainerFactory25.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer28 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap27);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer30 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap29);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer32 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap31);
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer34 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap33);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray35 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer28, initParameterConfiguringServletContextInitializer30, initParameterConfiguringServletContextInitializer32, initParameterConfiguringServletContextInitializer34 };
        undertowEmbeddedServletContainerFactory25.addInitializers(servletContextInitializerArray35);
        initializer19.initializers = servletContextInitializerArray35;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.DeploymentManager deploymentManager38 = undertowEmbeddedServletContainerFactory0.createDeploymentManager(servletContextInitializerArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: java.lang.NullPointerException");
        } catch (java.lang.RuntimeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection13);
        org.junit.Assert.assertNull(ssl16);
        org.junit.Assert.assertNotNull(xnioWorker17);
        org.junit.Assert.assertNull(ssl18);
        org.junit.Assert.assertNotNull(servletContextInitializerArray22);
        org.junit.Assert.assertNotNull(servletContextInitializerArray24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1800 + "'", int26 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray35);
    }

    @Test
    public void test14233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14233");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.jarPath = "hi!";
        boolean boolean3 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean4 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str5 = jarResourceManager0.jarPath;
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "0.0.0.0";
        java.lang.String str9 = jarResourceManager0.jarPath;
        boolean boolean10 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.jarPath = "hi!";
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "0.0.0.0" + "'", str9, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test14234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14234");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        boolean boolean10 = undertowEmbeddedServletContainerFactory9.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        undertowEmbeddedServletContainerFactory11.setPersistSession(false);
        undertowEmbeddedServletContainerFactory11.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList18 = undertowEmbeddedServletContainerFactory11.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory9.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList18;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList18;
        java.lang.String str21 = undertowEmbeddedServletContainerFactory0.getContextPath();
        java.net.InetAddress inetAddress22 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress22);
        java.io.File file24 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file24;
        org.springframework.boot.context.embedded.Compression compression26 = undertowEmbeddedServletContainerFactory0.getCompression();
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.lang.Integer int29 = undertowEmbeddedServletContainerFactory0.ioThreads;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(compression26);
        org.junit.Assert.assertNull(int29);
    }

    @Test
    public void test14235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14235");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        java.net.InetAddress inetAddress5 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress5);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.lang.String str8 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test14236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14236");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 1);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file4);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        java.io.File file11 = undertowEmbeddedServletContainerFactory8.accessLogDirectory;
        java.lang.String str12 = undertowEmbeddedServletContainerFactory8.getListenAddress();
        undertowEmbeddedServletContainerFactory8.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory8.useForwardHeaders = false;
        java.lang.Boolean boolean17 = undertowEmbeddedServletContainerFactory8.directBuffers;
        org.springframework.boot.context.embedded.Compression compression18 = null;
        undertowEmbeddedServletContainerFactory8.setCompression(compression18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int21 = undertowEmbeddedServletContainerFactory20.getSessionTimeout();
        boolean boolean22 = undertowEmbeddedServletContainerFactory20.isPersistSession();
        undertowEmbeddedServletContainerFactory20.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory20.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int28 = undertowEmbeddedServletContainerFactory27.getSessionTimeout();
        boolean boolean29 = undertowEmbeddedServletContainerFactory27.isPersistSession();
        java.io.File file30 = undertowEmbeddedServletContainerFactory27.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList31 = undertowEmbeddedServletContainerFactory27.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory20.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList31;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory35.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int39 = undertowEmbeddedServletContainerFactory38.getSessionTimeout();
        boolean boolean40 = undertowEmbeddedServletContainerFactory38.isPersistSession();
        undertowEmbeddedServletContainerFactory38.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory38.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray45 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory38.addErrorPages(errorPageArray45);
        undertowEmbeddedServletContainerFactory35.addErrorPages(errorPageArray45);
        undertowEmbeddedServletContainerFactory20.addErrorPages(errorPageArray45);
        undertowEmbeddedServletContainerFactory8.addErrorPages(errorPageArray45);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray45);
        java.net.InetAddress inetAddress51 = undertowEmbeddedServletContainerFactory0.getAddress();
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1800 + "'", int21 == 1800);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1800 + "'", int28 == 1800);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList31);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1800 + "'", int39 == 1800);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(errorPageArray45);
        org.junit.Assert.assertNull(inetAddress51);
    }

    @Test
    public void test14237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14237");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList11 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.lang.String str12 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file15);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test14238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14238");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        undertowEmbeddedServletContainerFactory0.workerThreads = 1;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.bufferSize = 10;
        org.springframework.core.io.ResourceLoader resourceLoader10 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.core.io.ResourceLoader resourceLoader11 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.core.io.ResourceLoader resourceLoader12 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader12;
        java.lang.String str14 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        java.lang.String str15 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
        org.junit.Assert.assertNull(resourceLoader10);
        org.junit.Assert.assertNull(resourceLoader11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test14239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14239");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPort(0);
        java.net.InetAddress inetAddress5 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress5);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory7.accessLogEnabled = false;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList11 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList11, undertowBuilderCustomizerArray10);
        undertowEmbeddedServletContainerFactory7.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList11);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList11;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("");
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory0.bufferSize = 100;
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory26.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory26.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int32 = undertowEmbeddedServletContainerFactory31.getSessionTimeout();
        boolean boolean33 = undertowEmbeddedServletContainerFactory31.isPersistSession();
        java.io.File file34 = undertowEmbeddedServletContainerFactory31.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings35 = undertowEmbeddedServletContainerFactory31.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = undertowEmbeddedServletContainerFactory31.getMimeMappings();
        java.lang.Integer int37 = undertowEmbeddedServletContainerFactory31.buffersPerRegion;
        undertowEmbeddedServletContainerFactory31.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int41 = undertowEmbeddedServletContainerFactory40.getSessionTimeout();
        boolean boolean42 = undertowEmbeddedServletContainerFactory40.isPersistSession();
        undertowEmbeddedServletContainerFactory40.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder46 = undertowEmbeddedServletContainerFactory40.createBuilder((-1));
        undertowEmbeddedServletContainerFactory40.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int50 = undertowEmbeddedServletContainerFactory49.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray51 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory49.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray51);
        undertowEmbeddedServletContainerFactory40.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray51);
        undertowEmbeddedServletContainerFactory31.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray51);
        undertowEmbeddedServletContainerFactory26.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray51);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray51);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1800 + "'", int32 == 1800);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(mimeMappings35);
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1800 + "'", int41 == 1800);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 8080 + "'", int50 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray51);
    }

    @Test
    public void test14240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14240");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int3 = undertowEmbeddedServletContainerFactory2.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory2.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray4);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray4);
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        undertowEmbeddedServletContainerFactory1.setPersistSession(true);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        java.lang.ClassLoader classLoader12 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.springframework.boot.context.embedded.ErrorPage errorPage13 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage14 = undertowEmbeddedServletContainerFactory1.getUndertowErrorPage(errorPage13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8080 + "'", int3 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(classLoader12);
    }

    @Test
    public void test14241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14241");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.Compression compression16 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression16);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList18 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        int int19 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        org.springframework.core.io.ResourceLoader resourceLoader22 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertNull(resourceLoader22);
        org.junit.Assert.assertNotNull(errorPageSet23);
    }

    @Test
    public void test14242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14242");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        int int3 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet4 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        java.io.File file5 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean8 = undertowEmbeddedServletContainerFactory7.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory7.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory7.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory13.accessLogEnabled = false;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList17, undertowBuilderCustomizerArray16);
        undertowEmbeddedServletContainerFactory13.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList17);
        undertowEmbeddedServletContainerFactory7.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList17);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList17;
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = true;
        int int24 = undertowEmbeddedServletContainerFactory0.getPort();
        boolean boolean25 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "";
        java.io.File file28 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1800 + "'", int3 == 1800);
        org.junit.Assert.assertNotNull(errorPageSet4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8080 + "'", int24 == 8080);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(file28);
    }

    @Test
    public void test14243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14243");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        java.lang.String str10 = undertowEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection12 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        org.springframework.boot.context.embedded.JspServlet jspServlet13 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        java.lang.String str14 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        org.springframework.boot.context.embedded.Ssl ssl15 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl15);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection12);
        org.junit.Assert.assertNotNull(jspServlet13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test14244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14244");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory0.directBuffers;
        java.net.InetAddress inetAddress7 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress7);
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("0.0.0.0");
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 1800);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(boolean6);
    }

    @Test
    public void test14245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14245");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        undertowEmbeddedServletContainerFactory7.setPersistSession(false);
        undertowEmbeddedServletContainerFactory7.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList14 = undertowEmbeddedServletContainerFactory7.deploymentInfoCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList15;
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file17);
        boolean boolean19 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList20 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        boolean boolean21 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList14);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test14246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14246");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection2 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int4 = undertowEmbeddedServletContainerFactory3.getSessionTimeout();
        boolean boolean5 = undertowEmbeddedServletContainerFactory3.isPersistSession();
        java.io.File file6 = undertowEmbeddedServletContainerFactory3.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory3.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory3.ioThreads = 0;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory3.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings10);
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1800 + "'", int4 == 1800);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNull(int12);
    }

    @Test
    public void test14247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14247");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory0.workerThreads = 1800;
        io.undertow.server.handlers.resource.ResourceManager resourceManager8 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.Compression compression9 = undertowEmbeddedServletContainerFactory0.getCompression();
        java.io.File file10 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        undertowEmbeddedServletContainerFactory0.setDisplayName("0.0.0.0");
        boolean boolean13 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(resourceManager8);
        org.junit.Assert.assertNull(compression9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test14248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14248");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet10);
        java.net.InetAddress inetAddress12 = undertowEmbeddedServletContainerFactory0.getAddress();
        java.lang.ClassLoader classLoader13 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        java.lang.String str14 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        io.undertow.server.handlers.resource.ResourceManager resourceManager17 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getSessionTimeout();
        boolean boolean20 = undertowEmbeddedServletContainerFactory18.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList21 = undertowEmbeddedServletContainerFactory18.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet22 = undertowEmbeddedServletContainerFactory18.getJspServlet();
        undertowEmbeddedServletContainerFactory18.directBuffers = true;
        java.lang.Integer int25 = undertowEmbeddedServletContainerFactory18.bufferSize;
        int int26 = undertowEmbeddedServletContainerFactory18.getPort();
        java.lang.Integer int27 = undertowEmbeddedServletContainerFactory18.ioThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer30 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap29);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray31 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer30 };
        initializer28.initializers = servletContextInitializerArray31;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int34 = undertowEmbeddedServletContainerFactory33.getPort();
        java.lang.Integer int35 = undertowEmbeddedServletContainerFactory33.bufferSize;
        java.io.File file36 = null;
        undertowEmbeddedServletContainerFactory33.setSessionStoreDir(file36);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer39 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap38);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray40 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer39 };
        undertowEmbeddedServletContainerFactory33.addInitializers(servletContextInitializerArray40);
        initializer28.initializers = servletContextInitializerArray40;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList46 = undertowEmbeddedServletContainerFactory45.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer49 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap48);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray50 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer49 };
        initializer47.initializers = servletContextInitializerArray50;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer54 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap53);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray55 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer54 };
        initializer52.initializers = servletContextInitializerArray55;
        initializer47.initializers = servletContextInitializerArray55;
        undertowEmbeddedServletContainerFactory45.addInitializers(servletContextInitializerArray55);
        initializer28.initializers = servletContextInitializerArray55;
        undertowEmbeddedServletContainerFactory18.addInitializers(servletContextInitializerArray55);
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray55);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList62 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.createAccessLogDirectoryIfNecessary();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Access log directory is not set");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertNull(inetAddress12);
        org.junit.Assert.assertNotNull(classLoader13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0.0.0.0" + "'", str14, "0.0.0.0");
        org.junit.Assert.assertNotNull(resourceManager17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList21);
        org.junit.Assert.assertNotNull(jspServlet22);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 8080 + "'", int26 == 8080);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(servletContextInitializerArray31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 8080 + "'", int34 == 8080);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(servletContextInitializerArray40);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList46);
        org.junit.Assert.assertNotNull(servletContextInitializerArray50);
        org.junit.Assert.assertNotNull(servletContextInitializerArray55);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList62);
    }

    @Test
    public void test14249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14249");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory1.ioThreads = 1;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory1.setAccessLogEnabled(false);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
    }

    @Test
    public void test14250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14250");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        undertowEmbeddedServletContainerFactory2.setJspServletClassName("");
        org.xnio.XnioWorker xnioWorker27 = undertowEmbeddedServletContainerFactory2.createWorker();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertNotNull(xnioWorker27);
    }

    @Test
    public void test14251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14251");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.Compression compression4 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression4);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = true;
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file10);
        java.net.InetAddress inetAddress12 = undertowEmbeddedServletContainerFactory0.getAddress();
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.createAccessLogDirectoryIfNecessary();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Access log directory is not set");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNull(inetAddress12);
    }

    @Test
    public void test14252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14252");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet10);
        java.net.InetAddress inetAddress12 = undertowEmbeddedServletContainerFactory0.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader13 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray16 = undertowEmbeddedServletContainerFactory0.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertNull(inetAddress12);
        org.junit.Assert.assertNull(resourceLoader13);
    }

    @Test
    public void test14253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14253");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.net.InetAddress inetAddress9 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress9);
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        io.undertow.servlet.api.DeploymentInfo deploymentInfo13 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo13);
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        java.net.InetAddress inetAddress17 = undertowEmbeddedServletContainerFactory0.getAddress();
        undertowEmbeddedServletContainerFactory0.setDisplayName("");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(inetAddress17);
    }

    @Test
    public void test14254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14254");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory0.workerThreads = 1800;
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getSessionTimeout();
        boolean boolean12 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        undertowEmbeddedServletContainerFactory10.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory10.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int18 = undertowEmbeddedServletContainerFactory17.getSessionTimeout();
        boolean boolean19 = undertowEmbeddedServletContainerFactory17.isPersistSession();
        undertowEmbeddedServletContainerFactory17.setPersistSession(false);
        undertowEmbeddedServletContainerFactory17.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList24 = undertowEmbeddedServletContainerFactory17.deploymentInfoCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList25 = undertowEmbeddedServletContainerFactory17.builderCustomizers;
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList25;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int28 = undertowEmbeddedServletContainerFactory27.getPort();
        java.lang.Integer int29 = undertowEmbeddedServletContainerFactory27.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader30 = null;
        undertowEmbeddedServletContainerFactory27.setResourceLoader(resourceLoader30);
        java.lang.Integer int32 = undertowEmbeddedServletContainerFactory27.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int34 = undertowEmbeddedServletContainerFactory33.getSessionTimeout();
        boolean boolean35 = undertowEmbeddedServletContainerFactory33.isPersistSession();
        java.io.File file36 = undertowEmbeddedServletContainerFactory33.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = undertowEmbeddedServletContainerFactory33.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = undertowEmbeddedServletContainerFactory33.getMimeMappings();
        java.lang.Integer int39 = undertowEmbeddedServletContainerFactory33.buffersPerRegion;
        io.undertow.Undertow.Builder builder41 = undertowEmbeddedServletContainerFactory33.createBuilder(10);
        io.undertow.servlet.api.DeploymentManager deploymentManager42 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer44 = undertowEmbeddedServletContainerFactory27.getUndertowEmbeddedServletContainer(builder41, deploymentManager42, 1);
        io.undertow.servlet.api.DeploymentManager deploymentManager45 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer47 = undertowEmbeddedServletContainerFactory10.getUndertowEmbeddedServletContainer(builder41, deploymentManager45, (int) (short) -1);
        io.undertow.servlet.api.DeploymentManager deploymentManager48 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer50 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder41, deploymentManager48, (-1));
        io.undertow.servlet.api.DeploymentInfo deploymentInfo51 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.configureAccessLog(deploymentInfo51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1800 + "'", int11 == 1800);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1800 + "'", int18 == 1800);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList24);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8080 + "'", int28 == 8080);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1800 + "'", int34 == 1800);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer44);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer47);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer50);
    }

    @Test
    public void test14255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14255");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.lang.Integer int3 = undertowEmbeddedServletContainerFactory1.bufferSize;
        java.util.concurrent.TimeUnit timeUnit5 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout(97, timeUnit5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(int3);
    }

    @Test
    public void test14256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14256");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.xnio.XnioWorker xnioWorker2 = undertowEmbeddedServletContainerFactory1.createWorker();
        undertowEmbeddedServletContainerFactory1.accessLogEnabled = true;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo5 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo5);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory1.accessLogEnabled = true;
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
        org.junit.Assert.assertNotNull(xnioWorker2);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
    }

    @Test
    public void test14257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14257");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 1);
        boolean boolean7 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(int8);
    }

    @Test
    public void test14258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14258");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file8);
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 8080);
        org.xnio.XnioWorker xnioWorker13 = undertowEmbeddedServletContainerFactory0.createWorker();
        org.xnio.XnioWorker xnioWorker14 = undertowEmbeddedServletContainerFactory0.createWorker();
        java.lang.String str15 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        undertowEmbeddedServletContainerFactory0.ioThreads = 1800;
        org.springframework.core.io.ResourceLoader resourceLoader18 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader18;
        java.net.InetAddress inetAddress20 = undertowEmbeddedServletContainerFactory0.getAddress();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(xnioWorker13);
        org.junit.Assert.assertNotNull(xnioWorker14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(inetAddress20);
    }

    @Test
    public void test14259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14259");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.lang.Integer int3 = undertowEmbeddedServletContainerFactory1.bufferSize;
        java.io.File file4 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection5 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        io.undertow.server.handlers.resource.ResourceManager resourceManager6 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.accessLogEnabled;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file10);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection5);
        org.junit.Assert.assertNotNull(resourceManager6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(errorPageSet12);
        org.junit.Assert.assertNotNull(mimeMappings13);
    }

    @Test
    public void test14260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14260");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.io.File file10 = undertowEmbeddedServletContainerFactory7.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList11 = undertowEmbeddedServletContainerFactory7.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList11;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        int int14 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(true);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        org.springframework.boot.context.embedded.JspServlet jspServlet18 = null;
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet18);
        java.lang.String str20 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo21 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo21);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList23 = null;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList23;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList11);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1800 + "'", int14 == 1800);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test14261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14261");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file4);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean8 = undertowEmbeddedServletContainerFactory7.isAccessLogEnabled();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = undertowEmbeddedServletContainerFactory7.getMimeMappings();
        java.io.File file10 = undertowEmbeddedServletContainerFactory7.getDocumentRoot();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList11 = undertowEmbeddedServletContainerFactory7.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList11;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection13 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        java.net.InetAddress inetAddress14 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress14);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getPort();
        java.lang.Integer int18 = undertowEmbeddedServletContainerFactory16.bufferSize;
        java.io.File file19 = null;
        undertowEmbeddedServletContainerFactory16.setSessionStoreDir(file19);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getSessionTimeout();
        boolean boolean23 = undertowEmbeddedServletContainerFactory21.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList24 = undertowEmbeddedServletContainerFactory21.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet25 = undertowEmbeddedServletContainerFactory21.getJspServlet();
        boolean boolean26 = undertowEmbeddedServletContainerFactory21.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet27 = undertowEmbeddedServletContainerFactory21.getErrorPages();
        undertowEmbeddedServletContainerFactory16.setErrorPages(errorPageSet27);
        undertowEmbeddedServletContainerFactory16.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList31 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        undertowEmbeddedServletContainerFactory16.bufferSize = 8080;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int35 = undertowEmbeddedServletContainerFactory34.getSessionTimeout();
        boolean boolean36 = undertowEmbeddedServletContainerFactory34.isPersistSession();
        undertowEmbeddedServletContainerFactory34.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder40 = undertowEmbeddedServletContainerFactory34.createBuilder((-1));
        undertowEmbeddedServletContainerFactory34.accessLogEnabled = true;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet43 = undertowEmbeddedServletContainerFactory34.getErrorPages();
        undertowEmbeddedServletContainerFactory16.setErrorPages(errorPageSet43);
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet43);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo46 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo46);
        org.springframework.boot.context.embedded.Ssl ssl48 = undertowEmbeddedServletContainerFactory0.getSsl();
        java.lang.Integer int49 = undertowEmbeddedServletContainerFactory0.ioThreads;
        org.xnio.XnioWorker xnioWorker50 = undertowEmbeddedServletContainerFactory0.createWorker();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList11);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8080 + "'", int17 == 8080);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1800 + "'", int22 == 1800);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList24);
        org.junit.Assert.assertNotNull(jspServlet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(errorPageSet27);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1800 + "'", int35 == 1800);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(errorPageSet43);
        org.junit.Assert.assertNull(ssl48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(xnioWorker50);
    }

    @Test
    public void test14262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14262");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file5;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression8);
        org.springframework.boot.context.embedded.Compression compression10 = undertowEmbeddedServletContainerFactory0.getCompression();
        java.net.InetAddress inetAddress11 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        boolean boolean13 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        java.io.File file14 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file14);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNull(compression10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test14263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14263");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        undertowEmbeddedServletContainerFactory0.setPort((-1));
        java.lang.String str9 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        int int10 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str11 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "";
        org.springframework.boot.context.embedded.Ssl ssl14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getPort();
        java.lang.Integer int18 = undertowEmbeddedServletContainerFactory16.bufferSize;
        boolean boolean19 = undertowEmbeddedServletContainerFactory16.accessLogEnabled;
        java.lang.String str20 = undertowEmbeddedServletContainerFactory16.accessLogPattern;
        undertowEmbeddedServletContainerFactory16.setWorkerThreads((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory23.setJspServletClassName("");
        int int26 = undertowEmbeddedServletContainerFactory23.getSessionTimeout();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet27 = undertowEmbeddedServletContainerFactory23.getErrorPages();
        undertowEmbeddedServletContainerFactory16.setErrorPages(errorPageSet27);
        undertowEmbeddedServletContainerFactory16.accessLogPattern = "";
        boolean boolean31 = undertowEmbeddedServletContainerFactory16.useForwardHeaders;
        java.io.File file32 = undertowEmbeddedServletContainerFactory16.accessLogDirectory;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int34 = undertowEmbeddedServletContainerFactory33.getSessionTimeout();
        boolean boolean35 = undertowEmbeddedServletContainerFactory33.isPersistSession();
        java.io.File file36 = undertowEmbeddedServletContainerFactory33.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = undertowEmbeddedServletContainerFactory33.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = undertowEmbeddedServletContainerFactory33.getMimeMappings();
        java.lang.Integer int39 = undertowEmbeddedServletContainerFactory33.buffersPerRegion;
        io.undertow.Undertow.Builder builder41 = undertowEmbeddedServletContainerFactory33.createBuilder(10);
        undertowEmbeddedServletContainerFactory33.setSessionTimeout(0);
        java.lang.String str44 = undertowEmbeddedServletContainerFactory33.getDisplayName();
        java.lang.String str45 = undertowEmbeddedServletContainerFactory33.getListenAddress();
        io.undertow.Undertow.Builder builder47 = undertowEmbeddedServletContainerFactory33.createBuilder(1800);
        io.undertow.servlet.api.DeploymentManager deploymentManager48 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer50 = undertowEmbeddedServletContainerFactory16.getUndertowEmbeddedServletContainer(builder47, deploymentManager48, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.configureSsl(ssl14, (int) (short) 10, builder47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "0.0.0.0" + "'", str9, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8080 + "'", int17 == 8080);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1800 + "'", int26 == 1800);
        org.junit.Assert.assertNotNull(errorPageSet27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1800 + "'", int34 == 1800);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "0.0.0.0" + "'", str45, "0.0.0.0");
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer50);
    }

    @Test
    public void test14264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14264");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder5 = undertowEmbeddedServletContainerFactory1.createBuilder((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.ioThreads = 10;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList8 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        java.io.File file9 = undertowEmbeddedServletContainerFactory1.accessLogDirectory;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("0.0.0.0");
        java.lang.String str12 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int14 = undertowEmbeddedServletContainerFactory13.getSessionTimeout();
        boolean boolean15 = undertowEmbeddedServletContainerFactory13.isPersistSession();
        undertowEmbeddedServletContainerFactory13.setPersistSession(false);
        undertowEmbeddedServletContainerFactory13.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList20 = undertowEmbeddedServletContainerFactory13.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory13.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int24 = undertowEmbeddedServletContainerFactory23.getSessionTimeout();
        boolean boolean25 = undertowEmbeddedServletContainerFactory23.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList26 = undertowEmbeddedServletContainerFactory23.builderCustomizers;
        undertowEmbeddedServletContainerFactory13.builderCustomizers = undertowBuilderCustomizerList26;
        java.io.File file28 = null;
        undertowEmbeddedServletContainerFactory13.accessLogDirectory = file28;
        boolean boolean30 = undertowEmbeddedServletContainerFactory13.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress31 = undertowEmbeddedServletContainerFactory13.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int33 = undertowEmbeddedServletContainerFactory32.getSessionTimeout();
        boolean boolean34 = undertowEmbeddedServletContainerFactory32.isPersistSession();
        undertowEmbeddedServletContainerFactory32.setPersistSession(false);
        undertowEmbeddedServletContainerFactory32.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList39 = undertowEmbeddedServletContainerFactory32.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory32.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int43 = undertowEmbeddedServletContainerFactory42.getSessionTimeout();
        boolean boolean44 = undertowEmbeddedServletContainerFactory42.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList45 = undertowEmbeddedServletContainerFactory42.builderCustomizers;
        undertowEmbeddedServletContainerFactory32.builderCustomizers = undertowBuilderCustomizerList45;
        java.io.File file47 = null;
        undertowEmbeddedServletContainerFactory32.accessLogDirectory = file47;
        boolean boolean49 = undertowEmbeddedServletContainerFactory32.isRegisterDefaultServlet();
        boolean boolean50 = undertowEmbeddedServletContainerFactory32.isAccessLogEnabled();
        io.undertow.Undertow.Builder builder52 = undertowEmbeddedServletContainerFactory32.createBuilder(8080);
        io.undertow.servlet.api.DeploymentManager deploymentManager53 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer55 = undertowEmbeddedServletContainerFactory13.getUndertowEmbeddedServletContainer(builder52, deploymentManager53, 8080);
        io.undertow.servlet.api.DeploymentManager deploymentManager56 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer58 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder52, deploymentManager56, (int) ' ');
        java.lang.Integer int59 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1800 + "'", int14 == 1800);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1800 + "'", int24 == 1800);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(inetAddress31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1800 + "'", int33 == 1800);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1800 + "'", int43 == 1800);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer55);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer58);
        org.junit.Assert.assertNull(int59);
    }

    @Test
    public void test14265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14265");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader3);
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory0.bufferSize;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 0);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection8 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        java.net.InetAddress inetAddress9 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress9);
        java.lang.Integer int11 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getPort();
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory12.bufferSize;
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory12.setSessionStoreDir(file15);
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory12.accessLogDirectory = file17;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int21 = undertowEmbeddedServletContainerFactory20.getSessionTimeout();
        boolean boolean22 = undertowEmbeddedServletContainerFactory20.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList23 = undertowEmbeddedServletContainerFactory20.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet24 = undertowEmbeddedServletContainerFactory20.getJspServlet();
        undertowEmbeddedServletContainerFactory12.setJspServlet(jspServlet24);
        org.springframework.core.io.ResourceLoader resourceLoader26 = null;
        undertowEmbeddedServletContainerFactory12.resourceLoader = resourceLoader26;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean30 = undertowEmbeddedServletContainerFactory29.isAccessLogEnabled();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = undertowEmbeddedServletContainerFactory29.getMimeMappings();
        java.io.File file32 = undertowEmbeddedServletContainerFactory29.getDocumentRoot();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList33 = undertowEmbeddedServletContainerFactory29.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory12.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList33;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList33;
        io.undertow.server.handlers.resource.ResourceManager resourceManager36 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.Ssl ssl37 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode38 = undertowEmbeddedServletContainerFactory0.getSslClientAuthMode(ssl37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8080 + "'", int13 == 8080);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1800 + "'", int21 == 1800);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList23);
        org.junit.Assert.assertNotNull(jspServlet24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList33);
        org.junit.Assert.assertNotNull(resourceManager36);
    }

    @Test
    public void test14266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14266");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        boolean boolean3 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory2.useForwardHeaders = false;
        undertowEmbeddedServletContainerFactory2.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory2.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.ErrorPage errorPage10 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage11 = undertowEmbeddedServletContainerFactory2.getUndertowErrorPage(errorPage10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test14267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14267");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList5 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList9;
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        java.net.InetAddress inetAddress13 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress13);
        boolean boolean15 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList18 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList18, undertowBuilderCustomizerArray17);
        undertowEmbeddedServletContainerFactory16.builderCustomizers = undertowBuilderCustomizerList18;
        java.io.File file21 = null;
        undertowEmbeddedServletContainerFactory16.setSessionStoreDir(file21);
        org.springframework.core.io.ResourceLoader resourceLoader23 = undertowEmbeddedServletContainerFactory16.resourceLoader;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList24 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        undertowEmbeddedServletContainerFactory16.setJspServletClassName("0.0.0.0");
        undertowEmbeddedServletContainerFactory16.setPort((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int30 = undertowEmbeddedServletContainerFactory29.getSessionTimeout();
        boolean boolean31 = undertowEmbeddedServletContainerFactory29.isPersistSession();
        undertowEmbeddedServletContainerFactory29.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory29.setUseForwardHeaders(false);
        boolean boolean36 = undertowEmbeddedServletContainerFactory29.useForwardHeaders;
        undertowEmbeddedServletContainerFactory29.setRegisterJspServlet(false);
        java.io.File file39 = null;
        undertowEmbeddedServletContainerFactory29.setDocumentRoot(file39);
        boolean boolean41 = undertowEmbeddedServletContainerFactory29.isPersistSession();
        java.lang.String str42 = undertowEmbeddedServletContainerFactory29.accessLogPattern;
        int int43 = undertowEmbeddedServletContainerFactory29.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int45 = undertowEmbeddedServletContainerFactory44.getSessionTimeout();
        undertowEmbeddedServletContainerFactory44.setSessionTimeout((int) (short) 1);
        java.io.File file48 = null;
        undertowEmbeddedServletContainerFactory44.setSessionStoreDir(file48);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int51 = undertowEmbeddedServletContainerFactory50.getSessionTimeout();
        boolean boolean52 = undertowEmbeddedServletContainerFactory50.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList53 = undertowEmbeddedServletContainerFactory50.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet54 = undertowEmbeddedServletContainerFactory50.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int56 = undertowEmbeddedServletContainerFactory55.getSessionTimeout();
        boolean boolean57 = undertowEmbeddedServletContainerFactory55.isPersistSession();
        undertowEmbeddedServletContainerFactory55.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder61 = undertowEmbeddedServletContainerFactory55.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager62 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer64 = undertowEmbeddedServletContainerFactory50.getUndertowEmbeddedServletContainer(builder61, deploymentManager62, (int) (short) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int66 = undertowEmbeddedServletContainerFactory65.getSessionTimeout();
        boolean boolean67 = undertowEmbeddedServletContainerFactory65.isPersistSession();
        undertowEmbeddedServletContainerFactory65.setPersistSession(false);
        undertowEmbeddedServletContainerFactory65.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList72 = undertowEmbeddedServletContainerFactory65.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory65.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory75 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int76 = undertowEmbeddedServletContainerFactory75.getSessionTimeout();
        boolean boolean77 = undertowEmbeddedServletContainerFactory75.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList78 = undertowEmbeddedServletContainerFactory75.builderCustomizers;
        undertowEmbeddedServletContainerFactory65.builderCustomizers = undertowBuilderCustomizerList78;
        undertowEmbeddedServletContainerFactory50.builderCustomizers = undertowBuilderCustomizerList78;
        undertowEmbeddedServletContainerFactory44.builderCustomizers = undertowBuilderCustomizerList78;
        undertowEmbeddedServletContainerFactory29.builderCustomizers = undertowBuilderCustomizerList78;
        undertowEmbeddedServletContainerFactory16.builderCustomizers = undertowBuilderCustomizerList78;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList78;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(resourceLoader23);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList24);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1800 + "'", int30 == 1800);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 8080 + "'", int43 == 8080);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1800 + "'", int45 == 1800);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1800 + "'", int51 == 1800);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList53);
        org.junit.Assert.assertNotNull(jspServlet54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1800 + "'", int56 == 1800);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1800 + "'", int66 == 1800);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList72);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1800 + "'", int76 == 1800);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList78);
    }

    @Test
    public void test14268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14268");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.Compression compression4 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression4);
        org.springframework.boot.context.embedded.JspServlet jspServlet6 = null;
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet6);
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        java.io.File file15 = undertowEmbeddedServletContainerFactory12.accessLogDirectory;
        java.lang.String str16 = undertowEmbeddedServletContainerFactory12.getListenAddress();
        boolean boolean17 = undertowEmbeddedServletContainerFactory12.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory12.workerThreads = 1800;
        undertowEmbeddedServletContainerFactory12.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int23 = undertowEmbeddedServletContainerFactory22.getSessionTimeout();
        boolean boolean24 = undertowEmbeddedServletContainerFactory22.isPersistSession();
        undertowEmbeddedServletContainerFactory22.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory22.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int30 = undertowEmbeddedServletContainerFactory29.getSessionTimeout();
        boolean boolean31 = undertowEmbeddedServletContainerFactory29.isPersistSession();
        undertowEmbeddedServletContainerFactory29.setPersistSession(false);
        undertowEmbeddedServletContainerFactory29.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList36 = undertowEmbeddedServletContainerFactory29.deploymentInfoCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList37 = undertowEmbeddedServletContainerFactory29.builderCustomizers;
        undertowEmbeddedServletContainerFactory22.builderCustomizers = undertowBuilderCustomizerList37;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int40 = undertowEmbeddedServletContainerFactory39.getPort();
        java.lang.Integer int41 = undertowEmbeddedServletContainerFactory39.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader42 = null;
        undertowEmbeddedServletContainerFactory39.setResourceLoader(resourceLoader42);
        java.lang.Integer int44 = undertowEmbeddedServletContainerFactory39.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int46 = undertowEmbeddedServletContainerFactory45.getSessionTimeout();
        boolean boolean47 = undertowEmbeddedServletContainerFactory45.isPersistSession();
        java.io.File file48 = undertowEmbeddedServletContainerFactory45.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings49 = undertowEmbeddedServletContainerFactory45.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings50 = undertowEmbeddedServletContainerFactory45.getMimeMappings();
        java.lang.Integer int51 = undertowEmbeddedServletContainerFactory45.buffersPerRegion;
        io.undertow.Undertow.Builder builder53 = undertowEmbeddedServletContainerFactory45.createBuilder(10);
        io.undertow.servlet.api.DeploymentManager deploymentManager54 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer56 = undertowEmbeddedServletContainerFactory39.getUndertowEmbeddedServletContainer(builder53, deploymentManager54, 1);
        io.undertow.servlet.api.DeploymentManager deploymentManager57 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer59 = undertowEmbeddedServletContainerFactory22.getUndertowEmbeddedServletContainer(builder53, deploymentManager57, (int) (short) -1);
        io.undertow.servlet.api.DeploymentManager deploymentManager60 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer62 = undertowEmbeddedServletContainerFactory12.getUndertowEmbeddedServletContainer(builder53, deploymentManager60, (-1));
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.configureSsl(ssl10, 32, builder53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "0.0.0.0" + "'", str16, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1800 + "'", int23 == 1800);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1800 + "'", int30 == 1800);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList36);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 8080 + "'", int40 == 8080);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1800 + "'", int46 == 1800);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(mimeMappings49);
        org.junit.Assert.assertNotNull(mimeMappings50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer56);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer59);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer62);
    }

    @Test
    public void test14269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14269");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet10);
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        java.lang.String str14 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.io.File file16 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file16);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings15);
    }

    @Test
    public void test14270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14270");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer16 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer16 };
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection19 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList22 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList22, undertowBuilderCustomizerArray21);
        undertowEmbeddedServletContainerFactory20.builderCustomizers = undertowBuilderCustomizerList22;
        org.springframework.boot.context.embedded.Compression compression25 = undertowEmbeddedServletContainerFactory20.getCompression();
        java.io.File file26 = undertowEmbeddedServletContainerFactory20.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory20.bufferSize = 10;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int30 = undertowEmbeddedServletContainerFactory29.getSessionTimeout();
        boolean boolean31 = undertowEmbeddedServletContainerFactory29.isPersistSession();
        undertowEmbeddedServletContainerFactory29.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory29.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory29.setDisplayName("hi!");
        boolean boolean38 = undertowEmbeddedServletContainerFactory29.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int40 = undertowEmbeddedServletContainerFactory39.getSessionTimeout();
        boolean boolean41 = undertowEmbeddedServletContainerFactory39.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList42 = undertowEmbeddedServletContainerFactory39.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet43 = undertowEmbeddedServletContainerFactory39.getJspServlet();
        undertowEmbeddedServletContainerFactory39.directBuffers = true;
        java.io.File file46 = null;
        undertowEmbeddedServletContainerFactory39.setDocumentRoot(file46);
        undertowEmbeddedServletContainerFactory39.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray50 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory39.addBuilderCustomizers(undertowBuilderCustomizerArray50);
        undertowEmbeddedServletContainerFactory29.addBuilderCustomizers(undertowBuilderCustomizerArray50);
        undertowEmbeddedServletContainerFactory20.addBuilderCustomizers(undertowBuilderCustomizerArray50);
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray50);
        java.io.File file55 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.Compression compression60 = undertowEmbeddedServletContainerFactory0.getCompression();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection19);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(compression25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1800 + "'", int30 == 1800);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1800 + "'", int40 == 1800);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList42);
        org.junit.Assert.assertNotNull(jspServlet43);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray50);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(compression60);
    }

    @Test
    public void test14271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14271");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        io.undertow.server.handlers.resource.ResourceManager resourceManager7 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        java.io.File file11 = undertowEmbeddedServletContainerFactory8.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = undertowEmbeddedServletContainerFactory14.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet18 = undertowEmbeddedServletContainerFactory14.getJspServlet();
        undertowEmbeddedServletContainerFactory8.setJspServlet(jspServlet18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList22 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList22, undertowBuilderCustomizerArray21);
        undertowEmbeddedServletContainerFactory20.builderCustomizers = undertowBuilderCustomizerList22;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection25 = undertowEmbeddedServletContainerFactory20.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory8.setBuilderCustomizers(undertowBuilderCustomizerCollection25);
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection25);
        java.io.File file28 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file28);
        java.lang.String str30 = undertowEmbeddedServletContainerFactory0.getContextPath();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(resourceManager7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList17);
        org.junit.Assert.assertNotNull(jspServlet18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
    }

    @Test
    public void test14272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14272");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl5 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl5);
        org.springframework.boot.context.embedded.JspServlet jspServlet7 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getPort();
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory10.bufferSize;
        int int13 = undertowEmbeddedServletContainerFactory10.getSessionTimeout();
        org.springframework.boot.context.embedded.Compression compression14 = undertowEmbeddedServletContainerFactory10.getCompression();
        undertowEmbeddedServletContainerFactory10.directBuffers = false;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = undertowEmbeddedServletContainerFactory10.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet17);
        org.springframework.boot.context.embedded.Ssl ssl19 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl19);
        java.lang.String str21 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(jspServlet7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8080 + "'", int11 == 8080);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertNull(compression14);
        org.junit.Assert.assertNotNull(errorPageSet17);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test14273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14273");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection5 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        undertowEmbeddedServletContainerFactory6.setPersistSession(false);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList13 = undertowEmbeddedServletContainerFactory6.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory6.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList19 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        undertowEmbeddedServletContainerFactory6.builderCustomizers = undertowBuilderCustomizerList19;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList19;
        java.lang.String str22 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(32);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList19);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test14274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14274");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setBufferSize((java.lang.Integer) 10);
        undertowEmbeddedServletContainerFactory2.setWorkerThreads((java.lang.Integer) 1);
        int int9 = undertowEmbeddedServletContainerFactory2.getPort();
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory2.setAccessLogDirectory(file10);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test14275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14275");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection5 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        java.io.File file6 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        int int7 = undertowEmbeddedServletContainerFactory0.getPort();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 0;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8080 + "'", int7 == 8080);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList12);
    }

    @Test
    public void test14276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14276");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory2.setPort((-1));
        java.lang.Integer int28 = undertowEmbeddedServletContainerFactory2.bufferSize;
        io.undertow.Undertow.Builder builder30 = undertowEmbeddedServletContainerFactory2.createBuilder(0);
        java.io.File file31 = undertowEmbeddedServletContainerFactory2.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(false);
        java.net.InetAddress inetAddress34 = undertowEmbeddedServletContainerFactory2.getAddress();
        java.lang.String str35 = undertowEmbeddedServletContainerFactory2.getContextPath();
        undertowEmbeddedServletContainerFactory2.setDisplayName("");
        boolean boolean38 = undertowEmbeddedServletContainerFactory2.useForwardHeaders;
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory2.setBufferSize((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory2.setWorkerThreads((java.lang.Integer) 32);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(inetAddress34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test14277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14277");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.io.File file6 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getPort();
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory7.bufferSize;
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory7.setSessionStoreDir(file10);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray14 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13 };
        undertowEmbeddedServletContainerFactory7.addInitializers(servletContextInitializerArray14);
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray14);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList17 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("0.0.0.0");
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray22 = undertowEmbeddedServletContainerFactory0.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8080 + "'", int8 == 8080);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(servletContextInitializerArray14);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList17);
    }

    @Test
    public void test14278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14278");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory0.getAddress();
        java.net.InetAddress inetAddress19 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress19);
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo23 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo23);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        java.lang.Integer int27 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        java.lang.String str28 = undertowEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet29 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(errorPageSet29);
    }

    @Test
    public void test14279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14279");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        boolean boolean3 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 1800);
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        java.lang.ClassLoader classLoader8 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        boolean boolean9 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        java.io.File file12 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file12);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        org.xnio.XnioWorker xnioWorker16 = undertowEmbeddedServletContainerFactory0.createWorker();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(xnioWorker16);
    }

    @Test
    public void test14280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14280");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file8);
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        boolean boolean13 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        java.net.InetAddress inetAddress16 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress16);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test14281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14281");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder5 = undertowEmbeddedServletContainerFactory1.createBuilder((int) (byte) -1);
        io.undertow.server.handlers.resource.ResourceManager resourceManager6 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.io.File file10 = undertowEmbeddedServletContainerFactory7.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory7.getMimeMappings();
        java.lang.Integer int13 = undertowEmbeddedServletContainerFactory7.buffersPerRegion;
        undertowEmbeddedServletContainerFactory7.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        undertowEmbeddedServletContainerFactory16.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder22 = undertowEmbeddedServletContainerFactory16.createBuilder((-1));
        undertowEmbeddedServletContainerFactory16.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int26 = undertowEmbeddedServletContainerFactory25.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray27 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory25.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        undertowEmbeddedServletContainerFactory16.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        undertowEmbeddedServletContainerFactory7.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray27);
        java.io.File file32 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        boolean boolean33 = undertowEmbeddedServletContainerFactory1.accessLogEnabled;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection34 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet35 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.Ssl ssl36 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.workerThreads = 52;
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        org.springframework.boot.context.embedded.JspServlet jspServlet43 = undertowEmbeddedServletContainerFactory1.getJspServlet();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(resourceManager6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 8080 + "'", int26 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray27);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection34);
        org.junit.Assert.assertNotNull(errorPageSet35);
        org.junit.Assert.assertNull(ssl36);
        org.junit.Assert.assertNotNull(jspServlet43);
    }

    @Test
    public void test14282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14282");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.lang.String str8 = undertowEmbeddedServletContainerFactory0.getContextPath();
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file9;
        java.io.File file11 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file11);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        boolean boolean14 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        org.springframework.core.io.ResourceLoader resourceLoader15 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 35);
        java.lang.Class<?> wildcardClass18 = undertowEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(resourceLoader15);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test14283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14283");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        undertowEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader5);
        undertowEmbeddedServletContainerFactory2.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.boot.context.embedded.Compression compression10 = null;
        undertowEmbeddedServletContainerFactory2.setCompression(compression10);
        java.io.File file12 = null;
        undertowEmbeddedServletContainerFactory2.setDocumentRoot(file12);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList19 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet20 = undertowEmbeddedServletContainerFactory16.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList21 = undertowEmbeddedServletContainerFactory16.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory15.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList21;
        org.springframework.boot.context.embedded.Ssl ssl23 = undertowEmbeddedServletContainerFactory15.getSsl();
        undertowEmbeddedServletContainerFactory15.setUseForwardHeaders(false);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList26 = undertowEmbeddedServletContainerFactory15.builderCustomizers;
        undertowEmbeddedServletContainerFactory2.builderCustomizers = undertowBuilderCustomizerList26;
        undertowEmbeddedServletContainerFactory2.setContextPath("");
        org.springframework.boot.context.embedded.Ssl ssl30 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int33 = undertowEmbeddedServletContainerFactory32.getSessionTimeout();
        boolean boolean34 = undertowEmbeddedServletContainerFactory32.isPersistSession();
        undertowEmbeddedServletContainerFactory32.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory32.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int40 = undertowEmbeddedServletContainerFactory39.getSessionTimeout();
        boolean boolean41 = undertowEmbeddedServletContainerFactory39.isPersistSession();
        java.io.File file42 = undertowEmbeddedServletContainerFactory39.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList43 = undertowEmbeddedServletContainerFactory39.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory32.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList43;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = undertowEmbeddedServletContainerFactory32.getMimeMappings();
        int int46 = undertowEmbeddedServletContainerFactory32.getSessionTimeout();
        undertowEmbeddedServletContainerFactory32.setAccessLogEnabled(true);
        java.lang.Integer int49 = undertowEmbeddedServletContainerFactory32.buffersPerRegion;
        org.springframework.boot.context.embedded.JspServlet jspServlet50 = null;
        undertowEmbeddedServletContainerFactory32.setJspServlet(jspServlet50);
        undertowEmbeddedServletContainerFactory32.setPort((int) (short) 100);
        undertowEmbeddedServletContainerFactory32.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder57 = undertowEmbeddedServletContainerFactory32.createBuilder((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory2.configureSsl(ssl30, (int) 'a', builder57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList19);
        org.junit.Assert.assertNotNull(jspServlet20);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList21);
        org.junit.Assert.assertNull(ssl23);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList26);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1800 + "'", int33 == 1800);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1800 + "'", int40 == 1800);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList43);
        org.junit.Assert.assertNotNull(mimeMappings45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1800 + "'", int46 == 1800);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(builder57);
    }

    @Test
    public void test14284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14284");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file7);
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray11);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int14 = undertowEmbeddedServletContainerFactory13.getSessionTimeout();
        boolean boolean15 = undertowEmbeddedServletContainerFactory13.isPersistSession();
        java.io.File file16 = undertowEmbeddedServletContainerFactory13.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        java.lang.Integer int19 = undertowEmbeddedServletContainerFactory13.buffersPerRegion;
        io.undertow.Undertow.Builder builder21 = undertowEmbeddedServletContainerFactory13.createBuilder(10);
        undertowEmbeddedServletContainerFactory13.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str24 = undertowEmbeddedServletContainerFactory13.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int26 = undertowEmbeddedServletContainerFactory25.getSessionTimeout();
        boolean boolean27 = undertowEmbeddedServletContainerFactory25.isPersistSession();
        undertowEmbeddedServletContainerFactory25.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder31 = undertowEmbeddedServletContainerFactory25.createBuilder((-1));
        undertowEmbeddedServletContainerFactory25.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int35 = undertowEmbeddedServletContainerFactory34.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray36 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory34.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        undertowEmbeddedServletContainerFactory25.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        undertowEmbeddedServletContainerFactory13.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        java.io.File file41 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file41);
        org.springframework.core.io.ResourceLoader resourceLoader43 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader43;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1800 + "'", int14 == 1800);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1800 + "'", int26 == 1800);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 8080 + "'", int35 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray36);
    }

    @Test
    public void test14285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14285");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.lang.ClassLoader classLoader4 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "";
        org.springframework.core.io.ResourceLoader resourceLoader7 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader7);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = true;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(classLoader4);
    }

    @Test
    public void test14286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14286");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file5);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("0.0.0.0");
        java.lang.ClassLoader classLoader10 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        org.springframework.boot.context.embedded.Compression compression11 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression11);
        org.springframework.boot.context.embedded.Compression compression13 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression13);
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        java.net.InetAddress inetAddress19 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress19);
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 35);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(classLoader10);
    }

    @Test
    public void test14287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14287");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) true);
        java.lang.ClassLoader classLoader8 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        boolean boolean9 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "";
        java.net.InetAddress inetAddress12 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress12);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test14288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14288");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        undertowEmbeddedServletContainerFactory0.bufferSize = 10;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings10);
    }

    @Test
    public void test14289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14289");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.net.InetAddress inetAddress3 = undertowEmbeddedServletContainerFactory0.getAddress();
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl4);
        boolean boolean6 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 10);
        boolean boolean9 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inetAddress3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test14290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14290");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        undertowEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader5);
        undertowEmbeddedServletContainerFactory2.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        undertowEmbeddedServletContainerFactory2.setAccessLogPattern("0.0.0.0");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection12 = undertowEmbeddedServletContainerFactory2.getDeploymentInfoCustomizers();
        io.undertow.server.handlers.resource.ResourceManager resourceManager13 = undertowEmbeddedServletContainerFactory2.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(true);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection16 = undertowEmbeddedServletContainerFactory2.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory2.setContextPath("");
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection12);
        org.junit.Assert.assertNotNull(resourceManager13);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection16);
    }

    @Test
    public void test14291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14291");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file6);
        java.io.File file8 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test14292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14292");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file5);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        boolean boolean8 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList9 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.lang.Integer int11 = undertowEmbeddedServletContainerFactory0.ioThreads;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 1800);
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = true;
        java.lang.String str18 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test14293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14293");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList4 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.ioThreads = (-1);
        java.lang.String str7 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList11 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList11, undertowBuilderCustomizerArray10);
        undertowEmbeddedServletContainerFactory9.builderCustomizers = undertowBuilderCustomizerList11;
        java.io.File file14 = null;
        undertowEmbeddedServletContainerFactory9.setSessionStoreDir(file14);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection16 = undertowEmbeddedServletContainerFactory9.getDeploymentInfoCustomizers();
        boolean boolean17 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList18 = undertowEmbeddedServletContainerFactory9.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int20 = undertowEmbeddedServletContainerFactory19.getSessionTimeout();
        boolean boolean21 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        java.io.File file22 = undertowEmbeddedServletContainerFactory19.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList23 = undertowEmbeddedServletContainerFactory19.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.Compression compression24 = null;
        undertowEmbeddedServletContainerFactory19.setCompression(compression24);
        org.springframework.boot.context.embedded.Compression compression26 = null;
        undertowEmbeddedServletContainerFactory19.setCompression(compression26);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getPort();
        java.lang.Integer int30 = undertowEmbeddedServletContainerFactory28.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader31 = null;
        undertowEmbeddedServletContainerFactory28.setResourceLoader(resourceLoader31);
        java.lang.Integer int33 = undertowEmbeddedServletContainerFactory28.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int35 = undertowEmbeddedServletContainerFactory34.getSessionTimeout();
        boolean boolean36 = undertowEmbeddedServletContainerFactory34.isPersistSession();
        java.io.File file37 = undertowEmbeddedServletContainerFactory34.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = undertowEmbeddedServletContainerFactory34.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = undertowEmbeddedServletContainerFactory34.getMimeMappings();
        java.lang.Integer int40 = undertowEmbeddedServletContainerFactory34.buffersPerRegion;
        io.undertow.Undertow.Builder builder42 = undertowEmbeddedServletContainerFactory34.createBuilder(10);
        io.undertow.servlet.api.DeploymentManager deploymentManager43 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer45 = undertowEmbeddedServletContainerFactory28.getUndertowEmbeddedServletContainer(builder42, deploymentManager43, 1);
        undertowEmbeddedServletContainerFactory28.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory28.buffersPerRegion = (-1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int51 = undertowEmbeddedServletContainerFactory50.getSessionTimeout();
        boolean boolean52 = undertowEmbeddedServletContainerFactory50.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList53 = undertowEmbeddedServletContainerFactory50.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet54 = undertowEmbeddedServletContainerFactory50.getJspServlet();
        undertowEmbeddedServletContainerFactory50.directBuffers = true;
        java.lang.Integer int57 = undertowEmbeddedServletContainerFactory50.bufferSize;
        java.io.File file58 = null;
        undertowEmbeddedServletContainerFactory50.setDocumentRoot(file58);
        boolean boolean60 = undertowEmbeddedServletContainerFactory50.isPersistSession();
        undertowEmbeddedServletContainerFactory50.setWorkerThreads((java.lang.Integer) 8080);
        java.lang.String str63 = undertowEmbeddedServletContainerFactory50.getListenAddress();
        undertowEmbeddedServletContainerFactory50.setDisplayName("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int67 = undertowEmbeddedServletContainerFactory66.getSessionTimeout();
        boolean boolean68 = undertowEmbeddedServletContainerFactory66.isPersistSession();
        java.io.File file69 = undertowEmbeddedServletContainerFactory66.accessLogDirectory;
        java.lang.String str70 = undertowEmbeddedServletContainerFactory66.getListenAddress();
        undertowEmbeddedServletContainerFactory66.setIoThreads((java.lang.Integer) 1);
        java.lang.String str73 = undertowEmbeddedServletContainerFactory66.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int75 = undertowEmbeddedServletContainerFactory74.getSessionTimeout();
        boolean boolean76 = undertowEmbeddedServletContainerFactory74.isPersistSession();
        undertowEmbeddedServletContainerFactory74.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory74.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory74.setDisplayName("hi!");
        boolean boolean83 = undertowEmbeddedServletContainerFactory74.isRegisterDefaultServlet();
        java.io.File file84 = undertowEmbeddedServletContainerFactory74.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray85 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory74.addBuilderCustomizers(undertowBuilderCustomizerArray85);
        undertowEmbeddedServletContainerFactory66.addBuilderCustomizers(undertowBuilderCustomizerArray85);
        undertowEmbeddedServletContainerFactory50.addBuilderCustomizers(undertowBuilderCustomizerArray85);
        undertowEmbeddedServletContainerFactory28.addBuilderCustomizers(undertowBuilderCustomizerArray85);
        undertowEmbeddedServletContainerFactory19.addBuilderCustomizers(undertowBuilderCustomizerArray85);
        undertowEmbeddedServletContainerFactory9.addBuilderCustomizers(undertowBuilderCustomizerArray85);
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray85);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 35);
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList23);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 8080 + "'", int29 == 8080);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1800 + "'", int35 == 1800);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer45);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1800 + "'", int51 == 1800);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList53);
        org.junit.Assert.assertNotNull(jspServlet54);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "0.0.0.0" + "'", str63, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1800 + "'", int67 == 1800);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "0.0.0.0" + "'", str70, "0.0.0.0");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1800 + "'", int75 == 1800);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray85);
    }

    @Test
    public void test14294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14294");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory0.getAddress();
        int int19 = undertowEmbeddedServletContainerFactory0.getPort();
        java.io.File file20 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.Compression compression21 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression21);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.setDisplayName("0.0.0.0");
        org.springframework.boot.context.embedded.JspServlet jspServlet27 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory30.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int34 = undertowEmbeddedServletContainerFactory33.getSessionTimeout();
        boolean boolean35 = undertowEmbeddedServletContainerFactory33.isPersistSession();
        undertowEmbeddedServletContainerFactory33.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory33.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray40 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory33.addErrorPages(errorPageArray40);
        undertowEmbeddedServletContainerFactory30.addErrorPages(errorPageArray40);
        org.springframework.boot.context.embedded.Ssl ssl43 = null;
        undertowEmbeddedServletContainerFactory30.setSsl(ssl43);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer47 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap46);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray48 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer47 };
        initializer45.initializers = servletContextInitializerArray48;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer52 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap51);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray53 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer52 };
        initializer50.initializers = servletContextInitializerArray53;
        initializer45.initializers = servletContextInitializerArray53;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int57 = undertowEmbeddedServletContainerFactory56.getSessionTimeout();
        boolean boolean58 = undertowEmbeddedServletContainerFactory56.isPersistSession();
        java.io.File file59 = undertowEmbeddedServletContainerFactory56.accessLogDirectory;
        undertowEmbeddedServletContainerFactory56.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory56.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int65 = undertowEmbeddedServletContainerFactory64.getSessionTimeout();
        boolean boolean66 = undertowEmbeddedServletContainerFactory64.isPersistSession();
        java.io.File file67 = undertowEmbeddedServletContainerFactory64.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings68 = undertowEmbeddedServletContainerFactory64.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings69 = undertowEmbeddedServletContainerFactory64.getMimeMappings();
        java.io.File file70 = undertowEmbeddedServletContainerFactory64.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int72 = undertowEmbeddedServletContainerFactory71.getPort();
        java.lang.Integer int73 = undertowEmbeddedServletContainerFactory71.bufferSize;
        java.io.File file74 = null;
        undertowEmbeddedServletContainerFactory71.setSessionStoreDir(file74);
        java.util.Map<java.lang.String, java.lang.String> strMap76 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer77 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap76);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray78 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer77 };
        undertowEmbeddedServletContainerFactory71.addInitializers(servletContextInitializerArray78);
        undertowEmbeddedServletContainerFactory64.addInitializers(servletContextInitializerArray78);
        undertowEmbeddedServletContainerFactory56.addInitializers(servletContextInitializerArray78);
        initializer45.initializers = servletContextInitializerArray78;
        undertowEmbeddedServletContainerFactory30.addInitializers(servletContextInitializerArray78);
        org.springframework.boot.context.embedded.Ssl ssl84 = null;
        undertowEmbeddedServletContainerFactory30.setSsl(ssl84);
        undertowEmbeddedServletContainerFactory30.setUseForwardHeaders(true);
        java.lang.Integer int88 = undertowEmbeddedServletContainerFactory30.buffersPerRegion;
        java.lang.Integer int89 = undertowEmbeddedServletContainerFactory30.ioThreads;
        org.springframework.boot.context.embedded.Compression compression90 = undertowEmbeddedServletContainerFactory30.getCompression();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection91 = undertowEmbeddedServletContainerFactory30.getDeploymentInfoCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList92 = undertowEmbeddedServletContainerFactory30.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList92;
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8080 + "'", int19 == 8080);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(jspServlet27);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1800 + "'", int34 == 1800);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(errorPageArray40);
        org.junit.Assert.assertNotNull(servletContextInitializerArray48);
        org.junit.Assert.assertNotNull(servletContextInitializerArray53);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1800 + "'", int57 == 1800);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1800 + "'", int65 == 1800);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(mimeMappings68);
        org.junit.Assert.assertNotNull(mimeMappings69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 8080 + "'", int72 == 8080);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNotNull(servletContextInitializerArray78);
        org.junit.Assert.assertNull(int88);
        org.junit.Assert.assertNull(int89);
        org.junit.Assert.assertNull(compression90);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection91);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList92);
    }

    @Test
    public void test14295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14295");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        boolean boolean2 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.jarPath = "hi!";
        boolean boolean5 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean6 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str7 = jarResourceManager0.jarPath;
        java.lang.String str8 = jarResourceManager0.jarPath;
        boolean boolean9 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.close();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test14296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14296");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.Compression compression4 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression4);
        org.springframework.boot.context.embedded.JspServlet jspServlet6 = null;
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet6);
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList12, undertowDeploymentInfoCustomizerArray11);
        undertowEmbeddedServletContainerFactory9.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList12;
        undertowEmbeddedServletContainerFactory9.setPersistSession(true);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = undertowEmbeddedServletContainerFactory9.getErrorPages();
        java.lang.String str18 = undertowEmbeddedServletContainerFactory9.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray20 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList21 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList21, undertowBuilderCustomizerArray20);
        undertowEmbeddedServletContainerFactory19.builderCustomizers = undertowBuilderCustomizerList21;
        undertowEmbeddedServletContainerFactory19.workerThreads = 1;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection26 = undertowEmbeddedServletContainerFactory19.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory19.bufferSize = 10;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet29 = undertowEmbeddedServletContainerFactory19.getErrorPages();
        undertowEmbeddedServletContainerFactory9.setErrorPages(errorPageSet29);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory32.setWorkerThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder36 = undertowEmbeddedServletContainerFactory32.createBuilder((int) (byte) -1);
        io.undertow.server.handlers.resource.ResourceManager resourceManager37 = undertowEmbeddedServletContainerFactory32.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int39 = undertowEmbeddedServletContainerFactory38.getSessionTimeout();
        boolean boolean40 = undertowEmbeddedServletContainerFactory38.isPersistSession();
        java.io.File file41 = undertowEmbeddedServletContainerFactory38.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = undertowEmbeddedServletContainerFactory38.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = undertowEmbeddedServletContainerFactory38.getMimeMappings();
        java.lang.Integer int44 = undertowEmbeddedServletContainerFactory38.buffersPerRegion;
        undertowEmbeddedServletContainerFactory38.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int48 = undertowEmbeddedServletContainerFactory47.getSessionTimeout();
        boolean boolean49 = undertowEmbeddedServletContainerFactory47.isPersistSession();
        undertowEmbeddedServletContainerFactory47.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder53 = undertowEmbeddedServletContainerFactory47.createBuilder((-1));
        undertowEmbeddedServletContainerFactory47.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int57 = undertowEmbeddedServletContainerFactory56.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray58 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory56.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray58);
        undertowEmbeddedServletContainerFactory47.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray58);
        undertowEmbeddedServletContainerFactory38.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray58);
        undertowEmbeddedServletContainerFactory32.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray58);
        undertowEmbeddedServletContainerFactory9.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray58);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray58);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.createAccessLogDirectoryIfNecessary();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Access log directory is not set");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(errorPageSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "0.0.0.0" + "'", str18, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection26);
        org.junit.Assert.assertNotNull(errorPageSet29);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(resourceManager37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1800 + "'", int39 == 1800);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1800 + "'", int48 == 1800);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 8080 + "'", int57 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray58);
    }

    @Test
    public void test14297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14297");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = true;
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl9);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        java.lang.String str15 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        java.lang.Integer int16 = undertowEmbeddedServletContainerFactory0.bufferSize;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "0.0.0.0" + "'", str15, "0.0.0.0");
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test14298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14298");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader5);
        boolean boolean7 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.JspServlet jspServlet8 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 1800);
        java.io.File file11 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(jspServlet8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList12);
    }

    @Test
    public void test14299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14299");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file8);
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList11 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        boolean boolean17 = undertowEmbeddedServletContainerFactory16.isRegisterDefaultServlet();
        int int18 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int20 = undertowEmbeddedServletContainerFactory19.getSessionTimeout();
        boolean boolean21 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        undertowEmbeddedServletContainerFactory19.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory19.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory19.setDisplayName("hi!");
        boolean boolean28 = undertowEmbeddedServletContainerFactory19.isRegisterDefaultServlet();
        boolean boolean29 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList30 = undertowEmbeddedServletContainerFactory19.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int32 = undertowEmbeddedServletContainerFactory31.getPort();
        java.lang.Integer int33 = undertowEmbeddedServletContainerFactory31.bufferSize;
        boolean boolean34 = undertowEmbeddedServletContainerFactory31.accessLogEnabled;
        java.lang.String str35 = undertowEmbeddedServletContainerFactory31.accessLogPattern;
        org.springframework.core.io.ResourceLoader resourceLoader36 = null;
        undertowEmbeddedServletContainerFactory31.setResourceLoader(resourceLoader36);
        boolean boolean38 = undertowEmbeddedServletContainerFactory31.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int40 = undertowEmbeddedServletContainerFactory39.getSessionTimeout();
        boolean boolean41 = undertowEmbeddedServletContainerFactory39.isPersistSession();
        undertowEmbeddedServletContainerFactory39.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl44 = null;
        undertowEmbeddedServletContainerFactory39.setSsl(ssl44);
        org.springframework.boot.context.embedded.JspServlet jspServlet46 = undertowEmbeddedServletContainerFactory39.getJspServlet();
        undertowEmbeddedServletContainerFactory31.setJspServlet(jspServlet46);
        undertowEmbeddedServletContainerFactory19.setJspServlet(jspServlet46);
        undertowEmbeddedServletContainerFactory16.setJspServlet(jspServlet46);
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet46);
        java.lang.String str51 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1800 + "'", int18 == 1800);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 8080 + "'", int32 == 8080);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1800 + "'", int40 == 1800);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(jspServlet46);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test14300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14300");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray7 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray7);
        undertowEmbeddedServletContainerFactory0.setPort(100);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = true;
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 32);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory16.setWorkerThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder20 = undertowEmbeddedServletContainerFactory16.createBuilder((int) (byte) -1);
        undertowEmbeddedServletContainerFactory16.ioThreads = 10;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList23 = undertowEmbeddedServletContainerFactory16.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int25 = undertowEmbeddedServletContainerFactory24.getSessionTimeout();
        boolean boolean26 = undertowEmbeddedServletContainerFactory24.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList27 = undertowEmbeddedServletContainerFactory24.builderCustomizers;
        undertowEmbeddedServletContainerFactory16.builderCustomizers = undertowBuilderCustomizerList27;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int30 = undertowEmbeddedServletContainerFactory29.getSessionTimeout();
        boolean boolean31 = undertowEmbeddedServletContainerFactory29.isPersistSession();
        undertowEmbeddedServletContainerFactory29.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory29.workerThreads = 0;
        undertowEmbeddedServletContainerFactory29.setPersistSession(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings41 = undertowEmbeddedServletContainerFactory40.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader42 = undertowEmbeddedServletContainerFactory40.resourceLoader;
        undertowEmbeddedServletContainerFactory40.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int46 = undertowEmbeddedServletContainerFactory45.getSessionTimeout();
        boolean boolean47 = undertowEmbeddedServletContainerFactory45.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList48 = undertowEmbeddedServletContainerFactory45.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet49 = undertowEmbeddedServletContainerFactory45.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int51 = undertowEmbeddedServletContainerFactory50.getSessionTimeout();
        boolean boolean52 = undertowEmbeddedServletContainerFactory50.isPersistSession();
        undertowEmbeddedServletContainerFactory50.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder56 = undertowEmbeddedServletContainerFactory50.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager57 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer59 = undertowEmbeddedServletContainerFactory45.getUndertowEmbeddedServletContainer(builder56, deploymentManager57, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager60 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer62 = undertowEmbeddedServletContainerFactory40.getUndertowEmbeddedServletContainer(builder56, deploymentManager60, (int) ' ');
        boolean boolean63 = undertowEmbeddedServletContainerFactory40.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory40.setPort((-1));
        java.lang.Integer int66 = undertowEmbeddedServletContainerFactory40.bufferSize;
        io.undertow.Undertow.Builder builder68 = undertowEmbeddedServletContainerFactory40.createBuilder(0);
        java.io.File file69 = undertowEmbeddedServletContainerFactory40.getSessionStoreDir();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection70 = undertowEmbeddedServletContainerFactory40.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int72 = undertowEmbeddedServletContainerFactory71.getSessionTimeout();
        boolean boolean73 = undertowEmbeddedServletContainerFactory71.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList74 = undertowEmbeddedServletContainerFactory71.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet75 = undertowEmbeddedServletContainerFactory71.getJspServlet();
        boolean boolean76 = undertowEmbeddedServletContainerFactory71.useForwardHeaders;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory79 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory79.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory82 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int83 = undertowEmbeddedServletContainerFactory82.getSessionTimeout();
        boolean boolean84 = undertowEmbeddedServletContainerFactory82.isPersistSession();
        undertowEmbeddedServletContainerFactory82.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory82.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray89 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory82.addErrorPages(errorPageArray89);
        undertowEmbeddedServletContainerFactory79.addErrorPages(errorPageArray89);
        undertowEmbeddedServletContainerFactory71.addErrorPages(errorPageArray89);
        undertowEmbeddedServletContainerFactory40.addErrorPages(errorPageArray89);
        undertowEmbeddedServletContainerFactory29.addErrorPages(errorPageArray89);
        undertowEmbeddedServletContainerFactory16.addErrorPages(errorPageArray89);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray89);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(errorPageArray7);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1800 + "'", int25 == 1800);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1800 + "'", int30 == 1800);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(mimeMappings41);
        org.junit.Assert.assertNull(resourceLoader42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1800 + "'", int46 == 1800);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList48);
        org.junit.Assert.assertNotNull(jspServlet49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1800 + "'", int51 == 1800);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer59);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1800 + "'", int72 == 1800);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList74);
        org.junit.Assert.assertNotNull(jspServlet75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1800 + "'", int83 == 1800);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(errorPageArray89);
    }

    @Test
    public void test14301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14301");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = true;
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl9);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet13 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(errorPageSet13);
    }

    @Test
    public void test14302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14302");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file7);
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file9;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getPort();
        java.lang.Integer int13 = undertowEmbeddedServletContainerFactory11.bufferSize;
        java.io.File file14 = null;
        undertowEmbeddedServletContainerFactory11.setSessionStoreDir(file14);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList19 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet20 = undertowEmbeddedServletContainerFactory16.getJspServlet();
        boolean boolean21 = undertowEmbeddedServletContainerFactory16.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = undertowEmbeddedServletContainerFactory16.getErrorPages();
        undertowEmbeddedServletContainerFactory11.setErrorPages(errorPageSet22);
        java.lang.Boolean boolean24 = undertowEmbeddedServletContainerFactory11.directBuffers;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = undertowEmbeddedServletContainerFactory11.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = undertowEmbeddedServletContainerFactory28.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader30 = undertowEmbeddedServletContainerFactory28.resourceLoader;
        undertowEmbeddedServletContainerFactory28.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int34 = undertowEmbeddedServletContainerFactory33.getSessionTimeout();
        boolean boolean35 = undertowEmbeddedServletContainerFactory33.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList36 = undertowEmbeddedServletContainerFactory33.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet37 = undertowEmbeddedServletContainerFactory33.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int39 = undertowEmbeddedServletContainerFactory38.getSessionTimeout();
        boolean boolean40 = undertowEmbeddedServletContainerFactory38.isPersistSession();
        undertowEmbeddedServletContainerFactory38.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder44 = undertowEmbeddedServletContainerFactory38.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager45 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer47 = undertowEmbeddedServletContainerFactory33.getUndertowEmbeddedServletContainer(builder44, deploymentManager45, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager48 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer50 = undertowEmbeddedServletContainerFactory28.getUndertowEmbeddedServletContainer(builder44, deploymentManager48, (int) ' ');
        boolean boolean51 = undertowEmbeddedServletContainerFactory28.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory28.setPort((-1));
        java.lang.Integer int54 = undertowEmbeddedServletContainerFactory28.bufferSize;
        io.undertow.Undertow.Builder builder56 = undertowEmbeddedServletContainerFactory28.createBuilder(0);
        java.io.File file57 = undertowEmbeddedServletContainerFactory28.getSessionStoreDir();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList58 = undertowEmbeddedServletContainerFactory28.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int60 = undertowEmbeddedServletContainerFactory59.getSessionTimeout();
        boolean boolean61 = undertowEmbeddedServletContainerFactory59.isPersistSession();
        undertowEmbeddedServletContainerFactory59.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory59.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray66 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory59.addErrorPages(errorPageArray66);
        undertowEmbeddedServletContainerFactory28.addErrorPages(errorPageArray66);
        undertowEmbeddedServletContainerFactory11.addErrorPages(errorPageArray66);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray66);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings71 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList72 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8080 + "'", int12 == 8080);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList19);
        org.junit.Assert.assertNotNull(jspServlet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(errorPageSet22);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNull(resourceLoader30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1800 + "'", int34 == 1800);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList36);
        org.junit.Assert.assertNotNull(jspServlet37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1800 + "'", int39 == 1800);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer47);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1800 + "'", int60 == 1800);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(errorPageArray66);
        org.junit.Assert.assertNotNull(mimeMappings71);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList72);
    }

    @Test
    public void test14303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14303");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file5;
        boolean boolean7 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        org.springframework.core.io.ResourceLoader resourceLoader8 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader8);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo10 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo10);
        undertowEmbeddedServletContainerFactory0.setPort((int) '#');
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/' and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test14304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14304");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList4 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList4, undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList4);
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.Compression compression9 = undertowEmbeddedServletContainerFactory0.getCompression();
        java.io.File file10 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(compression9);
        org.junit.Assert.assertNull(file10);
    }

    @Test
    public void test14305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14305");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo6 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo6);
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 100);
        java.lang.String str12 = undertowEmbeddedServletContainerFactory11.accessLogPattern;
        undertowEmbeddedServletContainerFactory11.setPort((int) (byte) 100);
        java.lang.ClassLoader classLoader15 = undertowEmbeddedServletContainerFactory11.getServletClassLoader();
        undertowEmbeddedServletContainerFactory11.bufferSize = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getSessionTimeout();
        boolean boolean20 = undertowEmbeddedServletContainerFactory18.isPersistSession();
        undertowEmbeddedServletContainerFactory18.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory18.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory18.setDisplayName("hi!");
        boolean boolean27 = undertowEmbeddedServletContainerFactory18.isRegisterDefaultServlet();
        java.io.File file28 = undertowEmbeddedServletContainerFactory18.getDocumentRoot();
        undertowEmbeddedServletContainerFactory18.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int32 = undertowEmbeddedServletContainerFactory31.getSessionTimeout();
        boolean boolean33 = undertowEmbeddedServletContainerFactory31.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList34 = undertowEmbeddedServletContainerFactory31.builderCustomizers;
        undertowEmbeddedServletContainerFactory18.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList34);
        undertowEmbeddedServletContainerFactory11.builderCustomizers = undertowBuilderCustomizerList34;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList34;
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 1800;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1800 + "'", int32 == 1800);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList34);
    }

    @Test
    public void test14306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14306");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPort(0);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        java.lang.String str7 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) true);
        int int10 = undertowEmbeddedServletContainerFactory0.getPort();
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int14 = undertowEmbeddedServletContainerFactory13.getSessionTimeout();
        boolean boolean15 = undertowEmbeddedServletContainerFactory13.isPersistSession();
        undertowEmbeddedServletContainerFactory13.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory13.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int21 = undertowEmbeddedServletContainerFactory20.getSessionTimeout();
        boolean boolean22 = undertowEmbeddedServletContainerFactory20.isPersistSession();
        java.io.File file23 = undertowEmbeddedServletContainerFactory20.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList24 = undertowEmbeddedServletContainerFactory20.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory13.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList24;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int27 = undertowEmbeddedServletContainerFactory26.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = undertowEmbeddedServletContainerFactory30.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader32 = undertowEmbeddedServletContainerFactory30.resourceLoader;
        undertowEmbeddedServletContainerFactory30.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int36 = undertowEmbeddedServletContainerFactory35.getSessionTimeout();
        boolean boolean37 = undertowEmbeddedServletContainerFactory35.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList38 = undertowEmbeddedServletContainerFactory35.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet39 = undertowEmbeddedServletContainerFactory35.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int41 = undertowEmbeddedServletContainerFactory40.getSessionTimeout();
        boolean boolean42 = undertowEmbeddedServletContainerFactory40.isPersistSession();
        undertowEmbeddedServletContainerFactory40.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder46 = undertowEmbeddedServletContainerFactory40.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager47 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer49 = undertowEmbeddedServletContainerFactory35.getUndertowEmbeddedServletContainer(builder46, deploymentManager47, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager50 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer52 = undertowEmbeddedServletContainerFactory30.getUndertowEmbeddedServletContainer(builder46, deploymentManager50, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager53 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer55 = undertowEmbeddedServletContainerFactory26.getUndertowEmbeddedServletContainer(builder46, deploymentManager53, (int) (short) -1);
        io.undertow.servlet.api.DeploymentManager deploymentManager56 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer58 = undertowEmbeddedServletContainerFactory13.getUndertowEmbeddedServletContainer(builder46, deploymentManager56, 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int60 = undertowEmbeddedServletContainerFactory59.getSessionTimeout();
        boolean boolean61 = undertowEmbeddedServletContainerFactory59.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList62 = undertowEmbeddedServletContainerFactory59.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet63 = undertowEmbeddedServletContainerFactory59.getJspServlet();
        undertowEmbeddedServletContainerFactory59.directBuffers = true;
        java.lang.Integer int66 = undertowEmbeddedServletContainerFactory59.bufferSize;
        java.io.File file67 = null;
        undertowEmbeddedServletContainerFactory59.setDocumentRoot(file67);
        boolean boolean69 = undertowEmbeddedServletContainerFactory59.isPersistSession();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo70 = null;
        undertowEmbeddedServletContainerFactory59.configureErrorPages(deploymentInfo70);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory73 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet74 = undertowEmbeddedServletContainerFactory73.getErrorPages();
        undertowEmbeddedServletContainerFactory59.setErrorPages(errorPageSet74);
        undertowEmbeddedServletContainerFactory13.setErrorPages(errorPageSet74);
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet74);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings78 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1800 + "'", int14 == 1800);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1800 + "'", int21 == 1800);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8080 + "'", int27 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNull(resourceLoader32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1800 + "'", int36 == 1800);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList38);
        org.junit.Assert.assertNotNull(jspServlet39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1800 + "'", int41 == 1800);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer49);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer52);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer55);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1800 + "'", int60 == 1800);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList62);
        org.junit.Assert.assertNotNull(jspServlet63);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(errorPageSet74);
        org.junit.Assert.assertNotNull(mimeMappings78);
    }

    @Test
    public void test14307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14307");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        boolean boolean2 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean3 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str4 = jarResourceManager0.jarPath;
        java.lang.String str5 = jarResourceManager0.jarPath;
        jarResourceManager0.close();
        java.lang.String str7 = jarResourceManager0.jarPath;
        jarResourceManager0.jarPath = "hi!";
        boolean boolean10 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.jarPath = "";
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test14308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14308");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getSessionTimeout();
        boolean boolean12 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = undertowEmbeddedServletContainerFactory10.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList13;
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file15;
        boolean boolean17 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        boolean boolean18 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = true;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int23 = undertowEmbeddedServletContainerFactory22.getSessionTimeout();
        boolean boolean24 = undertowEmbeddedServletContainerFactory22.isPersistSession();
        java.io.File file25 = undertowEmbeddedServletContainerFactory22.accessLogDirectory;
        java.io.File file26 = null;
        undertowEmbeddedServletContainerFactory22.setDocumentRoot(file26);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean30 = undertowEmbeddedServletContainerFactory29.isAccessLogEnabled();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = undertowEmbeddedServletContainerFactory29.getMimeMappings();
        java.io.File file32 = undertowEmbeddedServletContainerFactory29.getDocumentRoot();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList33 = undertowEmbeddedServletContainerFactory29.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory22.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList33;
        undertowEmbeddedServletContainerFactory22.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder38 = undertowEmbeddedServletContainerFactory22.createBuilder((int) '#');
        boolean boolean39 = undertowEmbeddedServletContainerFactory22.isAccessLogEnabled();
        java.lang.ClassLoader classLoader40 = undertowEmbeddedServletContainerFactory22.getServletClassLoader();
        undertowEmbeddedServletContainerFactory22.setDisplayName("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int44 = undertowEmbeddedServletContainerFactory43.getSessionTimeout();
        boolean boolean45 = undertowEmbeddedServletContainerFactory43.isPersistSession();
        java.io.File file46 = undertowEmbeddedServletContainerFactory43.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings47 = undertowEmbeddedServletContainerFactory43.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings48 = undertowEmbeddedServletContainerFactory43.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int50 = undertowEmbeddedServletContainerFactory49.getSessionTimeout();
        boolean boolean51 = undertowEmbeddedServletContainerFactory49.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList52 = undertowEmbeddedServletContainerFactory49.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet53 = undertowEmbeddedServletContainerFactory49.getJspServlet();
        undertowEmbeddedServletContainerFactory43.setJspServlet(jspServlet53);
        java.net.InetAddress inetAddress55 = undertowEmbeddedServletContainerFactory43.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int57 = undertowEmbeddedServletContainerFactory56.getSessionTimeout();
        boolean boolean58 = undertowEmbeddedServletContainerFactory56.isPersistSession();
        undertowEmbeddedServletContainerFactory56.setPersistSession(false);
        undertowEmbeddedServletContainerFactory56.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList63 = undertowEmbeddedServletContainerFactory56.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory56.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int67 = undertowEmbeddedServletContainerFactory66.getSessionTimeout();
        boolean boolean68 = undertowEmbeddedServletContainerFactory66.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList69 = undertowEmbeddedServletContainerFactory66.builderCustomizers;
        undertowEmbeddedServletContainerFactory56.builderCustomizers = undertowBuilderCustomizerList69;
        java.io.File file71 = null;
        undertowEmbeddedServletContainerFactory56.accessLogDirectory = file71;
        io.undertow.server.handlers.resource.ResourceManager resourceManager73 = undertowEmbeddedServletContainerFactory56.getDocumentRootResourceManager();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo74 = null;
        undertowEmbeddedServletContainerFactory56.configureErrorPages(deploymentInfo74);
        undertowEmbeddedServletContainerFactory56.accessLogPattern = "0.0.0.0";
        org.springframework.boot.context.embedded.JspServlet jspServlet78 = undertowEmbeddedServletContainerFactory56.getJspServlet();
        undertowEmbeddedServletContainerFactory43.setJspServlet(jspServlet78);
        undertowEmbeddedServletContainerFactory22.setJspServlet(jspServlet78);
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet78);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1800 + "'", int11 == 1800);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1800 + "'", int23 == 1800);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList33);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1800 + "'", int44 == 1800);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(mimeMappings47);
        org.junit.Assert.assertNotNull(mimeMappings48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1800 + "'", int50 == 1800);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList52);
        org.junit.Assert.assertNotNull(jspServlet53);
        org.junit.Assert.assertNull(inetAddress55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1800 + "'", int57 == 1800);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList63);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1800 + "'", int67 == 1800);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList69);
        org.junit.Assert.assertNotNull(resourceManager73);
        org.junit.Assert.assertNotNull(jspServlet78);
    }

    @Test
    public void test14309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14309");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        jarResourceManager0.jarPath = "hi!";
        java.lang.String str6 = jarResourceManager0.jarPath;
        jarResourceManager0.jarPath = "hi!";
        jarResourceManager0.jarPath = "0.0.0.0";
        jarResourceManager0.jarPath = "";
        java.lang.String str13 = jarResourceManager0.jarPath;
        java.lang.String str14 = jarResourceManager0.jarPath;
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test14310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14310");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        io.undertow.Undertow.Builder builder8 = undertowEmbeddedServletContainerFactory0.createBuilder(10);
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(0);
        java.lang.String str11 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        java.lang.String str12 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        java.io.File file13 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file13);
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test14311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14311");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader3);
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.io.File file9 = undertowEmbeddedServletContainerFactory6.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory6.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory6.getMimeMappings();
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory6.buffersPerRegion;
        io.undertow.Undertow.Builder builder14 = undertowEmbeddedServletContainerFactory6.createBuilder(10);
        io.undertow.servlet.api.DeploymentManager deploymentManager15 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer17 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder14, deploymentManager15, 1);
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = (-1);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.boot.context.embedded.JspServlet jspServlet23 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        org.springframework.boot.context.embedded.Ssl ssl24 = undertowEmbeddedServletContainerFactory0.getSsl();
        undertowEmbeddedServletContainerFactory0.setDisplayName("");
        int int27 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        undertowEmbeddedServletContainerFactory28.setPersistSession(false);
        undertowEmbeddedServletContainerFactory28.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int36 = undertowEmbeddedServletContainerFactory35.getSessionTimeout();
        boolean boolean37 = undertowEmbeddedServletContainerFactory35.isPersistSession();
        java.io.File file38 = undertowEmbeddedServletContainerFactory35.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList39 = undertowEmbeddedServletContainerFactory35.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory28.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList39;
        java.lang.String str41 = undertowEmbeddedServletContainerFactory28.getContextPath();
        undertowEmbeddedServletContainerFactory28.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.JspServlet jspServlet44 = undertowEmbeddedServletContainerFactory28.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet44);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer17);
        org.junit.Assert.assertNotNull(errorPageSet22);
        org.junit.Assert.assertNotNull(jspServlet23);
        org.junit.Assert.assertNull(ssl24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1800 + "'", int27 == 1800);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1800 + "'", int36 == 1800);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(jspServlet44);
    }

    @Test
    public void test14312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14312");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        org.springframework.boot.context.embedded.Compression compression11 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression11);
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(true);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection15 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection15);
    }

    @Test
    public void test14313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14313");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        boolean boolean7 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(false);
        java.lang.Boolean boolean10 = undertowEmbeddedServletContainerFactory0.directBuffers;
        java.lang.Integer int11 = undertowEmbeddedServletContainerFactory0.ioThreads;
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("0.0.0.0");
        org.springframework.boot.context.embedded.Ssl ssl14 = undertowEmbeddedServletContainerFactory0.getSsl();
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) true);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(ssl14);
        org.junit.Assert.assertNotNull(errorPageSet17);
    }

    @Test
    public void test14314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14314");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        int int3 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet4 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        java.io.File file5 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean8 = undertowEmbeddedServletContainerFactory7.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory7.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory7.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory13.accessLogEnabled = false;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList17, undertowBuilderCustomizerArray16);
        undertowEmbeddedServletContainerFactory13.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList17);
        undertowEmbeddedServletContainerFactory7.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList17);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList17;
        java.lang.Boolean boolean22 = undertowEmbeddedServletContainerFactory0.directBuffers;
        java.lang.Integer int23 = undertowEmbeddedServletContainerFactory0.workerThreads;
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList26 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        int int27 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1800 + "'", int3 == 1800);
        org.junit.Assert.assertNotNull(errorPageSet4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1800 + "'", int27 == 1800);
    }

    @Test
    public void test14315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14315");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        undertowEmbeddedServletContainerFactory0.workerThreads = 1;
        org.xnio.XnioWorker xnioWorker7 = undertowEmbeddedServletContainerFactory0.createWorker();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getPort();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory8.bufferSize;
        boolean boolean11 = undertowEmbeddedServletContainerFactory8.accessLogEnabled;
        java.lang.String str12 = undertowEmbeddedServletContainerFactory8.accessLogPattern;
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        undertowEmbeddedServletContainerFactory8.setResourceLoader(resourceLoader13);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory8.accessLogDirectory = file15;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int18 = undertowEmbeddedServletContainerFactory17.getSessionTimeout();
        boolean boolean19 = undertowEmbeddedServletContainerFactory17.isPersistSession();
        undertowEmbeddedServletContainerFactory17.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory17.workerThreads = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int25 = undertowEmbeddedServletContainerFactory24.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = undertowEmbeddedServletContainerFactory28.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader30 = undertowEmbeddedServletContainerFactory28.resourceLoader;
        undertowEmbeddedServletContainerFactory28.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int34 = undertowEmbeddedServletContainerFactory33.getSessionTimeout();
        boolean boolean35 = undertowEmbeddedServletContainerFactory33.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList36 = undertowEmbeddedServletContainerFactory33.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet37 = undertowEmbeddedServletContainerFactory33.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int39 = undertowEmbeddedServletContainerFactory38.getSessionTimeout();
        boolean boolean40 = undertowEmbeddedServletContainerFactory38.isPersistSession();
        undertowEmbeddedServletContainerFactory38.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder44 = undertowEmbeddedServletContainerFactory38.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager45 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer47 = undertowEmbeddedServletContainerFactory33.getUndertowEmbeddedServletContainer(builder44, deploymentManager45, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager48 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer50 = undertowEmbeddedServletContainerFactory28.getUndertowEmbeddedServletContainer(builder44, deploymentManager48, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager51 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer53 = undertowEmbeddedServletContainerFactory24.getUndertowEmbeddedServletContainer(builder44, deploymentManager51, (int) (short) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList54 = undertowEmbeddedServletContainerFactory24.builderCustomizers;
        undertowEmbeddedServletContainerFactory17.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList54);
        undertowEmbeddedServletContainerFactory8.builderCustomizers = undertowBuilderCustomizerList54;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList54;
        org.springframework.boot.context.embedded.Ssl ssl58 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl58);
        java.io.File file60 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file60;
        int int62 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.Ssl ssl63 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl63);
        boolean boolean65 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection66 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(xnioWorker7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8080 + "'", int9 == 8080);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1800 + "'", int18 == 1800);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 8080 + "'", int25 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNull(resourceLoader30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1800 + "'", int34 == 1800);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList36);
        org.junit.Assert.assertNotNull(jspServlet37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1800 + "'", int39 == 1800);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer47);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer50);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer53);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList54);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1800 + "'", int62 == 1800);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection66);
    }

    @Test
    public void test14316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14316");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        boolean boolean9 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.io.File file10 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int14 = undertowEmbeddedServletContainerFactory13.getPort();
        java.lang.Integer int15 = undertowEmbeddedServletContainerFactory13.bufferSize;
        java.io.File file16 = null;
        undertowEmbeddedServletContainerFactory13.setSessionStoreDir(file16);
        java.io.File file18 = null;
        undertowEmbeddedServletContainerFactory13.accessLogDirectory = file18;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getSessionTimeout();
        boolean boolean23 = undertowEmbeddedServletContainerFactory21.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList24 = undertowEmbeddedServletContainerFactory21.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet25 = undertowEmbeddedServletContainerFactory21.getJspServlet();
        undertowEmbeddedServletContainerFactory13.setJspServlet(jspServlet25);
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet25);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList31 = undertowEmbeddedServletContainerFactory28.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int33 = undertowEmbeddedServletContainerFactory32.getSessionTimeout();
        boolean boolean34 = undertowEmbeddedServletContainerFactory32.isPersistSession();
        undertowEmbeddedServletContainerFactory32.setPersistSession(false);
        undertowEmbeddedServletContainerFactory32.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList39 = undertowEmbeddedServletContainerFactory32.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory32.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int43 = undertowEmbeddedServletContainerFactory42.getSessionTimeout();
        boolean boolean44 = undertowEmbeddedServletContainerFactory42.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList45 = undertowEmbeddedServletContainerFactory42.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet46 = undertowEmbeddedServletContainerFactory42.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int48 = undertowEmbeddedServletContainerFactory47.getSessionTimeout();
        boolean boolean49 = undertowEmbeddedServletContainerFactory47.isPersistSession();
        undertowEmbeddedServletContainerFactory47.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder53 = undertowEmbeddedServletContainerFactory47.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager54 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer56 = undertowEmbeddedServletContainerFactory42.getUndertowEmbeddedServletContainer(builder53, deploymentManager54, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager57 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer59 = undertowEmbeddedServletContainerFactory32.getUndertowEmbeddedServletContainer(builder53, deploymentManager57, (int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray60 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList61 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList61, undertowDeploymentInfoCustomizerArray60);
        undertowEmbeddedServletContainerFactory32.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList61;
        undertowEmbeddedServletContainerFactory28.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList61;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList61;
        io.undertow.server.handlers.resource.ResourceManager resourceManager66 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        undertowEmbeddedServletContainerFactory0.bufferSize = 10;
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("0.0.0.0");
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1);
        boolean boolean75 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        java.net.InetAddress inetAddress76 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress76);
        java.lang.String str78 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8080 + "'", int14 == 8080);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1800 + "'", int22 == 1800);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList24);
        org.junit.Assert.assertNotNull(jspServlet25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1800 + "'", int33 == 1800);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1800 + "'", int43 == 1800);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList45);
        org.junit.Assert.assertNotNull(jspServlet46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1800 + "'", int48 == 1800);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer56);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer59);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(resourceManager66);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "0.0.0.0" + "'", str78, "0.0.0.0");
    }

    @Test
    public void test14317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14317");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.xnio.XnioWorker xnioWorker2 = undertowEmbeddedServletContainerFactory1.createWorker();
        undertowEmbeddedServletContainerFactory1.accessLogEnabled = true;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo5 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo5);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList12 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        java.lang.String str13 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        boolean boolean14 = undertowEmbeddedServletContainerFactory1.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int16 = undertowEmbeddedServletContainerFactory15.getSessionTimeout();
        boolean boolean17 = undertowEmbeddedServletContainerFactory15.isPersistSession();
        java.io.File file18 = undertowEmbeddedServletContainerFactory15.accessLogDirectory;
        undertowEmbeddedServletContainerFactory15.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory15.setDirectBuffers((java.lang.Boolean) true);
        java.lang.ClassLoader classLoader23 = undertowEmbeddedServletContainerFactory15.getServletClassLoader();
        boolean boolean24 = undertowEmbeddedServletContainerFactory15.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int26 = undertowEmbeddedServletContainerFactory25.getSessionTimeout();
        boolean boolean27 = undertowEmbeddedServletContainerFactory25.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList28 = undertowEmbeddedServletContainerFactory25.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet29 = undertowEmbeddedServletContainerFactory25.getJspServlet();
        boolean boolean30 = undertowEmbeddedServletContainerFactory25.isPersistSession();
        org.springframework.boot.context.embedded.Ssl ssl31 = undertowEmbeddedServletContainerFactory25.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        boolean boolean35 = undertowEmbeddedServletContainerFactory34.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int37 = undertowEmbeddedServletContainerFactory36.getSessionTimeout();
        boolean boolean38 = undertowEmbeddedServletContainerFactory36.isPersistSession();
        undertowEmbeddedServletContainerFactory36.setPersistSession(false);
        undertowEmbeddedServletContainerFactory36.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList43 = undertowEmbeddedServletContainerFactory36.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory34.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList43;
        undertowEmbeddedServletContainerFactory25.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList43;
        undertowEmbeddedServletContainerFactory15.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList43;
        java.io.File file47 = undertowEmbeddedServletContainerFactory15.accessLogDirectory;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet48 = undertowEmbeddedServletContainerFactory15.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet48);
        boolean boolean50 = undertowEmbeddedServletContainerFactory1.accessLogEnabled;
        org.junit.Assert.assertNotNull(xnioWorker2);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1800 + "'", int16 == 1800);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1800 + "'", int26 == 1800);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList28);
        org.junit.Assert.assertNotNull(jspServlet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(ssl31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1800 + "'", int37 == 1800);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList43);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(errorPageSet48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test14318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14318");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList11 = undertowEmbeddedServletContainerFactory8.builderCustomizers;
        java.lang.ClassLoader classLoader12 = undertowEmbeddedServletContainerFactory8.getServletClassLoader();
        java.io.File file13 = undertowEmbeddedServletContainerFactory8.getSessionStoreDir();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet14 = undertowEmbeddedServletContainerFactory8.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet14);
        java.io.File file16 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray19 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList20 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList20, undertowBuilderCustomizerArray19);
        undertowEmbeddedServletContainerFactory18.builderCustomizers = undertowBuilderCustomizerList20;
        java.io.File file23 = null;
        undertowEmbeddedServletContainerFactory18.setSessionStoreDir(file23);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection25 = undertowEmbeddedServletContainerFactory18.getDeploymentInfoCustomizers();
        java.io.File file26 = null;
        undertowEmbeddedServletContainerFactory18.setAccessLogDirectory(file26);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        undertowEmbeddedServletContainerFactory28.setPersistSession(false);
        undertowEmbeddedServletContainerFactory28.setUseForwardHeaders(true);
        io.undertow.server.handlers.resource.ResourceManager resourceManager35 = undertowEmbeddedServletContainerFactory28.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int37 = undertowEmbeddedServletContainerFactory36.getSessionTimeout();
        boolean boolean38 = undertowEmbeddedServletContainerFactory36.isPersistSession();
        java.io.File file39 = undertowEmbeddedServletContainerFactory36.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = undertowEmbeddedServletContainerFactory36.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings41 = undertowEmbeddedServletContainerFactory36.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int43 = undertowEmbeddedServletContainerFactory42.getSessionTimeout();
        boolean boolean44 = undertowEmbeddedServletContainerFactory42.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList45 = undertowEmbeddedServletContainerFactory42.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet46 = undertowEmbeddedServletContainerFactory42.getJspServlet();
        undertowEmbeddedServletContainerFactory36.setJspServlet(jspServlet46);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray49 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList50 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList50, undertowBuilderCustomizerArray49);
        undertowEmbeddedServletContainerFactory48.builderCustomizers = undertowBuilderCustomizerList50;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection53 = undertowEmbeddedServletContainerFactory48.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory36.setBuilderCustomizers(undertowBuilderCustomizerCollection53);
        undertowEmbeddedServletContainerFactory28.setBuilderCustomizers(undertowBuilderCustomizerCollection53);
        undertowEmbeddedServletContainerFactory18.setBuilderCustomizers(undertowBuilderCustomizerCollection53);
        java.lang.Integer int57 = undertowEmbeddedServletContainerFactory18.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int59 = undertowEmbeddedServletContainerFactory58.getSessionTimeout();
        boolean boolean60 = undertowEmbeddedServletContainerFactory58.isPersistSession();
        undertowEmbeddedServletContainerFactory58.setPersistSession(false);
        undertowEmbeddedServletContainerFactory58.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int66 = undertowEmbeddedServletContainerFactory65.getSessionTimeout();
        boolean boolean67 = undertowEmbeddedServletContainerFactory65.isPersistSession();
        java.io.File file68 = undertowEmbeddedServletContainerFactory65.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList69 = undertowEmbeddedServletContainerFactory65.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory58.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList69;
        undertowEmbeddedServletContainerFactory18.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList69;
        undertowEmbeddedServletContainerFactory18.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory75 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean76 = undertowEmbeddedServletContainerFactory75.isAccessLogEnabled();
        org.springframework.boot.context.embedded.Ssl ssl77 = undertowEmbeddedServletContainerFactory75.getSsl();
        java.lang.Integer int78 = undertowEmbeddedServletContainerFactory75.bufferSize;
        java.lang.ClassLoader classLoader79 = undertowEmbeddedServletContainerFactory75.getServletClassLoader();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory80 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int81 = undertowEmbeddedServletContainerFactory80.getSessionTimeout();
        boolean boolean82 = undertowEmbeddedServletContainerFactory80.isPersistSession();
        undertowEmbeddedServletContainerFactory80.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory80.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray87 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory80.addErrorPages(errorPageArray87);
        undertowEmbeddedServletContainerFactory75.addErrorPages(errorPageArray87);
        undertowEmbeddedServletContainerFactory18.addErrorPages(errorPageArray87);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray87);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList11);
        org.junit.Assert.assertNotNull(classLoader12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(errorPageSet14);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(resourceManager35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1800 + "'", int37 == 1800);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNotNull(mimeMappings41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1800 + "'", int43 == 1800);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList45);
        org.junit.Assert.assertNotNull(jspServlet46);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection53);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1800 + "'", int59 == 1800);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1800 + "'", int66 == 1800);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList69);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(ssl77);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(classLoader79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1800 + "'", int81 == 1800);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(errorPageArray87);
    }

    @Test
    public void test14319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14319");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory0.getSsl();
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory0.workerThreads;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setPort(35);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(mimeMappings8);
    }

    @Test
    public void test14320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14320");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.net.InetAddress inetAddress6 = undertowEmbeddedServletContainerFactory0.getAddress();
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory11.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader13 = undertowEmbeddedServletContainerFactory11.resourceLoader;
        undertowEmbeddedServletContainerFactory11.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList19 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet20 = undertowEmbeddedServletContainerFactory16.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getSessionTimeout();
        boolean boolean23 = undertowEmbeddedServletContainerFactory21.isPersistSession();
        undertowEmbeddedServletContainerFactory21.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder27 = undertowEmbeddedServletContainerFactory21.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer30 = undertowEmbeddedServletContainerFactory16.getUndertowEmbeddedServletContainer(builder27, deploymentManager28, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager31 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer33 = undertowEmbeddedServletContainerFactory11.getUndertowEmbeddedServletContainer(builder27, deploymentManager31, (int) ' ');
        boolean boolean34 = undertowEmbeddedServletContainerFactory11.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory11.setPort((-1));
        java.lang.Integer int37 = undertowEmbeddedServletContainerFactory11.bufferSize;
        io.undertow.Undertow.Builder builder39 = undertowEmbeddedServletContainerFactory11.createBuilder(0);
        io.undertow.servlet.api.DeploymentManager deploymentManager40 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer42 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder39, deploymentManager40, (int) '4');
        java.lang.Boolean boolean43 = undertowEmbeddedServletContainerFactory0.directBuffers;
        io.undertow.Undertow.Builder builder45 = undertowEmbeddedServletContainerFactory0.createBuilder((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int47 = undertowEmbeddedServletContainerFactory46.getSessionTimeout();
        boolean boolean48 = undertowEmbeddedServletContainerFactory46.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList49 = undertowEmbeddedServletContainerFactory46.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet50 = undertowEmbeddedServletContainerFactory46.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList51 = undertowEmbeddedServletContainerFactory46.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int53 = undertowEmbeddedServletContainerFactory52.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray54 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory52.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray54);
        undertowEmbeddedServletContainerFactory46.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray54);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray54);
        java.io.File file58 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file58);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection60 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        java.io.File file63 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file63);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNull(resourceLoader13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList19);
        org.junit.Assert.assertNotNull(jspServlet20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1800 + "'", int22 == 1800);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer30);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1800 + "'", int47 == 1800);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList49);
        org.junit.Assert.assertNotNull(jspServlet50);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8080 + "'", int53 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray54);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection60);
    }

    @Test
    public void test14321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14321");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory0.workerThreads = 1800;
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.JspServlet jspServlet12 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jspServlet12);
    }

    @Test
    public void test14322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14322");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        java.io.File file4 = undertowEmbeddedServletContainerFactory2.getDocumentRoot();
        org.springframework.boot.context.embedded.Compression compression5 = null;
        undertowEmbeddedServletContainerFactory2.setCompression(compression5);
        undertowEmbeddedServletContainerFactory2.buffersPerRegion = 10;
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray9 = undertowEmbeddedServletContainerFactory2.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(file4);
    }

    @Test
    public void test14323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14323");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.net.InetAddress inetAddress5 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress5);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        boolean boolean8 = undertowEmbeddedServletContainerFactory1.useForwardHeaders;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test14324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14324");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.workerThreads = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory11.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader13 = undertowEmbeddedServletContainerFactory11.resourceLoader;
        undertowEmbeddedServletContainerFactory11.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList19 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet20 = undertowEmbeddedServletContainerFactory16.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getSessionTimeout();
        boolean boolean23 = undertowEmbeddedServletContainerFactory21.isPersistSession();
        undertowEmbeddedServletContainerFactory21.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder27 = undertowEmbeddedServletContainerFactory21.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer30 = undertowEmbeddedServletContainerFactory16.getUndertowEmbeddedServletContainer(builder27, deploymentManager28, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager31 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer33 = undertowEmbeddedServletContainerFactory11.getUndertowEmbeddedServletContainer(builder27, deploymentManager31, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager34 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer36 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder27, deploymentManager34, (int) (short) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList37 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList37);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList39 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8080 + "'", int8 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNull(resourceLoader13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList19);
        org.junit.Assert.assertNotNull(jspServlet20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1800 + "'", int22 == 1800);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer30);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer33);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer36);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList37);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList39);
    }

    @Test
    public void test14325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14325");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.lang.ClassLoader classLoader4 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "";
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        boolean boolean8 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        int int9 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int14 = undertowEmbeddedServletContainerFactory13.getSessionTimeout();
        boolean boolean15 = undertowEmbeddedServletContainerFactory13.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList16 = undertowEmbeddedServletContainerFactory13.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet17 = undertowEmbeddedServletContainerFactory13.getJspServlet();
        undertowEmbeddedServletContainerFactory13.directBuffers = true;
        undertowEmbeddedServletContainerFactory13.accessLogPattern = "hi!";
        java.io.File file22 = null;
        undertowEmbeddedServletContainerFactory13.setDocumentRoot(file22);
        undertowEmbeddedServletContainerFactory13.setWorkerThreads((java.lang.Integer) 100);
        java.io.File file26 = null;
        undertowEmbeddedServletContainerFactory13.setDocumentRoot(file26);
        undertowEmbeddedServletContainerFactory13.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int34 = undertowEmbeddedServletContainerFactory33.getSessionTimeout();
        boolean boolean35 = undertowEmbeddedServletContainerFactory33.isPersistSession();
        java.io.File file36 = undertowEmbeddedServletContainerFactory33.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = undertowEmbeddedServletContainerFactory33.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = undertowEmbeddedServletContainerFactory33.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int40 = undertowEmbeddedServletContainerFactory39.getSessionTimeout();
        boolean boolean41 = undertowEmbeddedServletContainerFactory39.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList42 = undertowEmbeddedServletContainerFactory39.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet43 = undertowEmbeddedServletContainerFactory39.getJspServlet();
        undertowEmbeddedServletContainerFactory33.setJspServlet(jspServlet43);
        undertowEmbeddedServletContainerFactory32.setJspServlet(jspServlet43);
        boolean boolean46 = undertowEmbeddedServletContainerFactory32.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray48 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList49 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList49, undertowBuilderCustomizerArray48);
        undertowEmbeddedServletContainerFactory47.builderCustomizers = undertowBuilderCustomizerList49;
        java.lang.Integer int52 = undertowEmbeddedServletContainerFactory47.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int54 = undertowEmbeddedServletContainerFactory53.getSessionTimeout();
        undertowEmbeddedServletContainerFactory53.setSessionTimeout((int) (short) 1);
        java.io.File file57 = null;
        undertowEmbeddedServletContainerFactory53.setSessionStoreDir(file57);
        undertowEmbeddedServletContainerFactory53.setBuffersPerRegion((java.lang.Integer) 10);
        org.springframework.core.io.ResourceLoader resourceLoader61 = null;
        undertowEmbeddedServletContainerFactory53.setResourceLoader(resourceLoader61);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int64 = undertowEmbeddedServletContainerFactory63.getSessionTimeout();
        boolean boolean65 = undertowEmbeddedServletContainerFactory63.isPersistSession();
        java.io.File file66 = undertowEmbeddedServletContainerFactory63.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList67 = undertowEmbeddedServletContainerFactory63.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory63.ioThreads = 0;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings70 = undertowEmbeddedServletContainerFactory63.getMimeMappings();
        undertowEmbeddedServletContainerFactory53.setMimeMappings(mimeMappings70);
        undertowEmbeddedServletContainerFactory47.setMimeMappings(mimeMappings70);
        undertowEmbeddedServletContainerFactory32.setMimeMappings(mimeMappings70);
        undertowEmbeddedServletContainerFactory13.setMimeMappings(mimeMappings70);
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings70);
        java.lang.Integer int76 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8080 + "'", int9 == 8080);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1800 + "'", int14 == 1800);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList16);
        org.junit.Assert.assertNotNull(jspServlet17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1800 + "'", int34 == 1800);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1800 + "'", int40 == 1800);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList42);
        org.junit.Assert.assertNotNull(jspServlet43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1800 + "'", int54 == 1800);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1800 + "'", int64 == 1800);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList67);
        org.junit.Assert.assertNotNull(mimeMappings70);
        org.junit.Assert.assertNull(int76);
    }

    @Test
    public void test14326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14326");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file5;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl10);
        org.springframework.boot.context.embedded.Compression compression12 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression12);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection14 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = true;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection14);
    }

    @Test
    public void test14327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14327");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory0.directBuffers;
        io.undertow.Undertow.Builder builder14 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager15 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer17 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder14, deploymentManager15, 1800);
        org.springframework.core.io.ResourceLoader resourceLoader18 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader18);
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("0.0.0.0");
        java.io.File file24 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file24);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory26.setJspServletClassName("");
        boolean boolean29 = undertowEmbeddedServletContainerFactory26.useForwardHeaders;
        java.io.File file30 = undertowEmbeddedServletContainerFactory26.getSessionStoreDir();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int32 = undertowEmbeddedServletContainerFactory31.getSessionTimeout();
        boolean boolean33 = undertowEmbeddedServletContainerFactory31.isPersistSession();
        undertowEmbeddedServletContainerFactory31.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory31.setBuffersPerRegion((java.lang.Integer) 1);
        boolean boolean38 = undertowEmbeddedServletContainerFactory31.accessLogEnabled;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int40 = undertowEmbeddedServletContainerFactory39.getSessionTimeout();
        boolean boolean41 = undertowEmbeddedServletContainerFactory39.isPersistSession();
        undertowEmbeddedServletContainerFactory39.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl44 = null;
        undertowEmbeddedServletContainerFactory39.setSsl(ssl44);
        org.springframework.boot.context.embedded.JspServlet jspServlet46 = undertowEmbeddedServletContainerFactory39.getJspServlet();
        undertowEmbeddedServletContainerFactory31.setJspServlet(jspServlet46);
        undertowEmbeddedServletContainerFactory31.useForwardHeaders = false;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int51 = undertowEmbeddedServletContainerFactory50.getPort();
        java.lang.Integer int52 = undertowEmbeddedServletContainerFactory50.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader53 = null;
        undertowEmbeddedServletContainerFactory50.setResourceLoader(resourceLoader53);
        java.lang.Integer int55 = undertowEmbeddedServletContainerFactory50.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int57 = undertowEmbeddedServletContainerFactory56.getSessionTimeout();
        boolean boolean58 = undertowEmbeddedServletContainerFactory56.isPersistSession();
        java.io.File file59 = undertowEmbeddedServletContainerFactory56.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings60 = undertowEmbeddedServletContainerFactory56.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings61 = undertowEmbeddedServletContainerFactory56.getMimeMappings();
        java.lang.Integer int62 = undertowEmbeddedServletContainerFactory56.buffersPerRegion;
        io.undertow.Undertow.Builder builder64 = undertowEmbeddedServletContainerFactory56.createBuilder(10);
        io.undertow.servlet.api.DeploymentManager deploymentManager65 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer67 = undertowEmbeddedServletContainerFactory50.getUndertowEmbeddedServletContainer(builder64, deploymentManager65, 1);
        undertowEmbeddedServletContainerFactory50.setIoThreads((java.lang.Integer) 100);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet70 = undertowEmbeddedServletContainerFactory50.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader71 = null;
        undertowEmbeddedServletContainerFactory50.resourceLoader = resourceLoader71;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings73 = undertowEmbeddedServletContainerFactory50.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings74 = undertowEmbeddedServletContainerFactory50.getMimeMappings();
        undertowEmbeddedServletContainerFactory31.setMimeMappings(mimeMappings74);
        undertowEmbeddedServletContainerFactory26.setMimeMappings(mimeMappings74);
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings74);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer17);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1800 + "'", int32 == 1800);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1800 + "'", int40 == 1800);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(jspServlet46);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 8080 + "'", int51 == 8080);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1800 + "'", int57 == 1800);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(mimeMappings60);
        org.junit.Assert.assertNotNull(mimeMappings61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer67);
        org.junit.Assert.assertNotNull(errorPageSet70);
        org.junit.Assert.assertNotNull(mimeMappings73);
        org.junit.Assert.assertNotNull(mimeMappings74);
    }

    @Test
    public void test14328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14328");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList4 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        int int5 = undertowEmbeddedServletContainerFactory0.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader6;
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8080 + "'", int5 == 8080);
    }

    @Test
    public void test14329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14329");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.net.InetAddress inetAddress9 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress9);
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "hi!";
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection13 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        boolean boolean14 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.net.InetAddress inetAddress15 = undertowEmbeddedServletContainerFactory0.getAddress();
        org.springframework.boot.context.embedded.JspServlet jspServlet16 = null;
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet16);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(inetAddress15);
    }

    @Test
    public void test14330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14330");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file8);
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 8080);
        java.lang.String str13 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        java.io.File file14 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.net.InetAddress inetAddress15 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress15);
        org.springframework.boot.context.embedded.JspServlet jspServlet17 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.ioThreads = 1800;
        java.lang.ClassLoader classLoader20 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        boolean boolean21 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0.0.0.0" + "'", str13, "0.0.0.0");
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(jspServlet17);
        org.junit.Assert.assertNotNull(classLoader20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test14331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14331");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 1);
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader4;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo6 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo6);
        boolean boolean8 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file9;
        undertowEmbeddedServletContainerFactory0.workerThreads = 0;
        java.io.File file13 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file13;
        org.springframework.core.io.ResourceLoader resourceLoader15 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(resourceLoader15);
    }

    @Test
    public void test14332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14332");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file5);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("0.0.0.0");
        java.lang.ClassLoader classLoader10 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        org.springframework.boot.context.embedded.Compression compression11 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression11);
        org.springframework.boot.context.embedded.Compression compression13 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression13);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file15);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int18 = undertowEmbeddedServletContainerFactory17.getSessionTimeout();
        boolean boolean19 = undertowEmbeddedServletContainerFactory17.isPersistSession();
        undertowEmbeddedServletContainerFactory17.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder23 = undertowEmbeddedServletContainerFactory17.createBuilder((-1));
        undertowEmbeddedServletContainerFactory17.setBufferSize((java.lang.Integer) 10);
        undertowEmbeddedServletContainerFactory17.useForwardHeaders = false;
        boolean boolean28 = undertowEmbeddedServletContainerFactory17.isPersistSession();
        java.lang.String str29 = undertowEmbeddedServletContainerFactory17.getContextPath();
        java.io.File file30 = null;
        undertowEmbeddedServletContainerFactory17.setDocumentRoot(file30);
        org.springframework.core.io.ResourceLoader resourceLoader32 = null;
        undertowEmbeddedServletContainerFactory17.setResourceLoader(resourceLoader32);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer36 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap35);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray37 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer36 };
        initializer34.initializers = servletContextInitializerArray37;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray39 = initializer34.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray40 = initializer34.initializers;
        undertowEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray40);
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray40);
        boolean boolean43 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        org.springframework.boot.context.embedded.Compression compression46 = undertowEmbeddedServletContainerFactory0.getCompression();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1800 + "'", int18 == 1800);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(servletContextInitializerArray37);
        org.junit.Assert.assertNotNull(servletContextInitializerArray39);
        org.junit.Assert.assertNotNull(servletContextInitializerArray40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(compression46);
    }

    @Test
    public void test14333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14333");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        java.lang.String str26 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        undertowEmbeddedServletContainerFactory2.setUseForwardHeaders(true);
        undertowEmbeddedServletContainerFactory2.useForwardHeaders = false;
        java.io.File file31 = null;
        undertowEmbeddedServletContainerFactory2.setSessionStoreDir(file31);
        undertowEmbeddedServletContainerFactory2.setRegisterDefaultServlet(false);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test14334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14334");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.lang.Integer int3 = undertowEmbeddedServletContainerFactory1.bufferSize;
        java.io.File file4 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader5);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean9 = undertowEmbeddedServletContainerFactory8.isAccessLogEnabled();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getPort();
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory12.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        undertowEmbeddedServletContainerFactory12.setResourceLoader(resourceLoader15);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory12.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getSessionTimeout();
        boolean boolean20 = undertowEmbeddedServletContainerFactory18.isPersistSession();
        java.io.File file21 = undertowEmbeddedServletContainerFactory18.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = undertowEmbeddedServletContainerFactory18.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = undertowEmbeddedServletContainerFactory18.getMimeMappings();
        java.lang.Integer int24 = undertowEmbeddedServletContainerFactory18.buffersPerRegion;
        io.undertow.Undertow.Builder builder26 = undertowEmbeddedServletContainerFactory18.createBuilder(10);
        io.undertow.servlet.api.DeploymentManager deploymentManager27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer29 = undertowEmbeddedServletContainerFactory12.getUndertowEmbeddedServletContainer(builder26, deploymentManager27, 1);
        undertowEmbeddedServletContainerFactory12.setJspServletClassName("0.0.0.0");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int33 = undertowEmbeddedServletContainerFactory32.getSessionTimeout();
        boolean boolean34 = undertowEmbeddedServletContainerFactory32.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList35 = undertowEmbeddedServletContainerFactory32.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet36 = undertowEmbeddedServletContainerFactory32.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList37 = undertowEmbeddedServletContainerFactory32.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int39 = undertowEmbeddedServletContainerFactory38.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray40 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory38.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray40);
        undertowEmbeddedServletContainerFactory32.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray40);
        undertowEmbeddedServletContainerFactory12.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray40);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray40);
        org.springframework.core.io.ResourceLoader resourceLoader45 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader45);
        int int47 = undertowEmbeddedServletContainerFactory1.getPort();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 8080);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8080 + "'", int13 == 8080);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1800 + "'", int33 == 1800);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList35);
        org.junit.Assert.assertNotNull(jspServlet36);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 8080 + "'", int39 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray40);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
    }

    @Test
    public void test14335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14335");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        java.lang.String str4 = undertowEmbeddedServletContainerFactory1.getDisplayName();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo5 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo5);
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
    }

    @Test
    public void test14336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14336");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file5);
        org.springframework.core.io.ResourceLoader resourceLoader7 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList12 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.io.File file13 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file13;
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader15);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo17 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo17);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 0;
        java.lang.String str21 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int23 = undertowEmbeddedServletContainerFactory22.getSessionTimeout();
        boolean boolean24 = undertowEmbeddedServletContainerFactory22.isPersistSession();
        undertowEmbeddedServletContainerFactory22.setPort(0);
        undertowEmbeddedServletContainerFactory22.useForwardHeaders = false;
        java.lang.String str29 = undertowEmbeddedServletContainerFactory22.getDisplayName();
        undertowEmbeddedServletContainerFactory22.setDirectBuffers((java.lang.Boolean) true);
        java.lang.Integer int32 = undertowEmbeddedServletContainerFactory22.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray34 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList35 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList35, undertowBuilderCustomizerArray34);
        undertowEmbeddedServletContainerFactory33.builderCustomizers = undertowBuilderCustomizerList35;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection38 = undertowEmbeddedServletContainerFactory33.getBuilderCustomizers();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo39 = null;
        undertowEmbeddedServletContainerFactory33.configureErrorPages(deploymentInfo39);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList41 = undertowEmbeddedServletContainerFactory33.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory22.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList41;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList41;
        int int44 = undertowEmbeddedServletContainerFactory0.getPort();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(resourceLoader7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList12);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1800 + "'", int23 == 1800);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection38);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 8080 + "'", int44 == 8080);
    }

    @Test
    public void test14337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14337");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 10);
        undertowEmbeddedServletContainerFactory2.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory2.createBuilder(10);
        undertowEmbeddedServletContainerFactory2.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory2.setPersistSession(true);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo11 = null;
        undertowEmbeddedServletContainerFactory2.configureErrorPages(deploymentInfo11);
        undertowEmbeddedServletContainerFactory2.ioThreads = 35;
        org.junit.Assert.assertNotNull(builder6);
    }

    @Test
    public void test14338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14338");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        java.lang.String str26 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        java.lang.String str27 = undertowEmbeddedServletContainerFactory2.getContextPath();
        org.springframework.boot.context.embedded.JspServlet jspServlet28 = undertowEmbeddedServletContainerFactory2.getJspServlet();
        java.io.File file29 = null;
        undertowEmbeddedServletContainerFactory2.setAccessLogDirectory(file29);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray32 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList33 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList33, undertowBuilderCustomizerArray32);
        undertowEmbeddedServletContainerFactory31.builderCustomizers = undertowBuilderCustomizerList33;
        java.io.File file36 = null;
        undertowEmbeddedServletContainerFactory31.setSessionStoreDir(file36);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection38 = undertowEmbeddedServletContainerFactory31.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory31.setJspServletClassName("0.0.0.0");
        java.lang.ClassLoader classLoader41 = undertowEmbeddedServletContainerFactory31.getServletClassLoader();
        undertowEmbeddedServletContainerFactory31.setSessionTimeout((int) (byte) 10);
        int int44 = undertowEmbeddedServletContainerFactory31.getPort();
        int int45 = undertowEmbeddedServletContainerFactory31.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int47 = undertowEmbeddedServletContainerFactory46.getPort();
        java.lang.Integer int48 = undertowEmbeddedServletContainerFactory46.bufferSize;
        int int49 = undertowEmbeddedServletContainerFactory46.getSessionTimeout();
        org.springframework.boot.context.embedded.Compression compression50 = undertowEmbeddedServletContainerFactory46.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean53 = undertowEmbeddedServletContainerFactory52.isAccessLogEnabled();
        org.springframework.boot.context.embedded.Ssl ssl54 = undertowEmbeddedServletContainerFactory52.getSsl();
        java.lang.Integer int55 = undertowEmbeddedServletContainerFactory52.bufferSize;
        java.lang.ClassLoader classLoader56 = undertowEmbeddedServletContainerFactory52.getServletClassLoader();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int58 = undertowEmbeddedServletContainerFactory57.getSessionTimeout();
        boolean boolean59 = undertowEmbeddedServletContainerFactory57.isPersistSession();
        undertowEmbeddedServletContainerFactory57.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory57.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray64 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory57.addErrorPages(errorPageArray64);
        undertowEmbeddedServletContainerFactory52.addErrorPages(errorPageArray64);
        undertowEmbeddedServletContainerFactory46.addErrorPages(errorPageArray64);
        undertowEmbeddedServletContainerFactory31.addErrorPages(errorPageArray64);
        undertowEmbeddedServletContainerFactory2.addErrorPages(errorPageArray64);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(jspServlet28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection38);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 8080 + "'", int44 == 8080);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8080 + "'", int47 == 8080);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1800 + "'", int49 == 1800);
        org.junit.Assert.assertNull(compression50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(ssl54);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1800 + "'", int58 == 1800);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(errorPageArray64);
    }

    @Test
    public void test14339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14339");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        org.springframework.boot.context.embedded.Compression compression11 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression11);
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.Ssl ssl18 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl18);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(mimeMappings15);
    }

    @Test
    public void test14340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14340");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.io.File file6 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getPort();
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory7.bufferSize;
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory7.setSessionStoreDir(file10);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer13 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap12);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray14 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer13 };
        undertowEmbeddedServletContainerFactory7.addInitializers(servletContextInitializerArray14);
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray14);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList17 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.lang.ClassLoader classLoader20 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        int int21 = undertowEmbeddedServletContainerFactory0.getPort();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 100);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8080 + "'", int8 == 8080);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(servletContextInitializerArray14);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList17);
        org.junit.Assert.assertNotNull(classLoader20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8080 + "'", int21 == 8080);
    }

    @Test
    public void test14341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14341");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.lang.Integer int3 = undertowEmbeddedServletContainerFactory1.bufferSize;
        java.io.File file4 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection5 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo6 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo6);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection8 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection5);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection8);
    }

    @Test
    public void test14342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14342");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory4.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory4.resourceLoader;
        undertowEmbeddedServletContainerFactory4.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getSessionTimeout();
        boolean boolean11 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = undertowEmbeddedServletContainerFactory9.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet13 = undertowEmbeddedServletContainerFactory9.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        undertowEmbeddedServletContainerFactory14.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder20 = undertowEmbeddedServletContainerFactory14.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer23 = undertowEmbeddedServletContainerFactory9.getUndertowEmbeddedServletContainer(builder20, deploymentManager21, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer26 = undertowEmbeddedServletContainerFactory4.getUndertowEmbeddedServletContainer(builder20, deploymentManager24, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer29 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder20, deploymentManager27, (int) (short) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList30 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 100);
        java.lang.Integer int33 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int35 = undertowEmbeddedServletContainerFactory34.getSessionTimeout();
        boolean boolean36 = undertowEmbeddedServletContainerFactory34.isPersistSession();
        undertowEmbeddedServletContainerFactory34.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory34.setUseForwardHeaders(false);
        boolean boolean41 = undertowEmbeddedServletContainerFactory34.useForwardHeaders;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int43 = undertowEmbeddedServletContainerFactory42.getSessionTimeout();
        boolean boolean44 = undertowEmbeddedServletContainerFactory42.isPersistSession();
        undertowEmbeddedServletContainerFactory42.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory42.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory42.setDisplayName("hi!");
        boolean boolean51 = undertowEmbeddedServletContainerFactory42.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int53 = undertowEmbeddedServletContainerFactory52.getSessionTimeout();
        boolean boolean54 = undertowEmbeddedServletContainerFactory52.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList55 = undertowEmbeddedServletContainerFactory52.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet56 = undertowEmbeddedServletContainerFactory52.getJspServlet();
        undertowEmbeddedServletContainerFactory52.directBuffers = true;
        java.io.File file59 = null;
        undertowEmbeddedServletContainerFactory52.setDocumentRoot(file59);
        undertowEmbeddedServletContainerFactory52.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray63 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory52.addBuilderCustomizers(undertowBuilderCustomizerArray63);
        undertowEmbeddedServletContainerFactory42.addBuilderCustomizers(undertowBuilderCustomizerArray63);
        undertowEmbeddedServletContainerFactory34.addBuilderCustomizers(undertowBuilderCustomizerArray63);
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray63);
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.Compression compression70 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression70);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings72 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.ClassLoader classLoader73 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList12);
        org.junit.Assert.assertNotNull(jspServlet13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer23);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer26);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer29);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList30);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1800 + "'", int35 == 1800);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1800 + "'", int43 == 1800);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1800 + "'", int53 == 1800);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList55);
        org.junit.Assert.assertNotNull(jspServlet56);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray63);
        org.junit.Assert.assertNotNull(mimeMappings72);
        org.junit.Assert.assertNotNull(classLoader73);
    }

    @Test
    public void test14343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14343");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        undertowEmbeddedServletContainerFactory2.ioThreads = 100;
        undertowEmbeddedServletContainerFactory2.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory2.accessLogPattern = "";
        java.lang.Boolean boolean10 = undertowEmbeddedServletContainerFactory2.directBuffers;
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(boolean10);
    }

    @Test
    public void test14344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14344");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.io.File file2 = undertowEmbeddedServletContainerFactory1.getSessionStoreDir();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int4 = undertowEmbeddedServletContainerFactory3.getSessionTimeout();
        boolean boolean5 = undertowEmbeddedServletContainerFactory3.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList6 = undertowEmbeddedServletContainerFactory3.builderCustomizers;
        org.springframework.boot.context.embedded.Compression compression7 = null;
        undertowEmbeddedServletContainerFactory3.setCompression(compression7);
        undertowEmbeddedServletContainerFactory3.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory3.accessLogEnabled = true;
        boolean boolean13 = undertowEmbeddedServletContainerFactory3.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory3.setSessionTimeout(0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(1800);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        undertowEmbeddedServletContainerFactory3.setMimeMappings(mimeMappings18);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings18);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList21 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        io.undertow.server.handlers.resource.ResourceManager resourceManager22 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1800 + "'", int4 == 1800);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList21);
        org.junit.Assert.assertNotNull(resourceManager22);
    }

    @Test
    public void test14345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14345");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo6 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo6);
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader16 = undertowEmbeddedServletContainerFactory14.resourceLoader;
        undertowEmbeddedServletContainerFactory14.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int20 = undertowEmbeddedServletContainerFactory19.getSessionTimeout();
        boolean boolean21 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList22 = undertowEmbeddedServletContainerFactory19.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet23 = undertowEmbeddedServletContainerFactory19.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int25 = undertowEmbeddedServletContainerFactory24.getSessionTimeout();
        boolean boolean26 = undertowEmbeddedServletContainerFactory24.isPersistSession();
        undertowEmbeddedServletContainerFactory24.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder30 = undertowEmbeddedServletContainerFactory24.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager31 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer33 = undertowEmbeddedServletContainerFactory19.getUndertowEmbeddedServletContainer(builder30, deploymentManager31, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager34 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer36 = undertowEmbeddedServletContainerFactory14.getUndertowEmbeddedServletContainer(builder30, deploymentManager34, (int) ' ');
        boolean boolean37 = undertowEmbeddedServletContainerFactory14.isRegisterDefaultServlet();
        java.lang.String str38 = undertowEmbeddedServletContainerFactory14.accessLogPattern;
        undertowEmbeddedServletContainerFactory14.setUseForwardHeaders(true);
        undertowEmbeddedServletContainerFactory14.setAccessLogEnabled(false);
        java.lang.String str43 = undertowEmbeddedServletContainerFactory14.getDisplayName();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList44 = undertowEmbeddedServletContainerFactory14.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int46 = undertowEmbeddedServletContainerFactory45.getPort();
        java.lang.Integer int47 = undertowEmbeddedServletContainerFactory45.bufferSize;
        java.io.File file48 = null;
        undertowEmbeddedServletContainerFactory45.setSessionStoreDir(file48);
        java.io.File file50 = null;
        undertowEmbeddedServletContainerFactory45.accessLogDirectory = file50;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings52 = undertowEmbeddedServletContainerFactory45.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int54 = undertowEmbeddedServletContainerFactory53.getSessionTimeout();
        boolean boolean55 = undertowEmbeddedServletContainerFactory53.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList56 = undertowEmbeddedServletContainerFactory53.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet57 = undertowEmbeddedServletContainerFactory53.getJspServlet();
        undertowEmbeddedServletContainerFactory45.setJspServlet(jspServlet57);
        org.springframework.core.io.ResourceLoader resourceLoader59 = null;
        undertowEmbeddedServletContainerFactory45.resourceLoader = resourceLoader59;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean63 = undertowEmbeddedServletContainerFactory62.isAccessLogEnabled();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings64 = undertowEmbeddedServletContainerFactory62.getMimeMappings();
        java.io.File file65 = undertowEmbeddedServletContainerFactory62.getDocumentRoot();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList66 = undertowEmbeddedServletContainerFactory62.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory45.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList66;
        undertowEmbeddedServletContainerFactory45.accessLogPattern = "";
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList70 = undertowEmbeddedServletContainerFactory45.builderCustomizers;
        undertowEmbeddedServletContainerFactory14.builderCustomizers = undertowBuilderCustomizerList70;
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList70);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNull(resourceLoader16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList22);
        org.junit.Assert.assertNotNull(jspServlet23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1800 + "'", int25 == 1800);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer33);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 8080 + "'", int46 == 8080);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(mimeMappings52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1800 + "'", int54 == 1800);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList56);
        org.junit.Assert.assertNotNull(jspServlet57);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(mimeMappings64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList66);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList70);
    }

    @Test
    public void test14346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14346");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        undertowEmbeddedServletContainerFactory2.resourceLoader = resourceLoader4;
        undertowEmbeddedServletContainerFactory2.directBuffers = true;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo8 = null;
        undertowEmbeddedServletContainerFactory2.configureErrorPages(deploymentInfo8);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory2.getSsl();
        undertowEmbeddedServletContainerFactory2.setSessionTimeout(8080);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(ssl10);
    }

    @Test
    public void test14347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14347");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(1);
        boolean boolean11 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        java.lang.String str12 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = true;
        org.springframework.boot.context.embedded.Compression compression15 = undertowEmbeddedServletContainerFactory0.getCompression();
        java.io.File file16 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        java.net.InetAddress inetAddress17 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress17);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
        org.junit.Assert.assertNull(compression15);
        org.junit.Assert.assertNull(file16);
    }

    @Test
    public void test14348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14348");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int20 = undertowEmbeddedServletContainerFactory19.getSessionTimeout();
        boolean boolean21 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList22 = undertowEmbeddedServletContainerFactory19.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet23 = undertowEmbeddedServletContainerFactory19.getJspServlet();
        boolean boolean24 = undertowEmbeddedServletContainerFactory19.useForwardHeaders;
        java.net.InetAddress inetAddress25 = undertowEmbeddedServletContainerFactory19.getAddress();
        java.lang.String str26 = undertowEmbeddedServletContainerFactory19.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int28 = undertowEmbeddedServletContainerFactory27.getSessionTimeout();
        boolean boolean29 = undertowEmbeddedServletContainerFactory27.isPersistSession();
        java.io.File file30 = undertowEmbeddedServletContainerFactory27.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = undertowEmbeddedServletContainerFactory27.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = undertowEmbeddedServletContainerFactory27.getMimeMappings();
        java.lang.Integer int33 = undertowEmbeddedServletContainerFactory27.buffersPerRegion;
        io.undertow.Undertow.Builder builder35 = undertowEmbeddedServletContainerFactory27.createBuilder(10);
        undertowEmbeddedServletContainerFactory27.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str38 = undertowEmbeddedServletContainerFactory27.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int40 = undertowEmbeddedServletContainerFactory39.getSessionTimeout();
        boolean boolean41 = undertowEmbeddedServletContainerFactory39.isPersistSession();
        undertowEmbeddedServletContainerFactory39.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder45 = undertowEmbeddedServletContainerFactory39.createBuilder((-1));
        undertowEmbeddedServletContainerFactory39.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int49 = undertowEmbeddedServletContainerFactory48.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray50 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory48.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray50);
        undertowEmbeddedServletContainerFactory39.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray50);
        undertowEmbeddedServletContainerFactory27.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray50);
        undertowEmbeddedServletContainerFactory19.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray50);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray50);
        java.lang.String str56 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("0.0.0.0");
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 35;
        java.io.File file61 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file61);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList22);
        org.junit.Assert.assertNotNull(jspServlet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(inetAddress25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1800 + "'", int28 == 1800);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1800 + "'", int40 == 1800);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 8080 + "'", int49 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray50);
        org.junit.Assert.assertNull(str56);
    }

    @Test
    public void test14349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14349");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList5 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList9;
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        java.lang.String str13 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        java.lang.String str14 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        org.springframework.boot.context.embedded.Ssl ssl15 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl15);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int18 = undertowEmbeddedServletContainerFactory17.getSessionTimeout();
        boolean boolean19 = undertowEmbeddedServletContainerFactory17.isPersistSession();
        undertowEmbeddedServletContainerFactory17.setIoThreads((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int23 = undertowEmbeddedServletContainerFactory22.getSessionTimeout();
        boolean boolean24 = undertowEmbeddedServletContainerFactory22.isPersistSession();
        java.io.File file25 = undertowEmbeddedServletContainerFactory22.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = undertowEmbeddedServletContainerFactory22.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = undertowEmbeddedServletContainerFactory22.getMimeMappings();
        undertowEmbeddedServletContainerFactory17.setMimeMappings(mimeMappings27);
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings27);
        org.springframework.boot.context.embedded.Ssl ssl30 = undertowEmbeddedServletContainerFactory0.getSsl();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0.0.0.0" + "'", str13, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0.0.0.0" + "'", str14, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1800 + "'", int18 == 1800);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1800 + "'", int23 == 1800);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNull(ssl30);
    }

    @Test
    public void test14350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14350");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl5 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl5);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo7 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo7);
        java.io.File file9 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test14351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14351");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        io.undertow.server.handlers.resource.ResourceManager resourceManager7 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        java.io.File file11 = undertowEmbeddedServletContainerFactory8.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = undertowEmbeddedServletContainerFactory14.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet18 = undertowEmbeddedServletContainerFactory14.getJspServlet();
        undertowEmbeddedServletContainerFactory8.setJspServlet(jspServlet18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList22 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList22, undertowBuilderCustomizerArray21);
        undertowEmbeddedServletContainerFactory20.builderCustomizers = undertowBuilderCustomizerList22;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection25 = undertowEmbeddedServletContainerFactory20.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory8.setBuilderCustomizers(undertowBuilderCustomizerCollection25);
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection25);
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection30 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        io.undertow.server.handlers.resource.ResourceManager resourceManager31 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList32 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.io.File file33 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file33);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = true;
        org.xnio.XnioWorker xnioWorker37 = undertowEmbeddedServletContainerFactory0.createWorker();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(resourceManager7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList17);
        org.junit.Assert.assertNotNull(jspServlet18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection25);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection30);
        org.junit.Assert.assertNotNull(resourceManager31);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList32);
        org.junit.Assert.assertNotNull(xnioWorker37);
    }

    @Test
    public void test14352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14352");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        io.undertow.Undertow.Builder builder8 = undertowEmbeddedServletContainerFactory0.createBuilder(10);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) (-1));
        boolean boolean11 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getPort();
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory12.bufferSize;
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory12.setSessionStoreDir(file15);
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory12.accessLogDirectory = file17;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int21 = undertowEmbeddedServletContainerFactory20.getSessionTimeout();
        boolean boolean22 = undertowEmbeddedServletContainerFactory20.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList23 = undertowEmbeddedServletContainerFactory20.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet24 = undertowEmbeddedServletContainerFactory20.getJspServlet();
        undertowEmbeddedServletContainerFactory12.setJspServlet(jspServlet24);
        org.springframework.core.io.ResourceLoader resourceLoader26 = null;
        undertowEmbeddedServletContainerFactory12.resourceLoader = resourceLoader26;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList31 = undertowEmbeddedServletContainerFactory28.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet32 = undertowEmbeddedServletContainerFactory28.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList33 = undertowEmbeddedServletContainerFactory28.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int35 = undertowEmbeddedServletContainerFactory34.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray36 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory34.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        undertowEmbeddedServletContainerFactory28.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        undertowEmbeddedServletContainerFactory12.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        java.io.File file41 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.io.File file42 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 0);
        java.lang.String str45 = undertowEmbeddedServletContainerFactory44.getListenAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings46 = undertowEmbeddedServletContainerFactory44.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings46);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8080 + "'", int13 == 8080);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1800 + "'", int21 == 1800);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList23);
        org.junit.Assert.assertNotNull(jspServlet24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList31);
        org.junit.Assert.assertNotNull(jspServlet32);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 8080 + "'", int35 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray36);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "0.0.0.0" + "'", str45, "0.0.0.0");
        org.junit.Assert.assertNotNull(mimeMappings46);
    }

    @Test
    public void test14353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14353");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        boolean boolean7 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        org.springframework.boot.context.embedded.Ssl ssl14 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl14);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList16 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file17);
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList16);
    }

    @Test
    public void test14354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14354");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.jarPath = "hi!";
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "0.0.0.0";
        boolean boolean6 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.close();
        jarResourceManager0.close();
        jarResourceManager0.close();
        boolean boolean10 = jarResourceManager0.isResourceChangeListenerSupported();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test14355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14355");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection5 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        java.io.File file6 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.xnio.XnioWorker xnioWorker7 = undertowEmbeddedServletContainerFactory0.createWorker();
        org.springframework.core.io.ResourceLoader resourceLoader8 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection9 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory0.ioThreads;
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(xnioWorker7);
        org.junit.Assert.assertNull(resourceLoader8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection9);
        org.junit.Assert.assertNull(int12);
    }

    @Test
    public void test14356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14356");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int3 = undertowEmbeddedServletContainerFactory2.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory2.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray4);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray4);
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        undertowEmbeddedServletContainerFactory1.setPersistSession(true);
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory1.setAccessLogDirectory(file10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 10;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        java.io.File file17 = undertowEmbeddedServletContainerFactory14.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int21 = undertowEmbeddedServletContainerFactory20.getSessionTimeout();
        boolean boolean22 = undertowEmbeddedServletContainerFactory20.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList23 = undertowEmbeddedServletContainerFactory20.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet24 = undertowEmbeddedServletContainerFactory20.getJspServlet();
        undertowEmbeddedServletContainerFactory14.setJspServlet(jspServlet24);
        java.net.InetAddress inetAddress26 = undertowEmbeddedServletContainerFactory14.getAddress();
        java.lang.ClassLoader classLoader27 = undertowEmbeddedServletContainerFactory14.getServletClassLoader();
        java.lang.String str28 = undertowEmbeddedServletContainerFactory14.getListenAddress();
        undertowEmbeddedServletContainerFactory14.setJspServletClassName("hi!");
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList31 = undertowEmbeddedServletContainerFactory14.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList31);
        boolean boolean33 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8080 + "'", int3 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1800 + "'", int21 == 1800);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList23);
        org.junit.Assert.assertNotNull(jspServlet24);
        org.junit.Assert.assertNull(inetAddress26);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "0.0.0.0" + "'", str28, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test14357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14357");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file8);
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 8080);
        java.lang.String str13 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        java.io.File file14 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.net.InetAddress inetAddress15 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress15);
        org.springframework.boot.context.embedded.JspServlet jspServlet17 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        java.io.File file18 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int21 = undertowEmbeddedServletContainerFactory20.getSessionTimeout();
        boolean boolean22 = undertowEmbeddedServletContainerFactory20.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList23 = undertowEmbeddedServletContainerFactory20.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet24 = undertowEmbeddedServletContainerFactory20.getJspServlet();
        undertowEmbeddedServletContainerFactory20.directBuffers = true;
        java.io.File file27 = null;
        undertowEmbeddedServletContainerFactory20.setDocumentRoot(file27);
        undertowEmbeddedServletContainerFactory20.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray31 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory20.addBuilderCustomizers(undertowBuilderCustomizerArray31);
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray31);
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        java.io.File file36 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file36);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0.0.0.0" + "'", str13, "0.0.0.0");
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(jspServlet17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1800 + "'", int21 == 1800);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList23);
        org.junit.Assert.assertNotNull(jspServlet24);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray31);
    }

    @Test
    public void test14358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14358");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet10);
        java.net.InetAddress inetAddress12 = undertowEmbeddedServletContainerFactory0.getAddress();
        java.lang.ClassLoader classLoader13 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        java.lang.String str14 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        org.springframework.core.io.ResourceLoader resourceLoader19 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        java.io.File file22 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file22);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertNull(inetAddress12);
        org.junit.Assert.assertNotNull(classLoader13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0.0.0.0" + "'", str14, "0.0.0.0");
        org.junit.Assert.assertNull(resourceLoader19);
    }

    @Test
    public void test14359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14359");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isAccessLogEnabled();
        java.lang.Integer int3 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.xnio.XnioWorker xnioWorker4 = undertowEmbeddedServletContainerFactory1.createWorker();
        int int5 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        java.io.File file11 = undertowEmbeddedServletContainerFactory8.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory8.buffersPerRegion;
        undertowEmbeddedServletContainerFactory8.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int18 = undertowEmbeddedServletContainerFactory17.getSessionTimeout();
        boolean boolean19 = undertowEmbeddedServletContainerFactory17.isPersistSession();
        undertowEmbeddedServletContainerFactory17.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder23 = undertowEmbeddedServletContainerFactory17.createBuilder((-1));
        undertowEmbeddedServletContainerFactory17.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int27 = undertowEmbeddedServletContainerFactory26.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray28 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory26.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray28);
        undertowEmbeddedServletContainerFactory17.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray28);
        undertowEmbeddedServletContainerFactory8.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray28);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray28);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(xnioWorker4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1800 + "'", int5 == 1800);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1800 + "'", int18 == 1800);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8080 + "'", int27 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray28);
    }

    @Test
    public void test14360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14360");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        org.xnio.XnioWorker xnioWorker13 = undertowEmbeddedServletContainerFactory0.createWorker();
        java.io.File file14 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(10);
        boolean boolean17 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        org.springframework.boot.context.embedded.Compression compression18 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression18);
        org.springframework.boot.context.embedded.Compression compression20 = undertowEmbeddedServletContainerFactory0.getCompression();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = true;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(xnioWorker13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(compression20);
    }

    @Test
    public void test14361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14361");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.io.File file8 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getSessionTimeout();
        boolean boolean11 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        undertowEmbeddedServletContainerFactory9.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory9.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        java.io.File file19 = undertowEmbeddedServletContainerFactory16.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList20 = undertowEmbeddedServletContainerFactory16.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory9.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList20;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = undertowEmbeddedServletContainerFactory9.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings22);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 8080;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int27 = undertowEmbeddedServletContainerFactory26.getSessionTimeout();
        boolean boolean28 = undertowEmbeddedServletContainerFactory26.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList29 = undertowEmbeddedServletContainerFactory26.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet30 = undertowEmbeddedServletContainerFactory26.getJspServlet();
        boolean boolean31 = undertowEmbeddedServletContainerFactory26.useForwardHeaders;
        java.net.InetAddress inetAddress32 = undertowEmbeddedServletContainerFactory26.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader33 = null;
        undertowEmbeddedServletContainerFactory26.resourceLoader = resourceLoader33;
        int int35 = undertowEmbeddedServletContainerFactory26.getSessionTimeout();
        undertowEmbeddedServletContainerFactory26.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int39 = undertowEmbeddedServletContainerFactory38.getSessionTimeout();
        boolean boolean40 = undertowEmbeddedServletContainerFactory38.isPersistSession();
        undertowEmbeddedServletContainerFactory38.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory38.setBuffersPerRegion((java.lang.Integer) 1);
        boolean boolean45 = undertowEmbeddedServletContainerFactory38.accessLogEnabled;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int47 = undertowEmbeddedServletContainerFactory46.getSessionTimeout();
        boolean boolean48 = undertowEmbeddedServletContainerFactory46.isPersistSession();
        undertowEmbeddedServletContainerFactory46.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl51 = null;
        undertowEmbeddedServletContainerFactory46.setSsl(ssl51);
        org.springframework.boot.context.embedded.JspServlet jspServlet53 = undertowEmbeddedServletContainerFactory46.getJspServlet();
        undertowEmbeddedServletContainerFactory38.setJspServlet(jspServlet53);
        undertowEmbeddedServletContainerFactory38.setPersistSession(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList57 = undertowEmbeddedServletContainerFactory38.builderCustomizers;
        undertowEmbeddedServletContainerFactory26.builderCustomizers = undertowBuilderCustomizerList57;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList57;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList20);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1800 + "'", int27 == 1800);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList29);
        org.junit.Assert.assertNotNull(jspServlet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(inetAddress32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1800 + "'", int35 == 1800);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1800 + "'", int39 == 1800);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1800 + "'", int47 == 1800);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(jspServlet53);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList57);
    }

    @Test
    public void test14362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14362");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = true;
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl9);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.Ssl ssl15 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl15);
        java.io.File file17 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        int int18 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str19 = undertowEmbeddedServletContainerFactory0.getContextPath();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1800 + "'", int18 == 1800);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test14363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14363");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file7);
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray11);
        org.springframework.boot.context.embedded.Compression compression13 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression13);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file15;
        undertowEmbeddedServletContainerFactory0.ioThreads = 35;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.setContextPath("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/' and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
    }

    @Test
    public void test14364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14364");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory0.ioThreads;
        java.lang.String str8 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory0.workerThreads;
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl10);
        int int12 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        org.xnio.XnioWorker xnioWorker13 = undertowEmbeddedServletContainerFactory0.createWorker();
        java.lang.String str14 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertNotNull(xnioWorker13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(mimeMappings15);
    }

    @Test
    public void test14365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14365");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        boolean boolean4 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.jarPath = "";
        java.lang.String str7 = jarResourceManager0.jarPath;
        boolean boolean8 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str9 = jarResourceManager0.jarPath;
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener10 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourceManager0.registerResourceChangeListener(resourceChangeListener10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test14366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14366");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        boolean boolean7 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection12 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        io.undertow.Undertow.Builder builder14 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "";
        java.lang.String str17 = undertowEmbeddedServletContainerFactory0.getContextPath();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection18 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection18);
    }

    @Test
    public void test14367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14367");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        java.lang.Boolean boolean4 = undertowEmbeddedServletContainerFactory2.directBuffers;
        java.lang.ClassLoader classLoader5 = undertowEmbeddedServletContainerFactory2.getServletClassLoader();
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory2.getSsl();
        java.net.InetAddress inetAddress7 = null;
        undertowEmbeddedServletContainerFactory2.setAddress(inetAddress7);
        org.springframework.boot.context.embedded.Compression compression9 = null;
        undertowEmbeddedServletContainerFactory2.setCompression(compression9);
        undertowEmbeddedServletContainerFactory2.buffersPerRegion = 1;
        undertowEmbeddedServletContainerFactory2.setDisplayName("");
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(classLoader5);
        org.junit.Assert.assertNull(ssl6);
    }

    @Test
    public void test14368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14368");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        java.lang.String str6 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0.0.0.0" + "'", str6, "0.0.0.0");
    }

    @Test
    public void test14369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14369");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory2.buffersPerRegion = (-1);
        org.springframework.core.io.ResourceLoader resourceLoader5 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean8 = undertowEmbeddedServletContainerFactory7.isAccessLogEnabled();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = undertowEmbeddedServletContainerFactory7.getMimeMappings();
        java.io.File file10 = undertowEmbeddedServletContainerFactory7.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = undertowEmbeddedServletContainerFactory11.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet15 = undertowEmbeddedServletContainerFactory11.getJspServlet();
        boolean boolean16 = undertowEmbeddedServletContainerFactory11.useForwardHeaders;
        java.net.InetAddress inetAddress17 = undertowEmbeddedServletContainerFactory11.getAddress();
        undertowEmbeddedServletContainerFactory11.setAccessLogPattern("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = undertowEmbeddedServletContainerFactory22.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader24 = undertowEmbeddedServletContainerFactory22.resourceLoader;
        undertowEmbeddedServletContainerFactory22.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int28 = undertowEmbeddedServletContainerFactory27.getSessionTimeout();
        boolean boolean29 = undertowEmbeddedServletContainerFactory27.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList30 = undertowEmbeddedServletContainerFactory27.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet31 = undertowEmbeddedServletContainerFactory27.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int33 = undertowEmbeddedServletContainerFactory32.getSessionTimeout();
        boolean boolean34 = undertowEmbeddedServletContainerFactory32.isPersistSession();
        undertowEmbeddedServletContainerFactory32.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder38 = undertowEmbeddedServletContainerFactory32.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager39 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer41 = undertowEmbeddedServletContainerFactory27.getUndertowEmbeddedServletContainer(builder38, deploymentManager39, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager42 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer44 = undertowEmbeddedServletContainerFactory22.getUndertowEmbeddedServletContainer(builder38, deploymentManager42, (int) ' ');
        boolean boolean45 = undertowEmbeddedServletContainerFactory22.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory22.setPort((-1));
        java.lang.Integer int48 = undertowEmbeddedServletContainerFactory22.bufferSize;
        io.undertow.Undertow.Builder builder50 = undertowEmbeddedServletContainerFactory22.createBuilder(0);
        io.undertow.servlet.api.DeploymentManager deploymentManager51 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer53 = undertowEmbeddedServletContainerFactory11.getUndertowEmbeddedServletContainer(builder50, deploymentManager51, (int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager54 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer56 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder50, deploymentManager54, (int) '#');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int58 = undertowEmbeddedServletContainerFactory57.getSessionTimeout();
        boolean boolean59 = undertowEmbeddedServletContainerFactory57.isPersistSession();
        undertowEmbeddedServletContainerFactory57.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder63 = undertowEmbeddedServletContainerFactory57.createBuilder((-1));
        undertowEmbeddedServletContainerFactory57.accessLogEnabled = true;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet66 = undertowEmbeddedServletContainerFactory57.getErrorPages();
        undertowEmbeddedServletContainerFactory7.setErrorPages(errorPageSet66);
        undertowEmbeddedServletContainerFactory2.setErrorPages(errorPageSet66);
        undertowEmbeddedServletContainerFactory2.useForwardHeaders = true;
        int int71 = undertowEmbeddedServletContainerFactory2.getSessionTimeout();
        org.junit.Assert.assertNull(resourceLoader5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList14);
        org.junit.Assert.assertNotNull(jspServlet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(inetAddress17);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNull(resourceLoader24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1800 + "'", int28 == 1800);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList30);
        org.junit.Assert.assertNotNull(jspServlet31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1800 + "'", int33 == 1800);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer41);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer53);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1800 + "'", int58 == 1800);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(errorPageSet66);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1800 + "'", int71 == 1800);
    }

    @Test
    public void test14370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14370");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        undertowEmbeddedServletContainerFactory5.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory5.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray12 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory5.addErrorPages(errorPageArray12);
        undertowEmbeddedServletContainerFactory2.addErrorPages(errorPageArray12);
        org.springframework.boot.context.embedded.Ssl ssl15 = null;
        undertowEmbeddedServletContainerFactory2.setSsl(ssl15);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer19 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap18);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray20 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer19 };
        initializer17.initializers = servletContextInitializerArray20;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer24 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap23);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray25 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer24 };
        initializer22.initializers = servletContextInitializerArray25;
        initializer17.initializers = servletContextInitializerArray25;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        java.io.File file31 = undertowEmbeddedServletContainerFactory28.accessLogDirectory;
        undertowEmbeddedServletContainerFactory28.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int37 = undertowEmbeddedServletContainerFactory36.getSessionTimeout();
        boolean boolean38 = undertowEmbeddedServletContainerFactory36.isPersistSession();
        java.io.File file39 = undertowEmbeddedServletContainerFactory36.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = undertowEmbeddedServletContainerFactory36.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings41 = undertowEmbeddedServletContainerFactory36.getMimeMappings();
        java.io.File file42 = undertowEmbeddedServletContainerFactory36.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int44 = undertowEmbeddedServletContainerFactory43.getPort();
        java.lang.Integer int45 = undertowEmbeddedServletContainerFactory43.bufferSize;
        java.io.File file46 = null;
        undertowEmbeddedServletContainerFactory43.setSessionStoreDir(file46);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer49 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap48);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray50 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer49 };
        undertowEmbeddedServletContainerFactory43.addInitializers(servletContextInitializerArray50);
        undertowEmbeddedServletContainerFactory36.addInitializers(servletContextInitializerArray50);
        undertowEmbeddedServletContainerFactory28.addInitializers(servletContextInitializerArray50);
        initializer17.initializers = servletContextInitializerArray50;
        undertowEmbeddedServletContainerFactory2.addInitializers(servletContextInitializerArray50);
        org.springframework.boot.context.embedded.Ssl ssl56 = null;
        undertowEmbeddedServletContainerFactory2.setSsl(ssl56);
        undertowEmbeddedServletContainerFactory2.setUseForwardHeaders(true);
        java.lang.Integer int60 = undertowEmbeddedServletContainerFactory2.buffersPerRegion;
        java.lang.Integer int61 = undertowEmbeddedServletContainerFactory2.ioThreads;
        org.springframework.boot.context.embedded.Compression compression62 = undertowEmbeddedServletContainerFactory2.getCompression();
        org.springframework.boot.context.embedded.JspServlet jspServlet63 = undertowEmbeddedServletContainerFactory2.getJspServlet();
        java.lang.String str64 = undertowEmbeddedServletContainerFactory2.getDisplayName();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(errorPageArray12);
        org.junit.Assert.assertNotNull(servletContextInitializerArray20);
        org.junit.Assert.assertNotNull(servletContextInitializerArray25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1800 + "'", int37 == 1800);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNotNull(mimeMappings41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 8080 + "'", int44 == 8080);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(servletContextInitializerArray50);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNull(compression62);
        org.junit.Assert.assertNotNull(jspServlet63);
        org.junit.Assert.assertNull(str64);
    }

    @Test
    public void test14371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14371");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory0.directBuffers;
        io.undertow.Undertow.Builder builder14 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager15 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer17 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder14, deploymentManager15, 1800);
        org.springframework.core.io.ResourceLoader resourceLoader18 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (-1));
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection23 = undertowEmbeddedServletContainerFactory22.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection23);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection25 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        java.lang.String str26 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        org.springframework.boot.context.embedded.JspServlet jspServlet27 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection23);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(jspServlet27);
    }

    @Test
    public void test14372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14372");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader3);
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory0.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.io.File file9 = undertowEmbeddedServletContainerFactory6.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory6.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory6.getMimeMappings();
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory6.buffersPerRegion;
        io.undertow.Undertow.Builder builder14 = undertowEmbeddedServletContainerFactory6.createBuilder(10);
        io.undertow.servlet.api.DeploymentManager deploymentManager15 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer17 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder14, deploymentManager15, 1);
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = (-1);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.boot.context.embedded.JspServlet jspServlet23 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        org.springframework.boot.context.embedded.Ssl ssl24 = undertowEmbeddedServletContainerFactory0.getSsl();
        undertowEmbeddedServletContainerFactory0.setDisplayName("");
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.JspServlet jspServlet29 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer17);
        org.junit.Assert.assertNotNull(errorPageSet22);
        org.junit.Assert.assertNotNull(jspServlet23);
        org.junit.Assert.assertNull(ssl24);
        org.junit.Assert.assertNotNull(jspServlet29);
    }

    @Test
    public void test14373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14373");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getSessionTimeout();
        boolean boolean20 = undertowEmbeddedServletContainerFactory18.isPersistSession();
        undertowEmbeddedServletContainerFactory18.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder24 = undertowEmbeddedServletContainerFactory18.createBuilder((-1));
        undertowEmbeddedServletContainerFactory18.accessLogEnabled = true;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet27 = undertowEmbeddedServletContainerFactory18.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet27);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection29 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader30 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader30);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(errorPageSet27);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection29);
    }

    @Test
    public void test14374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14374");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        java.lang.String str5 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        undertowEmbeddedServletContainerFactory11.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder17 = undertowEmbeddedServletContainerFactory11.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager18 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer20 = undertowEmbeddedServletContainerFactory6.getUndertowEmbeddedServletContainer(builder17, deploymentManager18, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer23 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder17, deploymentManager21, (int) (byte) 100);
        java.net.InetAddress inetAddress24 = undertowEmbeddedServletContainerFactory2.getAddress();
        undertowEmbeddedServletContainerFactory2.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader27 = null;
        undertowEmbeddedServletContainerFactory2.resourceLoader = resourceLoader27;
        int int29 = undertowEmbeddedServletContainerFactory2.getPort();
        undertowEmbeddedServletContainerFactory2.workerThreads = 32;
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer20);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer23);
        org.junit.Assert.assertNull(inetAddress24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
    }

    @Test
    public void test14375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14375");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.xnio.XnioWorker xnioWorker2 = undertowEmbeddedServletContainerFactory1.createWorker();
        int int3 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("hi!");
        org.junit.Assert.assertNotNull(xnioWorker2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1800 + "'", int3 == 1800);
    }

    @Test
    public void test14376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14376");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(1);
        int int4 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setAccessLogPattern("");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    }

    @Test
    public void test14377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14377");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        boolean boolean9 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.io.File file10 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        undertowEmbeddedServletContainerFactory11.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory11.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray18 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory11.addErrorPages(errorPageArray18);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray18);
        java.lang.String str21 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.setAccessLogEnabled(false);
        boolean boolean24 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 1;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int28 = undertowEmbeddedServletContainerFactory27.getSessionTimeout();
        boolean boolean29 = undertowEmbeddedServletContainerFactory27.isPersistSession();
        undertowEmbeddedServletContainerFactory27.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory27.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int35 = undertowEmbeddedServletContainerFactory34.getSessionTimeout();
        boolean boolean36 = undertowEmbeddedServletContainerFactory34.isPersistSession();
        java.io.File file37 = undertowEmbeddedServletContainerFactory34.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList38 = undertowEmbeddedServletContainerFactory34.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory27.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList38;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int41 = undertowEmbeddedServletContainerFactory40.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = undertowEmbeddedServletContainerFactory44.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader46 = undertowEmbeddedServletContainerFactory44.resourceLoader;
        undertowEmbeddedServletContainerFactory44.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int50 = undertowEmbeddedServletContainerFactory49.getSessionTimeout();
        boolean boolean51 = undertowEmbeddedServletContainerFactory49.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList52 = undertowEmbeddedServletContainerFactory49.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet53 = undertowEmbeddedServletContainerFactory49.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int55 = undertowEmbeddedServletContainerFactory54.getSessionTimeout();
        boolean boolean56 = undertowEmbeddedServletContainerFactory54.isPersistSession();
        undertowEmbeddedServletContainerFactory54.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder60 = undertowEmbeddedServletContainerFactory54.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager61 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer63 = undertowEmbeddedServletContainerFactory49.getUndertowEmbeddedServletContainer(builder60, deploymentManager61, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager64 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer66 = undertowEmbeddedServletContainerFactory44.getUndertowEmbeddedServletContainer(builder60, deploymentManager64, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager67 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer69 = undertowEmbeddedServletContainerFactory40.getUndertowEmbeddedServletContainer(builder60, deploymentManager67, (int) (short) -1);
        io.undertow.servlet.api.DeploymentManager deploymentManager70 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer72 = undertowEmbeddedServletContainerFactory27.getUndertowEmbeddedServletContainer(builder60, deploymentManager70, 10);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo73 = null;
        undertowEmbeddedServletContainerFactory27.configureErrorPages(deploymentInfo73);
        undertowEmbeddedServletContainerFactory27.setSessionTimeout(1800);
        org.springframework.boot.context.embedded.Ssl ssl77 = null;
        undertowEmbeddedServletContainerFactory27.setSsl(ssl77);
        undertowEmbeddedServletContainerFactory27.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory27.buffersPerRegion = (-1);
        boolean boolean83 = undertowEmbeddedServletContainerFactory27.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList84 = undertowEmbeddedServletContainerFactory27.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList84;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(errorPageArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "0.0.0.0" + "'", str21, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1800 + "'", int28 == 1800);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1800 + "'", int35 == 1800);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 8080 + "'", int41 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings45);
        org.junit.Assert.assertNull(resourceLoader46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1800 + "'", int50 == 1800);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList52);
        org.junit.Assert.assertNotNull(jspServlet53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1800 + "'", int55 == 1800);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer63);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer66);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer69);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer72);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList84);
    }

    @Test
    public void test14378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14378");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file5);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("0.0.0.0");
        java.lang.ClassLoader classLoader10 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        org.springframework.boot.context.embedded.Compression compression11 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression11);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int14 = undertowEmbeddedServletContainerFactory13.getPort();
        java.lang.Integer int15 = undertowEmbeddedServletContainerFactory13.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader16 = null;
        undertowEmbeddedServletContainerFactory13.setResourceLoader(resourceLoader16);
        java.lang.Integer int18 = undertowEmbeddedServletContainerFactory13.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int20 = undertowEmbeddedServletContainerFactory19.getSessionTimeout();
        boolean boolean21 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        java.io.File file22 = undertowEmbeddedServletContainerFactory19.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = undertowEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = undertowEmbeddedServletContainerFactory19.getMimeMappings();
        java.lang.Integer int25 = undertowEmbeddedServletContainerFactory19.buffersPerRegion;
        io.undertow.Undertow.Builder builder27 = undertowEmbeddedServletContainerFactory19.createBuilder(10);
        io.undertow.servlet.api.DeploymentManager deploymentManager28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer30 = undertowEmbeddedServletContainerFactory13.getUndertowEmbeddedServletContainer(builder27, deploymentManager28, 1);
        undertowEmbeddedServletContainerFactory13.setJspServletClassName("0.0.0.0");
        java.lang.Integer int33 = undertowEmbeddedServletContainerFactory13.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int35 = undertowEmbeddedServletContainerFactory34.getSessionTimeout();
        boolean boolean36 = undertowEmbeddedServletContainerFactory34.isPersistSession();
        undertowEmbeddedServletContainerFactory34.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory34.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray41 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory34.addErrorPages(errorPageArray41);
        undertowEmbeddedServletContainerFactory13.addErrorPages(errorPageArray41);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray41);
        int int45 = undertowEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.Compression compression46 = undertowEmbeddedServletContainerFactory0.getCompression();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8080 + "'", int14 == 8080);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer30);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1800 + "'", int35 == 1800);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(errorPageArray41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 8080 + "'", int45 == 8080);
        org.junit.Assert.assertNull(compression46);
    }

    @Test
    public void test14379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14379");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        boolean boolean4 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList5 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file6);
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file8);
        java.io.File file10 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file10;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.setPersistSession(false);
        undertowEmbeddedServletContainerFactory12.setUseForwardHeaders(true);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = undertowEmbeddedServletContainerFactory12.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection20 = undertowEmbeddedServletContainerFactory12.getBuilderCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings21);
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray23 = undertowEmbeddedServletContainerFactory0.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList5);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection20);
        org.junit.Assert.assertNotNull(mimeMappings21);
    }

    @Test
    public void test14380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14380");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory0.getAddress();
        java.net.InetAddress inetAddress19 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress19);
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo23 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo23);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        io.undertow.Undertow.Builder builder28 = undertowEmbeddedServletContainerFactory0.createBuilder(10);
        org.springframework.boot.context.embedded.Ssl ssl29 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl29);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo31 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo31);
        java.lang.ClassLoader classLoader33 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo34 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.configureMimeMappings(deploymentInfo34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(classLoader33);
    }

    @Test
    public void test14381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14381");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        java.lang.Integer int26 = undertowEmbeddedServletContainerFactory2.bufferSize;
        java.lang.String str27 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo28 = null;
        undertowEmbeddedServletContainerFactory2.configureErrorPages(deploymentInfo28);
        undertowEmbeddedServletContainerFactory2.ioThreads = 1;
        io.undertow.server.HttpHandler httpHandler32 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.accesslog.AccessLogHandler accessLogHandler33 = undertowEmbeddedServletContainerFactory2.createAccessLogHandler(httpHandler32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Access log directory is not set");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test14382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14382");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        java.lang.String str10 = undertowEmbeddedServletContainerFactory0.getContextPath();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        org.springframework.core.io.ResourceLoader resourceLoader13 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        undertowEmbeddedServletContainerFactory0.workerThreads = 8080;
        boolean boolean16 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file17);
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(resourceLoader13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test14383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14383");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((int) (byte) 1);
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory0.ioThreads = 10;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader15 = undertowEmbeddedServletContainerFactory13.resourceLoader;
        undertowEmbeddedServletContainerFactory13.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getSessionTimeout();
        boolean boolean20 = undertowEmbeddedServletContainerFactory18.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList21 = undertowEmbeddedServletContainerFactory18.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet22 = undertowEmbeddedServletContainerFactory18.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int24 = undertowEmbeddedServletContainerFactory23.getSessionTimeout();
        boolean boolean25 = undertowEmbeddedServletContainerFactory23.isPersistSession();
        undertowEmbeddedServletContainerFactory23.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder29 = undertowEmbeddedServletContainerFactory23.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager30 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer32 = undertowEmbeddedServletContainerFactory18.getUndertowEmbeddedServletContainer(builder29, deploymentManager30, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager33 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer35 = undertowEmbeddedServletContainerFactory13.getUndertowEmbeddedServletContainer(builder29, deploymentManager33, (int) ' ');
        boolean boolean36 = undertowEmbeddedServletContainerFactory13.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory13.setPort((-1));
        java.lang.ClassLoader classLoader39 = undertowEmbeddedServletContainerFactory13.getServletClassLoader();
        java.lang.Integer int40 = undertowEmbeddedServletContainerFactory13.ioThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int42 = undertowEmbeddedServletContainerFactory41.getSessionTimeout();
        boolean boolean43 = undertowEmbeddedServletContainerFactory41.isPersistSession();
        undertowEmbeddedServletContainerFactory41.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory41.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory41.setDisplayName("hi!");
        undertowEmbeddedServletContainerFactory41.setSessionTimeout(1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList52 = undertowEmbeddedServletContainerFactory41.builderCustomizers;
        undertowEmbeddedServletContainerFactory13.builderCustomizers = undertowBuilderCustomizerList52;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList52;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int56 = undertowEmbeddedServletContainerFactory55.getSessionTimeout();
        boolean boolean57 = undertowEmbeddedServletContainerFactory55.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList58 = undertowEmbeddedServletContainerFactory55.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int60 = undertowEmbeddedServletContainerFactory59.getSessionTimeout();
        boolean boolean61 = undertowEmbeddedServletContainerFactory59.isPersistSession();
        undertowEmbeddedServletContainerFactory59.setPersistSession(false);
        undertowEmbeddedServletContainerFactory59.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList66 = undertowEmbeddedServletContainerFactory59.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory59.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int70 = undertowEmbeddedServletContainerFactory69.getSessionTimeout();
        boolean boolean71 = undertowEmbeddedServletContainerFactory69.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList72 = undertowEmbeddedServletContainerFactory69.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet73 = undertowEmbeddedServletContainerFactory69.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int75 = undertowEmbeddedServletContainerFactory74.getSessionTimeout();
        boolean boolean76 = undertowEmbeddedServletContainerFactory74.isPersistSession();
        undertowEmbeddedServletContainerFactory74.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder80 = undertowEmbeddedServletContainerFactory74.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager81 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer83 = undertowEmbeddedServletContainerFactory69.getUndertowEmbeddedServletContainer(builder80, deploymentManager81, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager84 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer86 = undertowEmbeddedServletContainerFactory59.getUndertowEmbeddedServletContainer(builder80, deploymentManager84, (int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray87 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList88 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList88, undertowDeploymentInfoCustomizerArray87);
        undertowEmbeddedServletContainerFactory59.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList88;
        undertowEmbeddedServletContainerFactory55.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList88;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList88;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo93 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo93);
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNull(resourceLoader15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList21);
        org.junit.Assert.assertNotNull(jspServlet22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1800 + "'", int24 == 1800);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer32);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1800 + "'", int42 == 1800);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1800 + "'", int56 == 1800);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1800 + "'", int60 == 1800);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList66);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1800 + "'", int70 == 1800);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList72);
        org.junit.Assert.assertNotNull(jspServlet73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1800 + "'", int75 == 1800);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer83);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer86);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test14384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14384");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory2.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        undertowEmbeddedServletContainerFactory5.setPort(0);
        java.net.InetAddress inetAddress10 = null;
        undertowEmbeddedServletContainerFactory5.setAddress(inetAddress10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList16 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList16, undertowBuilderCustomizerArray15);
        undertowEmbeddedServletContainerFactory12.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList16);
        undertowEmbeddedServletContainerFactory5.builderCustomizers = undertowBuilderCustomizerList16;
        undertowEmbeddedServletContainerFactory2.builderCustomizers = undertowBuilderCustomizerList16;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getSessionTimeout();
        boolean boolean23 = undertowEmbeddedServletContainerFactory21.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList24 = undertowEmbeddedServletContainerFactory21.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet25 = undertowEmbeddedServletContainerFactory21.getJspServlet();
        undertowEmbeddedServletContainerFactory21.directBuffers = true;
        java.io.File file28 = null;
        undertowEmbeddedServletContainerFactory21.setDocumentRoot(file28);
        undertowEmbeddedServletContainerFactory21.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray32 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory21.addBuilderCustomizers(undertowBuilderCustomizerArray32);
        org.springframework.boot.context.embedded.Compression compression34 = null;
        undertowEmbeddedServletContainerFactory21.setCompression(compression34);
        undertowEmbeddedServletContainerFactory21.setBuffersPerRegion((java.lang.Integer) 1800);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo38 = null;
        undertowEmbeddedServletContainerFactory21.configureErrorPages(deploymentInfo38);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection40 = undertowEmbeddedServletContainerFactory21.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory2.setBuilderCustomizers(undertowBuilderCustomizerCollection40);
        java.lang.String str42 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList43 = undertowEmbeddedServletContainerFactory2.builderCustomizers;
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1800 + "'", int22 == 1800);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList24);
        org.junit.Assert.assertNotNull(jspServlet25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray32);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList43);
    }

    @Test
    public void test14385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14385");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory0.getAddress();
        java.net.InetAddress inetAddress19 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress19);
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean25 = undertowEmbeddedServletContainerFactory24.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory24.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory24.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings30);
        org.springframework.boot.context.embedded.Ssl ssl32 = undertowEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer35 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap34);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray36 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer35 };
        initializer33.initializers = servletContextInitializerArray36;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray38 = initializer33.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray39 = initializer33.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer42 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap41);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray43 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer42 };
        initializer40.initializers = servletContextInitializerArray43;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray45 = initializer40.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray46 = initializer40.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray47 = null;
        initializer40.initializers = servletContextInitializerArray47;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int50 = undertowEmbeddedServletContainerFactory49.getSessionTimeout();
        boolean boolean51 = undertowEmbeddedServletContainerFactory49.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList52 = undertowEmbeddedServletContainerFactory49.builderCustomizers;
        org.springframework.boot.context.embedded.Compression compression53 = null;
        undertowEmbeddedServletContainerFactory49.setCompression(compression53);
        undertowEmbeddedServletContainerFactory49.setUseForwardHeaders(false);
        undertowEmbeddedServletContainerFactory49.accessLogEnabled = true;
        java.io.File file59 = null;
        undertowEmbeddedServletContainerFactory49.setSessionStoreDir(file59);
        java.io.File file61 = undertowEmbeddedServletContainerFactory49.accessLogDirectory;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer65 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap64);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray66 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer65 };
        initializer63.initializers = servletContextInitializerArray66;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer68 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer70 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap69);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray71 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer70 };
        initializer68.initializers = servletContextInitializerArray71;
        initializer63.initializers = servletContextInitializerArray71;
        initializer62.initializers = servletContextInitializerArray71;
        undertowEmbeddedServletContainerFactory49.addInitializers(servletContextInitializerArray71);
        initializer40.initializers = servletContextInitializerArray71;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray77 = initializer40.initializers;
        initializer33.initializers = servletContextInitializerArray77;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer79 = undertowEmbeddedServletContainerFactory0.getEmbeddedServletContainer(servletContextInitializerArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: java.lang.NullPointerException");
        } catch (java.lang.RuntimeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNull(ssl32);
        org.junit.Assert.assertNotNull(servletContextInitializerArray36);
        org.junit.Assert.assertNotNull(servletContextInitializerArray38);
        org.junit.Assert.assertNotNull(servletContextInitializerArray39);
        org.junit.Assert.assertNotNull(servletContextInitializerArray43);
        org.junit.Assert.assertNotNull(servletContextInitializerArray45);
        org.junit.Assert.assertNotNull(servletContextInitializerArray46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1800 + "'", int50 == 1800);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList52);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(servletContextInitializerArray66);
        org.junit.Assert.assertNotNull(servletContextInitializerArray71);
        org.junit.Assert.assertNotNull(servletContextInitializerArray77);
    }

    @Test
    public void test14386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14386");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) true);
        java.lang.ClassLoader classLoader8 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = true;
        java.io.File file11 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file11);
        java.io.File file13 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test14387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14387");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "";
        jarResourceManager0.jarPath = "0.0.0.0";
        boolean boolean6 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.close();
        jarResourceManager0.jarPath = "hi!";
        jarResourceManager0.close();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test14388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14388");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        java.lang.String str5 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        undertowEmbeddedServletContainerFactory11.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder17 = undertowEmbeddedServletContainerFactory11.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager18 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer20 = undertowEmbeddedServletContainerFactory6.getUndertowEmbeddedServletContainer(builder17, deploymentManager18, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer23 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder17, deploymentManager21, (int) (byte) 100);
        java.lang.Integer int24 = undertowEmbeddedServletContainerFactory2.bufferSize;
        org.springframework.boot.context.embedded.Compression compression25 = undertowEmbeddedServletContainerFactory2.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int27 = undertowEmbeddedServletContainerFactory26.getSessionTimeout();
        boolean boolean28 = undertowEmbeddedServletContainerFactory26.isPersistSession();
        java.io.File file29 = undertowEmbeddedServletContainerFactory26.accessLogDirectory;
        undertowEmbeddedServletContainerFactory26.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory26.setPort((int) (short) 0);
        undertowEmbeddedServletContainerFactory26.accessLogPattern = "";
        org.springframework.boot.context.embedded.Ssl ssl36 = null;
        undertowEmbeddedServletContainerFactory26.setSsl(ssl36);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int39 = undertowEmbeddedServletContainerFactory38.getSessionTimeout();
        boolean boolean40 = undertowEmbeddedServletContainerFactory38.isPersistSession();
        undertowEmbeddedServletContainerFactory38.setPersistSession(false);
        undertowEmbeddedServletContainerFactory38.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList45 = undertowEmbeddedServletContainerFactory38.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory38.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int49 = undertowEmbeddedServletContainerFactory48.getSessionTimeout();
        boolean boolean50 = undertowEmbeddedServletContainerFactory48.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList51 = undertowEmbeddedServletContainerFactory48.builderCustomizers;
        undertowEmbeddedServletContainerFactory38.builderCustomizers = undertowBuilderCustomizerList51;
        java.io.File file53 = null;
        undertowEmbeddedServletContainerFactory38.accessLogDirectory = file53;
        boolean boolean55 = undertowEmbeddedServletContainerFactory38.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int57 = undertowEmbeddedServletContainerFactory56.getSessionTimeout();
        boolean boolean58 = undertowEmbeddedServletContainerFactory56.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList59 = undertowEmbeddedServletContainerFactory56.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet60 = undertowEmbeddedServletContainerFactory56.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList61 = undertowEmbeddedServletContainerFactory56.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int63 = undertowEmbeddedServletContainerFactory62.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray64 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory62.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray64);
        undertowEmbeddedServletContainerFactory56.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray64);
        undertowEmbeddedServletContainerFactory38.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray64);
        undertowEmbeddedServletContainerFactory26.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray64);
        undertowEmbeddedServletContainerFactory2.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray64);
        undertowEmbeddedServletContainerFactory2.setSessionTimeout((int) (short) 100);
        java.io.File file72 = undertowEmbeddedServletContainerFactory2.getDocumentRoot();
        undertowEmbeddedServletContainerFactory2.setPersistSession(true);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory2.createAccessLogDirectoryIfNecessary();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Access log directory is not set");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer20);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(compression25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1800 + "'", int27 == 1800);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1800 + "'", int39 == 1800);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1800 + "'", int49 == 1800);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1800 + "'", int57 == 1800);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList59);
        org.junit.Assert.assertNotNull(jspServlet60);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 8080 + "'", int63 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray64);
        org.junit.Assert.assertNull(file72);
    }

    @Test
    public void test14389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14389");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory0.bufferSize;
        int int8 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory0.ioThreads;
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        undertowEmbeddedServletContainerFactory0.setDisplayName("");
        java.lang.String str14 = undertowEmbeddedServletContainerFactory0.getContextPath();
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray15 = undertowEmbeddedServletContainerFactory0.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8080 + "'", int8 == 8080);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test14390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14390");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.bufferSize = 8080;
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory0.getAddress();
        java.net.InetAddress inetAddress19 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress19);
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo23 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo23);
        undertowEmbeddedServletContainerFactory0.setDisplayName("");
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory29.accessLogEnabled = false;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray32 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList33 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList33, undertowBuilderCustomizerArray32);
        undertowEmbeddedServletContainerFactory29.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList33);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList33;
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        java.net.InetAddress inetAddress39 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress39);
        java.lang.String str41 = undertowEmbeddedServletContainerFactory0.getContextPath();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
    }

    @Test
    public void test14391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14391");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection5 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        java.io.File file6 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.xnio.XnioWorker xnioWorker7 = undertowEmbeddedServletContainerFactory0.createWorker();
        org.springframework.core.io.ResourceLoader resourceLoader8 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection9 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader10);
        undertowEmbeddedServletContainerFactory0.setDisplayName("0.0.0.0");
        boolean boolean14 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(xnioWorker7);
        org.junit.Assert.assertNull(resourceLoader8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test14392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14392");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        undertowEmbeddedServletContainerFactory2.resourceLoader = resourceLoader4;
        java.lang.String str6 = undertowEmbeddedServletContainerFactory2.getContextPath();
        undertowEmbeddedServletContainerFactory2.setBuffersPerRegion((java.lang.Integer) 0);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory2.builderCustomizers;
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
    }

    @Test
    public void test14393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14393");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        boolean boolean2 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean3 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean4 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str5 = jarResourceManager0.jarPath;
        jarResourceManager0.jarPath = "hi!";
        jarResourceManager0.close();
        boolean boolean9 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str10 = jarResourceManager0.jarPath;
        jarResourceManager0.jarPath = "";
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test14394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14394");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setDisplayName("hi!");
        java.io.File file9 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file9);
        org.springframework.boot.context.embedded.Ssl ssl11 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList16 = undertowEmbeddedServletContainerFactory15.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int18 = undertowEmbeddedServletContainerFactory17.getPort();
        java.lang.Integer int19 = undertowEmbeddedServletContainerFactory17.bufferSize;
        java.io.File file20 = null;
        undertowEmbeddedServletContainerFactory17.setSessionStoreDir(file20);
        java.io.File file22 = null;
        undertowEmbeddedServletContainerFactory17.accessLogDirectory = file22;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int26 = undertowEmbeddedServletContainerFactory25.getSessionTimeout();
        boolean boolean27 = undertowEmbeddedServletContainerFactory25.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList28 = undertowEmbeddedServletContainerFactory25.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet29 = undertowEmbeddedServletContainerFactory25.getJspServlet();
        undertowEmbeddedServletContainerFactory17.setJspServlet(jspServlet29);
        undertowEmbeddedServletContainerFactory15.setJspServlet(jspServlet29);
        java.lang.Integer int32 = undertowEmbeddedServletContainerFactory15.workerThreads;
        java.lang.ClassLoader classLoader33 = undertowEmbeddedServletContainerFactory15.getServletClassLoader();
        java.lang.String str34 = undertowEmbeddedServletContainerFactory15.getListenAddress();
        io.undertow.Undertow.Builder builder36 = undertowEmbeddedServletContainerFactory15.createBuilder(35);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.configureSsl(ssl11, 100, builder36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8080 + "'", int18 == 8080);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1800 + "'", int26 == 1800);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList28);
        org.junit.Assert.assertNotNull(jspServlet29);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "0.0.0.0" + "'", str34, "0.0.0.0");
        org.junit.Assert.assertNotNull(builder36);
    }

    @Test
    public void test14395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14395");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory0.getSsl();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 10);
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("0.0.0.0");
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 97);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test14396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14396");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        org.xnio.XnioWorker xnioWorker2 = undertowEmbeddedServletContainerFactory1.createWorker();
        undertowEmbeddedServletContainerFactory1.accessLogEnabled = true;
        java.lang.ClassLoader classLoader5 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader6;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList11 = undertowEmbeddedServletContainerFactory8.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet12 = undertowEmbeddedServletContainerFactory8.getJspServlet();
        undertowEmbeddedServletContainerFactory8.directBuffers = true;
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory8.setDocumentRoot(file15);
        undertowEmbeddedServletContainerFactory8.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray19 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory8.addBuilderCustomizers(undertowBuilderCustomizerArray19);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getSessionTimeout();
        boolean boolean23 = undertowEmbeddedServletContainerFactory21.isPersistSession();
        java.io.File file24 = undertowEmbeddedServletContainerFactory21.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = undertowEmbeddedServletContainerFactory21.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = undertowEmbeddedServletContainerFactory21.getMimeMappings();
        java.lang.Integer int27 = undertowEmbeddedServletContainerFactory21.buffersPerRegion;
        io.undertow.Undertow.Builder builder29 = undertowEmbeddedServletContainerFactory21.createBuilder(10);
        undertowEmbeddedServletContainerFactory21.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str32 = undertowEmbeddedServletContainerFactory21.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int34 = undertowEmbeddedServletContainerFactory33.getSessionTimeout();
        boolean boolean35 = undertowEmbeddedServletContainerFactory33.isPersistSession();
        undertowEmbeddedServletContainerFactory33.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder39 = undertowEmbeddedServletContainerFactory33.createBuilder((-1));
        undertowEmbeddedServletContainerFactory33.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int43 = undertowEmbeddedServletContainerFactory42.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray44 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory42.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray44);
        undertowEmbeddedServletContainerFactory33.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray44);
        undertowEmbeddedServletContainerFactory21.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray44);
        undertowEmbeddedServletContainerFactory8.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray44);
        java.io.File file49 = null;
        undertowEmbeddedServletContainerFactory8.setSessionStoreDir(file49);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int52 = undertowEmbeddedServletContainerFactory51.getSessionTimeout();
        boolean boolean53 = undertowEmbeddedServletContainerFactory51.isPersistSession();
        java.io.File file54 = undertowEmbeddedServletContainerFactory51.accessLogDirectory;
        undertowEmbeddedServletContainerFactory51.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory51.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int60 = undertowEmbeddedServletContainerFactory59.getSessionTimeout();
        boolean boolean61 = undertowEmbeddedServletContainerFactory59.isPersistSession();
        java.io.File file62 = undertowEmbeddedServletContainerFactory59.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings63 = undertowEmbeddedServletContainerFactory59.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings64 = undertowEmbeddedServletContainerFactory59.getMimeMappings();
        java.io.File file65 = undertowEmbeddedServletContainerFactory59.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int67 = undertowEmbeddedServletContainerFactory66.getPort();
        java.lang.Integer int68 = undertowEmbeddedServletContainerFactory66.bufferSize;
        java.io.File file69 = null;
        undertowEmbeddedServletContainerFactory66.setSessionStoreDir(file69);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer72 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap71);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray73 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer72 };
        undertowEmbeddedServletContainerFactory66.addInitializers(servletContextInitializerArray73);
        undertowEmbeddedServletContainerFactory59.addInitializers(servletContextInitializerArray73);
        undertowEmbeddedServletContainerFactory51.addInitializers(servletContextInitializerArray73);
        undertowEmbeddedServletContainerFactory8.addInitializers(servletContextInitializerArray73);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory78 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray79 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList80 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList80, undertowBuilderCustomizerArray79);
        undertowEmbeddedServletContainerFactory78.builderCustomizers = undertowBuilderCustomizerList80;
        java.io.File file83 = null;
        undertowEmbeddedServletContainerFactory78.setSessionStoreDir(file83);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection85 = undertowEmbeddedServletContainerFactory78.getDeploymentInfoCustomizers();
        boolean boolean86 = undertowEmbeddedServletContainerFactory78.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList87 = undertowEmbeddedServletContainerFactory78.builderCustomizers;
        undertowEmbeddedServletContainerFactory8.builderCustomizers = undertowBuilderCustomizerList87;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList87;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("0.0.0.0");
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
        java.lang.ClassLoader classLoader94 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.junit.Assert.assertNotNull(xnioWorker2);
        org.junit.Assert.assertNotNull(classLoader5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList11);
        org.junit.Assert.assertNotNull(jspServlet12);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1800 + "'", int22 == 1800);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1800 + "'", int34 == 1800);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 8080 + "'", int43 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray44);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1800 + "'", int52 == 1800);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1800 + "'", int60 == 1800);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNotNull(mimeMappings63);
        org.junit.Assert.assertNotNull(mimeMappings64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 8080 + "'", int67 == 8080);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(servletContextInitializerArray73);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList87);
        org.junit.Assert.assertNotNull(classLoader94);
    }

    @Test
    public void test14397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14397");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) true);
        java.lang.ClassLoader classLoader8 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = true;
        undertowEmbeddedServletContainerFactory0.accessLogPattern = "";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(classLoader8);
    }

    @Test
    public void test14398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14398");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader8 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader8;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
    }

    @Test
    public void test14399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14399");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory0.directBuffers;
        java.io.File file14 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file14;
        java.lang.Boolean boolean16 = undertowEmbeddedServletContainerFactory0.directBuffers;
        undertowEmbeddedServletContainerFactory0.workerThreads = 100;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int20 = undertowEmbeddedServletContainerFactory19.getSessionTimeout();
        boolean boolean21 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        undertowEmbeddedServletContainerFactory19.setPersistSession(false);
        undertowEmbeddedServletContainerFactory19.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList26 = undertowEmbeddedServletContainerFactory19.deploymentInfoCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList27 = undertowEmbeddedServletContainerFactory19.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet28 = undertowEmbeddedServletContainerFactory19.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet28);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = undertowEmbeddedServletContainerFactory32.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader34 = null;
        undertowEmbeddedServletContainerFactory32.resourceLoader = resourceLoader34;
        undertowEmbeddedServletContainerFactory32.directBuffers = true;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo38 = null;
        undertowEmbeddedServletContainerFactory32.configureErrorPages(deploymentInfo38);
        org.springframework.core.io.ResourceLoader resourceLoader40 = null;
        undertowEmbeddedServletContainerFactory32.setResourceLoader(resourceLoader40);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = undertowEmbeddedServletContainerFactory44.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader46 = undertowEmbeddedServletContainerFactory44.resourceLoader;
        org.springframework.core.io.ResourceLoader resourceLoader47 = null;
        undertowEmbeddedServletContainerFactory44.setResourceLoader(resourceLoader47);
        undertowEmbeddedServletContainerFactory44.setRegisterDefaultServlet(true);
        org.springframework.core.io.ResourceLoader resourceLoader51 = undertowEmbeddedServletContainerFactory44.resourceLoader;
        undertowEmbeddedServletContainerFactory44.bufferSize = (-1);
        java.io.File file54 = undertowEmbeddedServletContainerFactory44.getSessionStoreDir();
        java.lang.String str55 = undertowEmbeddedServletContainerFactory44.getListenAddress();
        undertowEmbeddedServletContainerFactory44.ioThreads = (-1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings58 = undertowEmbeddedServletContainerFactory44.getMimeMappings();
        undertowEmbeddedServletContainerFactory32.setMimeMappings(mimeMappings58);
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings58);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList26);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList27);
        org.junit.Assert.assertNotNull(jspServlet28);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNotNull(mimeMappings45);
        org.junit.Assert.assertNull(resourceLoader46);
        org.junit.Assert.assertNull(resourceLoader51);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "0.0.0.0" + "'", str55, "0.0.0.0");
        org.junit.Assert.assertNotNull(mimeMappings58);
    }

    @Test
    public void test14400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14400");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        java.io.File file4 = undertowEmbeddedServletContainerFactory2.getDocumentRoot();
        undertowEmbeddedServletContainerFactory2.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory2.bufferSize = (-1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getSessionTimeout();
        boolean boolean11 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        undertowEmbeddedServletContainerFactory9.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory9.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        java.io.File file19 = undertowEmbeddedServletContainerFactory16.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList20 = undertowEmbeddedServletContainerFactory16.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory9.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList20;
        undertowEmbeddedServletContainerFactory2.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList20;
        org.springframework.core.io.ResourceLoader resourceLoader23 = null;
        undertowEmbeddedServletContainerFactory2.resourceLoader = resourceLoader23;
        undertowEmbeddedServletContainerFactory2.accessLogEnabled = false;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.Compression compression29 = null;
        undertowEmbeddedServletContainerFactory28.setCompression(compression29);
        boolean boolean31 = undertowEmbeddedServletContainerFactory28.isRegisterDefaultServlet();
        boolean boolean32 = undertowEmbeddedServletContainerFactory28.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet33 = undertowEmbeddedServletContainerFactory28.getErrorPages();
        undertowEmbeddedServletContainerFactory2.setErrorPages(errorPageSet33);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection35 = undertowEmbeddedServletContainerFactory2.getDeploymentInfoCustomizers();
        java.lang.String str36 = undertowEmbeddedServletContainerFactory2.getContextPath();
        io.undertow.server.HttpHandler httpHandler37 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.accesslog.AccessLogHandler accessLogHandler38 = undertowEmbeddedServletContainerFactory2.createAccessLogHandler(httpHandler37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Access log directory is not set");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList20);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(errorPageSet33);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
    }

    @Test
    public void test14401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14401");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory4.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory4.resourceLoader;
        undertowEmbeddedServletContainerFactory4.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int10 = undertowEmbeddedServletContainerFactory9.getSessionTimeout();
        boolean boolean11 = undertowEmbeddedServletContainerFactory9.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = undertowEmbeddedServletContainerFactory9.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet13 = undertowEmbeddedServletContainerFactory9.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        undertowEmbeddedServletContainerFactory14.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder20 = undertowEmbeddedServletContainerFactory14.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer23 = undertowEmbeddedServletContainerFactory9.getUndertowEmbeddedServletContainer(builder20, deploymentManager21, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer26 = undertowEmbeddedServletContainerFactory4.getUndertowEmbeddedServletContainer(builder20, deploymentManager24, (int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer29 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder20, deploymentManager27, (int) (short) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList30 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection31 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 0;
        org.springframework.core.io.ResourceLoader resourceLoader34 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader34;
        int int36 = undertowEmbeddedServletContainerFactory0.getPort();
        boolean boolean37 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(resourceLoader6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList12);
        org.junit.Assert.assertNotNull(jspServlet13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer23);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer26);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer29);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList30);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8080 + "'", int36 == 8080);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test14402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14402");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.workerThreads = 100;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        java.io.File file11 = undertowEmbeddedServletContainerFactory8.accessLogDirectory;
        undertowEmbeddedServletContainerFactory8.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory8.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory8.setBufferSize((java.lang.Integer) 8080);
        undertowEmbeddedServletContainerFactory8.directBuffers = false;
        undertowEmbeddedServletContainerFactory8.bufferSize = (-1);
        undertowEmbeddedServletContainerFactory8.useForwardHeaders = false;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int25 = undertowEmbeddedServletContainerFactory24.getSessionTimeout();
        boolean boolean26 = undertowEmbeddedServletContainerFactory24.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList27 = undertowEmbeddedServletContainerFactory24.builderCustomizers;
        java.lang.ClassLoader classLoader28 = undertowEmbeddedServletContainerFactory24.getServletClassLoader();
        undertowEmbeddedServletContainerFactory24.accessLogPattern = "";
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList31 = undertowEmbeddedServletContainerFactory24.deploymentInfoCustomizers;
        boolean boolean32 = undertowEmbeddedServletContainerFactory24.accessLogEnabled;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory34.setWorkerThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder38 = undertowEmbeddedServletContainerFactory34.createBuilder((int) (byte) -1);
        io.undertow.server.handlers.resource.ResourceManager resourceManager39 = undertowEmbeddedServletContainerFactory34.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int41 = undertowEmbeddedServletContainerFactory40.getSessionTimeout();
        boolean boolean42 = undertowEmbeddedServletContainerFactory40.isPersistSession();
        java.io.File file43 = undertowEmbeddedServletContainerFactory40.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings44 = undertowEmbeddedServletContainerFactory40.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = undertowEmbeddedServletContainerFactory40.getMimeMappings();
        java.lang.Integer int46 = undertowEmbeddedServletContainerFactory40.buffersPerRegion;
        undertowEmbeddedServletContainerFactory40.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int50 = undertowEmbeddedServletContainerFactory49.getSessionTimeout();
        boolean boolean51 = undertowEmbeddedServletContainerFactory49.isPersistSession();
        undertowEmbeddedServletContainerFactory49.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder55 = undertowEmbeddedServletContainerFactory49.createBuilder((-1));
        undertowEmbeddedServletContainerFactory49.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int59 = undertowEmbeddedServletContainerFactory58.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray60 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory58.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray60);
        undertowEmbeddedServletContainerFactory49.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray60);
        undertowEmbeddedServletContainerFactory40.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray60);
        undertowEmbeddedServletContainerFactory34.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray60);
        undertowEmbeddedServletContainerFactory24.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray60);
        undertowEmbeddedServletContainerFactory8.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray60);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray60);
        org.springframework.boot.context.embedded.Ssl ssl68 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl68);
        org.springframework.boot.context.embedded.Ssl ssl70 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode71 = undertowEmbeddedServletContainerFactory0.getSslClientAuthMode(ssl70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1800 + "'", int25 == 1800);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(resourceManager39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1800 + "'", int41 == 1800);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(mimeMappings44);
        org.junit.Assert.assertNotNull(mimeMappings45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1800 + "'", int50 == 1800);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 8080 + "'", int59 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray60);
    }

    @Test
    public void test14403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14403");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        boolean boolean3 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.lang.Boolean boolean4 = undertowEmbeddedServletContainerFactory0.directBuffers;
        undertowEmbeddedServletContainerFactory0.setDisplayName("");
        undertowEmbeddedServletContainerFactory0.setContextPath("");
        java.io.File file9 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test14404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14404");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) 1);
        java.io.File file7 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.lang.ClassLoader classLoader8 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl9);
        java.io.File file11 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(classLoader8);
    }

    @Test
    public void test14405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14405");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.io.File file10 = undertowEmbeddedServletContainerFactory7.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList11 = undertowEmbeddedServletContainerFactory7.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList11;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader14);
        java.lang.Integer int16 = undertowEmbeddedServletContainerFactory0.bufferSize;
        boolean boolean17 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        java.io.File file18 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList11);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(file18);
    }

    @Test
    public void test14406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14406");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        java.io.File file5 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file5);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file8);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getPort();
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory10.bufferSize;
        java.io.File file13 = null;
        undertowEmbeddedServletContainerFactory10.setSessionStoreDir(file13);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory10.accessLogDirectory = file15;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory10.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int19 = undertowEmbeddedServletContainerFactory18.getSessionTimeout();
        boolean boolean20 = undertowEmbeddedServletContainerFactory18.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList21 = undertowEmbeddedServletContainerFactory18.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet22 = undertowEmbeddedServletContainerFactory18.getJspServlet();
        undertowEmbeddedServletContainerFactory10.setJspServlet(jspServlet22);
        org.springframework.core.io.ResourceLoader resourceLoader24 = null;
        undertowEmbeddedServletContainerFactory10.resourceLoader = resourceLoader24;
        io.undertow.Undertow.Builder builder27 = undertowEmbeddedServletContainerFactory10.createBuilder((int) ' ');
        io.undertow.servlet.api.DeploymentManager deploymentManager28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer30 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder27, deploymentManager28, (int) 'a');
        org.xnio.XnioWorker xnioWorker31 = undertowEmbeddedServletContainerFactory0.createWorker();
        org.springframework.boot.context.embedded.ErrorPage errorPage32 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage33 = undertowEmbeddedServletContainerFactory0.getUndertowErrorPage(errorPage32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8080 + "'", int11 == 8080);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1800 + "'", int19 == 1800);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList21);
        org.junit.Assert.assertNotNull(jspServlet22);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer30);
        org.junit.Assert.assertNotNull(xnioWorker31);
    }

    @Test
    public void test14407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14407");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(false);
        boolean boolean7 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        undertowEmbeddedServletContainerFactory8.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory8.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory8.setDisplayName("hi!");
        boolean boolean17 = undertowEmbeddedServletContainerFactory8.isRegisterDefaultServlet();
        boolean boolean18 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        boolean boolean19 = undertowEmbeddedServletContainerFactory8.isAccessLogEnabled();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList20 = undertowEmbeddedServletContainerFactory8.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getSessionTimeout();
        boolean boolean23 = undertowEmbeddedServletContainerFactory21.isPersistSession();
        undertowEmbeddedServletContainerFactory21.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory21.setPersistSession(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        java.io.File file31 = undertowEmbeddedServletContainerFactory28.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList32 = undertowEmbeddedServletContainerFactory28.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory21.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList32;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        undertowEmbeddedServletContainerFactory36.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int40 = undertowEmbeddedServletContainerFactory39.getSessionTimeout();
        boolean boolean41 = undertowEmbeddedServletContainerFactory39.isPersistSession();
        undertowEmbeddedServletContainerFactory39.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory39.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray46 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory39.addErrorPages(errorPageArray46);
        undertowEmbeddedServletContainerFactory36.addErrorPages(errorPageArray46);
        undertowEmbeddedServletContainerFactory21.addErrorPages(errorPageArray46);
        undertowEmbeddedServletContainerFactory8.addErrorPages(errorPageArray46);
        undertowEmbeddedServletContainerFactory8.setPort((int) ' ');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int54 = undertowEmbeddedServletContainerFactory53.getSessionTimeout();
        boolean boolean55 = undertowEmbeddedServletContainerFactory53.isPersistSession();
        undertowEmbeddedServletContainerFactory53.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory53.setUseForwardHeaders(false);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray60 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory53.addErrorPages(errorPageArray60);
        undertowEmbeddedServletContainerFactory8.addErrorPages(errorPageArray60);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray60);
        boolean boolean64 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/' and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1800 + "'", int22 == 1800);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList32);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1800 + "'", int40 == 1800);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(errorPageArray46);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1800 + "'", int54 == 1800);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(errorPageArray60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test14408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14408");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory0.directBuffers;
        org.springframework.boot.context.embedded.Compression compression7 = undertowEmbeddedServletContainerFactory0.getCompression();
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        undertowEmbeddedServletContainerFactory0.ioThreads = 1;
        undertowEmbeddedServletContainerFactory0.bufferSize = 1800;
        java.io.File file14 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file14);
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) (-1));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(compression7);
    }

    @Test
    public void test14409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14409");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.net.InetAddress inetAddress6 = undertowEmbeddedServletContainerFactory0.getAddress();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        undertowEmbeddedServletContainerFactory0.setPort((int) ' ');
        org.springframework.boot.context.embedded.Compression compression12 = undertowEmbeddedServletContainerFactory0.getCompression();
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.xnio.XnioWorker xnioWorker17 = undertowEmbeddedServletContainerFactory0.createWorker();
        int int18 = undertowEmbeddedServletContainerFactory0.getPort();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(compression12);
        org.junit.Assert.assertNotNull(xnioWorker17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 32 + "'", int18 == 32);
    }

    @Test
    public void test14410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14410");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        boolean boolean8 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory11.setWorkerThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder15 = undertowEmbeddedServletContainerFactory11.createBuilder((int) (byte) -1);
        undertowEmbeddedServletContainerFactory11.buffersPerRegion = (-1);
        java.lang.ClassLoader classLoader18 = undertowEmbeddedServletContainerFactory11.getServletClassLoader();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int20 = undertowEmbeddedServletContainerFactory19.getSessionTimeout();
        boolean boolean21 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList22 = undertowEmbeddedServletContainerFactory19.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet23 = undertowEmbeddedServletContainerFactory19.getJspServlet();
        undertowEmbeddedServletContainerFactory19.directBuffers = true;
        java.io.File file26 = null;
        undertowEmbeddedServletContainerFactory19.setDocumentRoot(file26);
        undertowEmbeddedServletContainerFactory19.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray30 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory19.addBuilderCustomizers(undertowBuilderCustomizerArray30);
        undertowEmbeddedServletContainerFactory11.addBuilderCustomizers(undertowBuilderCustomizerArray30);
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray30);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(classLoader18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList22);
        org.junit.Assert.assertNotNull(jspServlet23);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray30);
        org.junit.Assert.assertNotNull(mimeMappings34);
    }

    @Test
    public void test14411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14411");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        java.lang.String str5 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory6.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet10 = undertowEmbeddedServletContainerFactory6.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        undertowEmbeddedServletContainerFactory11.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder17 = undertowEmbeddedServletContainerFactory11.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager18 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer20 = undertowEmbeddedServletContainerFactory6.getUndertowEmbeddedServletContainer(builder17, deploymentManager18, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer23 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder17, deploymentManager21, (int) (byte) 100);
        java.lang.Integer int24 = undertowEmbeddedServletContainerFactory2.bufferSize;
        org.springframework.boot.context.embedded.Compression compression25 = undertowEmbeddedServletContainerFactory2.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int27 = undertowEmbeddedServletContainerFactory26.getSessionTimeout();
        boolean boolean28 = undertowEmbeddedServletContainerFactory26.isPersistSession();
        java.io.File file29 = undertowEmbeddedServletContainerFactory26.accessLogDirectory;
        undertowEmbeddedServletContainerFactory26.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory26.setPort((int) (short) 0);
        undertowEmbeddedServletContainerFactory26.accessLogPattern = "";
        org.springframework.boot.context.embedded.Ssl ssl36 = null;
        undertowEmbeddedServletContainerFactory26.setSsl(ssl36);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int39 = undertowEmbeddedServletContainerFactory38.getSessionTimeout();
        boolean boolean40 = undertowEmbeddedServletContainerFactory38.isPersistSession();
        undertowEmbeddedServletContainerFactory38.setPersistSession(false);
        undertowEmbeddedServletContainerFactory38.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList45 = undertowEmbeddedServletContainerFactory38.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory38.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int49 = undertowEmbeddedServletContainerFactory48.getSessionTimeout();
        boolean boolean50 = undertowEmbeddedServletContainerFactory48.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList51 = undertowEmbeddedServletContainerFactory48.builderCustomizers;
        undertowEmbeddedServletContainerFactory38.builderCustomizers = undertowBuilderCustomizerList51;
        java.io.File file53 = null;
        undertowEmbeddedServletContainerFactory38.accessLogDirectory = file53;
        boolean boolean55 = undertowEmbeddedServletContainerFactory38.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int57 = undertowEmbeddedServletContainerFactory56.getSessionTimeout();
        boolean boolean58 = undertowEmbeddedServletContainerFactory56.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList59 = undertowEmbeddedServletContainerFactory56.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet60 = undertowEmbeddedServletContainerFactory56.getJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList61 = undertowEmbeddedServletContainerFactory56.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int63 = undertowEmbeddedServletContainerFactory62.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray64 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory62.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray64);
        undertowEmbeddedServletContainerFactory56.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray64);
        undertowEmbeddedServletContainerFactory38.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray64);
        undertowEmbeddedServletContainerFactory26.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray64);
        undertowEmbeddedServletContainerFactory2.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray64);
        java.io.File file70 = undertowEmbeddedServletContainerFactory2.getDocumentRoot();
        java.util.concurrent.TimeUnit timeUnit72 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory2.setSessionTimeout((int) (short) -1, timeUnit72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
        org.junit.Assert.assertNotNull(jspServlet10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer20);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(compression25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1800 + "'", int27 == 1800);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1800 + "'", int39 == 1800);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1800 + "'", int49 == 1800);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1800 + "'", int57 == 1800);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList59);
        org.junit.Assert.assertNotNull(jspServlet60);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 8080 + "'", int63 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray64);
        org.junit.Assert.assertNull(file70);
    }

    @Test
    public void test14412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14412");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet6 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file7);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 8080);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = true;
        undertowEmbeddedServletContainerFactory0.bufferSize = 35;
        boolean boolean15 = undertowEmbeddedServletContainerFactory0.isAccessLogEnabled();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(errorPageSet6);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test14413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14413");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray1 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList2, undertowBuilderCustomizerArray1);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList2;
        undertowEmbeddedServletContainerFactory0.workerThreads = 1;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.bufferSize = 10;
        org.springframework.core.io.ResourceLoader resourceLoader10 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.core.io.ResourceLoader resourceLoader11 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.core.io.ResourceLoader resourceLoader12 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader12;
        org.springframework.boot.context.embedded.Ssl ssl14 = null;
        undertowEmbeddedServletContainerFactory0.setSsl(ssl14);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getPort();
        java.lang.Integer int18 = undertowEmbeddedServletContainerFactory16.bufferSize;
        java.io.File file19 = null;
        undertowEmbeddedServletContainerFactory16.setSessionStoreDir(file19);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int22 = undertowEmbeddedServletContainerFactory21.getSessionTimeout();
        boolean boolean23 = undertowEmbeddedServletContainerFactory21.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList24 = undertowEmbeddedServletContainerFactory21.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet25 = undertowEmbeddedServletContainerFactory21.getJspServlet();
        boolean boolean26 = undertowEmbeddedServletContainerFactory21.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet27 = undertowEmbeddedServletContainerFactory21.getErrorPages();
        undertowEmbeddedServletContainerFactory16.setErrorPages(errorPageSet27);
        undertowEmbeddedServletContainerFactory16.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList31 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        undertowEmbeddedServletContainerFactory16.bufferSize = 8080;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = undertowEmbeddedServletContainerFactory16.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int36 = undertowEmbeddedServletContainerFactory35.getSessionTimeout();
        boolean boolean37 = undertowEmbeddedServletContainerFactory35.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList38 = undertowEmbeddedServletContainerFactory35.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet39 = undertowEmbeddedServletContainerFactory35.getJspServlet();
        boolean boolean40 = undertowEmbeddedServletContainerFactory35.useForwardHeaders;
        java.net.InetAddress inetAddress41 = undertowEmbeddedServletContainerFactory35.getAddress();
        java.lang.String str42 = undertowEmbeddedServletContainerFactory35.getDisplayName();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int44 = undertowEmbeddedServletContainerFactory43.getSessionTimeout();
        boolean boolean45 = undertowEmbeddedServletContainerFactory43.isPersistSession();
        java.io.File file46 = undertowEmbeddedServletContainerFactory43.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings47 = undertowEmbeddedServletContainerFactory43.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings48 = undertowEmbeddedServletContainerFactory43.getMimeMappings();
        java.lang.Integer int49 = undertowEmbeddedServletContainerFactory43.buffersPerRegion;
        io.undertow.Undertow.Builder builder51 = undertowEmbeddedServletContainerFactory43.createBuilder(10);
        undertowEmbeddedServletContainerFactory43.setBufferSize((java.lang.Integer) (-1));
        java.lang.String str54 = undertowEmbeddedServletContainerFactory43.accessLogPattern;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int56 = undertowEmbeddedServletContainerFactory55.getSessionTimeout();
        boolean boolean57 = undertowEmbeddedServletContainerFactory55.isPersistSession();
        undertowEmbeddedServletContainerFactory55.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder61 = undertowEmbeddedServletContainerFactory55.createBuilder((-1));
        undertowEmbeddedServletContainerFactory55.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int65 = undertowEmbeddedServletContainerFactory64.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray66 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory64.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray66);
        undertowEmbeddedServletContainerFactory55.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray66);
        undertowEmbeddedServletContainerFactory43.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray66);
        undertowEmbeddedServletContainerFactory35.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray66);
        undertowEmbeddedServletContainerFactory16.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray66);
        org.springframework.boot.context.embedded.JspServlet jspServlet72 = undertowEmbeddedServletContainerFactory16.getJspServlet();
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet72);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        java.net.InetAddress inetAddress76 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress76);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
        org.junit.Assert.assertNull(resourceLoader10);
        org.junit.Assert.assertNull(resourceLoader11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8080 + "'", int17 == 8080);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1800 + "'", int22 == 1800);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList24);
        org.junit.Assert.assertNotNull(jspServlet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(errorPageSet27);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList31);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1800 + "'", int36 == 1800);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList38);
        org.junit.Assert.assertNotNull(jspServlet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(inetAddress41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1800 + "'", int44 == 1800);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(mimeMappings47);
        org.junit.Assert.assertNotNull(mimeMappings48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1800 + "'", int56 == 1800);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 8080 + "'", int65 == 8080);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray66);
        org.junit.Assert.assertNotNull(jspServlet72);
    }

    @Test
    public void test14414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14414");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        undertowEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader5);
        java.lang.String str7 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        undertowEmbeddedServletContainerFactory2.setJspServletClassName("hi!");
        boolean boolean10 = undertowEmbeddedServletContainerFactory2.useForwardHeaders;
        undertowEmbeddedServletContainerFactory2.setBuffersPerRegion((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test14415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14415");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = (-1);
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo10 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo10);
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("hi!");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertNull(int5);
    }

    @Test
    public void test14416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14416");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        boolean boolean3 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory2.useForwardHeaders = false;
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory2.ioThreads;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory2.getBuilderCustomizers();
        boolean boolean8 = undertowEmbeddedServletContainerFactory2.accessLogEnabled;
        int int9 = undertowEmbeddedServletContainerFactory2.getPort();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test14417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14417");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory2.setPort((-1));
        java.io.File file28 = null;
        undertowEmbeddedServletContainerFactory2.setAccessLogDirectory(file28);
        java.io.File file30 = null;
        undertowEmbeddedServletContainerFactory2.setSessionStoreDir(file30);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test14418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14418");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getSessionTimeout();
        boolean boolean12 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = undertowEmbeddedServletContainerFactory10.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList13;
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file15;
        boolean boolean17 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        io.undertow.Undertow.Builder builder19 = undertowEmbeddedServletContainerFactory0.createBuilder(1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int21 = undertowEmbeddedServletContainerFactory20.getSessionTimeout();
        boolean boolean22 = undertowEmbeddedServletContainerFactory20.isPersistSession();
        undertowEmbeddedServletContainerFactory20.setPersistSession(false);
        undertowEmbeddedServletContainerFactory20.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList27 = undertowEmbeddedServletContainerFactory20.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory20.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int31 = undertowEmbeddedServletContainerFactory30.getSessionTimeout();
        boolean boolean32 = undertowEmbeddedServletContainerFactory30.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList33 = undertowEmbeddedServletContainerFactory30.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet34 = undertowEmbeddedServletContainerFactory30.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int36 = undertowEmbeddedServletContainerFactory35.getSessionTimeout();
        boolean boolean37 = undertowEmbeddedServletContainerFactory35.isPersistSession();
        undertowEmbeddedServletContainerFactory35.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder41 = undertowEmbeddedServletContainerFactory35.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager42 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer44 = undertowEmbeddedServletContainerFactory30.getUndertowEmbeddedServletContainer(builder41, deploymentManager42, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager45 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer47 = undertowEmbeddedServletContainerFactory20.getUndertowEmbeddedServletContainer(builder41, deploymentManager45, (int) (short) 0);
        io.undertow.servlet.api.DeploymentManager deploymentManager48 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer50 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder41, deploymentManager48, 8080);
        undertowEmbeddedServletContainerFactory0.useForwardHeaders = false;
        java.lang.String str53 = undertowEmbeddedServletContainerFactory0.getContextPath();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 10);
        java.io.File file56 = null;
        undertowEmbeddedServletContainerFactory0.accessLogDirectory = file56;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1800 + "'", int11 == 1800);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1800 + "'", int21 == 1800);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1800 + "'", int31 == 1800);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList33);
        org.junit.Assert.assertNotNull(jspServlet34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1800 + "'", int36 == 1800);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer44);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer47);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
    }

    @Test
    public void test14419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14419");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setPersistSession(false);
        undertowEmbeddedServletContainerFactory0.setUseForwardHeaders(true);
        io.undertow.server.handlers.resource.ResourceManager resourceManager7 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int9 = undertowEmbeddedServletContainerFactory8.getSessionTimeout();
        boolean boolean10 = undertowEmbeddedServletContainerFactory8.isPersistSession();
        java.io.File file11 = undertowEmbeddedServletContainerFactory8.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int15 = undertowEmbeddedServletContainerFactory14.getSessionTimeout();
        boolean boolean16 = undertowEmbeddedServletContainerFactory14.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = undertowEmbeddedServletContainerFactory14.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet18 = undertowEmbeddedServletContainerFactory14.getJspServlet();
        undertowEmbeddedServletContainerFactory8.setJspServlet(jspServlet18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList22 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList22, undertowBuilderCustomizerArray21);
        undertowEmbeddedServletContainerFactory20.builderCustomizers = undertowBuilderCustomizerList22;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection25 = undertowEmbeddedServletContainerFactory20.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory8.setBuilderCustomizers(undertowBuilderCustomizerCollection25);
        undertowEmbeddedServletContainerFactory0.setBuilderCustomizers(undertowBuilderCustomizerCollection25);
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection30 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        io.undertow.server.handlers.resource.ResourceManager resourceManager31 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList32 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.io.File file33 = null;
        undertowEmbeddedServletContainerFactory0.setAccessLogDirectory(file33);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(resourceManager7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList17);
        org.junit.Assert.assertNotNull(jspServlet18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection25);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection30);
        org.junit.Assert.assertNotNull(resourceManager31);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList32);
    }

    @Test
    public void test14420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14420");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager jarResourceManager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourceManager();
        jarResourceManager0.close();
        boolean boolean2 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean3 = jarResourceManager0.isResourceChangeListenerSupported();
        boolean boolean4 = jarResourceManager0.isResourceChangeListenerSupported();
        java.lang.String str5 = jarResourceManager0.jarPath;
        jarResourceManager0.jarPath = "hi!";
        jarResourceManager0.jarPath = "0.0.0.0";
        boolean boolean10 = jarResourceManager0.isResourceChangeListenerSupported();
        jarResourceManager0.close();
        boolean boolean12 = jarResourceManager0.isResourceChangeListenerSupported();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test14421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14421");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) '#');
        undertowEmbeddedServletContainerFactory2.useForwardHeaders = false;
        undertowEmbeddedServletContainerFactory2.buffersPerRegion = 1;
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory2.workerThreads;
        org.junit.Assert.assertNull(int7);
    }

    @Test
    public void test14422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14422");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        boolean boolean10 = undertowEmbeddedServletContainerFactory9.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int12 = undertowEmbeddedServletContainerFactory11.getSessionTimeout();
        boolean boolean13 = undertowEmbeddedServletContainerFactory11.isPersistSession();
        undertowEmbeddedServletContainerFactory11.setPersistSession(false);
        undertowEmbeddedServletContainerFactory11.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList18 = undertowEmbeddedServletContainerFactory11.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory9.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList18;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList18;
        boolean boolean21 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.Compression compression22 = undertowEmbeddedServletContainerFactory0.getCompression();
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(8080);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(compression22);
    }

    @Test
    public void test14423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14423");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory0.directBuffers;
        java.net.InetAddress inetAddress7 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress7);
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader9);
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        java.io.File file13 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test14424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14424");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.Boolean boolean3 = undertowEmbeddedServletContainerFactory0.directBuffers;
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory0.setAccessLogPattern("hi!");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNull(boolean3);
    }

    @Test
    public void test14425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14425");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory0.createBuilder((int) (byte) 1);
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory0.ioThreads = 10;
        int int11 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1800 + "'", int11 == 1800);
    }

    @Test
    public void test14426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14426");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        org.xnio.XnioWorker xnioWorker13 = undertowEmbeddedServletContainerFactory0.createWorker();
        java.io.File file14 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray16 = initializer15.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int18 = undertowEmbeddedServletContainerFactory17.getSessionTimeout();
        boolean boolean19 = undertowEmbeddedServletContainerFactory17.isPersistSession();
        java.io.File file20 = undertowEmbeddedServletContainerFactory17.accessLogDirectory;
        undertowEmbeddedServletContainerFactory17.setRegisterDefaultServlet(true);
        java.lang.Boolean boolean23 = undertowEmbeddedServletContainerFactory17.directBuffers;
        org.springframework.boot.context.embedded.Compression compression24 = undertowEmbeddedServletContainerFactory17.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int26 = undertowEmbeddedServletContainerFactory25.getPort();
        java.lang.Integer int27 = undertowEmbeddedServletContainerFactory25.bufferSize;
        java.io.File file28 = null;
        undertowEmbeddedServletContainerFactory25.setSessionStoreDir(file28);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer33 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap32);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray34 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer33 };
        initializer31.initializers = servletContextInitializerArray34;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer38 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap37);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray39 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer38 };
        initializer36.initializers = servletContextInitializerArray39;
        initializer31.initializers = servletContextInitializerArray39;
        initializer30.initializers = servletContextInitializerArray39;
        undertowEmbeddedServletContainerFactory25.addInitializers(servletContextInitializerArray39);
        undertowEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray39);
        initializer15.initializers = servletContextInitializerArray39;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int47 = undertowEmbeddedServletContainerFactory46.getSessionTimeout();
        boolean boolean48 = undertowEmbeddedServletContainerFactory46.isPersistSession();
        java.io.File file49 = undertowEmbeddedServletContainerFactory46.accessLogDirectory;
        java.io.File file50 = null;
        undertowEmbeddedServletContainerFactory46.setDocumentRoot(file50);
        org.springframework.boot.context.embedded.Ssl ssl52 = undertowEmbeddedServletContainerFactory46.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int54 = undertowEmbeddedServletContainerFactory53.getSessionTimeout();
        boolean boolean55 = undertowEmbeddedServletContainerFactory53.isPersistSession();
        undertowEmbeddedServletContainerFactory53.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory53.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory53.setDisplayName("hi!");
        boolean boolean62 = undertowEmbeddedServletContainerFactory53.isRegisterDefaultServlet();
        java.io.File file63 = null;
        undertowEmbeddedServletContainerFactory53.accessLogDirectory = file63;
        io.undertow.server.handlers.resource.ResourceManager resourceManager65 = undertowEmbeddedServletContainerFactory53.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int67 = undertowEmbeddedServletContainerFactory66.getSessionTimeout();
        java.util.Map<java.lang.String, java.lang.String> strMap68 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer69 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap68);
        java.util.Map<java.lang.String, java.lang.String> strMap70 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer71 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap70);
        java.util.Map<java.lang.String, java.lang.String> strMap72 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer73 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap72);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer75 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap74);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray76 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer69, initParameterConfiguringServletContextInitializer71, initParameterConfiguringServletContextInitializer73, initParameterConfiguringServletContextInitializer75 };
        undertowEmbeddedServletContainerFactory66.addInitializers(servletContextInitializerArray76);
        undertowEmbeddedServletContainerFactory53.addInitializers(servletContextInitializerArray76);
        undertowEmbeddedServletContainerFactory46.addInitializers(servletContextInitializerArray76);
        initializer15.initializers = servletContextInitializerArray76;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray81 = initializer15.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray82 = initializer15.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer83 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap84 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer85 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap84);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray86 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer85 };
        initializer83.initializers = servletContextInitializerArray86;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray88 = initializer83.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray89 = initializer83.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray90 = initializer83.initializers;
        initializer15.initializers = servletContextInitializerArray90;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray92 = initializer15.initializers;
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray92);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList94 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        org.springframework.core.io.ResourceLoader resourceLoader95 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(xnioWorker13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(servletContextInitializerArray16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1800 + "'", int18 == 1800);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(compression24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 8080 + "'", int26 == 8080);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(servletContextInitializerArray34);
        org.junit.Assert.assertNotNull(servletContextInitializerArray39);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1800 + "'", int47 == 1800);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(ssl52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1800 + "'", int54 == 1800);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(resourceManager65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1800 + "'", int67 == 1800);
        org.junit.Assert.assertNotNull(servletContextInitializerArray76);
        org.junit.Assert.assertNotNull(servletContextInitializerArray81);
        org.junit.Assert.assertNotNull(servletContextInitializerArray82);
        org.junit.Assert.assertNotNull(servletContextInitializerArray86);
        org.junit.Assert.assertNotNull(servletContextInitializerArray88);
        org.junit.Assert.assertNotNull(servletContextInitializerArray89);
        org.junit.Assert.assertNotNull(servletContextInitializerArray90);
        org.junit.Assert.assertNotNull(servletContextInitializerArray92);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList94);
        org.junit.Assert.assertNull(resourceLoader95);
    }

    @Test
    public void test14427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14427");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        io.undertow.Undertow.Builder builder8 = undertowEmbeddedServletContainerFactory0.createBuilder(10);
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(0);
        java.lang.String str11 = undertowEmbeddedServletContainerFactory0.getDisplayName();
        int int12 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int14 = undertowEmbeddedServletContainerFactory13.getSessionTimeout();
        boolean boolean15 = undertowEmbeddedServletContainerFactory13.isPersistSession();
        undertowEmbeddedServletContainerFactory13.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory13.setPort((int) (byte) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int21 = undertowEmbeddedServletContainerFactory20.getSessionTimeout();
        boolean boolean22 = undertowEmbeddedServletContainerFactory20.isPersistSession();
        undertowEmbeddedServletContainerFactory20.setPersistSession(false);
        undertowEmbeddedServletContainerFactory20.setUseForwardHeaders(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList27 = undertowEmbeddedServletContainerFactory20.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory20.setAccessLogPattern("hi!");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int31 = undertowEmbeddedServletContainerFactory30.getSessionTimeout();
        boolean boolean32 = undertowEmbeddedServletContainerFactory30.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList33 = undertowEmbeddedServletContainerFactory30.builderCustomizers;
        undertowEmbeddedServletContainerFactory20.builderCustomizers = undertowBuilderCustomizerList33;
        java.io.File file35 = null;
        undertowEmbeddedServletContainerFactory20.accessLogDirectory = file35;
        boolean boolean37 = undertowEmbeddedServletContainerFactory20.isRegisterDefaultServlet();
        io.undertow.Undertow.Builder builder39 = undertowEmbeddedServletContainerFactory20.createBuilder(1800);
        io.undertow.servlet.api.DeploymentManager deploymentManager40 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer42 = undertowEmbeddedServletContainerFactory13.getUndertowEmbeddedServletContainer(builder39, deploymentManager40, (int) (byte) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager43 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer45 = undertowEmbeddedServletContainerFactory0.getUndertowEmbeddedServletContainer(builder39, deploymentManager43, 52);
        io.undertow.Undertow.Builder builder47 = undertowEmbeddedServletContainerFactory0.createBuilder((int) (byte) 10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1800 + "'", int14 == 1800);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1800 + "'", int21 == 1800);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1800 + "'", int31 == 1800);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer42);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer45);
        org.junit.Assert.assertNotNull(builder47);
    }

    @Test
    public void test14428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14428");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.io.File file3 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 8080);
        java.net.InetAddress inetAddress10 = undertowEmbeddedServletContainerFactory0.getAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo11 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo11);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean15 = undertowEmbeddedServletContainerFactory14.isAccessLogEnabled();
        undertowEmbeddedServletContainerFactory14.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory14.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int21 = undertowEmbeddedServletContainerFactory20.getPort();
        java.lang.Integer int22 = undertowEmbeddedServletContainerFactory20.bufferSize;
        java.io.File file23 = null;
        undertowEmbeddedServletContainerFactory20.setSessionStoreDir(file23);
        java.io.File file25 = null;
        undertowEmbeddedServletContainerFactory20.accessLogDirectory = file25;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = undertowEmbeddedServletContainerFactory20.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList31 = undertowEmbeddedServletContainerFactory28.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet32 = undertowEmbeddedServletContainerFactory28.getJspServlet();
        undertowEmbeddedServletContainerFactory20.setJspServlet(jspServlet32);
        org.springframework.core.io.ResourceLoader resourceLoader34 = null;
        undertowEmbeddedServletContainerFactory20.resourceLoader = resourceLoader34;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(100);
        boolean boolean38 = undertowEmbeddedServletContainerFactory37.isAccessLogEnabled();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = undertowEmbeddedServletContainerFactory37.getMimeMappings();
        java.io.File file40 = undertowEmbeddedServletContainerFactory37.getDocumentRoot();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList41 = undertowEmbeddedServletContainerFactory37.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory20.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList41;
        undertowEmbeddedServletContainerFactory14.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList41;
        boolean boolean44 = undertowEmbeddedServletContainerFactory14.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int46 = undertowEmbeddedServletContainerFactory45.getSessionTimeout();
        boolean boolean47 = undertowEmbeddedServletContainerFactory45.isPersistSession();
        undertowEmbeddedServletContainerFactory45.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory45.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory45.setDisplayName("hi!");
        boolean boolean54 = undertowEmbeddedServletContainerFactory45.isRegisterDefaultServlet();
        boolean boolean55 = undertowEmbeddedServletContainerFactory45.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList56 = undertowEmbeddedServletContainerFactory45.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int58 = undertowEmbeddedServletContainerFactory57.getPort();
        java.lang.Integer int59 = undertowEmbeddedServletContainerFactory57.bufferSize;
        boolean boolean60 = undertowEmbeddedServletContainerFactory57.accessLogEnabled;
        java.lang.String str61 = undertowEmbeddedServletContainerFactory57.accessLogPattern;
        org.springframework.core.io.ResourceLoader resourceLoader62 = null;
        undertowEmbeddedServletContainerFactory57.setResourceLoader(resourceLoader62);
        boolean boolean64 = undertowEmbeddedServletContainerFactory57.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int66 = undertowEmbeddedServletContainerFactory65.getSessionTimeout();
        boolean boolean67 = undertowEmbeddedServletContainerFactory65.isPersistSession();
        undertowEmbeddedServletContainerFactory65.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl70 = null;
        undertowEmbeddedServletContainerFactory65.setSsl(ssl70);
        org.springframework.boot.context.embedded.JspServlet jspServlet72 = undertowEmbeddedServletContainerFactory65.getJspServlet();
        undertowEmbeddedServletContainerFactory57.setJspServlet(jspServlet72);
        undertowEmbeddedServletContainerFactory45.setJspServlet(jspServlet72);
        undertowEmbeddedServletContainerFactory14.setJspServlet(jspServlet72);
        undertowEmbeddedServletContainerFactory0.setJspServlet(jspServlet72);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection77 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        java.io.File file78 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file78);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(inetAddress10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8080 + "'", int21 == 8080);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList31);
        org.junit.Assert.assertNotNull(jspServlet32);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1800 + "'", int46 == 1800);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 8080 + "'", int58 == 8080);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1800 + "'", int66 == 1800);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(jspServlet72);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection77);
    }

    @Test
    public void test14429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14429");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory2.builderCustomizers;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory2.getContextPath();
        java.lang.String str5 = undertowEmbeddedServletContainerFactory2.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int7 = undertowEmbeddedServletContainerFactory6.getSessionTimeout();
        boolean boolean8 = undertowEmbeddedServletContainerFactory6.isPersistSession();
        undertowEmbeddedServletContainerFactory6.setPersistSession(false);
        undertowEmbeddedServletContainerFactory6.setUseForwardHeaders(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int14 = undertowEmbeddedServletContainerFactory13.getSessionTimeout();
        boolean boolean15 = undertowEmbeddedServletContainerFactory13.isPersistSession();
        java.io.File file16 = undertowEmbeddedServletContainerFactory13.accessLogDirectory;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList17 = undertowEmbeddedServletContainerFactory13.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory6.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList17;
        undertowEmbeddedServletContainerFactory6.setWorkerThreads((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.Ssl ssl21 = undertowEmbeddedServletContainerFactory6.getSsl();
        java.net.InetAddress inetAddress22 = undertowEmbeddedServletContainerFactory6.getAddress();
        boolean boolean23 = undertowEmbeddedServletContainerFactory6.isAccessLogEnabled();
        org.springframework.boot.context.embedded.Compression compression24 = undertowEmbeddedServletContainerFactory6.getCompression();
        java.lang.Integer int25 = undertowEmbeddedServletContainerFactory6.buffersPerRegion;
        io.undertow.server.handlers.resource.ResourceManager resourceManager26 = undertowEmbeddedServletContainerFactory6.getDocumentRootResourceManager();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection27 = undertowEmbeddedServletContainerFactory6.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory2.setBuilderCustomizers(undertowBuilderCustomizerCollection27);
        org.springframework.boot.context.embedded.Compression compression29 = null;
        undertowEmbeddedServletContainerFactory2.setCompression(compression29);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1800 + "'", int14 == 1800);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList17);
        org.junit.Assert.assertNull(ssl21);
        org.junit.Assert.assertNull(inetAddress22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(compression24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(resourceManager26);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection27);
    }

    @Test
    public void test14430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14430");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        boolean boolean3 = undertowEmbeddedServletContainerFactory0.accessLogEnabled;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory0.accessLogPattern;
        undertowEmbeddedServletContainerFactory0.setWorkerThreads((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory7.setJspServletClassName("");
        int int10 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory7.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        java.net.InetAddress inetAddress13 = undertowEmbeddedServletContainerFactory0.getAddress();
        boolean boolean14 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test14431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14431");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory2.resourceLoader;
        undertowEmbeddedServletContainerFactory2.setAccessLogEnabled(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int8 = undertowEmbeddedServletContainerFactory7.getSessionTimeout();
        boolean boolean9 = undertowEmbeddedServletContainerFactory7.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory7.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet11 = undertowEmbeddedServletContainerFactory7.getJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int13 = undertowEmbeddedServletContainerFactory12.getSessionTimeout();
        boolean boolean14 = undertowEmbeddedServletContainerFactory12.isPersistSession();
        undertowEmbeddedServletContainerFactory12.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder((-1));
        io.undertow.servlet.api.DeploymentManager deploymentManager19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer21 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder18, deploymentManager19, (int) (short) 100);
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory2.getUndertowEmbeddedServletContainer(builder18, deploymentManager22, (int) ' ');
        boolean boolean25 = undertowEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        java.lang.Integer int26 = undertowEmbeddedServletContainerFactory2.bufferSize;
        java.lang.String str27 = undertowEmbeddedServletContainerFactory2.accessLogPattern;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo28 = null;
        undertowEmbeddedServletContainerFactory2.configureErrorPages(deploymentInfo28);
        java.lang.Integer int30 = undertowEmbeddedServletContainerFactory2.bufferSize;
        java.lang.ClassLoader classLoader31 = undertowEmbeddedServletContainerFactory2.getServletClassLoader();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(jspServlet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(classLoader31);
    }

    @Test
    public void test14432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14432");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) ' ');
        org.springframework.core.io.ResourceLoader resourceLoader2 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader2;
        java.lang.Integer int4 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.junit.Assert.assertNull(int4);
    }

    @Test
    public void test14433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14433");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file8);
        boolean boolean10 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList11 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.lang.String str12 = undertowEmbeddedServletContainerFactory0.getContextPath();
        java.io.File file13 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 1);
        java.lang.Integer int18 = undertowEmbeddedServletContainerFactory0.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int20 = undertowEmbeddedServletContainerFactory19.getSessionTimeout();
        boolean boolean21 = undertowEmbeddedServletContainerFactory19.isPersistSession();
        undertowEmbeddedServletContainerFactory19.accessLogEnabled = false;
        io.undertow.Undertow.Builder builder25 = undertowEmbeddedServletContainerFactory19.createBuilder((-1));
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet26 = undertowEmbeddedServletContainerFactory19.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int28 = undertowEmbeddedServletContainerFactory27.getSessionTimeout();
        boolean boolean29 = undertowEmbeddedServletContainerFactory27.isPersistSession();
        undertowEmbeddedServletContainerFactory27.setIoThreads((java.lang.Integer) 1);
        io.undertow.Undertow.Builder builder33 = undertowEmbeddedServletContainerFactory27.createBuilder((int) (byte) 1);
        io.undertow.servlet.api.DeploymentManager deploymentManager34 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer36 = undertowEmbeddedServletContainerFactory19.getUndertowEmbeddedServletContainer(builder33, deploymentManager34, (int) (byte) 10);
        int int37 = undertowEmbeddedServletContainerFactory19.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int39 = undertowEmbeddedServletContainerFactory38.getSessionTimeout();
        boolean boolean40 = undertowEmbeddedServletContainerFactory38.isPersistSession();
        undertowEmbeddedServletContainerFactory38.accessLogEnabled = false;
        undertowEmbeddedServletContainerFactory38.workerThreads = 0;
        undertowEmbeddedServletContainerFactory38.setPersistSession(false);
        undertowEmbeddedServletContainerFactory38.ioThreads = 1800;
        java.lang.String str49 = undertowEmbeddedServletContainerFactory38.getContextPath();
        java.io.File file50 = null;
        undertowEmbeddedServletContainerFactory38.setSessionStoreDir(file50);
        java.net.InetAddress inetAddress52 = undertowEmbeddedServletContainerFactory38.getAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList53 = undertowEmbeddedServletContainerFactory38.builderCustomizers;
        undertowEmbeddedServletContainerFactory19.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList53);
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList53;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(errorPageSet26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1800 + "'", int28 == 1800);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8080 + "'", int37 == 8080);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1800 + "'", int39 == 1800);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNull(inetAddress52);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList53);
    }

    @Test
    public void test14434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14434");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) true);
        java.io.File file4 = undertowEmbeddedServletContainerFactory0.getSessionStoreDir();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.useForwardHeaders;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Compression compression8 = null;
        undertowEmbeddedServletContainerFactory0.setCompression(compression8);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int11 = undertowEmbeddedServletContainerFactory10.getSessionTimeout();
        boolean boolean12 = undertowEmbeddedServletContainerFactory10.isPersistSession();
        java.io.File file13 = undertowEmbeddedServletContainerFactory10.accessLogDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = undertowEmbeddedServletContainerFactory10.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = undertowEmbeddedServletContainerFactory10.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int17 = undertowEmbeddedServletContainerFactory16.getSessionTimeout();
        boolean boolean18 = undertowEmbeddedServletContainerFactory16.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList19 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet20 = undertowEmbeddedServletContainerFactory16.getJspServlet();
        undertowEmbeddedServletContainerFactory10.setJspServlet(jspServlet20);
        undertowEmbeddedServletContainerFactory10.accessLogPattern = "hi!";
        java.lang.String str24 = undertowEmbeddedServletContainerFactory10.accessLogPattern;
        java.io.File file25 = undertowEmbeddedServletContainerFactory10.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray27 = initializer26.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int29 = undertowEmbeddedServletContainerFactory28.getSessionTimeout();
        boolean boolean30 = undertowEmbeddedServletContainerFactory28.isPersistSession();
        java.io.File file31 = undertowEmbeddedServletContainerFactory28.accessLogDirectory;
        undertowEmbeddedServletContainerFactory28.setRegisterDefaultServlet(true);
        java.lang.Boolean boolean34 = undertowEmbeddedServletContainerFactory28.directBuffers;
        org.springframework.boot.context.embedded.Compression compression35 = undertowEmbeddedServletContainerFactory28.getCompression();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int37 = undertowEmbeddedServletContainerFactory36.getPort();
        java.lang.Integer int38 = undertowEmbeddedServletContainerFactory36.bufferSize;
        java.io.File file39 = null;
        undertowEmbeddedServletContainerFactory36.setSessionStoreDir(file39);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer44 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap43);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray45 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer44 };
        initializer42.initializers = servletContextInitializerArray45;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer49 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap48);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray50 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer49 };
        initializer47.initializers = servletContextInitializerArray50;
        initializer42.initializers = servletContextInitializerArray50;
        initializer41.initializers = servletContextInitializerArray50;
        undertowEmbeddedServletContainerFactory36.addInitializers(servletContextInitializerArray50);
        undertowEmbeddedServletContainerFactory28.addInitializers(servletContextInitializerArray50);
        initializer26.initializers = servletContextInitializerArray50;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray57 = initializer26.initializers;
        undertowEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray57);
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.DeploymentManager deploymentManager59 = undertowEmbeddedServletContainerFactory0.createDeploymentManager(servletContextInitializerArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: java.lang.NullPointerException");
        } catch (java.lang.RuntimeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1800 + "'", int11 == 1800);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1800 + "'", int17 == 1800);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList19);
        org.junit.Assert.assertNotNull(jspServlet20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(servletContextInitializerArray27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(compression35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8080 + "'", int37 == 8080);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(servletContextInitializerArray45);
        org.junit.Assert.assertNotNull(servletContextInitializerArray50);
        org.junit.Assert.assertNotNull(servletContextInitializerArray57);
    }

    @Test
    public void test14435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14435");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean2 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet4 = undertowEmbeddedServletContainerFactory0.getJspServlet();
        boolean boolean5 = undertowEmbeddedServletContainerFactory0.isPersistSession();
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory0.getSsl();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        java.io.File file9 = undertowEmbeddedServletContainerFactory0.accessLogDirectory;
        java.lang.String str10 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        undertowEmbeddedServletContainerFactory0.workerThreads = 1;
        boolean boolean13 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray14 = undertowEmbeddedServletContainerFactory0.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1800 + "'", int1 == 1800);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(jspServlet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "0.0.0.0" + "'", str10, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test14436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14436");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int1 = undertowEmbeddedServletContainerFactory0.getPort();
        java.lang.Integer int2 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setSessionStoreDir(file3);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int6 = undertowEmbeddedServletContainerFactory5.getSessionTimeout();
        boolean boolean7 = undertowEmbeddedServletContainerFactory5.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory5.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet9 = undertowEmbeddedServletContainerFactory5.getJspServlet();
        boolean boolean10 = undertowEmbeddedServletContainerFactory5.useForwardHeaders;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory5.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet11);
        undertowEmbeddedServletContainerFactory0.setBufferSize((java.lang.Integer) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer16 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer16 };
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection19 = undertowEmbeddedServletContainerFactory0.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 100);
        undertowEmbeddedServletContainerFactory22.setBuffersPerRegion((java.lang.Integer) 0);
        java.lang.String str25 = undertowEmbeddedServletContainerFactory22.getDisplayName();
        undertowEmbeddedServletContainerFactory22.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory22.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int31 = undertowEmbeddedServletContainerFactory30.getSessionTimeout();
        boolean boolean32 = undertowEmbeddedServletContainerFactory30.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList33 = undertowEmbeddedServletContainerFactory30.builderCustomizers;
        org.springframework.boot.context.embedded.JspServlet jspServlet34 = undertowEmbeddedServletContainerFactory30.getJspServlet();
        boolean boolean35 = undertowEmbeddedServletContainerFactory30.useForwardHeaders;
        java.net.InetAddress inetAddress36 = undertowEmbeddedServletContainerFactory30.getAddress();
        boolean boolean37 = undertowEmbeddedServletContainerFactory30.isAccessLogEnabled();
        org.springframework.core.io.ResourceLoader resourceLoader38 = undertowEmbeddedServletContainerFactory30.resourceLoader;
        undertowEmbeddedServletContainerFactory30.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int42 = undertowEmbeddedServletContainerFactory41.getSessionTimeout();
        boolean boolean43 = undertowEmbeddedServletContainerFactory41.isPersistSession();
        undertowEmbeddedServletContainerFactory41.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory41.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory41.setDisplayName("hi!");
        boolean boolean50 = undertowEmbeddedServletContainerFactory41.isRegisterDefaultServlet();
        boolean boolean51 = undertowEmbeddedServletContainerFactory41.isPersistSession();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList52 = undertowEmbeddedServletContainerFactory41.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int54 = undertowEmbeddedServletContainerFactory53.getPort();
        java.lang.Integer int55 = undertowEmbeddedServletContainerFactory53.bufferSize;
        boolean boolean56 = undertowEmbeddedServletContainerFactory53.accessLogEnabled;
        java.lang.String str57 = undertowEmbeddedServletContainerFactory53.accessLogPattern;
        org.springframework.core.io.ResourceLoader resourceLoader58 = null;
        undertowEmbeddedServletContainerFactory53.setResourceLoader(resourceLoader58);
        boolean boolean60 = undertowEmbeddedServletContainerFactory53.isPersistSession();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        int int62 = undertowEmbeddedServletContainerFactory61.getSessionTimeout();
        boolean boolean63 = undertowEmbeddedServletContainerFactory61.isPersistSession();
        undertowEmbeddedServletContainerFactory61.setPersistSession(false);
        org.springframework.boot.context.embedded.Ssl ssl66 = null;
        undertowEmbeddedServletContainerFactory61.setSsl(ssl66);
        org.springframework.boot.context.embedded.JspServlet jspServlet68 = undertowEmbeddedServletContainerFactory61.getJspServlet();
        undertowEmbeddedServletContainerFactory53.setJspServlet(jspServlet68);
        undertowEmbeddedServletContainerFactory41.setJspServlet(jspServlet68);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray72 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList73 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList73, undertowBuilderCustomizerArray72);
        undertowEmbeddedServletContainerFactory71.builderCustomizers = undertowBuilderCustomizerList73;
        undertowEmbeddedServletContainerFactory41.setBuilderCustomizers((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList73);
        undertowEmbeddedServletContainerFactory30.builderCustomizers = undertowBuilderCustomizerList73;
        undertowEmbeddedServletContainerFactory22.builderCustomizers = undertowBuilderCustomizerList73;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList73;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 8080 + "'", int1 == 8080);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1800 + "'", int6 == 1800);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNotNull(jspServlet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection19);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1800 + "'", int31 == 1800);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList33);
        org.junit.Assert.assertNotNull(jspServlet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(inetAddress36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(resourceLoader38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1800 + "'", int42 == 1800);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 8080 + "'", int54 == 8080);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1800 + "'", int62 == 1800);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(jspServlet68);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }
}

