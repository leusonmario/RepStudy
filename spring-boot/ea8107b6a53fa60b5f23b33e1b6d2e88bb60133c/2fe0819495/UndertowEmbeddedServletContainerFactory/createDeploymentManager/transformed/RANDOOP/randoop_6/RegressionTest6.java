import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest6 {

    public static boolean debug = false;

    @Test
    public void test03001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03001");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress10 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection12 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.lang.String str13 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setPort((int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setContextPath("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(inetAddress10);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0.0.0.0" + "'", str13, "0.0.0.0");
    }

    @Test
    public void test03002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03002");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection9 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.workerThreads = 0;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        java.io.File file17 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection9);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNull(file17);
    }

    @Test
    public void test03003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03003");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader4);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
    }

    @Test
    public void test03004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03004");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        io.undertow.Undertow.Builder builder16 = undertowEmbeddedServletContainerFactory13.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager17 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer19 = undertowEmbeddedServletContainerFactory11.getUndertowEmbeddedServletContainer(builder16, deploymentManager17, (int) (byte) 0);
        io.undertow.servlet.api.DeploymentManager deploymentManager20 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer22 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder16, deploymentManager20, (int) (short) 1);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer19);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer22);
    }

    @Test
    public void test03005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03005");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress10 = undertowEmbeddedServletContainerFactory1.getAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo11 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo11);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        boolean boolean15 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.ioThreads = 8080;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo20 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo20);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(inetAddress10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test03006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03006");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection8 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.springframework.core.io.ResourceLoader resourceLoader11 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        undertowEmbeddedServletContainerFactory1.setPort((int) '4');
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection14 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setContextPath("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(resourceLoader11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection14);
    }

    @Test
    public void test03007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03007");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory1.getSsl();
        int int11 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray12 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray12);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory14.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray16);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray16);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray21 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray21);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = initializer22.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray23);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray23);
        io.undertow.servlet.api.DeploymentManager deploymentManager26 = undertowEmbeddedServletContainerFactory1.createDeploymentManager(servletContextInitializerArray23);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet27 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray12);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray16);
        org.junit.Assert.assertNotNull(servletContextInitializerArray21);
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
        org.junit.Assert.assertNotNull(deploymentManager26);
        org.junit.Assert.assertNotNull(errorPageSet27);
    }

    @Test
    public void test03008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03008");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress10 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.net.InetAddress inetAddress12 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader13);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection15 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        int int16 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(inetAddress10);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(inetAddress12);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1800 + "'", int16 == 1800);
    }

    @Test
    public void test03009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03009");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 10;
        undertowEmbeddedServletContainerFactory1.ioThreads = (-1);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 8080);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray18 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray18);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection21 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray25 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer24 };
        undertowEmbeddedServletContainerFactory23.addBuilderCustomizers(undertowBuilderCustomizerArray25);
        org.springframework.boot.context.embedded.Ssl ssl27 = undertowEmbeddedServletContainerFactory23.getSsl();
        undertowEmbeddedServletContainerFactory23.setDirectBuffers((java.lang.Boolean) true);
        java.lang.Integer int30 = undertowEmbeddedServletContainerFactory23.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer33 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray34 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer33 };
        undertowEmbeddedServletContainerFactory32.addBuilderCustomizers(undertowBuilderCustomizerArray34);
        org.springframework.boot.context.embedded.Ssl ssl36 = undertowEmbeddedServletContainerFactory32.getSsl();
        java.lang.String str37 = undertowEmbeddedServletContainerFactory32.getContextPath();
        java.lang.String str38 = undertowEmbeddedServletContainerFactory32.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet39 = undertowEmbeddedServletContainerFactory32.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection40 = undertowEmbeddedServletContainerFactory32.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList41 = undertowEmbeddedServletContainerFactory32.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray42 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory32.addBuilderCustomizers(undertowBuilderCustomizerArray42);
        org.springframework.core.io.ResourceLoader resourceLoader44 = undertowEmbeddedServletContainerFactory32.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory46.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int49 = undertowEmbeddedServletContainerFactory46.ioThreads;
        java.lang.Integer int50 = undertowEmbeddedServletContainerFactory46.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage51 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray52 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage51 };
        undertowEmbeddedServletContainerFactory46.addErrorPages(errorPageArray52);
        undertowEmbeddedServletContainerFactory32.addErrorPages(errorPageArray52);
        undertowEmbeddedServletContainerFactory23.addErrorPages(errorPageArray52);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray52);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Undertow does not support JSPs");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageArray18);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray25);
        org.junit.Assert.assertNull(ssl27);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray34);
        org.junit.Assert.assertNull(ssl36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "0.0.0.0" + "'", str38, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet39);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection40);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList41);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray42);
        org.junit.Assert.assertNull(resourceLoader44);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(errorPageArray52);
    }

    @Test
    public void test03010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03010");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.lang.Boolean boolean8 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer13 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray14 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer13 };
        undertowEmbeddedServletContainerFactory12.addBuilderCustomizers(undertowBuilderCustomizerArray14);
        org.springframework.boot.context.embedded.Ssl ssl16 = undertowEmbeddedServletContainerFactory12.getSsl();
        java.lang.String str17 = undertowEmbeddedServletContainerFactory12.getContextPath();
        java.lang.String str18 = undertowEmbeddedServletContainerFactory12.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = undertowEmbeddedServletContainerFactory12.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList23 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList23, undertowBuilderCustomizerArray22);
        undertowEmbeddedServletContainerFactory21.builderCustomizers = undertowBuilderCustomizerList23;
        undertowEmbeddedServletContainerFactory12.builderCustomizers = undertowBuilderCustomizerList23;
        org.springframework.core.io.ResourceLoader resourceLoader27 = null;
        undertowEmbeddedServletContainerFactory12.resourceLoader = resourceLoader27;
        undertowEmbeddedServletContainerFactory12.directBuffers = true;
        org.springframework.core.io.ResourceLoader resourceLoader31 = undertowEmbeddedServletContainerFactory12.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = undertowEmbeddedServletContainerFactory33.getMimeMappings();
        undertowEmbeddedServletContainerFactory33.ioThreads = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = undertowEmbeddedServletContainerFactory38.getMimeMappings();
        io.undertow.Undertow.Builder builder41 = undertowEmbeddedServletContainerFactory38.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager42 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer44 = undertowEmbeddedServletContainerFactory33.getUndertowEmbeddedServletContainer(builder41, deploymentManager42, (int) '4');
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection45 = undertowEmbeddedServletContainerFactory33.getDeploymentInfoCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList46 = undertowEmbeddedServletContainerFactory33.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory12.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList46;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList46;
        java.lang.String str49 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 35;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList52 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + true + "'", boolean8, true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray14);
        org.junit.Assert.assertNull(ssl16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "0.0.0.0" + "'", str18, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(resourceLoader31);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer44);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection45);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList52);
    }

    @Test
    public void test03011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03011");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.io.File file2 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file2);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo4 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo4);
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory0.directBuffers;
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory10.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory10.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory10.ioThreads = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray19 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList20 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList20, undertowBuilderCustomizerArray19);
        undertowEmbeddedServletContainerFactory18.builderCustomizers = undertowBuilderCustomizerList20;
        undertowEmbeddedServletContainerFactory18.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory18.bufferSize = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList27 = undertowEmbeddedServletContainerFactory18.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer30 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray31 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer30 };
        undertowEmbeddedServletContainerFactory29.addBuilderCustomizers(undertowBuilderCustomizerArray31);
        org.springframework.boot.context.embedded.Ssl ssl33 = undertowEmbeddedServletContainerFactory29.getSsl();
        java.lang.String str34 = undertowEmbeddedServletContainerFactory29.getContextPath();
        java.lang.String str35 = undertowEmbeddedServletContainerFactory29.getListenAddress();
        undertowEmbeddedServletContainerFactory29.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl38 = undertowEmbeddedServletContainerFactory29.getSsl();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = undertowEmbeddedServletContainerFactory29.getMimeMappings();
        undertowEmbeddedServletContainerFactory18.setMimeMappings(mimeMappings39);
        undertowEmbeddedServletContainerFactory10.setMimeMappings(mimeMappings39);
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings39);
        undertowEmbeddedServletContainerFactory0.setPort(0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList27);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray31);
        org.junit.Assert.assertNull(ssl33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "0.0.0.0" + "'", str35, "0.0.0.0");
        org.junit.Assert.assertNull(ssl38);
        org.junit.Assert.assertNotNull(mimeMappings39);
    }

    @Test
    public void test03012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03012");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader6);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer12 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer12 };
        undertowEmbeddedServletContainerFactory11.addBuilderCustomizers(undertowBuilderCustomizerArray13);
        org.springframework.boot.context.embedded.Ssl ssl15 = undertowEmbeddedServletContainerFactory11.getSsl();
        undertowEmbeddedServletContainerFactory11.setDirectBuffers((java.lang.Boolean) true);
        java.lang.Boolean boolean18 = undertowEmbeddedServletContainerFactory11.directBuffers;
        org.springframework.boot.context.embedded.Ssl ssl19 = null;
        undertowEmbeddedServletContainerFactory11.setSsl(ssl19);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer23 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray24 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer23 };
        undertowEmbeddedServletContainerFactory22.addBuilderCustomizers(undertowBuilderCustomizerArray24);
        org.springframework.boot.context.embedded.Ssl ssl26 = undertowEmbeddedServletContainerFactory22.getSsl();
        java.lang.String str27 = undertowEmbeddedServletContainerFactory22.getContextPath();
        java.lang.String str28 = undertowEmbeddedServletContainerFactory22.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet29 = undertowEmbeddedServletContainerFactory22.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray32 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList33 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList33, undertowBuilderCustomizerArray32);
        undertowEmbeddedServletContainerFactory31.builderCustomizers = undertowBuilderCustomizerList33;
        undertowEmbeddedServletContainerFactory22.builderCustomizers = undertowBuilderCustomizerList33;
        org.springframework.core.io.ResourceLoader resourceLoader37 = null;
        undertowEmbeddedServletContainerFactory22.resourceLoader = resourceLoader37;
        undertowEmbeddedServletContainerFactory22.directBuffers = true;
        org.springframework.core.io.ResourceLoader resourceLoader41 = undertowEmbeddedServletContainerFactory22.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings44 = undertowEmbeddedServletContainerFactory43.getMimeMappings();
        undertowEmbeddedServletContainerFactory43.ioThreads = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings49 = undertowEmbeddedServletContainerFactory48.getMimeMappings();
        io.undertow.Undertow.Builder builder51 = undertowEmbeddedServletContainerFactory48.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager52 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer54 = undertowEmbeddedServletContainerFactory43.getUndertowEmbeddedServletContainer(builder51, deploymentManager52, (int) '4');
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection55 = undertowEmbeddedServletContainerFactory43.getDeploymentInfoCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList56 = undertowEmbeddedServletContainerFactory43.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory22.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList56;
        undertowEmbeddedServletContainerFactory11.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList56;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList56;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray13);
        org.junit.Assert.assertNull(ssl15);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + true + "'", boolean18, true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray24);
        org.junit.Assert.assertNull(ssl26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "0.0.0.0" + "'", str28, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet29);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(resourceLoader41);
        org.junit.Assert.assertNotNull(mimeMappings44);
        org.junit.Assert.assertNotNull(mimeMappings49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer54);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection55);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList56);
    }

    @Test
    public void test03013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03013");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.close();
        boolean boolean3 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.close();
        boolean boolean5 = jarResourcemanager1.isResourceChangeListenerSupported();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener6 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager1.removeResourceChangeListener(resourceChangeListener6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test03014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03014");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection9 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray11);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.io.File file14 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file14);
        org.springframework.boot.context.embedded.Ssl ssl16 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl16);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = undertowEmbeddedServletContainerFactory19.getMimeMappings();
        undertowEmbeddedServletContainerFactory19.ioThreads = 0;
        org.springframework.boot.context.embedded.Ssl ssl23 = undertowEmbeddedServletContainerFactory19.getSsl();
        boolean boolean24 = undertowEmbeddedServletContainerFactory19.isRegisterJspServlet();
        io.undertow.Undertow.Builder builder26 = undertowEmbeddedServletContainerFactory19.createBuilder((int) '4');
        undertowEmbeddedServletContainerFactory19.ioThreads = 8080;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = undertowEmbeddedServletContainerFactory19.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings29);
        int int31 = undertowEmbeddedServletContainerFactory1.getPort();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection13);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNull(ssl23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test03015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03015");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) '#');
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) -1);
    }

    @Test
    public void test03016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03016");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList5 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList5, undertowDeploymentInfoCustomizerArray4);
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList5;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray14 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList15, undertowBuilderCustomizerArray14);
        undertowEmbeddedServletContainerFactory13.builderCustomizers = undertowBuilderCustomizerList15;
        java.lang.String str18 = undertowEmbeddedServletContainerFactory13.getListenAddress();
        undertowEmbeddedServletContainerFactory13.ioThreads = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList21 = undertowEmbeddedServletContainerFactory13.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList21;
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 100;
        undertowEmbeddedServletContainerFactory1.bufferSize = (-1);
        undertowEmbeddedServletContainerFactory1.bufferSize = 0;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.ioThreads = 1800;
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "0.0.0.0" + "'", str18, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList21);
    }

    @Test
    public void test03017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03017");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setPort((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection15 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection15);
        org.junit.Assert.assertNotNull(mimeMappings16);
    }

    @Test
    public void test03018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03018");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList9 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        int int10 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        java.lang.String str11 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo15 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureMimeMappings(deploymentInfo15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList14);
    }

    @Test
    public void test03019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03019");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader9;
        java.lang.String str11 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory13.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory13.getSsl();
        undertowEmbeddedServletContainerFactory13.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory13.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray25 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer24 };
        undertowEmbeddedServletContainerFactory23.addBuilderCustomizers(undertowBuilderCustomizerArray25);
        undertowEmbeddedServletContainerFactory13.addBuilderCustomizers(undertowBuilderCustomizerArray25);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray25);
        int int29 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray32 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList33 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList33, undertowBuilderCustomizerArray32);
        undertowEmbeddedServletContainerFactory31.builderCustomizers = undertowBuilderCustomizerList33;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = undertowEmbeddedServletContainerFactory31.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader37 = null;
        undertowEmbeddedServletContainerFactory31.resourceLoader = resourceLoader37;
        java.lang.Boolean boolean39 = undertowEmbeddedServletContainerFactory31.directBuffers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList40 = undertowEmbeddedServletContainerFactory31.builderCustomizers;
        org.springframework.core.io.ResourceLoader resourceLoader41 = null;
        undertowEmbeddedServletContainerFactory31.setResourceLoader(resourceLoader41);
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer43 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray44 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer43 };
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray44);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray44);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray47 = initializer46.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory49.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int52 = undertowEmbeddedServletContainerFactory49.ioThreads;
        java.lang.Integer int53 = undertowEmbeddedServletContainerFactory49.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage54 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray55 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage54 };
        undertowEmbeddedServletContainerFactory49.addErrorPages(errorPageArray55);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray57 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray57);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray59 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray59);
        initializer58.initializers = servletContextInitializerArray59;
        undertowEmbeddedServletContainerFactory49.addInitializers(servletContextInitializerArray59);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray59);
        initializer46.initializers = servletContextInitializerArray59;
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer65 = undertowEmbeddedServletContainerFactory31.getEmbeddedServletContainer(servletContextInitializerArray59);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray59);
        java.lang.Boolean boolean67 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList40);
        org.junit.Assert.assertNotNull(servletContextInitializerArray44);
        org.junit.Assert.assertNotNull(servletContextInitializerArray47);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(errorPageArray55);
        org.junit.Assert.assertNotNull(servletContextInitializerArray57);
        org.junit.Assert.assertNotNull(servletContextInitializerArray59);
        org.junit.Assert.assertNotNull(embeddedServletContainer65);
        org.junit.Assert.assertNull(boolean67);
    }

    @Test
    public void test03020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03020");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.net.InetAddress inetAddress7 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer8 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray9 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer8 };
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray9);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray9);
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        java.lang.Integer int13 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        java.net.InetAddress inetAddress14 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress14);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(inetAddress7);
        org.junit.Assert.assertNotNull(servletContextInitializerArray9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(int13);
    }

    @Test
    public void test03021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03021");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList12;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList12;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory16.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory16.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray18);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        io.undertow.Undertow.Builder builder27 = undertowEmbeddedServletContainerFactory24.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer30 = undertowEmbeddedServletContainerFactory22.getUndertowEmbeddedServletContainer(builder27, deploymentManager28, (int) (byte) 0);
        io.undertow.servlet.api.DeploymentManager deploymentManager31 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer33 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder27, deploymentManager31, (int) ' ');
        org.springframework.boot.context.embedded.Ssl ssl34 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl34);
        undertowEmbeddedServletContainerFactory1.workerThreads = 10;
        boolean boolean38 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer41 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray42 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer41 };
        undertowEmbeddedServletContainerFactory40.addBuilderCustomizers(undertowBuilderCustomizerArray42);
        org.springframework.boot.context.embedded.Ssl ssl44 = undertowEmbeddedServletContainerFactory40.getSsl();
        undertowEmbeddedServletContainerFactory40.setDirectBuffers((java.lang.Boolean) true);
        java.lang.String str47 = undertowEmbeddedServletContainerFactory40.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer48 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray49 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer48 };
        undertowEmbeddedServletContainerFactory40.addBuilderCustomizers(undertowBuilderCustomizerArray49);
        java.net.InetAddress inetAddress51 = null;
        undertowEmbeddedServletContainerFactory40.setAddress(inetAddress51);
        boolean boolean53 = undertowEmbeddedServletContainerFactory40.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList54 = undertowEmbeddedServletContainerFactory40.builderCustomizers;
        java.io.File file55 = undertowEmbeddedServletContainerFactory40.getDocumentRoot();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList56 = undertowEmbeddedServletContainerFactory40.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList56;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings62 = undertowEmbeddedServletContainerFactory61.getMimeMappings();
        io.undertow.Undertow.Builder builder64 = undertowEmbeddedServletContainerFactory61.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager65 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer67 = undertowEmbeddedServletContainerFactory59.getUndertowEmbeddedServletContainer(builder64, deploymentManager65, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory59.bufferSize = (-1);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection70 = undertowEmbeddedServletContainerFactory59.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.Ssl ssl71 = null;
        undertowEmbeddedServletContainerFactory59.setSsl(ssl71);
        java.lang.Integer int73 = undertowEmbeddedServletContainerFactory59.ioThreads;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings74 = undertowEmbeddedServletContainerFactory59.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings74);
        undertowEmbeddedServletContainerFactory1.ioThreads = 10;
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray18);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer30);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray42);
        org.junit.Assert.assertNull(ssl44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "0.0.0.0" + "'", str47, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList54);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList56);
        org.junit.Assert.assertNotNull(mimeMappings62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer67);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection70);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNotNull(mimeMappings74);
    }

    @Test
    public void test03022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03022");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings13);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1800;
        boolean boolean17 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray20 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray20);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray23);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray25 = initializer24.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray25);
        initializer22.initializers = servletContextInitializerArray25;
        initializer21.initializers = servletContextInitializerArray25;
        undertowEmbeddedServletContainerFactory19.addInitializers(servletContextInitializerArray25);
        io.undertow.servlet.api.DeploymentManager deploymentManager30 = undertowEmbeddedServletContainerFactory1.createDeploymentManager(servletContextInitializerArray25);
        org.springframework.boot.context.embedded.Ssl ssl31 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode32 = undertowEmbeddedServletContainerFactory1.getSslClientAuthMode(ssl31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray20);
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
        org.junit.Assert.assertNotNull(servletContextInitializerArray25);
        org.junit.Assert.assertNotNull(deploymentManager30);
    }

    @Test
    public void test03023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03023");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader9 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        int int10 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.springframework.core.io.ResourceLoader resourceLoader11 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader11);
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNull(resourceLoader9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test03024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03024");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection10 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 10;
        org.springframework.boot.context.embedded.Ssl ssl13 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl13);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet15 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((-1));
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection10);
        org.junit.Assert.assertNotNull(errorPageSet15);
    }

    @Test
    public void test03025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03025");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setPort((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection15 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo16 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo16);
        org.springframework.boot.context.embedded.ErrorPage errorPage18 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage19 = undertowEmbeddedServletContainerFactory1.getUndertowErrorPage(errorPage18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection15);
    }

    @Test
    public void test03026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03026");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        io.undertow.Undertow.Builder builder6 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager7 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer9 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder6, deploymentManager7, 0);
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.ioThreads;
        int int11 = undertowEmbeddedServletContainerFactory1.getPort();
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer16 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer16 };
        undertowEmbeddedServletContainerFactory15.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory15.getSsl();
        java.lang.String str20 = undertowEmbeddedServletContainerFactory15.getContextPath();
        java.lang.String str21 = undertowEmbeddedServletContainerFactory15.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = undertowEmbeddedServletContainerFactory15.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray25 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList26 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList26, undertowBuilderCustomizerArray25);
        undertowEmbeddedServletContainerFactory24.builderCustomizers = undertowBuilderCustomizerList26;
        undertowEmbeddedServletContainerFactory15.builderCustomizers = undertowBuilderCustomizerList26;
        java.net.InetAddress inetAddress30 = undertowEmbeddedServletContainerFactory15.getAddress();
        io.undertow.server.handlers.resource.ResourceManager resourceManager31 = undertowEmbeddedServletContainerFactory15.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer34 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray35 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer34 };
        undertowEmbeddedServletContainerFactory33.addBuilderCustomizers(undertowBuilderCustomizerArray35);
        org.springframework.boot.context.embedded.Ssl ssl37 = undertowEmbeddedServletContainerFactory33.getSsl();
        java.lang.String str38 = undertowEmbeddedServletContainerFactory33.getContextPath();
        java.lang.String str39 = undertowEmbeddedServletContainerFactory33.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet40 = undertowEmbeddedServletContainerFactory33.getErrorPages();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList41 = undertowEmbeddedServletContainerFactory33.builderCustomizers;
        undertowEmbeddedServletContainerFactory15.builderCustomizers = undertowBuilderCustomizerList41;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList41;
        org.springframework.boot.context.embedded.Ssl ssl44 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl44);
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray46 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "0.0.0.0" + "'", str21, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet22);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(inetAddress30);
        org.junit.Assert.assertNotNull(resourceManager31);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray35);
        org.junit.Assert.assertNull(ssl37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "0.0.0.0" + "'", str39, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet40);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList41);
    }

    @Test
    public void test03027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03027");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.bufferSize = 10;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList17, undertowBuilderCustomizerArray16);
        undertowEmbeddedServletContainerFactory15.builderCustomizers = undertowBuilderCustomizerList17;
        undertowEmbeddedServletContainerFactory15.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory15.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = undertowEmbeddedServletContainerFactory15.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings24);
        boolean boolean26 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress27 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress27);
        org.springframework.core.io.ResourceLoader resourceLoader29 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader29;
        java.lang.Integer int31 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(int31);
    }

    @Test
    public void test03028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03028");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection8 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer11 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray12 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer11 };
        undertowEmbeddedServletContainerFactory10.addBuilderCustomizers(undertowBuilderCustomizerArray12);
        org.springframework.boot.context.embedded.Ssl ssl14 = undertowEmbeddedServletContainerFactory10.getSsl();
        java.lang.String str15 = undertowEmbeddedServletContainerFactory10.getContextPath();
        java.lang.String str16 = undertowEmbeddedServletContainerFactory10.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = undertowEmbeddedServletContainerFactory10.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray20 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList21 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList21, undertowBuilderCustomizerArray20);
        undertowEmbeddedServletContainerFactory19.builderCustomizers = undertowBuilderCustomizerList21;
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList21;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList21;
        org.springframework.core.io.ResourceLoader resourceLoader26 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer29 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray30 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer29 };
        undertowEmbeddedServletContainerFactory28.addBuilderCustomizers(undertowBuilderCustomizerArray30);
        org.springframework.boot.context.embedded.Ssl ssl32 = undertowEmbeddedServletContainerFactory28.getSsl();
        undertowEmbeddedServletContainerFactory28.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory28.setPort((int) (byte) 10);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet37 = undertowEmbeddedServletContainerFactory28.getErrorPages();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet38 = undertowEmbeddedServletContainerFactory28.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet38);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer41 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray42 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer41 };
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray42);
        initializer40.initializers = servletContextInitializerArray42;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray42);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray42);
        java.lang.ClassLoader classLoader47 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection48 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray12);
        org.junit.Assert.assertNull(ssl14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "0.0.0.0" + "'", str16, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(resourceLoader26);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray30);
        org.junit.Assert.assertNull(ssl32);
        org.junit.Assert.assertNotNull(errorPageSet37);
        org.junit.Assert.assertNotNull(errorPageSet38);
        org.junit.Assert.assertNotNull(servletContextInitializerArray42);
        org.junit.Assert.assertNotNull(classLoader47);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection48);
    }

    @Test
    public void test03029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03029");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setPort((int) (short) 0);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList13 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        java.lang.Boolean boolean14 = undertowEmbeddedServletContainerFactory1.directBuffers;
        java.lang.ClassLoader classLoader15 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory17.directBuffers = false;
        undertowEmbeddedServletContainerFactory17.setJspServletClassName("");
        io.undertow.Undertow.Builder builder22 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager23 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer25 = undertowEmbeddedServletContainerFactory17.getUndertowEmbeddedServletContainer(builder22, deploymentManager23, 0);
        java.lang.Integer int26 = undertowEmbeddedServletContainerFactory17.ioThreads;
        int int27 = undertowEmbeddedServletContainerFactory17.getPort();
        undertowEmbeddedServletContainerFactory17.setContextPath("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer32 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray33 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer32 };
        undertowEmbeddedServletContainerFactory31.addBuilderCustomizers(undertowBuilderCustomizerArray33);
        org.springframework.boot.context.embedded.Ssl ssl35 = undertowEmbeddedServletContainerFactory31.getSsl();
        java.lang.String str36 = undertowEmbeddedServletContainerFactory31.getContextPath();
        java.lang.String str37 = undertowEmbeddedServletContainerFactory31.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet38 = undertowEmbeddedServletContainerFactory31.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray41 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList42 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList42, undertowBuilderCustomizerArray41);
        undertowEmbeddedServletContainerFactory40.builderCustomizers = undertowBuilderCustomizerList42;
        undertowEmbeddedServletContainerFactory31.builderCustomizers = undertowBuilderCustomizerList42;
        java.net.InetAddress inetAddress46 = undertowEmbeddedServletContainerFactory31.getAddress();
        io.undertow.server.handlers.resource.ResourceManager resourceManager47 = undertowEmbeddedServletContainerFactory31.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer50 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray51 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer50 };
        undertowEmbeddedServletContainerFactory49.addBuilderCustomizers(undertowBuilderCustomizerArray51);
        org.springframework.boot.context.embedded.Ssl ssl53 = undertowEmbeddedServletContainerFactory49.getSsl();
        java.lang.String str54 = undertowEmbeddedServletContainerFactory49.getContextPath();
        java.lang.String str55 = undertowEmbeddedServletContainerFactory49.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet56 = undertowEmbeddedServletContainerFactory49.getErrorPages();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList57 = undertowEmbeddedServletContainerFactory49.builderCustomizers;
        undertowEmbeddedServletContainerFactory31.builderCustomizers = undertowBuilderCustomizerList57;
        undertowEmbeddedServletContainerFactory17.builderCustomizers = undertowBuilderCustomizerList57;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList57;
        org.springframework.boot.context.embedded.Ssl ssl61 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList64 = undertowEmbeddedServletContainerFactory63.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray65 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray65);
        undertowEmbeddedServletContainerFactory63.addInitializers(servletContextInitializerArray65);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection68 = undertowEmbeddedServletContainerFactory63.getBuilderCustomizers();
        io.undertow.Undertow.Builder builder70 = undertowEmbeddedServletContainerFactory63.createBuilder(0);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureSsl(ssl61, (int) (byte) 1, builder70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray33);
        org.junit.Assert.assertNull(ssl35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "0.0.0.0" + "'", str37, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet38);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(inetAddress46);
        org.junit.Assert.assertNotNull(resourceManager47);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray51);
        org.junit.Assert.assertNull(ssl53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "0.0.0.0" + "'", str55, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet56);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList57);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList64);
        org.junit.Assert.assertNotNull(servletContextInitializerArray65);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection68);
        org.junit.Assert.assertNotNull(builder70);
    }

    @Test
    public void test03030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03030");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = undertowEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray9 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory7.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray9);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray9);
        java.lang.String str12 = undertowEmbeddedServletContainerFactory1.getContextPath();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo13 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo13);
        java.net.InetAddress inetAddress15 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.net.InetAddress inetAddress17 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress17);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(inetAddress15);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(errorPageSet19);
    }

    @Test
    public void test03031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03031");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList6 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer7 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray8 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer7 };
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray8);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray8);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray8);
        org.springframework.boot.context.embedded.Ssl ssl12 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl12);
        undertowEmbeddedServletContainerFactory1.workerThreads = 10;
        java.lang.Class<?> wildcardClass16 = undertowEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray8);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test03032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03032");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader9;
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 10);
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer13 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray14 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer13 };
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray14);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer18 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray19 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer18 };
        undertowEmbeddedServletContainerFactory17.addBuilderCustomizers(undertowBuilderCustomizerArray19);
        org.springframework.boot.context.embedded.Ssl ssl21 = undertowEmbeddedServletContainerFactory17.getSsl();
        java.lang.String str22 = undertowEmbeddedServletContainerFactory17.getContextPath();
        java.lang.String str23 = undertowEmbeddedServletContainerFactory17.getListenAddress();
        undertowEmbeddedServletContainerFactory17.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl26 = undertowEmbeddedServletContainerFactory17.getSsl();
        undertowEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList29 = undertowEmbeddedServletContainerFactory17.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer31 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray32 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer31 };
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray32);
        initializer30.initializers = servletContextInitializerArray32;
        undertowEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray32);
        initializer15.initializers = servletContextInitializerArray32;
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray32);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection38 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.lang.Boolean boolean41 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        java.lang.String str46 = undertowEmbeddedServletContainerFactory45.getContextPath();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList47 = undertowEmbeddedServletContainerFactory45.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList47;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray14);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray19);
        org.junit.Assert.assertNull(ssl21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "0.0.0.0" + "'", str23, "0.0.0.0");
        org.junit.Assert.assertNull(ssl26);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList29);
        org.junit.Assert.assertNotNull(servletContextInitializerArray32);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection38);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList47);
    }

    @Test
    public void test03033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03033");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.net.InetAddress inetAddress7 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer8 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray9 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer8 };
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray9);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray9);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray15 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray15);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray18);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray20 = initializer19.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray20);
        initializer17.initializers = servletContextInitializerArray20;
        initializer16.initializers = servletContextInitializerArray20;
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray20);
        java.lang.Integer int25 = undertowEmbeddedServletContainerFactory14.buffersPerRegion;
        undertowEmbeddedServletContainerFactory14.directBuffers = true;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer30 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray31 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer30 };
        undertowEmbeddedServletContainerFactory29.addBuilderCustomizers(undertowBuilderCustomizerArray31);
        org.springframework.boot.context.embedded.Ssl ssl33 = undertowEmbeddedServletContainerFactory29.getSsl();
        java.lang.String str34 = undertowEmbeddedServletContainerFactory29.getContextPath();
        java.lang.String str35 = undertowEmbeddedServletContainerFactory29.getListenAddress();
        undertowEmbeddedServletContainerFactory29.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory29.buffersPerRegion = 10;
        undertowEmbeddedServletContainerFactory29.ioThreads = (-1);
        io.undertow.server.handlers.resource.ResourceManager resourceManager42 = undertowEmbeddedServletContainerFactory29.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer45 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray46 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer45 };
        undertowEmbeddedServletContainerFactory44.addBuilderCustomizers(undertowBuilderCustomizerArray46);
        undertowEmbeddedServletContainerFactory44.setSessionTimeout((int) (byte) 10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection50 = undertowEmbeddedServletContainerFactory44.getBuilderCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection51 = undertowEmbeddedServletContainerFactory44.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer54 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray55 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer54 };
        undertowEmbeddedServletContainerFactory53.addBuilderCustomizers(undertowBuilderCustomizerArray55);
        org.springframework.boot.context.embedded.Ssl ssl57 = undertowEmbeddedServletContainerFactory53.getSsl();
        java.lang.String str58 = undertowEmbeddedServletContainerFactory53.getContextPath();
        java.lang.String str59 = undertowEmbeddedServletContainerFactory53.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet60 = undertowEmbeddedServletContainerFactory53.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray63 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList64 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList64, undertowBuilderCustomizerArray63);
        undertowEmbeddedServletContainerFactory62.builderCustomizers = undertowBuilderCustomizerList64;
        undertowEmbeddedServletContainerFactory53.builderCustomizers = undertowBuilderCustomizerList64;
        undertowEmbeddedServletContainerFactory44.builderCustomizers = undertowBuilderCustomizerList64;
        org.springframework.core.io.ResourceLoader resourceLoader69 = undertowEmbeddedServletContainerFactory44.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer72 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray73 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer72 };
        undertowEmbeddedServletContainerFactory71.addBuilderCustomizers(undertowBuilderCustomizerArray73);
        org.springframework.boot.context.embedded.Ssl ssl75 = undertowEmbeddedServletContainerFactory71.getSsl();
        undertowEmbeddedServletContainerFactory71.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory71.setPort((int) (byte) 10);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet80 = undertowEmbeddedServletContainerFactory71.getErrorPages();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet81 = undertowEmbeddedServletContainerFactory71.getErrorPages();
        undertowEmbeddedServletContainerFactory44.setErrorPages(errorPageSet81);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer83 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer84 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray85 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer84 };
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer86 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray85);
        initializer83.initializers = servletContextInitializerArray85;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer88 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray85);
        undertowEmbeddedServletContainerFactory44.addInitializers(servletContextInitializerArray85);
        undertowEmbeddedServletContainerFactory29.addInitializers(servletContextInitializerArray85);
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray85);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray85);
        int int93 = undertowEmbeddedServletContainerFactory1.getPort();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(inetAddress7);
        org.junit.Assert.assertNotNull(servletContextInitializerArray9);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(servletContextInitializerArray15);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertNotNull(servletContextInitializerArray20);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray31);
        org.junit.Assert.assertNull(ssl33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "0.0.0.0" + "'", str35, "0.0.0.0");
        org.junit.Assert.assertNotNull(resourceManager42);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray46);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection50);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection51);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray55);
        org.junit.Assert.assertNull(ssl57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "0.0.0.0" + "'", str59, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet60);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(resourceLoader69);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray73);
        org.junit.Assert.assertNull(ssl75);
        org.junit.Assert.assertNotNull(errorPageSet80);
        org.junit.Assert.assertNotNull(errorPageSet81);
        org.junit.Assert.assertNotNull(servletContextInitializerArray85);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
    }

    @Test
    public void test03034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03034");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray2 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray5 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray5);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray7 = initializer6.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray7);
        initializer4.initializers = servletContextInitializerArray7;
        initializer3.initializers = servletContextInitializerArray7;
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray7);
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.Ssl ssl15 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory20.getMimeMappings();
        io.undertow.Undertow.Builder builder23 = undertowEmbeddedServletContainerFactory20.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer26 = undertowEmbeddedServletContainerFactory18.getUndertowEmbeddedServletContainer(builder23, deploymentManager24, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory18.bufferSize = (-1);
        undertowEmbeddedServletContainerFactory18.directBuffers = false;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList32 = undertowEmbeddedServletContainerFactory31.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory31.ioThreads = 100;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet35 = undertowEmbeddedServletContainerFactory31.getErrorPages();
        undertowEmbeddedServletContainerFactory18.setErrorPages(errorPageSet35);
        java.net.InetAddress inetAddress37 = null;
        undertowEmbeddedServletContainerFactory18.setAddress(inetAddress37);
        io.undertow.Undertow.Builder builder40 = undertowEmbeddedServletContainerFactory18.createBuilder(8080);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureSsl(ssl15, (int) (short) 0, builder40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletContextInitializerArray2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray5);
        org.junit.Assert.assertNotNull(servletContextInitializerArray7);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer26);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList32);
        org.junit.Assert.assertNotNull(errorPageSet35);
        org.junit.Assert.assertNotNull(builder40);
    }

    @Test
    public void test03035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03035");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.ioThreads = 100;
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader4);
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 100;
        java.net.InetAddress inetAddress11 = undertowEmbeddedServletContainerFactory0.getAddress();
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        java.lang.Class<?> wildcardClass14 = undertowEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(inetAddress11);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test03036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03036");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray1 = initializer0.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray2 = initializer0.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray3 = initializer0.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer5 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray6 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer5 };
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray6);
        initializer4.initializers = servletContextInitializerArray6;
        initializer0.initializers = servletContextInitializerArray6;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory11.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory11.ioThreads;
        java.lang.Integer int15 = undertowEmbeddedServletContainerFactory11.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage16 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray17 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage16 };
        undertowEmbeddedServletContainerFactory11.addErrorPages(errorPageArray17);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray19);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray21 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray21);
        initializer20.initializers = servletContextInitializerArray21;
        undertowEmbeddedServletContainerFactory11.addInitializers(servletContextInitializerArray21);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray21);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray21);
        initializer0.initializers = servletContextInitializerArray21;
        org.junit.Assert.assertNull(servletContextInitializerArray1);
        org.junit.Assert.assertNull(servletContextInitializerArray2);
        org.junit.Assert.assertNull(servletContextInitializerArray3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray6);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(errorPageArray17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertNotNull(servletContextInitializerArray21);
    }

    @Test
    public void test03037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03037");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int4 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        boolean boolean8 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader9;
        boolean boolean11 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setContextPath("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test03038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03038");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection9 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.workerThreads = 0;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) -1);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file15);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList22 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList22, undertowBuilderCustomizerArray21);
        undertowEmbeddedServletContainerFactory20.builderCustomizers = undertowBuilderCustomizerList22;
        boolean boolean25 = undertowEmbeddedServletContainerFactory20.isRegisterJspServlet();
        java.net.InetAddress inetAddress26 = undertowEmbeddedServletContainerFactory20.getAddress();
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer27 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray28 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer27 };
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray28);
        undertowEmbeddedServletContainerFactory20.addInitializers(servletContextInitializerArray28);
        java.lang.Integer int31 = undertowEmbeddedServletContainerFactory20.buffersPerRegion;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = undertowEmbeddedServletContainerFactory33.getMimeMappings();
        undertowEmbeddedServletContainerFactory20.setMimeMappings(mimeMappings34);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings34);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray41 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList42 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList42, undertowBuilderCustomizerArray41);
        undertowEmbeddedServletContainerFactory40.builderCustomizers = undertowBuilderCustomizerList42;
        boolean boolean45 = undertowEmbeddedServletContainerFactory40.isRegisterDefaultServlet();
        boolean boolean46 = undertowEmbeddedServletContainerFactory40.isRegisterJspServlet();
        int int47 = undertowEmbeddedServletContainerFactory40.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer50 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray51 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer50 };
        undertowEmbeddedServletContainerFactory49.addBuilderCustomizers(undertowBuilderCustomizerArray51);
        org.springframework.boot.context.embedded.Ssl ssl53 = undertowEmbeddedServletContainerFactory49.getSsl();
        undertowEmbeddedServletContainerFactory49.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory49.setPort((int) (byte) 10);
        boolean boolean58 = undertowEmbeddedServletContainerFactory49.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray61 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList62 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList62, undertowBuilderCustomizerArray61);
        undertowEmbeddedServletContainerFactory60.builderCustomizers = undertowBuilderCustomizerList62;
        java.lang.Integer int65 = undertowEmbeddedServletContainerFactory60.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer68 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray69 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer68 };
        undertowEmbeddedServletContainerFactory67.addBuilderCustomizers(undertowBuilderCustomizerArray69);
        org.springframework.boot.context.embedded.Ssl ssl71 = undertowEmbeddedServletContainerFactory67.getSsl();
        java.lang.String str72 = undertowEmbeddedServletContainerFactory67.getContextPath();
        java.lang.String str73 = undertowEmbeddedServletContainerFactory67.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet74 = undertowEmbeddedServletContainerFactory67.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection75 = undertowEmbeddedServletContainerFactory67.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList76 = undertowEmbeddedServletContainerFactory67.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray77 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory67.addBuilderCustomizers(undertowBuilderCustomizerArray77);
        org.springframework.core.io.ResourceLoader resourceLoader79 = undertowEmbeddedServletContainerFactory67.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory81 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory81.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int84 = undertowEmbeddedServletContainerFactory81.ioThreads;
        java.lang.Integer int85 = undertowEmbeddedServletContainerFactory81.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage86 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray87 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage86 };
        undertowEmbeddedServletContainerFactory81.addErrorPages(errorPageArray87);
        undertowEmbeddedServletContainerFactory67.addErrorPages(errorPageArray87);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray90 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer91 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray90);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray92 = initializer91.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer93 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray92);
        undertowEmbeddedServletContainerFactory67.addInitializers(servletContextInitializerArray92);
        io.undertow.servlet.api.DeploymentManager deploymentManager95 = undertowEmbeddedServletContainerFactory60.createDeploymentManager(servletContextInitializerArray92);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer96 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray92);
        io.undertow.servlet.api.DeploymentManager deploymentManager97 = undertowEmbeddedServletContainerFactory49.createDeploymentManager(servletContextInitializerArray92);
        io.undertow.servlet.api.DeploymentManager deploymentManager98 = undertowEmbeddedServletContainerFactory40.createDeploymentManager(servletContextInitializerArray92);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer99 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection9);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(inetAddress26);
        org.junit.Assert.assertNotNull(servletContextInitializerArray28);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray51);
        org.junit.Assert.assertNull(ssl53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray69);
        org.junit.Assert.assertNull(ssl71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "0.0.0.0" + "'", str73, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet74);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection75);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList76);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray77);
        org.junit.Assert.assertNull(resourceLoader79);
        org.junit.Assert.assertNull(int84);
        org.junit.Assert.assertNull(int85);
        org.junit.Assert.assertNotNull(errorPageArray87);
        org.junit.Assert.assertNotNull(servletContextInitializerArray90);
        org.junit.Assert.assertNotNull(servletContextInitializerArray92);
        org.junit.Assert.assertNotNull(deploymentManager95);
        org.junit.Assert.assertNotNull(deploymentManager97);
        org.junit.Assert.assertNotNull(deploymentManager98);
    }

    @Test
    public void test03039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03039");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.close();
        java.lang.String str7 = jarResourcemanager1.jarPath;
        java.lang.String str8 = jarResourcemanager1.jarPath;
        java.lang.String str9 = jarResourcemanager1.jarPath;
        jarResourcemanager1.jarPath = "0.0.0.0";
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource13 = jarResourcemanager1.getResource("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test03040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03040");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setPort(0);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader15 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNull(resourceLoader15);
    }

    @Test
    public void test03041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03041");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory3.getMimeMappings();
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory3.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager7 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer9 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder6, deploymentManager7, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory1.bufferSize = (-1);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection12 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray13 = undertowEmbeddedServletContainerFactory1.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer9);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection12);
    }

    @Test
    public void test03042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03042");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.close();
        jarResourcemanager1.close();
        jarResourcemanager1.close();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener5 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager1.removeResourceChangeListener(resourceChangeListener5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03043");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = undertowEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray9 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory7.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray9);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray9);
        java.lang.String str12 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader13);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray20 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer19 };
        undertowEmbeddedServletContainerFactory18.addBuilderCustomizers(undertowBuilderCustomizerArray20);
        org.springframework.boot.context.embedded.Ssl ssl22 = undertowEmbeddedServletContainerFactory18.getSsl();
        java.lang.String str23 = undertowEmbeddedServletContainerFactory18.getContextPath();
        java.lang.String str24 = undertowEmbeddedServletContainerFactory18.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet25 = undertowEmbeddedServletContainerFactory18.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection26 = undertowEmbeddedServletContainerFactory18.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList27 = undertowEmbeddedServletContainerFactory18.builderCustomizers;
        org.springframework.core.io.ResourceLoader resourceLoader28 = undertowEmbeddedServletContainerFactory18.resourceLoader;
        int int29 = undertowEmbeddedServletContainerFactory18.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer32 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray33 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer32 };
        undertowEmbeddedServletContainerFactory31.addBuilderCustomizers(undertowBuilderCustomizerArray33);
        org.springframework.boot.context.embedded.Ssl ssl35 = undertowEmbeddedServletContainerFactory31.getSsl();
        java.lang.String str36 = undertowEmbeddedServletContainerFactory31.getContextPath();
        java.lang.String str37 = undertowEmbeddedServletContainerFactory31.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet38 = undertowEmbeddedServletContainerFactory31.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray41 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList42 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList42, undertowBuilderCustomizerArray41);
        undertowEmbeddedServletContainerFactory40.builderCustomizers = undertowBuilderCustomizerList42;
        undertowEmbeddedServletContainerFactory31.builderCustomizers = undertowBuilderCustomizerList42;
        org.springframework.core.io.ResourceLoader resourceLoader46 = null;
        undertowEmbeddedServletContainerFactory31.resourceLoader = resourceLoader46;
        undertowEmbeddedServletContainerFactory31.directBuffers = true;
        org.springframework.core.io.ResourceLoader resourceLoader50 = undertowEmbeddedServletContainerFactory31.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings53 = undertowEmbeddedServletContainerFactory52.getMimeMappings();
        undertowEmbeddedServletContainerFactory52.ioThreads = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings58 = undertowEmbeddedServletContainerFactory57.getMimeMappings();
        io.undertow.Undertow.Builder builder60 = undertowEmbeddedServletContainerFactory57.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager61 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer63 = undertowEmbeddedServletContainerFactory52.getUndertowEmbeddedServletContainer(builder60, deploymentManager61, (int) '4');
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection64 = undertowEmbeddedServletContainerFactory52.getDeploymentInfoCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList65 = undertowEmbeddedServletContainerFactory52.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory31.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList65;
        undertowEmbeddedServletContainerFactory18.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList65;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList65;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray20);
        org.junit.Assert.assertNull(ssl22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "0.0.0.0" + "'", str24, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection26);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList27);
        org.junit.Assert.assertNull(resourceLoader28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray33);
        org.junit.Assert.assertNull(ssl35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "0.0.0.0" + "'", str37, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet38);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(resourceLoader50);
        org.junit.Assert.assertNotNull(mimeMappings53);
        org.junit.Assert.assertNotNull(mimeMappings58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer63);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection64);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList65);
    }

    @Test
    public void test03044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03044");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory1.getSsl();
        int int11 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray12 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray12);
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.ioThreads = 1800;
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader17;
        org.springframework.core.io.ResourceLoader resourceLoader19 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray12);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(resourceLoader19);
    }

    @Test
    public void test03045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03045");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress10 = undertowEmbeddedServletContainerFactory1.getAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo11 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo11);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        org.springframework.core.io.ResourceLoader resourceLoader15 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.lang.Integer int16 = undertowEmbeddedServletContainerFactory1.workerThreads;
        boolean boolean17 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(inetAddress10);
        org.junit.Assert.assertNull(resourceLoader15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test03046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03046");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setPort((int) (short) 10);
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory1.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader10;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList12 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList12);
        org.junit.Assert.assertNotNull(mimeMappings13);
    }

    @Test
    public void test03047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03047");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.jarPath = "hi!";
        java.lang.String str6 = jarResourcemanager1.jarPath;
        java.lang.String str7 = jarResourcemanager1.jarPath;
        boolean boolean8 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.close();
        java.lang.String str10 = jarResourcemanager1.jarPath;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource12 = jarResourcemanager1.getResource("hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test03048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03048");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray5 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer4 };
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray5);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray5);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList8 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        java.net.InetAddress inetAddress9 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) '4');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer16 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer16 };
        undertowEmbeddedServletContainerFactory15.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        undertowEmbeddedServletContainerFactory15.setSessionTimeout((int) (byte) 10);
        java.lang.Integer int21 = undertowEmbeddedServletContainerFactory15.ioThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList23 = undertowEmbeddedServletContainerFactory22.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory22.ioThreads = 100;
        org.springframework.core.io.ResourceLoader resourceLoader26 = null;
        undertowEmbeddedServletContainerFactory22.setResourceLoader(resourceLoader26);
        org.springframework.boot.context.embedded.ErrorPage errorPage28 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray29 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage28 };
        undertowEmbeddedServletContainerFactory22.addErrorPages(errorPageArray29);
        undertowEmbeddedServletContainerFactory15.addErrorPages(errorPageArray29);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer34 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray35 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer34 };
        undertowEmbeddedServletContainerFactory33.addBuilderCustomizers(undertowBuilderCustomizerArray35);
        org.springframework.boot.context.embedded.Ssl ssl37 = undertowEmbeddedServletContainerFactory33.getSsl();
        undertowEmbeddedServletContainerFactory33.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory33.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer44 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray45 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer44 };
        undertowEmbeddedServletContainerFactory43.addBuilderCustomizers(undertowBuilderCustomizerArray45);
        undertowEmbeddedServletContainerFactory33.addBuilderCustomizers(undertowBuilderCustomizerArray45);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings48 = undertowEmbeddedServletContainerFactory33.getMimeMappings();
        undertowEmbeddedServletContainerFactory15.setMimeMappings(mimeMappings48);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings48);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray5);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList8);
        org.junit.Assert.assertNull(inetAddress9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList23);
        org.junit.Assert.assertNotNull(errorPageArray29);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray35);
        org.junit.Assert.assertNull(ssl37);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray45);
        org.junit.Assert.assertNotNull(mimeMappings48);
    }

    @Test
    public void test03049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03049");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 10;
        undertowEmbeddedServletContainerFactory1.ioThreads = (-1);
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader14);
        undertowEmbeddedServletContainerFactory1.workerThreads = 0;
        org.springframework.core.io.ResourceLoader resourceLoader18 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = undertowEmbeddedServletContainerFactory21.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings22);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        boolean boolean26 = undertowEmbeddedServletContainerFactory25.isRegisterJspServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = undertowEmbeddedServletContainerFactory25.getMimeMappings();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo28 = null;
        undertowEmbeddedServletContainerFactory25.configureErrorPages(deploymentInfo28);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer32 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray33 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer32 };
        undertowEmbeddedServletContainerFactory31.addBuilderCustomizers(undertowBuilderCustomizerArray33);
        undertowEmbeddedServletContainerFactory25.addBuilderCustomizers(undertowBuilderCustomizerArray33);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray33);
        boolean boolean37 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test03050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03050");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        io.undertow.Undertow.Builder builder4 = undertowEmbeddedServletContainerFactory1.createBuilder((int) '4');
        java.net.InetAddress inetAddress5 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress5);
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        java.io.File file10 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo11 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo11);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1800);
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(1800);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory18.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer21 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray22 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer21 };
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray22);
        initializer20.initializers = servletContextInitializerArray22;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray25 = initializer20.initializers;
        undertowEmbeddedServletContainerFactory18.addInitializers(servletContextInitializerArray25);
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.DeploymentManager deploymentManager27 = undertowEmbeddedServletContainerFactory1.createDeploymentManager(servletContextInitializerArray25);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: java.lang.NullPointerException");
        } catch (java.lang.RuntimeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertNotNull(servletContextInitializerArray22);
        org.junit.Assert.assertNotNull(servletContextInitializerArray25);
    }

    @Test
    public void test03051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03051");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.net.InetAddress inetAddress7 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer13 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray14 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer13 };
        undertowEmbeddedServletContainerFactory12.addBuilderCustomizers(undertowBuilderCustomizerArray14);
        org.springframework.boot.context.embedded.Ssl ssl16 = undertowEmbeddedServletContainerFactory12.getSsl();
        java.lang.String str17 = undertowEmbeddedServletContainerFactory12.getContextPath();
        java.lang.String str18 = undertowEmbeddedServletContainerFactory12.getListenAddress();
        undertowEmbeddedServletContainerFactory12.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl21 = undertowEmbeddedServletContainerFactory12.getSsl();
        undertowEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection24 = undertowEmbeddedServletContainerFactory12.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray28 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer27 };
        undertowEmbeddedServletContainerFactory26.addBuilderCustomizers(undertowBuilderCustomizerArray28);
        org.springframework.boot.context.embedded.Ssl ssl30 = undertowEmbeddedServletContainerFactory26.getSsl();
        java.lang.String str31 = undertowEmbeddedServletContainerFactory26.getContextPath();
        java.lang.String str32 = undertowEmbeddedServletContainerFactory26.getListenAddress();
        undertowEmbeddedServletContainerFactory26.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl35 = undertowEmbeddedServletContainerFactory26.getSsl();
        int int36 = undertowEmbeddedServletContainerFactory26.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray37 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory26.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray37);
        undertowEmbeddedServletContainerFactory12.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray37);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray37);
        int int41 = undertowEmbeddedServletContainerFactory1.getPort();
        java.io.File file42 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(inetAddress7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray14);
        org.junit.Assert.assertNull(ssl16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "0.0.0.0" + "'", str18, "0.0.0.0");
        org.junit.Assert.assertNull(ssl21);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection24);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray28);
        org.junit.Assert.assertNull(ssl30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "0.0.0.0" + "'", str32, "0.0.0.0");
        org.junit.Assert.assertNull(ssl35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNull(file42);
    }

    @Test
    public void test03052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03052");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int4 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage6 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray7 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage6 };
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray7);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray9 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray9);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray11 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray11);
        initializer10.initializers = servletContextInitializerArray11;
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray11);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection15 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.bufferSize = (-1);
        java.util.concurrent.TimeUnit timeUnit19 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) '#', timeUnit19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(errorPageArray7);
        org.junit.Assert.assertNotNull(servletContextInitializerArray9);
        org.junit.Assert.assertNotNull(servletContextInitializerArray11);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection15);
    }

    @Test
    public void test03053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03053");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.ioThreads = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList9 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        java.lang.ClassLoader classLoader10 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.bufferSize = 1800;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer16 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer16 };
        undertowEmbeddedServletContainerFactory15.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory15.getSsl();
        java.lang.String str20 = undertowEmbeddedServletContainerFactory15.getContextPath();
        java.lang.String str21 = undertowEmbeddedServletContainerFactory15.getListenAddress();
        undertowEmbeddedServletContainerFactory15.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl24 = null;
        undertowEmbeddedServletContainerFactory15.setSsl(ssl24);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = undertowEmbeddedServletContainerFactory26.getMimeMappings();
        undertowEmbeddedServletContainerFactory15.setMimeMappings(mimeMappings27);
        undertowEmbeddedServletContainerFactory15.bufferSize = 1800;
        boolean boolean31 = undertowEmbeddedServletContainerFactory15.isRegisterDefaultServlet();
        org.springframework.core.io.ResourceLoader resourceLoader32 = null;
        undertowEmbeddedServletContainerFactory15.setResourceLoader(resourceLoader32);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer36 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray37 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer36 };
        undertowEmbeddedServletContainerFactory35.addBuilderCustomizers(undertowBuilderCustomizerArray37);
        org.springframework.boot.context.embedded.Ssl ssl39 = undertowEmbeddedServletContainerFactory35.getSsl();
        undertowEmbeddedServletContainerFactory35.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory35.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer46 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray47 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer46 };
        undertowEmbeddedServletContainerFactory45.addBuilderCustomizers(undertowBuilderCustomizerArray47);
        undertowEmbeddedServletContainerFactory35.addBuilderCustomizers(undertowBuilderCustomizerArray47);
        undertowEmbeddedServletContainerFactory15.addBuilderCustomizers(undertowBuilderCustomizerArray47);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray47);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer54 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray55 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer54 };
        undertowEmbeddedServletContainerFactory53.addBuilderCustomizers(undertowBuilderCustomizerArray55);
        org.springframework.boot.context.embedded.Ssl ssl57 = undertowEmbeddedServletContainerFactory53.getSsl();
        java.lang.String str58 = undertowEmbeddedServletContainerFactory53.getContextPath();
        java.lang.String str59 = undertowEmbeddedServletContainerFactory53.getListenAddress();
        undertowEmbeddedServletContainerFactory53.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl62 = undertowEmbeddedServletContainerFactory53.getSsl();
        undertowEmbeddedServletContainerFactory53.setPort((int) (short) 0);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList65 = undertowEmbeddedServletContainerFactory53.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer67 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray68 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer67 };
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray68);
        initializer66.initializers = servletContextInitializerArray68;
        undertowEmbeddedServletContainerFactory53.addInitializers(servletContextInitializerArray68);
        java.lang.ClassLoader classLoader72 = undertowEmbeddedServletContainerFactory53.getServletClassLoader();
        undertowEmbeddedServletContainerFactory53.ioThreads = 0;
        undertowEmbeddedServletContainerFactory53.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory53.bufferSize = 0;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet79 = undertowEmbeddedServletContainerFactory53.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory81 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory81.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int84 = undertowEmbeddedServletContainerFactory81.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory86 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory86.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int89 = undertowEmbeddedServletContainerFactory86.ioThreads;
        java.lang.Integer int90 = undertowEmbeddedServletContainerFactory86.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage91 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray92 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage91 };
        undertowEmbeddedServletContainerFactory86.addErrorPages(errorPageArray92);
        undertowEmbeddedServletContainerFactory81.addErrorPages(errorPageArray92);
        undertowEmbeddedServletContainerFactory53.addErrorPages(errorPageArray92);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray92);
        org.springframework.boot.context.embedded.Ssl ssl97 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode98 = undertowEmbeddedServletContainerFactory1.getSslClientAuthMode(ssl97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0.0.0.0" + "'", str6, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList9);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "0.0.0.0" + "'", str21, "0.0.0.0");
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray37);
        org.junit.Assert.assertNull(ssl39);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray47);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray55);
        org.junit.Assert.assertNull(ssl57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "0.0.0.0" + "'", str59, "0.0.0.0");
        org.junit.Assert.assertNull(ssl62);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList65);
        org.junit.Assert.assertNotNull(servletContextInitializerArray68);
        org.junit.Assert.assertNotNull(classLoader72);
        org.junit.Assert.assertNotNull(errorPageSet79);
        org.junit.Assert.assertNull(int84);
        org.junit.Assert.assertNull(int89);
        org.junit.Assert.assertNull(int90);
        org.junit.Assert.assertNotNull(errorPageArray92);
    }

    @Test
    public void test03054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03054");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.io.File file2 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file2);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo4 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo4);
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory0.directBuffers;
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory10.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory10.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory10.ioThreads = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray19 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList20 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList20, undertowBuilderCustomizerArray19);
        undertowEmbeddedServletContainerFactory18.builderCustomizers = undertowBuilderCustomizerList20;
        undertowEmbeddedServletContainerFactory18.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory18.bufferSize = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList27 = undertowEmbeddedServletContainerFactory18.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer30 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray31 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer30 };
        undertowEmbeddedServletContainerFactory29.addBuilderCustomizers(undertowBuilderCustomizerArray31);
        org.springframework.boot.context.embedded.Ssl ssl33 = undertowEmbeddedServletContainerFactory29.getSsl();
        java.lang.String str34 = undertowEmbeddedServletContainerFactory29.getContextPath();
        java.lang.String str35 = undertowEmbeddedServletContainerFactory29.getListenAddress();
        undertowEmbeddedServletContainerFactory29.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl38 = undertowEmbeddedServletContainerFactory29.getSsl();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = undertowEmbeddedServletContainerFactory29.getMimeMappings();
        undertowEmbeddedServletContainerFactory18.setMimeMappings(mimeMappings39);
        undertowEmbeddedServletContainerFactory10.setMimeMappings(mimeMappings39);
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings39);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo43 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo43);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Mappings must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList27);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray31);
        org.junit.Assert.assertNull(ssl33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "0.0.0.0" + "'", str35, "0.0.0.0");
        org.junit.Assert.assertNull(ssl38);
        org.junit.Assert.assertNotNull(mimeMappings39);
    }

    @Test
    public void test03055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03055");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection8 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet9 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.io.File file10 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        java.lang.String str13 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection8);
        org.junit.Assert.assertNotNull(errorPageSet9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test03056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03056");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 10;
        undertowEmbeddedServletContainerFactory1.ioThreads = (-1);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 8080);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection16 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.net.InetAddress inetAddress17 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection16);
    }

    @Test
    public void test03057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03057");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        org.springframework.core.io.ResourceLoader resourceLoader8 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader8);
        undertowEmbeddedServletContainerFactory1.bufferSize = 0;
        int int12 = undertowEmbeddedServletContainerFactory1.getPort();
        java.lang.String str13 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer20 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer20 };
        undertowEmbeddedServletContainerFactory19.addBuilderCustomizers(undertowBuilderCustomizerArray21);
        org.springframework.boot.context.embedded.Ssl ssl23 = undertowEmbeddedServletContainerFactory19.getSsl();
        java.lang.String str24 = undertowEmbeddedServletContainerFactory19.getContextPath();
        java.lang.String str25 = undertowEmbeddedServletContainerFactory19.getListenAddress();
        undertowEmbeddedServletContainerFactory19.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl28 = undertowEmbeddedServletContainerFactory19.getSsl();
        int int29 = undertowEmbeddedServletContainerFactory19.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray30 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory19.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray30);
        java.lang.Integer int32 = undertowEmbeddedServletContainerFactory19.bufferSize;
        undertowEmbeddedServletContainerFactory19.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory36.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory36.setRegisterJspServlet(false);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList41 = undertowEmbeddedServletContainerFactory36.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer42 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray43 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer42 };
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray43);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray43);
        undertowEmbeddedServletContainerFactory36.addInitializers(servletContextInitializerArray43);
        java.io.File file47 = undertowEmbeddedServletContainerFactory36.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer50 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray51 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer50 };
        undertowEmbeddedServletContainerFactory49.addBuilderCustomizers(undertowBuilderCustomizerArray51);
        org.springframework.boot.context.embedded.Ssl ssl53 = undertowEmbeddedServletContainerFactory49.getSsl();
        undertowEmbeddedServletContainerFactory49.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory49.setPort((int) (byte) 10);
        boolean boolean58 = undertowEmbeddedServletContainerFactory49.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray59 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList60 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList60, undertowDeploymentInfoCustomizerArray59);
        undertowEmbeddedServletContainerFactory49.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList60;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings63 = undertowEmbeddedServletContainerFactory49.getMimeMappings();
        undertowEmbeddedServletContainerFactory36.setMimeMappings(mimeMappings63);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer67 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray68 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer67 };
        undertowEmbeddedServletContainerFactory66.addBuilderCustomizers(undertowBuilderCustomizerArray68);
        org.springframework.boot.context.embedded.Ssl ssl70 = undertowEmbeddedServletContainerFactory66.getSsl();
        undertowEmbeddedServletContainerFactory66.setDirectBuffers((java.lang.Boolean) true);
        java.lang.String str73 = undertowEmbeddedServletContainerFactory66.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer74 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray75 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer74 };
        undertowEmbeddedServletContainerFactory66.addBuilderCustomizers(undertowBuilderCustomizerArray75);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory78 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer79 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray80 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer79 };
        undertowEmbeddedServletContainerFactory78.addBuilderCustomizers(undertowBuilderCustomizerArray80);
        org.springframework.boot.context.embedded.Ssl ssl82 = undertowEmbeddedServletContainerFactory78.getSsl();
        java.lang.String str83 = undertowEmbeddedServletContainerFactory78.getContextPath();
        java.lang.String str84 = undertowEmbeddedServletContainerFactory78.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet85 = undertowEmbeddedServletContainerFactory78.getErrorPages();
        undertowEmbeddedServletContainerFactory66.setErrorPages(errorPageSet85);
        undertowEmbeddedServletContainerFactory36.setErrorPages(errorPageSet85);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList88 = undertowEmbeddedServletContainerFactory36.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory19.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList88;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList88;
        java.util.concurrent.TimeUnit timeUnit92 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout(8080, timeUnit92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0.0.0.0" + "'", str13, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray21);
        org.junit.Assert.assertNull(ssl23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "0.0.0.0" + "'", str25, "0.0.0.0");
        org.junit.Assert.assertNull(ssl28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray30);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList41);
        org.junit.Assert.assertNotNull(servletContextInitializerArray43);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray51);
        org.junit.Assert.assertNull(ssl53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(mimeMappings63);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray68);
        org.junit.Assert.assertNull(ssl70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "0.0.0.0" + "'", str73, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray75);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray80);
        org.junit.Assert.assertNull(ssl82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "0.0.0.0" + "'", str84, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet85);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList88);
    }

    @Test
    public void test03058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03058");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory10.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory10.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory10.ioThreads = 0;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory10.createBuilder((int) (short) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList21 = undertowEmbeddedServletContainerFactory20.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory20.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray26);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray29 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray29);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray31 = initializer30.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray31);
        initializer28.initializers = servletContextInitializerArray31;
        initializer27.initializers = servletContextInitializerArray31;
        undertowEmbeddedServletContainerFactory25.addInitializers(servletContextInitializerArray31);
        io.undertow.servlet.api.DeploymentManager deploymentManager36 = undertowEmbeddedServletContainerFactory20.createDeploymentManager(servletContextInitializerArray31);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer38 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder18, deploymentManager36, 100);
        java.net.InetAddress inetAddress39 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress39);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0.0.0.0" + "'", str6, "0.0.0.0");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList21);
        org.junit.Assert.assertNotNull(servletContextInitializerArray26);
        org.junit.Assert.assertNotNull(servletContextInitializerArray29);
        org.junit.Assert.assertNotNull(servletContextInitializerArray31);
        org.junit.Assert.assertNotNull(deploymentManager36);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer38);
    }

    @Test
    public void test03059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03059");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.io.File file1 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file1);
        java.lang.String str3 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        java.lang.Integer int4 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "0.0.0.0" + "'", str3, "0.0.0.0");
        org.junit.Assert.assertNull(int4);
    }

    @Test
    public void test03060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03060");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        boolean boolean10 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList12, undertowDeploymentInfoCustomizerArray11);
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList12;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo15 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo15);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList17 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = undertowEmbeddedServletContainerFactory21.getMimeMappings();
        undertowEmbeddedServletContainerFactory21.ioThreads = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = undertowEmbeddedServletContainerFactory26.getMimeMappings();
        io.undertow.Undertow.Builder builder29 = undertowEmbeddedServletContainerFactory26.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager30 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer32 = undertowEmbeddedServletContainerFactory21.getUndertowEmbeddedServletContainer(builder29, deploymentManager30, (int) '4');
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection33 = undertowEmbeddedServletContainerFactory21.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray36 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray36);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray39 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray39);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray41 = initializer40.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray41);
        initializer38.initializers = servletContextInitializerArray41;
        initializer37.initializers = servletContextInitializerArray41;
        undertowEmbeddedServletContainerFactory35.addInitializers(servletContextInitializerArray41);
        java.lang.Integer int46 = undertowEmbeddedServletContainerFactory35.buffersPerRegion;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray49 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList50 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList50, undertowBuilderCustomizerArray49);
        undertowEmbeddedServletContainerFactory48.builderCustomizers = undertowBuilderCustomizerList50;
        undertowEmbeddedServletContainerFactory48.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory48.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings57 = undertowEmbeddedServletContainerFactory48.getMimeMappings();
        java.lang.String str58 = undertowEmbeddedServletContainerFactory48.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer undertowDeploymentInfoCustomizer59 = null;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray60 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] { undertowDeploymentInfoCustomizer59 };
        undertowEmbeddedServletContainerFactory48.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray60);
        undertowEmbeddedServletContainerFactory35.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray60);
        undertowEmbeddedServletContainerFactory21.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray60);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray60);
        org.springframework.boot.context.embedded.ErrorPage errorPage65 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage66 = undertowEmbeddedServletContainerFactory1.getUndertowErrorPage(errorPage65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList17);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer32);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection33);
        org.junit.Assert.assertNotNull(servletContextInitializerArray36);
        org.junit.Assert.assertNotNull(servletContextInitializerArray39);
        org.junit.Assert.assertNotNull(servletContextInitializerArray41);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(mimeMappings57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "0.0.0.0" + "'", str58, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray60);
    }

    @Test
    public void test03061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03061");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.ioThreads = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList11 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList11, undertowBuilderCustomizerArray10);
        undertowEmbeddedServletContainerFactory9.builderCustomizers = undertowBuilderCustomizerList11;
        undertowEmbeddedServletContainerFactory9.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory9.bufferSize = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList18 = undertowEmbeddedServletContainerFactory9.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer21 };
        undertowEmbeddedServletContainerFactory20.addBuilderCustomizers(undertowBuilderCustomizerArray22);
        org.springframework.boot.context.embedded.Ssl ssl24 = undertowEmbeddedServletContainerFactory20.getSsl();
        java.lang.String str25 = undertowEmbeddedServletContainerFactory20.getContextPath();
        java.lang.String str26 = undertowEmbeddedServletContainerFactory20.getListenAddress();
        undertowEmbeddedServletContainerFactory20.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl29 = undertowEmbeddedServletContainerFactory20.getSsl();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = undertowEmbeddedServletContainerFactory20.getMimeMappings();
        undertowEmbeddedServletContainerFactory9.setMimeMappings(mimeMappings30);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings30);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.Ssl ssl34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode35 = undertowEmbeddedServletContainerFactory1.getSslClientAuthMode(ssl34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray22);
        org.junit.Assert.assertNull(ssl24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0.0.0.0" + "'", str26, "0.0.0.0");
        org.junit.Assert.assertNull(ssl29);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNotNull(mimeMappings33);
    }

    @Test
    public void test03062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03062");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.close();
        boolean boolean3 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "";
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource7 = jarResourcemanager1.getResource("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test03063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03063");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        java.io.File file14 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file14);
        java.lang.String str16 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test03064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03064");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.lang.String str4 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo5 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo5);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
    }

    @Test
    public void test03065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03065");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.io.File file2 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList7 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList7, undertowBuilderCustomizerArray6);
        undertowEmbeddedServletContainerFactory5.builderCustomizers = undertowBuilderCustomizerList7;
        java.lang.String str10 = undertowEmbeddedServletContainerFactory5.getListenAddress();
        undertowEmbeddedServletContainerFactory5.ioThreads = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList13 = undertowEmbeddedServletContainerFactory5.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList13;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer17 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer17 };
        undertowEmbeddedServletContainerFactory16.addBuilderCustomizers(undertowBuilderCustomizerArray18);
        org.springframework.boot.context.embedded.Ssl ssl20 = undertowEmbeddedServletContainerFactory16.getSsl();
        java.lang.String str21 = undertowEmbeddedServletContainerFactory16.getContextPath();
        java.lang.String str22 = undertowEmbeddedServletContainerFactory16.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = undertowEmbeddedServletContainerFactory16.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray26 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList27 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList27, undertowBuilderCustomizerArray26);
        undertowEmbeddedServletContainerFactory25.builderCustomizers = undertowBuilderCustomizerList27;
        undertowEmbeddedServletContainerFactory16.builderCustomizers = undertowBuilderCustomizerList27;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection31 = undertowEmbeddedServletContainerFactory16.getBuilderCustomizers();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo32 = null;
        undertowEmbeddedServletContainerFactory16.configureErrorPages(deploymentInfo32);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList34 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList34;
        java.net.InetAddress inetAddress36 = undertowEmbeddedServletContainerFactory0.getAddress();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "0.0.0.0" + "'", str10, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList13);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray18);
        org.junit.Assert.assertNull(ssl20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "0.0.0.0" + "'", str22, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet23);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection31);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList34);
        org.junit.Assert.assertNull(inetAddress36);
    }

    @Test
    public void test03066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03066");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory3.getMimeMappings();
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory3.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager7 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer9 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder6, deploymentManager7, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer16 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer16 };
        undertowEmbeddedServletContainerFactory15.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory15.getSsl();
        java.lang.String str20 = undertowEmbeddedServletContainerFactory15.getContextPath();
        java.lang.String str21 = undertowEmbeddedServletContainerFactory15.getListenAddress();
        undertowEmbeddedServletContainerFactory15.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl24 = undertowEmbeddedServletContainerFactory15.getSsl();
        undertowEmbeddedServletContainerFactory15.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer29 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray30 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer29 };
        undertowEmbeddedServletContainerFactory28.addBuilderCustomizers(undertowBuilderCustomizerArray30);
        org.springframework.boot.context.embedded.Ssl ssl32 = undertowEmbeddedServletContainerFactory28.getSsl();
        undertowEmbeddedServletContainerFactory28.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory28.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer39 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray40 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer39 };
        undertowEmbeddedServletContainerFactory38.addBuilderCustomizers(undertowBuilderCustomizerArray40);
        undertowEmbeddedServletContainerFactory28.addBuilderCustomizers(undertowBuilderCustomizerArray40);
        undertowEmbeddedServletContainerFactory15.addBuilderCustomizers(undertowBuilderCustomizerArray40);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray40);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) (-1));
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray47 = undertowEmbeddedServletContainerFactory1.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "0.0.0.0" + "'", str21, "0.0.0.0");
        org.junit.Assert.assertNull(ssl24);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray30);
        org.junit.Assert.assertNull(ssl32);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray40);
    }

    @Test
    public void test03067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03067");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray7 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet8, errorPageArray7);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet8);
        java.net.InetAddress inetAddress11 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader13);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(inetAddress11);
        org.junit.Assert.assertNotNull(errorPageSet12);
        org.junit.Assert.assertNotNull(mimeMappings15);
    }

    @Test
    public void test03068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03068");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 10;
        undertowEmbeddedServletContainerFactory1.ioThreads = (-1);
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader14);
        undertowEmbeddedServletContainerFactory1.workerThreads = 0;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1800);
        org.springframework.core.io.ResourceLoader resourceLoader20 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.springframework.boot.context.embedded.Ssl ssl21 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNull(resourceLoader20);
        org.junit.Assert.assertNull(ssl21);
    }

    @Test
    public void test03069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03069");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 10;
        undertowEmbeddedServletContainerFactory1.ioThreads = (-1);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 8080);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1);
        int int18 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setContextPath("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1800 + "'", int18 == 1800);
    }

    @Test
    public void test03070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03070");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader6;
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 8080);
        org.springframework.boot.context.embedded.Ssl ssl13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode14 = undertowEmbeddedServletContainerFactory1.getSslClientAuthMode(ssl13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(int8);
    }

    @Test
    public void test03071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03071");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.net.InetAddress inetAddress7 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo9 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo9);
        java.lang.Integer int11 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        org.springframework.core.io.ResourceLoader resourceLoader12 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray14 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(inetAddress7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(resourceLoader12);
        org.junit.Assert.assertNotNull(mimeMappings13);
    }

    @Test
    public void test03072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03072");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        io.undertow.Undertow.Builder builder4 = undertowEmbeddedServletContainerFactory1.createBuilder((int) '4');
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.ClassLoader classLoader8 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory10.getSsl();
        org.springframework.core.io.ResourceLoader resourceLoader12 = undertowEmbeddedServletContainerFactory10.resourceLoader;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo13 = null;
        undertowEmbeddedServletContainerFactory10.configureErrorPages(deploymentInfo13);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer17 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer17 };
        undertowEmbeddedServletContainerFactory16.addBuilderCustomizers(undertowBuilderCustomizerArray18);
        org.springframework.boot.context.embedded.Ssl ssl20 = undertowEmbeddedServletContainerFactory16.getSsl();
        java.lang.String str21 = undertowEmbeddedServletContainerFactory16.getContextPath();
        java.lang.String str22 = undertowEmbeddedServletContainerFactory16.getListenAddress();
        undertowEmbeddedServletContainerFactory16.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl25 = undertowEmbeddedServletContainerFactory16.getSsl();
        undertowEmbeddedServletContainerFactory16.setPort((int) (short) 0);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection28 = undertowEmbeddedServletContainerFactory16.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer31 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray32 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer31 };
        undertowEmbeddedServletContainerFactory30.addBuilderCustomizers(undertowBuilderCustomizerArray32);
        org.springframework.boot.context.embedded.Ssl ssl34 = undertowEmbeddedServletContainerFactory30.getSsl();
        java.lang.String str35 = undertowEmbeddedServletContainerFactory30.getContextPath();
        java.lang.String str36 = undertowEmbeddedServletContainerFactory30.getListenAddress();
        undertowEmbeddedServletContainerFactory30.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl39 = undertowEmbeddedServletContainerFactory30.getSsl();
        int int40 = undertowEmbeddedServletContainerFactory30.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray41 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory30.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray41);
        undertowEmbeddedServletContainerFactory16.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray41);
        undertowEmbeddedServletContainerFactory10.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray41);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray41);
        org.springframework.boot.context.embedded.Ssl ssl46 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode48 = undertowEmbeddedServletContainerFactory1.getSslClientAuthMode(ssl47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertNull(resourceLoader12);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray18);
        org.junit.Assert.assertNull(ssl20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "0.0.0.0" + "'", str22, "0.0.0.0");
        org.junit.Assert.assertNull(ssl25);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray32);
        org.junit.Assert.assertNull(ssl34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "0.0.0.0" + "'", str36, "0.0.0.0");
        org.junit.Assert.assertNull(ssl39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray41);
        org.junit.Assert.assertNull(ssl46);
    }

    @Test
    public void test03073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03073");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray9 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet10, errorPageArray9);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet10);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(10);
        undertowEmbeddedServletContainerFactory1.workerThreads = (-1);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test03074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03074");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        boolean boolean1 = jarResourcemanager0.isResourceChangeListenerSupported();
        boolean boolean2 = jarResourcemanager0.isResourceChangeListenerSupported();
        boolean boolean3 = jarResourcemanager0.isResourceChangeListenerSupported();
        jarResourcemanager0.close();
        jarResourcemanager0.jarPath = "";
        java.lang.String str7 = jarResourcemanager0.jarPath;
        boolean boolean8 = jarResourcemanager0.isResourceChangeListenerSupported();
        java.lang.String str9 = jarResourcemanager0.jarPath;
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener10 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager0.removeResourceChangeListener(resourceChangeListener10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test03075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03075");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory1.bufferSize;
        io.undertow.server.handlers.resource.ResourceManager resourceManager7 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        int int8 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet9 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer12 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer12 };
        undertowEmbeddedServletContainerFactory11.addBuilderCustomizers(undertowBuilderCustomizerArray13);
        undertowEmbeddedServletContainerFactory11.setSessionTimeout((int) (byte) 10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection17 = undertowEmbeddedServletContainerFactory11.getBuilderCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection18 = undertowEmbeddedServletContainerFactory11.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer21 };
        undertowEmbeddedServletContainerFactory20.addBuilderCustomizers(undertowBuilderCustomizerArray22);
        org.springframework.boot.context.embedded.Ssl ssl24 = undertowEmbeddedServletContainerFactory20.getSsl();
        java.lang.String str25 = undertowEmbeddedServletContainerFactory20.getContextPath();
        java.lang.String str26 = undertowEmbeddedServletContainerFactory20.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet27 = undertowEmbeddedServletContainerFactory20.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray30 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList31 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList31, undertowBuilderCustomizerArray30);
        undertowEmbeddedServletContainerFactory29.builderCustomizers = undertowBuilderCustomizerList31;
        undertowEmbeddedServletContainerFactory20.builderCustomizers = undertowBuilderCustomizerList31;
        undertowEmbeddedServletContainerFactory11.builderCustomizers = undertowBuilderCustomizerList31;
        org.springframework.core.io.ResourceLoader resourceLoader36 = undertowEmbeddedServletContainerFactory11.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer39 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray40 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer39 };
        undertowEmbeddedServletContainerFactory38.addBuilderCustomizers(undertowBuilderCustomizerArray40);
        org.springframework.boot.context.embedded.Ssl ssl42 = undertowEmbeddedServletContainerFactory38.getSsl();
        undertowEmbeddedServletContainerFactory38.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory38.setPort((int) (byte) 10);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet47 = undertowEmbeddedServletContainerFactory38.getErrorPages();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet48 = undertowEmbeddedServletContainerFactory38.getErrorPages();
        undertowEmbeddedServletContainerFactory11.setErrorPages(errorPageSet48);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet48);
        boolean boolean51 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo52 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo52);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(resourceManager7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertNotNull(errorPageSet9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray13);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray22);
        org.junit.Assert.assertNull(ssl24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0.0.0.0" + "'", str26, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet27);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(resourceLoader36);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray40);
        org.junit.Assert.assertNull(ssl42);
        org.junit.Assert.assertNotNull(errorPageSet47);
        org.junit.Assert.assertNotNull(errorPageSet48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test03076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03076");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList6 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList7 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 0);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader10;
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList7);
    }

    @Test
    public void test03077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03077");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress10 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.Ssl ssl12 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.net.InetAddress inetAddress13 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress13);
        java.util.concurrent.TimeUnit timeUnit16 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 0, timeUnit16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(inetAddress10);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(ssl12);
    }

    @Test
    public void test03078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03078");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        boolean boolean1 = jarResourcemanager0.isResourceChangeListenerSupported();
        boolean boolean2 = jarResourcemanager0.isResourceChangeListenerSupported();
        boolean boolean3 = jarResourcemanager0.isResourceChangeListenerSupported();
        jarResourcemanager0.close();
        jarResourcemanager0.jarPath = "";
        java.lang.String str7 = jarResourcemanager0.jarPath;
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener8 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager0.removeResourceChangeListener(resourceChangeListener8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test03079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03079");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer12 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer12 };
        undertowEmbeddedServletContainerFactory11.addBuilderCustomizers(undertowBuilderCustomizerArray13);
        org.springframework.boot.context.embedded.Ssl ssl15 = undertowEmbeddedServletContainerFactory11.getSsl();
        java.lang.String str16 = undertowEmbeddedServletContainerFactory11.getContextPath();
        java.lang.String str17 = undertowEmbeddedServletContainerFactory11.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet18 = undertowEmbeddedServletContainerFactory11.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection19 = undertowEmbeddedServletContainerFactory11.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList20 = undertowEmbeddedServletContainerFactory11.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory11.addBuilderCustomizers(undertowBuilderCustomizerArray21);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray21);
        int int24 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray13);
        org.junit.Assert.assertNull(ssl15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "0.0.0.0" + "'", str17, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection19);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList20);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1800 + "'", int24 == 1800);
    }

    @Test
    public void test03080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03080");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        java.lang.String str1 = jarResourcemanager0.jarPath;
        boolean boolean2 = jarResourcemanager0.isResourceChangeListenerSupported();
        boolean boolean3 = jarResourcemanager0.isResourceChangeListenerSupported();
        jarResourcemanager0.close();
        jarResourcemanager0.close();
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource7 = jarResourcemanager0.getResource("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test03081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03081");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        java.lang.String str1 = jarResourcemanager0.jarPath;
        boolean boolean2 = jarResourcemanager0.isResourceChangeListenerSupported();
        java.lang.String str3 = jarResourcemanager0.jarPath;
        jarResourcemanager0.jarPath = "0.0.0.0";
        boolean boolean6 = jarResourcemanager0.isResourceChangeListenerSupported();
        boolean boolean7 = jarResourcemanager0.isResourceChangeListenerSupported();
        jarResourcemanager0.jarPath = "";
        jarResourcemanager0.close();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test03082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03082");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.ioThreads = 100;
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader4);
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection9 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory0.workerThreads;
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        java.lang.ClassLoader classLoader13 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(classLoader13);
    }

    @Test
    public void test03083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03083");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress10 = undertowEmbeddedServletContainerFactory1.getAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo11 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo11);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.Ssl ssl17 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl17);
        java.lang.Integer int19 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray24 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList25 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList25, undertowBuilderCustomizerArray24);
        undertowEmbeddedServletContainerFactory23.builderCustomizers = undertowBuilderCustomizerList25;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = undertowEmbeddedServletContainerFactory23.getMimeMappings();
        undertowEmbeddedServletContainerFactory23.setRegisterDefaultServlet(true);
        java.lang.Integer int31 = undertowEmbeddedServletContainerFactory23.bufferSize;
        undertowEmbeddedServletContainerFactory23.bufferSize = 100;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet34 = undertowEmbeddedServletContainerFactory23.getErrorPages();
        undertowEmbeddedServletContainerFactory23.workerThreads = 1800;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = undertowEmbeddedServletContainerFactory38.getMimeMappings();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList40 = undertowEmbeddedServletContainerFactory38.builderCustomizers;
        undertowEmbeddedServletContainerFactory38.workerThreads = 100;
        undertowEmbeddedServletContainerFactory38.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory38.setSessionTimeout((int) (short) 100);
        undertowEmbeddedServletContainerFactory38.ioThreads = (-1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer51 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray52 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer51 };
        undertowEmbeddedServletContainerFactory50.addBuilderCustomizers(undertowBuilderCustomizerArray52);
        org.springframework.boot.context.embedded.Ssl ssl54 = undertowEmbeddedServletContainerFactory50.getSsl();
        java.lang.String str55 = undertowEmbeddedServletContainerFactory50.getContextPath();
        java.lang.String str56 = undertowEmbeddedServletContainerFactory50.getListenAddress();
        undertowEmbeddedServletContainerFactory50.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl59 = undertowEmbeddedServletContainerFactory50.getSsl();
        undertowEmbeddedServletContainerFactory50.setPort((int) (short) 0);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection62 = undertowEmbeddedServletContainerFactory50.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer65 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray66 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer65 };
        undertowEmbeddedServletContainerFactory64.addBuilderCustomizers(undertowBuilderCustomizerArray66);
        org.springframework.boot.context.embedded.Ssl ssl68 = undertowEmbeddedServletContainerFactory64.getSsl();
        undertowEmbeddedServletContainerFactory64.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory64.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer75 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray76 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer75 };
        undertowEmbeddedServletContainerFactory74.addBuilderCustomizers(undertowBuilderCustomizerArray76);
        org.springframework.boot.context.embedded.Ssl ssl78 = undertowEmbeddedServletContainerFactory74.getSsl();
        java.lang.String str79 = undertowEmbeddedServletContainerFactory74.getContextPath();
        java.lang.String str80 = undertowEmbeddedServletContainerFactory74.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet81 = undertowEmbeddedServletContainerFactory74.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection82 = undertowEmbeddedServletContainerFactory74.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList83 = undertowEmbeddedServletContainerFactory74.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray84 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory74.addBuilderCustomizers(undertowBuilderCustomizerArray84);
        undertowEmbeddedServletContainerFactory64.addBuilderCustomizers(undertowBuilderCustomizerArray84);
        undertowEmbeddedServletContainerFactory50.addBuilderCustomizers(undertowBuilderCustomizerArray84);
        undertowEmbeddedServletContainerFactory38.addBuilderCustomizers(undertowBuilderCustomizerArray84);
        undertowEmbeddedServletContainerFactory23.addBuilderCustomizers(undertowBuilderCustomizerArray84);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray84);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer92 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(inetAddress10);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(errorPageSet34);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList40);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray52);
        org.junit.Assert.assertNull(ssl54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "0.0.0.0" + "'", str56, "0.0.0.0");
        org.junit.Assert.assertNull(ssl59);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection62);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray66);
        org.junit.Assert.assertNull(ssl68);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray76);
        org.junit.Assert.assertNull(ssl78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "0.0.0.0" + "'", str80, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet81);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection82);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList83);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray84);
    }

    @Test
    public void test03084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03084");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(0);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection4 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList5 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory0.directBuffers;
        int int7 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        undertowEmbeddedServletContainerFactory0.ioThreads = 1;
        io.undertow.Undertow.Builder builder11 = undertowEmbeddedServletContainerFactory0.createBuilder((int) (byte) 0);
        java.lang.Boolean boolean12 = undertowEmbeddedServletContainerFactory0.directBuffers;
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection4);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test03085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03085");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.ioThreads = 100;
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader4);
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        boolean boolean11 = undertowEmbeddedServletContainerFactory10.isRegisterJspServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory10.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings12);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo14 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo14);
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer20 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer20 };
        undertowEmbeddedServletContainerFactory19.addBuilderCustomizers(undertowBuilderCustomizerArray21);
        org.springframework.boot.context.embedded.Ssl ssl23 = undertowEmbeddedServletContainerFactory19.getSsl();
        java.lang.String str24 = undertowEmbeddedServletContainerFactory19.getContextPath();
        java.lang.String str25 = undertowEmbeddedServletContainerFactory19.getListenAddress();
        java.lang.String str26 = undertowEmbeddedServletContainerFactory19.getListenAddress();
        undertowEmbeddedServletContainerFactory19.directBuffers = false;
        undertowEmbeddedServletContainerFactory19.setSessionTimeout(1);
        java.io.File file31 = undertowEmbeddedServletContainerFactory19.getDocumentRoot();
        java.lang.Integer int32 = undertowEmbeddedServletContainerFactory19.buffersPerRegion;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer35 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray36 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer35 };
        undertowEmbeddedServletContainerFactory34.addBuilderCustomizers(undertowBuilderCustomizerArray36);
        org.springframework.boot.context.embedded.Ssl ssl38 = undertowEmbeddedServletContainerFactory34.getSsl();
        undertowEmbeddedServletContainerFactory34.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory34.setPort((int) (byte) 10);
        boolean boolean43 = undertowEmbeddedServletContainerFactory34.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray44 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList45 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList45, undertowDeploymentInfoCustomizerArray44);
        undertowEmbeddedServletContainerFactory34.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList45;
        undertowEmbeddedServletContainerFactory34.directBuffers = false;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo50 = null;
        undertowEmbeddedServletContainerFactory34.configureErrorPages(deploymentInfo50);
        int int52 = undertowEmbeddedServletContainerFactory34.getPort();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList53 = undertowEmbeddedServletContainerFactory34.builderCustomizers;
        undertowEmbeddedServletContainerFactory19.builderCustomizers = undertowBuilderCustomizerList53;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList53;
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray21);
        org.junit.Assert.assertNull(ssl23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "0.0.0.0" + "'", str25, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0.0.0.0" + "'", str26, "0.0.0.0");
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray36);
        org.junit.Assert.assertNull(ssl38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 10 + "'", int52 == 10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList53);
    }

    @Test
    public void test03086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03086");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int4 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.setPort((int) '4');
        undertowEmbeddedServletContainerFactory1.bufferSize = 10;
        java.lang.Boolean boolean10 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertEquals("'" + boolean10 + "' != '" + false + "'", boolean10, false);
    }

    @Test
    public void test03087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03087");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.lang.Boolean boolean8 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader9);
        int int11 = undertowEmbeddedServletContainerFactory1.getPort();
        java.lang.String str12 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.net.InetAddress inetAddress13 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + true + "'", boolean8, true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
        org.junit.Assert.assertNull(inetAddress13);
    }

    @Test
    public void test03088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03088");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer12 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer12 };
        undertowEmbeddedServletContainerFactory11.addBuilderCustomizers(undertowBuilderCustomizerArray13);
        org.springframework.boot.context.embedded.Ssl ssl15 = undertowEmbeddedServletContainerFactory11.getSsl();
        java.lang.String str16 = undertowEmbeddedServletContainerFactory11.getContextPath();
        java.lang.String str17 = undertowEmbeddedServletContainerFactory11.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet18 = undertowEmbeddedServletContainerFactory11.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList22 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList22, undertowBuilderCustomizerArray21);
        undertowEmbeddedServletContainerFactory20.builderCustomizers = undertowBuilderCustomizerList22;
        undertowEmbeddedServletContainerFactory11.builderCustomizers = undertowBuilderCustomizerList22;
        java.lang.String str26 = undertowEmbeddedServletContainerFactory11.getContextPath();
        undertowEmbeddedServletContainerFactory11.buffersPerRegion = 8080;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer31 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray32 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer31 };
        undertowEmbeddedServletContainerFactory30.addBuilderCustomizers(undertowBuilderCustomizerArray32);
        org.springframework.boot.context.embedded.Ssl ssl34 = undertowEmbeddedServletContainerFactory30.getSsl();
        undertowEmbeddedServletContainerFactory30.setDirectBuffers((java.lang.Boolean) true);
        java.lang.Boolean boolean37 = undertowEmbeddedServletContainerFactory30.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer40 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray41 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer40 };
        undertowEmbeddedServletContainerFactory39.addBuilderCustomizers(undertowBuilderCustomizerArray41);
        org.springframework.boot.context.embedded.Ssl ssl43 = undertowEmbeddedServletContainerFactory39.getSsl();
        java.lang.String str44 = undertowEmbeddedServletContainerFactory39.getContextPath();
        java.lang.String str45 = undertowEmbeddedServletContainerFactory39.getListenAddress();
        java.lang.String str46 = undertowEmbeddedServletContainerFactory39.getListenAddress();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray47 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet48 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet48, errorPageArray47);
        undertowEmbeddedServletContainerFactory39.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet48);
        undertowEmbeddedServletContainerFactory30.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet48);
        undertowEmbeddedServletContainerFactory11.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet48);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet48);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings58 = undertowEmbeddedServletContainerFactory57.getMimeMappings();
        io.undertow.Undertow.Builder builder60 = undertowEmbeddedServletContainerFactory57.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager61 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer63 = undertowEmbeddedServletContainerFactory55.getUndertowEmbeddedServletContainer(builder60, deploymentManager61, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory55.setIoThreads((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray68 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList69 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList69, undertowBuilderCustomizerArray68);
        undertowEmbeddedServletContainerFactory67.builderCustomizers = undertowBuilderCustomizerList69;
        boolean boolean72 = undertowEmbeddedServletContainerFactory67.isRegisterJspServlet();
        java.net.InetAddress inetAddress73 = undertowEmbeddedServletContainerFactory67.getAddress();
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer74 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray75 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer74 };
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer76 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray75);
        undertowEmbeddedServletContainerFactory67.addInitializers(servletContextInitializerArray75);
        undertowEmbeddedServletContainerFactory55.addInitializers(servletContextInitializerArray75);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer79 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray75);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray80 = initializer79.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray81 = initializer79.initializers;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer82 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: java.lang.NullPointerException");
        } catch (java.lang.RuntimeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray13);
        org.junit.Assert.assertNull(ssl15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "0.0.0.0" + "'", str17, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray32);
        org.junit.Assert.assertNull(ssl34);
        org.junit.Assert.assertEquals("'" + boolean37 + "' != '" + true + "'", boolean37, true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray41);
        org.junit.Assert.assertNull(ssl43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "0.0.0.0" + "'", str45, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "0.0.0.0" + "'", str46, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(mimeMappings58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer63);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(inetAddress73);
        org.junit.Assert.assertNotNull(servletContextInitializerArray75);
        org.junit.Assert.assertNotNull(servletContextInitializerArray80);
        org.junit.Assert.assertNotNull(servletContextInitializerArray81);
    }

    @Test
    public void test03089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03089");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        io.undertow.Undertow.Builder builder6 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager7 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer9 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder6, deploymentManager7, 0);
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.net.InetAddress inetAddress11 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress11);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo13 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureMimeMappings(deploymentInfo13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer9);
        org.junit.Assert.assertNull(int10);
    }

    @Test
    public void test03090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03090");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet16 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNotNull(errorPageSet16);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList17);
    }

    @Test
    public void test03091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03091");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory1.getSsl();
        int int11 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray12 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray12);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory14.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray16);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray16);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray12);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray16);
    }

    @Test
    public void test03092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03092");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.close();
        java.lang.String str5 = jarResourcemanager1.jarPath;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource7 = jarResourcemanager1.getResource("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
    }

    @Test
    public void test03093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03093");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.jarPath = "hi!";
        java.lang.String str6 = jarResourcemanager1.jarPath;
        jarResourcemanager1.close();
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.close();
        jarResourcemanager1.close();
        java.lang.String str12 = jarResourcemanager1.jarPath;
        jarResourcemanager1.jarPath = "";
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test03094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03094");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        java.lang.String str1 = jarResourcemanager0.jarPath;
        jarResourcemanager0.jarPath = "0.0.0.0";
        java.lang.String str4 = jarResourcemanager0.jarPath;
        java.lang.String str5 = jarResourcemanager0.jarPath;
        java.lang.String str6 = jarResourcemanager0.jarPath;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource8 = jarResourcemanager0.getResource("hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "0.0.0.0" + "'", str5, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0.0.0.0" + "'", str6, "0.0.0.0");
    }

    @Test
    public void test03095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03095");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray5 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList6 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList6, undertowBuilderCustomizerArray5);
        undertowEmbeddedServletContainerFactory4.builderCustomizers = undertowBuilderCustomizerList6;
        java.lang.String str9 = undertowEmbeddedServletContainerFactory4.getListenAddress();
        undertowEmbeddedServletContainerFactory4.ioThreads = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList12 = undertowEmbeddedServletContainerFactory4.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList12;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.setPort(0);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList2);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "0.0.0.0" + "'", str9, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList12);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList14);
        org.junit.Assert.assertNull(int17);
    }

    @Test
    public void test03096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03096");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.io.File file11 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file11);
        java.lang.String str13 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection16 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection17 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0.0.0.0" + "'", str13, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection16);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection17);
    }

    @Test
    public void test03097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03097");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (byte) 0);
        org.springframework.boot.context.embedded.Ssl ssl3 = null;
        undertowEmbeddedServletContainerFactory2.setSsl(ssl3);
        io.undertow.server.handlers.resource.ResourceManager resourceManager5 = undertowEmbeddedServletContainerFactory2.getDocumentRootResourceManager();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo6 = null;
        undertowEmbeddedServletContainerFactory2.configureErrorPages(deploymentInfo6);
        org.junit.Assert.assertNotNull(resourceManager5);
    }

    @Test
    public void test03098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03098");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.close();
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.close();
        java.lang.String str6 = jarResourcemanager1.jarPath;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource8 = jarResourcemanager1.getResource("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0.0.0.0" + "'", str6, "0.0.0.0");
    }

    @Test
    public void test03099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03099");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.ioThreads = 100;
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader4);
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 100;
        boolean boolean11 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(mimeMappings12);
    }

    @Test
    public void test03100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03100");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory1.getSsl();
        int int11 = undertowEmbeddedServletContainerFactory1.getPort();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        java.lang.Integer int16 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 35);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test03101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03101");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.net.InetAddress inetAddress6 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList9);
    }

    @Test
    public void test03102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03102");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings13);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) (-1));
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 100);
        undertowEmbeddedServletContainerFactory1.ioThreads = 10;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray25 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer24 };
        undertowEmbeddedServletContainerFactory23.addBuilderCustomizers(undertowBuilderCustomizerArray25);
        org.springframework.boot.context.embedded.Ssl ssl27 = undertowEmbeddedServletContainerFactory23.getSsl();
        java.lang.String str28 = undertowEmbeddedServletContainerFactory23.getContextPath();
        java.lang.String str29 = undertowEmbeddedServletContainerFactory23.getListenAddress();
        java.lang.String str30 = undertowEmbeddedServletContainerFactory23.getListenAddress();
        boolean boolean31 = undertowEmbeddedServletContainerFactory23.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory23.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory23.bufferSize = 10;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray38 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList39 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList39, undertowBuilderCustomizerArray38);
        undertowEmbeddedServletContainerFactory37.builderCustomizers = undertowBuilderCustomizerList39;
        undertowEmbeddedServletContainerFactory37.workerThreads = (-1);
        org.springframework.core.io.ResourceLoader resourceLoader44 = null;
        undertowEmbeddedServletContainerFactory37.resourceLoader = resourceLoader44;
        java.net.InetAddress inetAddress46 = null;
        undertowEmbeddedServletContainerFactory37.setAddress(inetAddress46);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings48 = undertowEmbeddedServletContainerFactory37.getMimeMappings();
        undertowEmbeddedServletContainerFactory23.setMimeMappings(mimeMappings48);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings48);
        java.io.File file51 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file51);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray25);
        org.junit.Assert.assertNull(ssl27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "0.0.0.0" + "'", str29, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "0.0.0.0" + "'", str30, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(mimeMappings48);
    }

    @Test
    public void test03103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03103");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList12;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList12;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory16.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory16.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray18);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        io.undertow.Undertow.Builder builder27 = undertowEmbeddedServletContainerFactory24.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer30 = undertowEmbeddedServletContainerFactory22.getUndertowEmbeddedServletContainer(builder27, deploymentManager28, (int) (byte) 0);
        io.undertow.servlet.api.DeploymentManager deploymentManager31 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer33 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder27, deploymentManager31, (int) ' ');
        org.springframework.boot.context.embedded.Ssl ssl34 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl34);
        undertowEmbeddedServletContainerFactory1.workerThreads = (-1);
        java.lang.String str38 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.springframework.boot.context.embedded.Ssl ssl39 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 1);
        undertowEmbeddedServletContainerFactory43.setContextPath("");
        org.springframework.core.io.ResourceLoader resourceLoader46 = undertowEmbeddedServletContainerFactory43.resourceLoader;
        undertowEmbeddedServletContainerFactory43.setIoThreads((java.lang.Integer) (-1));
        java.lang.ClassLoader classLoader49 = undertowEmbeddedServletContainerFactory43.getServletClassLoader();
        io.undertow.Undertow.Builder builder51 = undertowEmbeddedServletContainerFactory43.createBuilder(10);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureSsl(ssl39, (int) (short) 0, builder51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray18);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer30);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "0.0.0.0" + "'", str38, "0.0.0.0");
        org.junit.Assert.assertNull(resourceLoader46);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(builder51);
    }

    @Test
    public void test03104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03104");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 10;
        undertowEmbeddedServletContainerFactory1.ioThreads = (-1);
        java.lang.Boolean boolean14 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer17 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer17 };
        undertowEmbeddedServletContainerFactory16.addBuilderCustomizers(undertowBuilderCustomizerArray18);
        org.springframework.boot.context.embedded.Ssl ssl20 = undertowEmbeddedServletContainerFactory16.getSsl();
        undertowEmbeddedServletContainerFactory16.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory16.bufferSize = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory26.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int29 = undertowEmbeddedServletContainerFactory26.ioThreads;
        java.lang.Integer int30 = undertowEmbeddedServletContainerFactory26.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage31 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray32 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage31 };
        undertowEmbeddedServletContainerFactory26.addErrorPages(errorPageArray32);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray34 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray34);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray36 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray36);
        initializer35.initializers = servletContextInitializerArray36;
        undertowEmbeddedServletContainerFactory26.addInitializers(servletContextInitializerArray36);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray36);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray36);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList43 = undertowEmbeddedServletContainerFactory42.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray44 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray44);
        undertowEmbeddedServletContainerFactory42.addInitializers(servletContextInitializerArray44);
        initializer41.initializers = servletContextInitializerArray44;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray48 = initializer41.initializers;
        io.undertow.servlet.api.DeploymentManager deploymentManager49 = undertowEmbeddedServletContainerFactory16.createDeploymentManager(servletContextInitializerArray48);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer50 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray18);
        org.junit.Assert.assertNull(ssl20);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(errorPageArray32);
        org.junit.Assert.assertNotNull(servletContextInitializerArray34);
        org.junit.Assert.assertNotNull(servletContextInitializerArray36);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList43);
        org.junit.Assert.assertNotNull(servletContextInitializerArray44);
        org.junit.Assert.assertNotNull(servletContextInitializerArray48);
        org.junit.Assert.assertNotNull(deploymentManager49);
    }

    @Test
    public void test03105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03105");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory1.bufferSize;
        java.net.InetAddress inetAddress8 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0.0.0.0" + "'", str6, "0.0.0.0");
        org.junit.Assert.assertNull(int7);
    }

    @Test
    public void test03106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03106");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.close();
        jarResourcemanager1.close();
        jarResourcemanager1.close();
        jarResourcemanager1.close();
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource7 = jarResourcemanager1.getResource("hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03107");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(8080);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray5 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer4 };
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray5);
        undertowEmbeddedServletContainerFactory3.setSessionTimeout((int) (byte) 10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection9 = undertowEmbeddedServletContainerFactory3.getBuilderCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection10 = undertowEmbeddedServletContainerFactory3.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer13 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray14 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer13 };
        undertowEmbeddedServletContainerFactory12.addBuilderCustomizers(undertowBuilderCustomizerArray14);
        org.springframework.boot.context.embedded.Ssl ssl16 = undertowEmbeddedServletContainerFactory12.getSsl();
        java.lang.String str17 = undertowEmbeddedServletContainerFactory12.getContextPath();
        java.lang.String str18 = undertowEmbeddedServletContainerFactory12.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = undertowEmbeddedServletContainerFactory12.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList23 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList23, undertowBuilderCustomizerArray22);
        undertowEmbeddedServletContainerFactory21.builderCustomizers = undertowBuilderCustomizerList23;
        undertowEmbeddedServletContainerFactory12.builderCustomizers = undertowBuilderCustomizerList23;
        undertowEmbeddedServletContainerFactory3.builderCustomizers = undertowBuilderCustomizerList23;
        org.springframework.core.io.ResourceLoader resourceLoader28 = undertowEmbeddedServletContainerFactory3.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer31 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray32 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer31 };
        undertowEmbeddedServletContainerFactory30.addBuilderCustomizers(undertowBuilderCustomizerArray32);
        org.springframework.boot.context.embedded.Ssl ssl34 = undertowEmbeddedServletContainerFactory30.getSsl();
        undertowEmbeddedServletContainerFactory30.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory30.setPort((int) (byte) 10);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet39 = undertowEmbeddedServletContainerFactory30.getErrorPages();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet40 = undertowEmbeddedServletContainerFactory30.getErrorPages();
        undertowEmbeddedServletContainerFactory3.setErrorPages(errorPageSet40);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer43 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray44 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer43 };
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray44);
        initializer42.initializers = servletContextInitializerArray44;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray44);
        undertowEmbeddedServletContainerFactory3.addInitializers(servletContextInitializerArray44);
        undertowEmbeddedServletContainerFactory3.setSessionTimeout((int) (byte) 10);
        java.io.File file51 = null;
        undertowEmbeddedServletContainerFactory3.setDocumentRoot(file51);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList54 = undertowEmbeddedServletContainerFactory53.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory53.ioThreads = 100;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray59 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray59);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray62 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray62);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray64 = initializer63.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer65 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray64);
        initializer61.initializers = servletContextInitializerArray64;
        initializer60.initializers = servletContextInitializerArray64;
        undertowEmbeddedServletContainerFactory58.addInitializers(servletContextInitializerArray64);
        undertowEmbeddedServletContainerFactory53.addInitializers(servletContextInitializerArray64);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList71 = undertowEmbeddedServletContainerFactory70.deploymentInfoCustomizers;
        java.io.File file72 = null;
        undertowEmbeddedServletContainerFactory70.setDocumentRoot(file72);
        org.springframework.core.io.ResourceLoader resourceLoader74 = undertowEmbeddedServletContainerFactory70.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray77 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList78 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList78, undertowBuilderCustomizerArray77);
        undertowEmbeddedServletContainerFactory76.builderCustomizers = undertowBuilderCustomizerList78;
        java.lang.String str81 = undertowEmbeddedServletContainerFactory76.getListenAddress();
        undertowEmbeddedServletContainerFactory76.ioThreads = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList84 = undertowEmbeddedServletContainerFactory76.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory70.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList84;
        undertowEmbeddedServletContainerFactory53.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList84;
        undertowEmbeddedServletContainerFactory3.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList84;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList84;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray5);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray14);
        org.junit.Assert.assertNull(ssl16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "0.0.0.0" + "'", str18, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(resourceLoader28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray32);
        org.junit.Assert.assertNull(ssl34);
        org.junit.Assert.assertNotNull(errorPageSet39);
        org.junit.Assert.assertNotNull(errorPageSet40);
        org.junit.Assert.assertNotNull(servletContextInitializerArray44);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList54);
        org.junit.Assert.assertNotNull(servletContextInitializerArray59);
        org.junit.Assert.assertNotNull(servletContextInitializerArray62);
        org.junit.Assert.assertNotNull(servletContextInitializerArray64);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList71);
        org.junit.Assert.assertNull(resourceLoader74);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "0.0.0.0" + "'", str81, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList84);
    }

    @Test
    public void test03108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03108");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection9 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 8080);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        java.lang.String str14 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 1800;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection9);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0.0.0.0" + "'", str14, "0.0.0.0");
    }

    @Test
    public void test03109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03109");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(0);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file4);
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.lang.ClassLoader classLoader7 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection8 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 100);
        java.io.File file11 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(classLoader7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection8);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test03110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03110");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int4 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray8 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList9, undertowBuilderCustomizerArray8);
        undertowEmbeddedServletContainerFactory7.builderCustomizers = undertowBuilderCustomizerList9;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList9;
        boolean boolean13 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.Ssl ssl14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode15 = undertowEmbeddedServletContainerFactory1.getSslClientAuthMode(ssl14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test03111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03111");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        undertowEmbeddedServletContainerFactory1.workerThreads = (-1);
        org.springframework.core.io.ResourceLoader resourceLoader8 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader8;
        java.net.InetAddress inetAddress10 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress10);
        undertowEmbeddedServletContainerFactory1.setPort(0);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        io.undertow.server.handlers.resource.ResourceManager resourceManager18 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(resourceManager18);
    }

    @Test
    public void test03112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03112");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.close();
        java.lang.String str7 = jarResourcemanager1.jarPath;
        java.lang.String str8 = jarResourcemanager1.jarPath;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource10 = jarResourcemanager1.getResource("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test03113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03113");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer12 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer12 };
        undertowEmbeddedServletContainerFactory11.addBuilderCustomizers(undertowBuilderCustomizerArray13);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray13);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList16 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList17 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        java.util.concurrent.TimeUnit timeUnit19 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) '#', timeUnit19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray13);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList16);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList17);
    }

    @Test
    public void test03114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03114");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        io.undertow.Undertow.Builder builder4 = undertowEmbeddedServletContainerFactory1.createBuilder((int) '4');
        java.net.InetAddress inetAddress5 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress5);
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 8080);
        java.net.InetAddress inetAddress11 = null;
        undertowEmbeddedServletContainerFactory10.setAddress(inetAddress11);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory14.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory14.ioThreads;
        java.lang.Integer int18 = undertowEmbeddedServletContainerFactory14.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage19 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray20 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage19 };
        undertowEmbeddedServletContainerFactory14.addErrorPages(errorPageArray20);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray22 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray22);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray24 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray24);
        initializer23.initializers = servletContextInitializerArray24;
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray24);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray24);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray24);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList31 = undertowEmbeddedServletContainerFactory30.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray32 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray32);
        undertowEmbeddedServletContainerFactory30.addInitializers(servletContextInitializerArray32);
        initializer29.initializers = servletContextInitializerArray32;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray36 = initializer29.initializers;
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer37 = undertowEmbeddedServletContainerFactory10.getEmbeddedServletContainer(servletContextInitializerArray36);
        io.undertow.servlet.api.DeploymentManager deploymentManager38 = undertowEmbeddedServletContainerFactory1.createDeploymentManager(servletContextInitializerArray36);
        undertowEmbeddedServletContainerFactory1.workerThreads = 100;
        org.springframework.core.io.ResourceLoader resourceLoader41 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 1);
        java.util.concurrent.TimeUnit timeUnit45 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout(35, timeUnit45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(errorPageArray20);
        org.junit.Assert.assertNotNull(servletContextInitializerArray22);
        org.junit.Assert.assertNotNull(servletContextInitializerArray24);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList31);
        org.junit.Assert.assertNotNull(servletContextInitializerArray32);
        org.junit.Assert.assertNotNull(servletContextInitializerArray36);
        org.junit.Assert.assertNotNull(embeddedServletContainer37);
        org.junit.Assert.assertNotNull(deploymentManager38);
        org.junit.Assert.assertNull(resourceLoader41);
    }

    @Test
    public void test03115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03115");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader6;
        java.io.File file8 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.lang.String str12 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList13 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.Undertow.Builder builder15 = undertowEmbeddedServletContainerFactory1.createBuilder(1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList13);
    }

    @Test
    public void test03116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03116");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray7 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet8, errorPageArray7);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet8);
        java.net.InetAddress inetAddress11 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1800);
        org.springframework.boot.context.embedded.ErrorPage errorPage15 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage16 = undertowEmbeddedServletContainerFactory1.getUndertowErrorPage(errorPage15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(inetAddress11);
        org.junit.Assert.assertNotNull(mimeMappings12);
    }

    @Test
    public void test03117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03117");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.jarPath = "hi!";
        java.lang.String str6 = jarResourcemanager1.jarPath;
        boolean boolean7 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.jarPath = "hi!";
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource13 = jarResourcemanager1.getResource("");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test03118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03118");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList5 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList5, undertowDeploymentInfoCustomizerArray4);
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList5;
        int int8 = undertowEmbeddedServletContainerFactory1.getPort();
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection10 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection10);
    }

    @Test
    public void test03119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03119");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader6;
        java.io.File file8 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        java.net.InetAddress inetAddress11 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress11);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 10);
        undertowEmbeddedServletContainerFactory1.ioThreads = 1;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection13);
    }

    @Test
    public void test03120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03120");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList12;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList12;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory16.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory16.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray18);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        io.undertow.Undertow.Builder builder27 = undertowEmbeddedServletContainerFactory24.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer30 = undertowEmbeddedServletContainerFactory22.getUndertowEmbeddedServletContainer(builder27, deploymentManager28, (int) (byte) 0);
        io.undertow.servlet.api.DeploymentManager deploymentManager31 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer33 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder27, deploymentManager31, (int) ' ');
        org.springframework.boot.context.embedded.Ssl ssl34 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl34);
        boolean boolean36 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.net.InetAddress inetAddress37 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress37);
        java.net.InetAddress inetAddress39 = undertowEmbeddedServletContainerFactory1.getAddress();
        io.undertow.Undertow.Builder builder41 = undertowEmbeddedServletContainerFactory1.createBuilder((int) (short) 10);
        int int42 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray43 = undertowEmbeddedServletContainerFactory1.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray18);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer30);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(inetAddress39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1800 + "'", int42 == 1800);
    }

    @Test
    public void test03121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03121");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        java.lang.String str1 = jarResourcemanager0.jarPath;
        boolean boolean2 = jarResourcemanager0.isResourceChangeListenerSupported();
        boolean boolean3 = jarResourcemanager0.isResourceChangeListenerSupported();
        jarResourcemanager0.jarPath = "hi!";
        jarResourcemanager0.jarPath = "hi!";
        java.lang.String str8 = jarResourcemanager0.jarPath;
        jarResourcemanager0.close();
        jarResourcemanager0.close();
        jarResourcemanager0.close();
        java.lang.String str12 = jarResourcemanager0.jarPath;
        jarResourcemanager0.close();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener14 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager0.removeResourceChangeListener(resourceChangeListener14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test03122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03122");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        undertowEmbeddedServletContainerFactory1.workerThreads = (-1);
        org.springframework.core.io.ResourceLoader resourceLoader8 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader8;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection11 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.io.File file12 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file12);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection11);
    }

    @Test
    public void test03123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03123");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress10 = undertowEmbeddedServletContainerFactory1.getAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo11 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo11);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer17 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer17 };
        undertowEmbeddedServletContainerFactory16.addBuilderCustomizers(undertowBuilderCustomizerArray18);
        undertowEmbeddedServletContainerFactory16.setSessionTimeout((int) (byte) 10);
        undertowEmbeddedServletContainerFactory16.setIoThreads((java.lang.Integer) 0);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList24 = undertowEmbeddedServletContainerFactory16.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList24;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray28 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList29 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList29, undertowBuilderCustomizerArray28);
        undertowEmbeddedServletContainerFactory27.builderCustomizers = undertowBuilderCustomizerList29;
        undertowEmbeddedServletContainerFactory27.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory27.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = undertowEmbeddedServletContainerFactory27.getMimeMappings();
        java.lang.String str37 = undertowEmbeddedServletContainerFactory27.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer undertowDeploymentInfoCustomizer38 = null;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray39 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] { undertowDeploymentInfoCustomizer38 };
        undertowEmbeddedServletContainerFactory27.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray39);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray39);
        io.undertow.server.handlers.resource.ResourceManager resourceManager42 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        java.lang.Integer int43 = undertowEmbeddedServletContainerFactory1.bufferSize;
        org.springframework.boot.context.embedded.Ssl ssl44 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(inetAddress10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList24);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "0.0.0.0" + "'", str37, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray39);
        org.junit.Assert.assertNotNull(resourceManager42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(ssl44);
    }

    @Test
    public void test03124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03124");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.jarPath = "hi!";
        java.lang.String str6 = jarResourcemanager1.jarPath;
        java.lang.String str7 = jarResourcemanager1.jarPath;
        boolean boolean8 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.close();
        jarResourcemanager1.close();
        boolean boolean11 = jarResourcemanager1.isResourceChangeListenerSupported();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager1.removeResourceChangeListener(resourceChangeListener12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test03125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03125");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.ioThreads = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList9 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.workerThreads = 0;
        java.lang.String str12 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0.0.0.0" + "'", str6, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
    }

    @Test
    public void test03126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03126");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory1.getSsl();
        int int11 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray12 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray12);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory14.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray16);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray16);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory1.ioThreads = 10;
        org.springframework.boot.context.embedded.ErrorPage errorPage23 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage24 = undertowEmbeddedServletContainerFactory1.getUndertowErrorPage(errorPage23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray12);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray16);
    }

    @Test
    public void test03127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03127");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl10);
        java.lang.String str12 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        int int13 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.ioThreads = 0;
        undertowEmbeddedServletContainerFactory1.bufferSize = 35;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet18 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1800 + "'", int13 == 1800);
        org.junit.Assert.assertNotNull(errorPageSet18);
    }

    @Test
    public void test03128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03128");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int4 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        io.undertow.server.handlers.resource.ResourceManager resourceManager8 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader9);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo15 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory17.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int20 = undertowEmbeddedServletContainerFactory17.ioThreads;
        undertowEmbeddedServletContainerFactory17.directBuffers = true;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer25 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray26 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer25 };
        undertowEmbeddedServletContainerFactory24.addBuilderCustomizers(undertowBuilderCustomizerArray26);
        org.springframework.boot.context.embedded.Ssl ssl28 = undertowEmbeddedServletContainerFactory24.getSsl();
        java.lang.String str29 = undertowEmbeddedServletContainerFactory24.getContextPath();
        java.lang.String str30 = undertowEmbeddedServletContainerFactory24.getListenAddress();
        undertowEmbeddedServletContainerFactory24.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl33 = undertowEmbeddedServletContainerFactory24.getSsl();
        int int34 = undertowEmbeddedServletContainerFactory24.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray35 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory24.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray35);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = undertowEmbeddedServletContainerFactory37.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray39 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory37.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray39);
        undertowEmbeddedServletContainerFactory24.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray39);
        undertowEmbeddedServletContainerFactory24.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList45 = undertowEmbeddedServletContainerFactory44.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory44.ioThreads = 100;
        org.springframework.core.io.ResourceLoader resourceLoader48 = null;
        undertowEmbeddedServletContainerFactory44.setResourceLoader(resourceLoader48);
        undertowEmbeddedServletContainerFactory44.directBuffers = false;
        java.lang.Integer int52 = undertowEmbeddedServletContainerFactory44.buffersPerRegion;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        boolean boolean55 = undertowEmbeddedServletContainerFactory54.isRegisterJspServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings56 = undertowEmbeddedServletContainerFactory54.getMimeMappings();
        undertowEmbeddedServletContainerFactory44.setMimeMappings(mimeMappings56);
        undertowEmbeddedServletContainerFactory24.setMimeMappings(mimeMappings56);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 8080);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray64 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer65 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray64);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray67 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer68 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray67);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray69 = initializer68.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer70 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray69);
        initializer66.initializers = servletContextInitializerArray69;
        initializer65.initializers = servletContextInitializerArray69;
        undertowEmbeddedServletContainerFactory63.addInitializers(servletContextInitializerArray69);
        undertowEmbeddedServletContainerFactory61.addInitializers(servletContextInitializerArray69);
        io.undertow.servlet.api.DeploymentManager deploymentManager75 = undertowEmbeddedServletContainerFactory24.createDeploymentManager(servletContextInitializerArray69);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer76 = undertowEmbeddedServletContainerFactory17.getEmbeddedServletContainer(servletContextInitializerArray69);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.registerServletContainerInitializerToDriveServletContextInitializers(deploymentInfo15, servletContextInitializerArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(resourceManager8);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray26);
        org.junit.Assert.assertNull(ssl28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "0.0.0.0" + "'", str30, "0.0.0.0");
        org.junit.Assert.assertNull(ssl33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray35);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray39);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList45);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(mimeMappings56);
        org.junit.Assert.assertNotNull(servletContextInitializerArray64);
        org.junit.Assert.assertNotNull(servletContextInitializerArray67);
        org.junit.Assert.assertNotNull(servletContextInitializerArray69);
        org.junit.Assert.assertNotNull(deploymentManager75);
        org.junit.Assert.assertNotNull(embeddedServletContainer76);
    }

    @Test
    public void test03129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03129");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer12 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer12 };
        undertowEmbeddedServletContainerFactory11.addBuilderCustomizers(undertowBuilderCustomizerArray13);
        org.springframework.boot.context.embedded.Ssl ssl15 = undertowEmbeddedServletContainerFactory11.getSsl();
        java.lang.String str16 = undertowEmbeddedServletContainerFactory11.getContextPath();
        java.lang.String str17 = undertowEmbeddedServletContainerFactory11.getListenAddress();
        undertowEmbeddedServletContainerFactory11.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl20 = undertowEmbeddedServletContainerFactory11.getSsl();
        undertowEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer25 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray26 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer25 };
        undertowEmbeddedServletContainerFactory24.addBuilderCustomizers(undertowBuilderCustomizerArray26);
        org.springframework.boot.context.embedded.Ssl ssl28 = undertowEmbeddedServletContainerFactory24.getSsl();
        undertowEmbeddedServletContainerFactory24.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory24.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer35 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray36 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer35 };
        undertowEmbeddedServletContainerFactory34.addBuilderCustomizers(undertowBuilderCustomizerArray36);
        undertowEmbeddedServletContainerFactory24.addBuilderCustomizers(undertowBuilderCustomizerArray36);
        undertowEmbeddedServletContainerFactory11.addBuilderCustomizers(undertowBuilderCustomizerArray36);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray36);
        java.net.InetAddress inetAddress41 = undertowEmbeddedServletContainerFactory1.getAddress();
        boolean boolean42 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setPort((int) (short) 1);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray13);
        org.junit.Assert.assertNull(ssl15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "0.0.0.0" + "'", str17, "0.0.0.0");
        org.junit.Assert.assertNull(ssl20);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray26);
        org.junit.Assert.assertNull(ssl28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray36);
        org.junit.Assert.assertNull(inetAddress41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test03130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03130");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader6;
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList12;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = undertowEmbeddedServletContainerFactory10.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader16 = null;
        undertowEmbeddedServletContainerFactory10.resourceLoader = resourceLoader16;
        java.lang.Boolean boolean18 = undertowEmbeddedServletContainerFactory10.directBuffers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList19 = undertowEmbeddedServletContainerFactory10.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList19;
        boolean boolean21 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.String str22 = undertowEmbeddedServletContainerFactory1.getContextPath();
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray23 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test03131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03131");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.io.File file2 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file2);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 0;
        int int6 = undertowEmbeddedServletContainerFactory0.getPort();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 10);
        java.lang.Class<?> wildcardClass9 = undertowEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8080 + "'", int6 == 8080);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test03132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03132");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.net.InetAddress inetAddress6 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer11 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray12 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer11 };
        undertowEmbeddedServletContainerFactory10.addBuilderCustomizers(undertowBuilderCustomizerArray12);
        org.springframework.boot.context.embedded.Ssl ssl14 = undertowEmbeddedServletContainerFactory10.getSsl();
        java.lang.String str15 = undertowEmbeddedServletContainerFactory10.getContextPath();
        java.lang.String str16 = undertowEmbeddedServletContainerFactory10.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = undertowEmbeddedServletContainerFactory10.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection18 = undertowEmbeddedServletContainerFactory10.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory10.workerThreads = 0;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo21 = null;
        undertowEmbeddedServletContainerFactory10.configureErrorPages(deploymentInfo21);
        java.lang.Boolean boolean23 = undertowEmbeddedServletContainerFactory10.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer26 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray27 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer26 };
        undertowEmbeddedServletContainerFactory25.addBuilderCustomizers(undertowBuilderCustomizerArray27);
        org.springframework.boot.context.embedded.Ssl ssl29 = undertowEmbeddedServletContainerFactory25.getSsl();
        java.lang.String str30 = undertowEmbeddedServletContainerFactory25.getContextPath();
        java.lang.String str31 = undertowEmbeddedServletContainerFactory25.getListenAddress();
        undertowEmbeddedServletContainerFactory25.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl34 = null;
        undertowEmbeddedServletContainerFactory25.setSsl(ssl34);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = undertowEmbeddedServletContainerFactory36.getMimeMappings();
        undertowEmbeddedServletContainerFactory25.setMimeMappings(mimeMappings37);
        undertowEmbeddedServletContainerFactory25.bufferSize = 1800;
        boolean boolean41 = undertowEmbeddedServletContainerFactory25.isRegisterDefaultServlet();
        org.springframework.core.io.ResourceLoader resourceLoader42 = null;
        undertowEmbeddedServletContainerFactory25.setResourceLoader(resourceLoader42);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer46 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray47 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer46 };
        undertowEmbeddedServletContainerFactory45.addBuilderCustomizers(undertowBuilderCustomizerArray47);
        org.springframework.boot.context.embedded.Ssl ssl49 = undertowEmbeddedServletContainerFactory45.getSsl();
        undertowEmbeddedServletContainerFactory45.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory45.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer56 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray57 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer56 };
        undertowEmbeddedServletContainerFactory55.addBuilderCustomizers(undertowBuilderCustomizerArray57);
        undertowEmbeddedServletContainerFactory45.addBuilderCustomizers(undertowBuilderCustomizerArray57);
        undertowEmbeddedServletContainerFactory25.addBuilderCustomizers(undertowBuilderCustomizerArray57);
        undertowEmbeddedServletContainerFactory10.addBuilderCustomizers(undertowBuilderCustomizerArray57);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray57);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray12);
        org.junit.Assert.assertNull(ssl14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "0.0.0.0" + "'", str16, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection18);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray27);
        org.junit.Assert.assertNull(ssl29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "0.0.0.0" + "'", str31, "0.0.0.0");
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray47);
        org.junit.Assert.assertNull(ssl49);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray57);
    }

    @Test
    public void test03133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03133");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.io.File file7 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file7);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("0.0.0.0");
        java.util.concurrent.TimeUnit timeUnit12 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout(100, timeUnit12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0.0.0.0" + "'", str6, "0.0.0.0");
    }

    @Test
    public void test03134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03134");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 10;
        undertowEmbeddedServletContainerFactory1.ioThreads = (-1);
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader14);
        undertowEmbeddedServletContainerFactory1.workerThreads = 0;
        org.springframework.core.io.ResourceLoader resourceLoader18 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = undertowEmbeddedServletContainerFactory21.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings22);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1800);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(mimeMappings22);
    }

    @Test
    public void test03135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03135");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        java.lang.String str2 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.io.File file3 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList7 = undertowEmbeddedServletContainerFactory6.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory6.ioThreads = 100;
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory6.setResourceLoader(resourceLoader10);
        undertowEmbeddedServletContainerFactory6.directBuffers = false;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory17.getMimeMappings();
        io.undertow.Undertow.Builder builder20 = undertowEmbeddedServletContainerFactory17.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer23 = undertowEmbeddedServletContainerFactory15.getUndertowEmbeddedServletContainer(builder20, deploymentManager21, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory15.bufferSize = (-1);
        undertowEmbeddedServletContainerFactory15.directBuffers = false;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList29 = undertowEmbeddedServletContainerFactory28.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory28.ioThreads = 100;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet32 = undertowEmbeddedServletContainerFactory28.getErrorPages();
        undertowEmbeddedServletContainerFactory15.setErrorPages(errorPageSet32);
        java.net.InetAddress inetAddress34 = null;
        undertowEmbeddedServletContainerFactory15.setAddress(inetAddress34);
        io.undertow.Undertow.Builder builder37 = undertowEmbeddedServletContainerFactory15.createBuilder(8080);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList39 = undertowEmbeddedServletContainerFactory38.deploymentInfoCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList40 = undertowEmbeddedServletContainerFactory38.builderCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList41 = undertowEmbeddedServletContainerFactory38.builderCustomizers;
        undertowEmbeddedServletContainerFactory38.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings46 = undertowEmbeddedServletContainerFactory45.getMimeMappings();
        io.undertow.Undertow.Builder builder48 = undertowEmbeddedServletContainerFactory45.createBuilder((int) '4');
        java.net.InetAddress inetAddress49 = null;
        undertowEmbeddedServletContainerFactory45.setAddress(inetAddress49);
        boolean boolean51 = undertowEmbeddedServletContainerFactory45.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 8080);
        java.net.InetAddress inetAddress55 = null;
        undertowEmbeddedServletContainerFactory54.setAddress(inetAddress55);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory58.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int61 = undertowEmbeddedServletContainerFactory58.ioThreads;
        java.lang.Integer int62 = undertowEmbeddedServletContainerFactory58.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage63 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray64 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage63 };
        undertowEmbeddedServletContainerFactory58.addErrorPages(errorPageArray64);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray66 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer67 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray66);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray68 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray68);
        initializer67.initializers = servletContextInitializerArray68;
        undertowEmbeddedServletContainerFactory58.addInitializers(servletContextInitializerArray68);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer72 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray68);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer73 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray68);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList75 = undertowEmbeddedServletContainerFactory74.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray76 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer77 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray76);
        undertowEmbeddedServletContainerFactory74.addInitializers(servletContextInitializerArray76);
        initializer73.initializers = servletContextInitializerArray76;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray80 = initializer73.initializers;
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer81 = undertowEmbeddedServletContainerFactory54.getEmbeddedServletContainer(servletContextInitializerArray80);
        io.undertow.servlet.api.DeploymentManager deploymentManager82 = undertowEmbeddedServletContainerFactory45.createDeploymentManager(servletContextInitializerArray80);
        io.undertow.servlet.api.DeploymentManager deploymentManager83 = undertowEmbeddedServletContainerFactory38.createDeploymentManager(servletContextInitializerArray80);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer85 = undertowEmbeddedServletContainerFactory6.getUndertowEmbeddedServletContainer(builder37, deploymentManager83, 8080);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureSsl(ssl4, 8080, builder37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList7);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer23);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList29);
        org.junit.Assert.assertNotNull(errorPageSet32);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList39);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList40);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList41);
        org.junit.Assert.assertNotNull(mimeMappings46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(errorPageArray64);
        org.junit.Assert.assertNotNull(servletContextInitializerArray66);
        org.junit.Assert.assertNotNull(servletContextInitializerArray68);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList75);
        org.junit.Assert.assertNotNull(servletContextInitializerArray76);
        org.junit.Assert.assertNotNull(servletContextInitializerArray80);
        org.junit.Assert.assertNotNull(embeddedServletContainer81);
        org.junit.Assert.assertNotNull(deploymentManager82);
        org.junit.Assert.assertNotNull(deploymentManager83);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer85);
    }

    @Test
    public void test03136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03136");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.io.File file1 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file1);
        undertowEmbeddedServletContainerFactory0.workerThreads = 1;
    }

    @Test
    public void test03137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03137");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        undertowEmbeddedServletContainerFactory1.workerThreads = (-1);
        org.springframework.core.io.ResourceLoader resourceLoader8 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader8;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        boolean boolean11 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test03138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03138");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        org.springframework.core.io.ResourceLoader resourceLoader8 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader8);
        undertowEmbeddedServletContainerFactory1.bufferSize = 0;
        int int12 = undertowEmbeddedServletContainerFactory1.getPort();
        java.lang.String str13 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.ErrorPage errorPage18 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage19 = undertowEmbeddedServletContainerFactory1.getUndertowErrorPage(errorPage18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0.0.0.0" + "'", str13, "0.0.0.0");
    }

    @Test
    public void test03139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03139");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        boolean boolean10 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList12, undertowDeploymentInfoCustomizerArray11);
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList12;
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 100);
        boolean boolean19 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.core.io.ResourceLoader resourceLoader20 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader20);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray24 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test03140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03140");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 8080);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray5 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray5);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray8 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = initializer9.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray10);
        initializer7.initializers = servletContextInitializerArray10;
        initializer6.initializers = servletContextInitializerArray10;
        undertowEmbeddedServletContainerFactory4.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory2.addInitializers(servletContextInitializerArray10);
        undertowEmbeddedServletContainerFactory2.workerThreads = 0;
        undertowEmbeddedServletContainerFactory2.buffersPerRegion = 8080;
        int int20 = undertowEmbeddedServletContainerFactory2.getSessionTimeout();
        org.springframework.boot.context.embedded.Ssl ssl21 = null;
        undertowEmbeddedServletContainerFactory2.setSsl(ssl21);
        org.junit.Assert.assertNotNull(servletContextInitializerArray5);
        org.junit.Assert.assertNotNull(servletContextInitializerArray8);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1800 + "'", int20 == 1800);
    }

    @Test
    public void test03141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03141");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        java.lang.String str10 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.lang.Integer int11 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "0.0.0.0" + "'", str10, "0.0.0.0");
        org.junit.Assert.assertNull(int11);
    }

    @Test
    public void test03142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03142");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        boolean boolean1 = jarResourcemanager0.isResourceChangeListenerSupported();
        boolean boolean2 = jarResourcemanager0.isResourceChangeListenerSupported();
        java.lang.String str3 = jarResourcemanager0.jarPath;
        jarResourcemanager0.close();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener5 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager0.removeResourceChangeListener(resourceChangeListener5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test03143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03143");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.jarPath = "hi!";
        java.lang.String str6 = jarResourcemanager1.jarPath;
        boolean boolean7 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean8 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.close();
        jarResourcemanager1.close();
        boolean boolean11 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean12 = jarResourcemanager1.isResourceChangeListenerSupported();
        java.lang.String str13 = jarResourcemanager1.jarPath;
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test03144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03144");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory1.bufferSize;
        io.undertow.server.handlers.resource.ResourceManager resourceManager7 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        int int8 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        io.undertow.Undertow.Builder builder16 = undertowEmbeddedServletContainerFactory13.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager17 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer19 = undertowEmbeddedServletContainerFactory11.getUndertowEmbeddedServletContainer(builder16, deploymentManager17, (int) (byte) 0);
        java.lang.Integer int20 = undertowEmbeddedServletContainerFactory11.buffersPerRegion;
        java.net.InetAddress inetAddress21 = null;
        undertowEmbeddedServletContainerFactory11.setAddress(inetAddress21);
        undertowEmbeddedServletContainerFactory11.setBuffersPerRegion((java.lang.Integer) 100);
        org.springframework.boot.context.embedded.Ssl ssl25 = null;
        undertowEmbeddedServletContainerFactory11.setSsl(ssl25);
        java.lang.String str27 = undertowEmbeddedServletContainerFactory11.getContextPath();
        io.undertow.Undertow.Builder builder29 = undertowEmbeddedServletContainerFactory11.createBuilder(0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer32 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray33 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer32 };
        undertowEmbeddedServletContainerFactory31.addBuilderCustomizers(undertowBuilderCustomizerArray33);
        org.springframework.boot.context.embedded.Ssl ssl35 = undertowEmbeddedServletContainerFactory31.getSsl();
        undertowEmbeddedServletContainerFactory31.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory31.setPort((int) (byte) 10);
        boolean boolean40 = undertowEmbeddedServletContainerFactory31.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray43 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList44 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList44, undertowBuilderCustomizerArray43);
        undertowEmbeddedServletContainerFactory42.builderCustomizers = undertowBuilderCustomizerList44;
        java.lang.Integer int47 = undertowEmbeddedServletContainerFactory42.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer50 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray51 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer50 };
        undertowEmbeddedServletContainerFactory49.addBuilderCustomizers(undertowBuilderCustomizerArray51);
        org.springframework.boot.context.embedded.Ssl ssl53 = undertowEmbeddedServletContainerFactory49.getSsl();
        java.lang.String str54 = undertowEmbeddedServletContainerFactory49.getContextPath();
        java.lang.String str55 = undertowEmbeddedServletContainerFactory49.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet56 = undertowEmbeddedServletContainerFactory49.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection57 = undertowEmbeddedServletContainerFactory49.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList58 = undertowEmbeddedServletContainerFactory49.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray59 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory49.addBuilderCustomizers(undertowBuilderCustomizerArray59);
        org.springframework.core.io.ResourceLoader resourceLoader61 = undertowEmbeddedServletContainerFactory49.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory63.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int66 = undertowEmbeddedServletContainerFactory63.ioThreads;
        java.lang.Integer int67 = undertowEmbeddedServletContainerFactory63.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage68 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray69 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage68 };
        undertowEmbeddedServletContainerFactory63.addErrorPages(errorPageArray69);
        undertowEmbeddedServletContainerFactory49.addErrorPages(errorPageArray69);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray72 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer73 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray72);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray74 = initializer73.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer75 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray74);
        undertowEmbeddedServletContainerFactory49.addInitializers(servletContextInitializerArray74);
        io.undertow.servlet.api.DeploymentManager deploymentManager77 = undertowEmbeddedServletContainerFactory42.createDeploymentManager(servletContextInitializerArray74);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer78 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray74);
        io.undertow.servlet.api.DeploymentManager deploymentManager79 = undertowEmbeddedServletContainerFactory31.createDeploymentManager(servletContextInitializerArray74);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer81 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder29, deploymentManager79, (int) (short) 100);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 8080);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(resourceManager7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray33);
        org.junit.Assert.assertNull(ssl35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray51);
        org.junit.Assert.assertNull(ssl53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "0.0.0.0" + "'", str55, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet56);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection57);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList58);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray59);
        org.junit.Assert.assertNull(resourceLoader61);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNotNull(errorPageArray69);
        org.junit.Assert.assertNotNull(servletContextInitializerArray72);
        org.junit.Assert.assertNotNull(servletContextInitializerArray74);
        org.junit.Assert.assertNotNull(deploymentManager77);
        org.junit.Assert.assertNotNull(deploymentManager79);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer81);
    }

    @Test
    public void test03145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03145");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 10;
        undertowEmbeddedServletContainerFactory1.ioThreads = (-1);
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader14);
        undertowEmbeddedServletContainerFactory1.workerThreads = 0;
        int int18 = undertowEmbeddedServletContainerFactory1.getPort();
        java.lang.Integer int19 = undertowEmbeddedServletContainerFactory1.bufferSize;
        java.io.File file20 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.lang.ClassLoader classLoader21 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        boolean boolean22 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test03146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03146");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        java.lang.Boolean boolean8 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.ioThreads = 1;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        boolean boolean12 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test03147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03147");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.workerThreads = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        io.undertow.Undertow.Builder builder16 = undertowEmbeddedServletContainerFactory13.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager17 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer19 = undertowEmbeddedServletContainerFactory11.getUndertowEmbeddedServletContainer(builder16, deploymentManager17, (int) (byte) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray23 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer22 };
        undertowEmbeddedServletContainerFactory21.addBuilderCustomizers(undertowBuilderCustomizerArray23);
        org.springframework.boot.context.embedded.Ssl ssl25 = undertowEmbeddedServletContainerFactory21.getSsl();
        java.lang.String str26 = undertowEmbeddedServletContainerFactory21.getContextPath();
        java.lang.String str27 = undertowEmbeddedServletContainerFactory21.getListenAddress();
        undertowEmbeddedServletContainerFactory21.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl30 = null;
        undertowEmbeddedServletContainerFactory21.setSsl(ssl30);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = undertowEmbeddedServletContainerFactory32.getMimeMappings();
        undertowEmbeddedServletContainerFactory21.setMimeMappings(mimeMappings33);
        undertowEmbeddedServletContainerFactory21.bufferSize = 1800;
        boolean boolean37 = undertowEmbeddedServletContainerFactory21.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray40 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray40);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray43 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray43);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray45 = initializer44.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray45);
        initializer42.initializers = servletContextInitializerArray45;
        initializer41.initializers = servletContextInitializerArray45;
        undertowEmbeddedServletContainerFactory39.addInitializers(servletContextInitializerArray45);
        io.undertow.servlet.api.DeploymentManager deploymentManager50 = undertowEmbeddedServletContainerFactory21.createDeploymentManager(servletContextInitializerArray45);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer52 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder16, deploymentManager50, (int) (byte) -1);
        io.undertow.server.handlers.resource.ResourceManager resourceManager53 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory1.ioThreads = 1;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo56 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo56);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer60 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray61 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer60 };
        undertowEmbeddedServletContainerFactory59.addBuilderCustomizers(undertowBuilderCustomizerArray61);
        org.springframework.boot.context.embedded.Ssl ssl63 = undertowEmbeddedServletContainerFactory59.getSsl();
        undertowEmbeddedServletContainerFactory59.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory59.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress68 = undertowEmbeddedServletContainerFactory59.getAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo69 = null;
        undertowEmbeddedServletContainerFactory59.configureErrorPages(deploymentInfo69);
        undertowEmbeddedServletContainerFactory59.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory59.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.Ssl ssl75 = null;
        undertowEmbeddedServletContainerFactory59.setSsl(ssl75);
        java.lang.Integer int77 = undertowEmbeddedServletContainerFactory59.workerThreads;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings78 = undertowEmbeddedServletContainerFactory59.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings78);
        java.net.InetAddress inetAddress80 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.net.InetAddress inetAddress81 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress81);
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray83 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer19);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray23);
        org.junit.Assert.assertNull(ssl25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "0.0.0.0" + "'", str27, "0.0.0.0");
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray40);
        org.junit.Assert.assertNotNull(servletContextInitializerArray43);
        org.junit.Assert.assertNotNull(servletContextInitializerArray45);
        org.junit.Assert.assertNotNull(deploymentManager50);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer52);
        org.junit.Assert.assertNotNull(resourceManager53);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray61);
        org.junit.Assert.assertNull(ssl63);
        org.junit.Assert.assertNull(inetAddress68);
        org.junit.Assert.assertNull(int77);
        org.junit.Assert.assertNotNull(mimeMappings78);
        org.junit.Assert.assertNull(inetAddress80);
    }

    @Test
    public void test03148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03148");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.ioThreads = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList9 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        java.lang.ClassLoader classLoader10 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.bufferSize = 1800;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection14 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer17 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer17 };
        undertowEmbeddedServletContainerFactory16.addBuilderCustomizers(undertowBuilderCustomizerArray18);
        org.springframework.boot.context.embedded.Ssl ssl20 = undertowEmbeddedServletContainerFactory16.getSsl();
        java.lang.String str21 = undertowEmbeddedServletContainerFactory16.getContextPath();
        java.lang.String str22 = undertowEmbeddedServletContainerFactory16.getListenAddress();
        undertowEmbeddedServletContainerFactory16.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl25 = undertowEmbeddedServletContainerFactory16.getSsl();
        undertowEmbeddedServletContainerFactory16.setPort((int) (short) 0);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList28 = undertowEmbeddedServletContainerFactory16.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList28;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection30 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        int int31 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0.0.0.0" + "'", str6, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList9);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection14);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray18);
        org.junit.Assert.assertNull(ssl20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "0.0.0.0" + "'", str22, "0.0.0.0");
        org.junit.Assert.assertNull(ssl25);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1800 + "'", int31 == 1800);
    }

    @Test
    public void test03149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03149");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("0.0.0.0");
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.jarPath = "";
        jarResourcemanager1.close();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener7 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager1.removeResourceChangeListener(resourceChangeListener7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03150");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 10;
        undertowEmbeddedServletContainerFactory1.ioThreads = (-1);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 8080);
        undertowEmbeddedServletContainerFactory1.workerThreads = 100;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection18 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection18);
    }

    @Test
    public void test03151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03151");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.io.File file8 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.net.InetAddress inetAddress9 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(inetAddress9);
    }

    @Test
    public void test03152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03152");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        java.lang.String str1 = jarResourcemanager0.jarPath;
        jarResourcemanager0.jarPath = "";
        java.lang.String str4 = jarResourcemanager0.jarPath;
        java.lang.String str5 = jarResourcemanager0.jarPath;
        java.lang.String str6 = jarResourcemanager0.jarPath;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource8 = jarResourcemanager0.getResource("hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test03153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03153");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress10 = undertowEmbeddedServletContainerFactory1.getAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo11 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo11);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        boolean boolean15 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        java.io.File file18 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.Ssl ssl21 = undertowEmbeddedServletContainerFactory20.getSsl();
        org.springframework.core.io.ResourceLoader resourceLoader22 = undertowEmbeddedServletContainerFactory20.resourceLoader;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo23 = null;
        undertowEmbeddedServletContainerFactory20.configureErrorPages(deploymentInfo23);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray28 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer27 };
        undertowEmbeddedServletContainerFactory26.addBuilderCustomizers(undertowBuilderCustomizerArray28);
        org.springframework.boot.context.embedded.Ssl ssl30 = undertowEmbeddedServletContainerFactory26.getSsl();
        java.lang.String str31 = undertowEmbeddedServletContainerFactory26.getContextPath();
        java.lang.String str32 = undertowEmbeddedServletContainerFactory26.getListenAddress();
        undertowEmbeddedServletContainerFactory26.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl35 = undertowEmbeddedServletContainerFactory26.getSsl();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = undertowEmbeddedServletContainerFactory26.getMimeMappings();
        boolean boolean37 = undertowEmbeddedServletContainerFactory26.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray40 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList41 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList41, undertowBuilderCustomizerArray40);
        undertowEmbeddedServletContainerFactory39.builderCustomizers = undertowBuilderCustomizerList41;
        undertowEmbeddedServletContainerFactory39.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory39.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings48 = undertowEmbeddedServletContainerFactory39.getMimeMappings();
        java.lang.String str49 = undertowEmbeddedServletContainerFactory39.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer undertowDeploymentInfoCustomizer50 = null;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray51 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] { undertowDeploymentInfoCustomizer50 };
        undertowEmbeddedServletContainerFactory39.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray51);
        undertowEmbeddedServletContainerFactory26.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray51);
        undertowEmbeddedServletContainerFactory20.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray51);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray51);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(inetAddress10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(ssl21);
        org.junit.Assert.assertNull(resourceLoader22);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray28);
        org.junit.Assert.assertNull(ssl30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "0.0.0.0" + "'", str32, "0.0.0.0");
        org.junit.Assert.assertNull(ssl35);
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(mimeMappings48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "0.0.0.0" + "'", str49, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray51);
    }

    @Test
    public void test03154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03154");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        int int13 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray14 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray14);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray16 = initializer15.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray16);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray16);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer21 };
        undertowEmbeddedServletContainerFactory20.addBuilderCustomizers(undertowBuilderCustomizerArray22);
        org.springframework.boot.context.embedded.Ssl ssl24 = undertowEmbeddedServletContainerFactory20.getSsl();
        java.lang.String str25 = undertowEmbeddedServletContainerFactory20.getContextPath();
        java.lang.String str26 = undertowEmbeddedServletContainerFactory20.getListenAddress();
        undertowEmbeddedServletContainerFactory20.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl29 = undertowEmbeddedServletContainerFactory20.getSsl();
        int int30 = undertowEmbeddedServletContainerFactory20.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray31 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory20.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray31);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = undertowEmbeddedServletContainerFactory33.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray35 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory33.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray35);
        undertowEmbeddedServletContainerFactory20.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray35);
        undertowEmbeddedServletContainerFactory20.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList41 = undertowEmbeddedServletContainerFactory40.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory40.ioThreads = 100;
        org.springframework.core.io.ResourceLoader resourceLoader44 = null;
        undertowEmbeddedServletContainerFactory40.setResourceLoader(resourceLoader44);
        undertowEmbeddedServletContainerFactory40.directBuffers = false;
        java.lang.Integer int48 = undertowEmbeddedServletContainerFactory40.buffersPerRegion;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        boolean boolean51 = undertowEmbeddedServletContainerFactory50.isRegisterJspServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings52 = undertowEmbeddedServletContainerFactory50.getMimeMappings();
        undertowEmbeddedServletContainerFactory40.setMimeMappings(mimeMappings52);
        undertowEmbeddedServletContainerFactory20.setMimeMappings(mimeMappings52);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 8080);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray60 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray60);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray63 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer64 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray63);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray65 = initializer64.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray65);
        initializer62.initializers = servletContextInitializerArray65;
        initializer61.initializers = servletContextInitializerArray65;
        undertowEmbeddedServletContainerFactory59.addInitializers(servletContextInitializerArray65);
        undertowEmbeddedServletContainerFactory57.addInitializers(servletContextInitializerArray65);
        io.undertow.servlet.api.DeploymentManager deploymentManager71 = undertowEmbeddedServletContainerFactory20.createDeploymentManager(servletContextInitializerArray65);
        initializer18.initializers = servletContextInitializerArray65;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer73 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(servletContextInitializerArray14);
        org.junit.Assert.assertNotNull(servletContextInitializerArray16);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray22);
        org.junit.Assert.assertNull(ssl24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0.0.0.0" + "'", str26, "0.0.0.0");
        org.junit.Assert.assertNull(ssl29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray31);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray35);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList41);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(mimeMappings52);
        org.junit.Assert.assertNotNull(servletContextInitializerArray60);
        org.junit.Assert.assertNotNull(servletContextInitializerArray63);
        org.junit.Assert.assertNotNull(servletContextInitializerArray65);
        org.junit.Assert.assertNotNull(deploymentManager71);
    }

    @Test
    public void test03155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03155");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader6;
        java.io.File file8 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = undertowEmbeddedServletContainerFactory18.getMimeMappings();
        io.undertow.Undertow.Builder builder21 = undertowEmbeddedServletContainerFactory18.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer24 = undertowEmbeddedServletContainerFactory16.getUndertowEmbeddedServletContainer(builder21, deploymentManager22, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory16.bufferSize = (-1);
        java.lang.Boolean boolean27 = undertowEmbeddedServletContainerFactory16.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 8080);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray33 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray33);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray36 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray36);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray38 = initializer37.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray38);
        initializer35.initializers = servletContextInitializerArray38;
        initializer34.initializers = servletContextInitializerArray38;
        undertowEmbeddedServletContainerFactory32.addInitializers(servletContextInitializerArray38);
        undertowEmbeddedServletContainerFactory30.addInitializers(servletContextInitializerArray38);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer44 = undertowEmbeddedServletContainerFactory16.getEmbeddedServletContainer(servletContextInitializerArray38);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer45 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(servletContextInitializerArray33);
        org.junit.Assert.assertNotNull(servletContextInitializerArray36);
        org.junit.Assert.assertNotNull(servletContextInitializerArray38);
        org.junit.Assert.assertNotNull(embeddedServletContainer44);
    }

    @Test
    public void test03156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03156");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress10 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection12 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.lang.String str13 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.springframework.boot.context.embedded.Ssl ssl15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode16 = undertowEmbeddedServletContainerFactory1.getSslClientAuthMode(ssl15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(inetAddress10);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0.0.0.0" + "'", str13, "0.0.0.0");
        org.junit.Assert.assertNull(int14);
    }

    @Test
    public void test03157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03157");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory3.getMimeMappings();
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory3.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager7 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer9 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder6, deploymentManager7, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory1.bufferSize = (-1);
        java.lang.Boolean boolean12 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.Ssl ssl13 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.io.File file14 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection15 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray16 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(ssl13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection15);
    }

    @Test
    public void test03158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03158");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection9 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.workerThreads = 0;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) -1);
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader15);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 8080);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList19 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory21.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray24 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList25 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList25, undertowDeploymentInfoCustomizerArray24);
        undertowEmbeddedServletContainerFactory21.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList25;
        undertowEmbeddedServletContainerFactory21.setIoThreads((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = undertowEmbeddedServletContainerFactory21.getMimeMappings();
        java.lang.Integer int31 = undertowEmbeddedServletContainerFactory21.workerThreads;
        java.net.InetAddress inetAddress32 = undertowEmbeddedServletContainerFactory21.getAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory34.directBuffers = false;
        undertowEmbeddedServletContainerFactory34.setJspServletClassName("");
        org.springframework.core.io.ResourceLoader resourceLoader39 = null;
        undertowEmbeddedServletContainerFactory34.setResourceLoader(resourceLoader39);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer43 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray44 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer43 };
        undertowEmbeddedServletContainerFactory42.addBuilderCustomizers(undertowBuilderCustomizerArray44);
        org.springframework.boot.context.embedded.Ssl ssl46 = undertowEmbeddedServletContainerFactory42.getSsl();
        java.lang.String str47 = undertowEmbeddedServletContainerFactory42.getContextPath();
        java.lang.String str48 = undertowEmbeddedServletContainerFactory42.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet49 = undertowEmbeddedServletContainerFactory42.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray52 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList53 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList53, undertowBuilderCustomizerArray52);
        undertowEmbeddedServletContainerFactory51.builderCustomizers = undertowBuilderCustomizerList53;
        undertowEmbeddedServletContainerFactory42.builderCustomizers = undertowBuilderCustomizerList53;
        java.lang.String str57 = undertowEmbeddedServletContainerFactory42.getContextPath();
        io.undertow.Undertow.Builder builder59 = undertowEmbeddedServletContainerFactory42.createBuilder((int) (byte) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList62 = undertowEmbeddedServletContainerFactory61.deploymentInfoCustomizers;
        java.lang.Boolean boolean63 = undertowEmbeddedServletContainerFactory61.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory65.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int68 = undertowEmbeddedServletContainerFactory65.ioThreads;
        java.lang.Integer int69 = undertowEmbeddedServletContainerFactory65.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage70 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray71 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage70 };
        undertowEmbeddedServletContainerFactory65.addErrorPages(errorPageArray71);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray73 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer74 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray73);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray75 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer76 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray75);
        initializer74.initializers = servletContextInitializerArray75;
        undertowEmbeddedServletContainerFactory65.addInitializers(servletContextInitializerArray75);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer79 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray75);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer80 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray75);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory81 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList82 = undertowEmbeddedServletContainerFactory81.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray83 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer84 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray83);
        undertowEmbeddedServletContainerFactory81.addInitializers(servletContextInitializerArray83);
        initializer80.initializers = servletContextInitializerArray83;
        io.undertow.servlet.api.DeploymentManager deploymentManager87 = undertowEmbeddedServletContainerFactory61.createDeploymentManager(servletContextInitializerArray83);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer89 = undertowEmbeddedServletContainerFactory34.getUndertowEmbeddedServletContainer(builder59, deploymentManager87, (int) '#');
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet90 = undertowEmbeddedServletContainerFactory34.getErrorPages();
        undertowEmbeddedServletContainerFactory21.setErrorPages(errorPageSet90);
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet90);
        java.lang.String str93 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet94 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection9);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList19);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(inetAddress32);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray44);
        org.junit.Assert.assertNull(ssl46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "0.0.0.0" + "'", str48, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet49);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList62);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertNotNull(errorPageArray71);
        org.junit.Assert.assertNotNull(servletContextInitializerArray73);
        org.junit.Assert.assertNotNull(servletContextInitializerArray75);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList82);
        org.junit.Assert.assertNotNull(servletContextInitializerArray83);
        org.junit.Assert.assertNotNull(deploymentManager87);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer89);
        org.junit.Assert.assertNotNull(errorPageSet90);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "0.0.0.0" + "'", str93, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet94);
    }

    @Test
    public void test03159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03159");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray2 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray5 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray5);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray7 = initializer6.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray7);
        initializer4.initializers = servletContextInitializerArray7;
        initializer3.initializers = servletContextInitializerArray7;
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray7);
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory16.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = undertowEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory19.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray21);
        undertowEmbeddedServletContainerFactory16.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray21);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray21);
        java.lang.String str25 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.junit.Assert.assertNotNull(servletContextInitializerArray2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray5);
        org.junit.Assert.assertNotNull(servletContextInitializerArray7);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "0.0.0.0" + "'", str25, "0.0.0.0");
    }

    @Test
    public void test03160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03160");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "hi!";
        java.lang.String str4 = jarResourcemanager1.jarPath;
        java.lang.String str5 = jarResourcemanager1.jarPath;
        boolean boolean6 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean7 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.close();
        java.lang.String str11 = jarResourcemanager1.jarPath;
        java.lang.String str12 = jarResourcemanager1.jarPath;
        boolean boolean13 = jarResourcemanager1.isResourceChangeListenerSupported();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "0.0.0.0" + "'", str11, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test03161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03161");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.close();
        java.lang.String str7 = jarResourcemanager1.jarPath;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource9 = jarResourcemanager1.getResource("");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test03162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03162");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo4 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo4);
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory1.bufferSize;
        org.springframework.boot.context.embedded.Ssl ssl7 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer10 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer10 };
        undertowEmbeddedServletContainerFactory9.addBuilderCustomizers(undertowBuilderCustomizerArray11);
        org.springframework.boot.context.embedded.Ssl ssl13 = undertowEmbeddedServletContainerFactory9.getSsl();
        java.lang.String str14 = undertowEmbeddedServletContainerFactory9.getContextPath();
        java.lang.String str15 = undertowEmbeddedServletContainerFactory9.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet16 = undertowEmbeddedServletContainerFactory9.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray19 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList20 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList20, undertowBuilderCustomizerArray19);
        undertowEmbeddedServletContainerFactory18.builderCustomizers = undertowBuilderCustomizerList20;
        undertowEmbeddedServletContainerFactory9.builderCustomizers = undertowBuilderCustomizerList20;
        org.springframework.core.io.ResourceLoader resourceLoader24 = null;
        undertowEmbeddedServletContainerFactory9.resourceLoader = resourceLoader24;
        undertowEmbeddedServletContainerFactory9.directBuffers = true;
        org.springframework.core.io.ResourceLoader resourceLoader28 = undertowEmbeddedServletContainerFactory9.resourceLoader;
        undertowEmbeddedServletContainerFactory9.directBuffers = true;
        java.lang.Integer int31 = undertowEmbeddedServletContainerFactory9.workerThreads;
        int int32 = undertowEmbeddedServletContainerFactory9.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory34.directBuffers = false;
        undertowEmbeddedServletContainerFactory34.setJspServletClassName("");
        java.lang.String str39 = undertowEmbeddedServletContainerFactory34.getContextPath();
        undertowEmbeddedServletContainerFactory34.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory34.setPort((int) (short) 10);
        org.springframework.core.io.ResourceLoader resourceLoader44 = null;
        undertowEmbeddedServletContainerFactory34.resourceLoader = resourceLoader44;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray48 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList49 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList49, undertowBuilderCustomizerArray48);
        undertowEmbeddedServletContainerFactory47.builderCustomizers = undertowBuilderCustomizerList49;
        undertowEmbeddedServletContainerFactory47.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory47.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings56 = undertowEmbeddedServletContainerFactory47.getMimeMappings();
        java.lang.String str57 = undertowEmbeddedServletContainerFactory47.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray60 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList61 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList61, undertowBuilderCustomizerArray60);
        undertowEmbeddedServletContainerFactory59.builderCustomizers = undertowBuilderCustomizerList61;
        undertowEmbeddedServletContainerFactory59.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory59.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings68 = undertowEmbeddedServletContainerFactory59.getMimeMappings();
        java.io.File file69 = null;
        undertowEmbeddedServletContainerFactory59.setDocumentRoot(file69);
        java.lang.String str71 = undertowEmbeddedServletContainerFactory59.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList73 = undertowEmbeddedServletContainerFactory72.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory72.ioThreads = 100;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray78 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer79 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray78);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer80 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray81 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer82 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray81);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray83 = initializer82.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer84 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray83);
        initializer80.initializers = servletContextInitializerArray83;
        initializer79.initializers = servletContextInitializerArray83;
        undertowEmbeddedServletContainerFactory77.addInitializers(servletContextInitializerArray83);
        undertowEmbeddedServletContainerFactory72.addInitializers(servletContextInitializerArray83);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer89 = undertowEmbeddedServletContainerFactory59.getEmbeddedServletContainer(servletContextInitializerArray83);
        io.undertow.servlet.api.DeploymentManager deploymentManager90 = undertowEmbeddedServletContainerFactory47.createDeploymentManager(servletContextInitializerArray83);
        undertowEmbeddedServletContainerFactory34.addInitializers(servletContextInitializerArray83);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer92 = undertowEmbeddedServletContainerFactory9.getEmbeddedServletContainer(servletContextInitializerArray83);
        io.undertow.servlet.api.DeploymentManager deploymentManager93 = undertowEmbeddedServletContainerFactory1.createDeploymentManager(servletContextInitializerArray83);
        java.lang.Class<?> wildcardClass94 = servletContextInitializerArray83.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(ssl7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertNull(ssl13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "0.0.0.0" + "'", str15, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet16);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(resourceLoader28);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1800 + "'", int32 == 1800);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(mimeMappings56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(mimeMappings68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "0.0.0.0" + "'", str71, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList73);
        org.junit.Assert.assertNotNull(servletContextInitializerArray78);
        org.junit.Assert.assertNotNull(servletContextInitializerArray81);
        org.junit.Assert.assertNotNull(servletContextInitializerArray83);
        org.junit.Assert.assertNotNull(embeddedServletContainer89);
        org.junit.Assert.assertNotNull(deploymentManager90);
        org.junit.Assert.assertNotNull(embeddedServletContainer92);
        org.junit.Assert.assertNotNull(deploymentManager93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test03163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03163");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        java.lang.String str1 = jarResourcemanager0.jarPath;
        boolean boolean2 = jarResourcemanager0.isResourceChangeListenerSupported();
        boolean boolean3 = jarResourcemanager0.isResourceChangeListenerSupported();
        jarResourcemanager0.jarPath = "hi!";
        jarResourcemanager0.jarPath = "hi!";
        java.lang.String str8 = jarResourcemanager0.jarPath;
        jarResourcemanager0.close();
        jarResourcemanager0.close();
        boolean boolean11 = jarResourcemanager0.isResourceChangeListenerSupported();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test03164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03164");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.close();
        java.lang.String str7 = jarResourcemanager1.jarPath;
        java.lang.String str8 = jarResourcemanager1.jarPath;
        java.lang.String str9 = jarResourcemanager1.jarPath;
        jarResourcemanager1.close();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager1.removeResourceChangeListener(resourceChangeListener11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test03165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03165");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress10 = undertowEmbeddedServletContainerFactory1.getAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo11 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo11);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        org.springframework.core.io.ResourceLoader resourceLoader15 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.lang.Boolean boolean16 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("0.0.0.0");
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList19 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(inetAddress10);
        org.junit.Assert.assertNull(resourceLoader15);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + true + "'", boolean16, true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList19);
        org.junit.Assert.assertNotNull(errorPageSet20);
    }

    @Test
    public void test03166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03166");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int4 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer9 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer9 };
        undertowEmbeddedServletContainerFactory8.addBuilderCustomizers(undertowBuilderCustomizerArray10);
        org.springframework.boot.context.embedded.Ssl ssl12 = undertowEmbeddedServletContainerFactory8.getSsl();
        java.lang.String str13 = undertowEmbeddedServletContainerFactory8.getContextPath();
        java.lang.String str14 = undertowEmbeddedServletContainerFactory8.getListenAddress();
        undertowEmbeddedServletContainerFactory8.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory8.getSsl();
        int int18 = undertowEmbeddedServletContainerFactory8.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray19 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory8.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray19);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = undertowEmbeddedServletContainerFactory21.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray23 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory21.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray23);
        undertowEmbeddedServletContainerFactory8.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray23);
        undertowEmbeddedServletContainerFactory8.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList29 = undertowEmbeddedServletContainerFactory28.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory28.ioThreads = 100;
        org.springframework.core.io.ResourceLoader resourceLoader32 = null;
        undertowEmbeddedServletContainerFactory28.setResourceLoader(resourceLoader32);
        undertowEmbeddedServletContainerFactory28.directBuffers = false;
        java.lang.Integer int36 = undertowEmbeddedServletContainerFactory28.buffersPerRegion;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        boolean boolean39 = undertowEmbeddedServletContainerFactory38.isRegisterJspServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = undertowEmbeddedServletContainerFactory38.getMimeMappings();
        undertowEmbeddedServletContainerFactory28.setMimeMappings(mimeMappings40);
        undertowEmbeddedServletContainerFactory8.setMimeMappings(mimeMappings40);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 8080);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray48 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray48);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray51 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray51);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray53 = initializer52.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray53);
        initializer50.initializers = servletContextInitializerArray53;
        initializer49.initializers = servletContextInitializerArray53;
        undertowEmbeddedServletContainerFactory47.addInitializers(servletContextInitializerArray53);
        undertowEmbeddedServletContainerFactory45.addInitializers(servletContextInitializerArray53);
        io.undertow.servlet.api.DeploymentManager deploymentManager59 = undertowEmbeddedServletContainerFactory8.createDeploymentManager(servletContextInitializerArray53);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer60 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray53);
        java.lang.Class<?> wildcardClass61 = embeddedServletContainer60.getClass();
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray10);
        org.junit.Assert.assertNull(ssl12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0.0.0.0" + "'", str14, "0.0.0.0");
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray19);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray23);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList29);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNotNull(servletContextInitializerArray48);
        org.junit.Assert.assertNotNull(servletContextInitializerArray51);
        org.junit.Assert.assertNotNull(servletContextInitializerArray53);
        org.junit.Assert.assertNotNull(deploymentManager59);
        org.junit.Assert.assertNotNull(embeddedServletContainer60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test03167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03167");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray2 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray5 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray5);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray7 = initializer6.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray7);
        initializer4.initializers = servletContextInitializerArray7;
        initializer3.initializers = servletContextInitializerArray7;
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray7);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        java.net.InetAddress inetAddress15 = undertowEmbeddedServletContainerFactory1.getAddress();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = (-1);
        org.junit.Assert.assertNotNull(servletContextInitializerArray2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray5);
        org.junit.Assert.assertNotNull(servletContextInitializerArray7);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(inetAddress15);
    }

    @Test
    public void test03168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03168");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList2 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        java.lang.Boolean boolean3 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory5.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory5.ioThreads;
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory5.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage10 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray11 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage10 };
        undertowEmbeddedServletContainerFactory5.addErrorPages(errorPageArray11);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray13);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray15 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray15);
        initializer14.initializers = servletContextInitializerArray15;
        undertowEmbeddedServletContainerFactory5.addInitializers(servletContextInitializerArray15);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray15);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray15);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList22 = undertowEmbeddedServletContainerFactory21.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray23);
        undertowEmbeddedServletContainerFactory21.addInitializers(servletContextInitializerArray23);
        initializer20.initializers = servletContextInitializerArray23;
        io.undertow.servlet.api.DeploymentManager deploymentManager27 = undertowEmbeddedServletContainerFactory1.createDeploymentManager(servletContextInitializerArray23);
        java.lang.Boolean boolean28 = undertowEmbeddedServletContainerFactory1.directBuffers;
        int int29 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(errorPageArray11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertNotNull(servletContextInitializerArray15);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList22);
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
        org.junit.Assert.assertNotNull(deploymentManager27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1800 + "'", int29 == 1800);
    }

    @Test
    public void test03169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03169");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.close();
        jarResourcemanager1.jarPath = "";
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.close();
        jarResourcemanager1.close();
        java.lang.String str11 = jarResourcemanager1.jarPath;
        jarResourcemanager1.close();
        java.lang.String str13 = jarResourcemanager1.jarPath;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource15 = jarResourcemanager1.getResource("");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test03170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03170");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.close();
        boolean boolean3 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.close();
        jarResourcemanager1.close();
        boolean boolean6 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean7 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean8 = jarResourcemanager1.isResourceChangeListenerSupported();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test03171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03171");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.bufferSize = 100;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(8080);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList16 = undertowEmbeddedServletContainerFactory15.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory15.setSessionTimeout(0);
        java.io.File file19 = null;
        undertowEmbeddedServletContainerFactory15.setDocumentRoot(file19);
        java.lang.Integer int21 = undertowEmbeddedServletContainerFactory15.bufferSize;
        java.lang.Boolean boolean22 = undertowEmbeddedServletContainerFactory15.directBuffers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = undertowEmbeddedServletContainerFactory15.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet23);
        org.springframework.boot.context.embedded.Ssl ssl25 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = undertowEmbeddedServletContainerFactory28.getMimeMappings();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList30 = undertowEmbeddedServletContainerFactory28.builderCustomizers;
        undertowEmbeddedServletContainerFactory28.setWorkerThreads((java.lang.Integer) 100);
        java.lang.Boolean boolean33 = undertowEmbeddedServletContainerFactory28.directBuffers;
        io.undertow.Undertow.Builder builder35 = undertowEmbeddedServletContainerFactory28.createBuilder(1);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureSsl(ssl25, (int) '4', builder35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(errorPageSet12);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList16);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(errorPageSet23);
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList30);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(builder35);
    }

    @Test
    public void test03172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03172");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) '#');
        org.springframework.boot.context.embedded.Ssl ssl2 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.net.InetAddress inetAddress3 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList4 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        org.junit.Assert.assertNull(ssl2);
        org.junit.Assert.assertNull(inetAddress3);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList4);
    }

    @Test
    public void test03173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03173");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.bufferSize = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer12 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer12 };
        undertowEmbeddedServletContainerFactory11.addBuilderCustomizers(undertowBuilderCustomizerArray13);
        undertowEmbeddedServletContainerFactory11.setSessionTimeout((int) (byte) 10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection17 = undertowEmbeddedServletContainerFactory11.getBuilderCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection18 = undertowEmbeddedServletContainerFactory11.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer21 };
        undertowEmbeddedServletContainerFactory20.addBuilderCustomizers(undertowBuilderCustomizerArray22);
        org.springframework.boot.context.embedded.Ssl ssl24 = undertowEmbeddedServletContainerFactory20.getSsl();
        java.lang.String str25 = undertowEmbeddedServletContainerFactory20.getContextPath();
        java.lang.String str26 = undertowEmbeddedServletContainerFactory20.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet27 = undertowEmbeddedServletContainerFactory20.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray30 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList31 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList31, undertowBuilderCustomizerArray30);
        undertowEmbeddedServletContainerFactory29.builderCustomizers = undertowBuilderCustomizerList31;
        undertowEmbeddedServletContainerFactory20.builderCustomizers = undertowBuilderCustomizerList31;
        undertowEmbeddedServletContainerFactory11.builderCustomizers = undertowBuilderCustomizerList31;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList31;
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 100;
        java.lang.Integer int39 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 8080);
        java.net.InetAddress inetAddress43 = null;
        undertowEmbeddedServletContainerFactory42.setAddress(inetAddress43);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory46.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int49 = undertowEmbeddedServletContainerFactory46.ioThreads;
        java.lang.Integer int50 = undertowEmbeddedServletContainerFactory46.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage51 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray52 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage51 };
        undertowEmbeddedServletContainerFactory46.addErrorPages(errorPageArray52);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray54 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer55 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray54);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray56 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray56);
        initializer55.initializers = servletContextInitializerArray56;
        undertowEmbeddedServletContainerFactory46.addInitializers(servletContextInitializerArray56);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray56);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray56);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList63 = undertowEmbeddedServletContainerFactory62.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray64 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer65 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray64);
        undertowEmbeddedServletContainerFactory62.addInitializers(servletContextInitializerArray64);
        initializer61.initializers = servletContextInitializerArray64;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray68 = initializer61.initializers;
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer69 = undertowEmbeddedServletContainerFactory42.getEmbeddedServletContainer(servletContextInitializerArray68);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray68);
        boolean boolean71 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.ClassLoader classLoader72 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray13);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray22);
        org.junit.Assert.assertNull(ssl24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0.0.0.0" + "'", str26, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet27);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(errorPageArray52);
        org.junit.Assert.assertNotNull(servletContextInitializerArray54);
        org.junit.Assert.assertNotNull(servletContextInitializerArray56);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList63);
        org.junit.Assert.assertNotNull(servletContextInitializerArray64);
        org.junit.Assert.assertNotNull(servletContextInitializerArray68);
        org.junit.Assert.assertNotNull(embeddedServletContainer69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(classLoader72);
    }

    @Test
    public void test03174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03174");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList12;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList12;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection16 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo17 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo17);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress21 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray22 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Initializers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection16);
        org.junit.Assert.assertNull(inetAddress21);
    }

    @Test
    public void test03175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03175");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        io.undertow.Undertow.Builder builder6 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager7 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer9 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder6, deploymentManager7, 0);
        org.springframework.core.io.ResourceLoader resourceLoader10 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader13);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer17 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer17 };
        undertowEmbeddedServletContainerFactory16.addBuilderCustomizers(undertowBuilderCustomizerArray18);
        org.springframework.boot.context.embedded.Ssl ssl20 = undertowEmbeddedServletContainerFactory16.getSsl();
        undertowEmbeddedServletContainerFactory16.setDirectBuffers((java.lang.Boolean) true);
        java.lang.String str23 = undertowEmbeddedServletContainerFactory16.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray25 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer24 };
        undertowEmbeddedServletContainerFactory16.addBuilderCustomizers(undertowBuilderCustomizerArray25);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray25);
        org.springframework.core.io.ResourceLoader resourceLoader28 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader28);
        boolean boolean30 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection31 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.lang.Class<?> wildcardClass32 = undertowEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer9);
        org.junit.Assert.assertNull(resourceLoader10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray18);
        org.junit.Assert.assertNull(ssl20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "0.0.0.0" + "'", str23, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test03176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03176");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) 10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection2 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) 'a');
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection2);
    }

    @Test
    public void test03177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03177");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.ioThreads = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = undertowEmbeddedServletContainerFactory6.getMimeMappings();
        io.undertow.Undertow.Builder builder9 = undertowEmbeddedServletContainerFactory6.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager10 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer12 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder9, deploymentManager10, (int) '4');
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray14 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray14);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray16 = initializer15.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray16);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray16);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = initializer18.initializers;
        io.undertow.servlet.api.DeploymentManager deploymentManager20 = undertowEmbeddedServletContainerFactory1.createDeploymentManager(servletContextInitializerArray19);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList21 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        java.lang.Boolean boolean22 = undertowEmbeddedServletContainerFactory1.directBuffers;
        java.io.File file23 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file23);
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer12);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection13);
        org.junit.Assert.assertNotNull(servletContextInitializerArray14);
        org.junit.Assert.assertNotNull(servletContextInitializerArray16);
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertNotNull(deploymentManager20);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList21);
        org.junit.Assert.assertNull(boolean22);
    }

    @Test
    public void test03178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03178");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.bufferSize = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer12 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer12 };
        undertowEmbeddedServletContainerFactory11.addBuilderCustomizers(undertowBuilderCustomizerArray13);
        undertowEmbeddedServletContainerFactory11.setSessionTimeout((int) (byte) 10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection17 = undertowEmbeddedServletContainerFactory11.getBuilderCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection18 = undertowEmbeddedServletContainerFactory11.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer21 };
        undertowEmbeddedServletContainerFactory20.addBuilderCustomizers(undertowBuilderCustomizerArray22);
        org.springframework.boot.context.embedded.Ssl ssl24 = undertowEmbeddedServletContainerFactory20.getSsl();
        java.lang.String str25 = undertowEmbeddedServletContainerFactory20.getContextPath();
        java.lang.String str26 = undertowEmbeddedServletContainerFactory20.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet27 = undertowEmbeddedServletContainerFactory20.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray30 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList31 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList31, undertowBuilderCustomizerArray30);
        undertowEmbeddedServletContainerFactory29.builderCustomizers = undertowBuilderCustomizerList31;
        undertowEmbeddedServletContainerFactory20.builderCustomizers = undertowBuilderCustomizerList31;
        undertowEmbeddedServletContainerFactory11.builderCustomizers = undertowBuilderCustomizerList31;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList31;
        undertowEmbeddedServletContainerFactory1.ioThreads = (-1);
        java.io.File file39 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.boot.context.embedded.Ssl ssl40 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer44 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray45 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer44 };
        undertowEmbeddedServletContainerFactory43.addBuilderCustomizers(undertowBuilderCustomizerArray45);
        org.springframework.boot.context.embedded.Ssl ssl47 = undertowEmbeddedServletContainerFactory43.getSsl();
        java.lang.String str48 = undertowEmbeddedServletContainerFactory43.getContextPath();
        java.lang.String str49 = undertowEmbeddedServletContainerFactory43.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet50 = undertowEmbeddedServletContainerFactory43.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray53 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList54 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList54, undertowBuilderCustomizerArray53);
        undertowEmbeddedServletContainerFactory52.builderCustomizers = undertowBuilderCustomizerList54;
        undertowEmbeddedServletContainerFactory43.builderCustomizers = undertowBuilderCustomizerList54;
        java.lang.String str58 = undertowEmbeddedServletContainerFactory43.getContextPath();
        java.net.InetAddress inetAddress59 = undertowEmbeddedServletContainerFactory43.getAddress();
        io.undertow.Undertow.Builder builder61 = undertowEmbeddedServletContainerFactory43.createBuilder((int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureSsl(ssl40, (int) (byte) 1, builder61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray13);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray22);
        org.junit.Assert.assertNull(ssl24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0.0.0.0" + "'", str26, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet27);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray45);
        org.junit.Assert.assertNull(ssl47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "0.0.0.0" + "'", str49, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet50);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNull(inetAddress59);
        org.junit.Assert.assertNotNull(builder61);
    }

    @Test
    public void test03179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03179");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo4 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo4);
        org.springframework.boot.context.embedded.Ssl ssl6 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setPort((int) (short) 10);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo9 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureMimeMappings(deploymentInfo9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(ssl6);
    }

    @Test
    public void test03180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03180");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer9 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer9 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection12 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.net.InetAddress inetAddress13 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress13);
        int int15 = undertowEmbeddedServletContainerFactory1.getPort();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection16 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection17 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.lang.String str18 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.Undertow.Builder builder20 = undertowEmbeddedServletContainerFactory1.createBuilder((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection16);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "0.0.0.0" + "'", str18, "0.0.0.0");
    }

    @Test
    public void test03181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03181");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList12;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList12;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory16.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory16.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray18);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray18);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        java.lang.Boolean boolean25 = undertowEmbeddedServletContainerFactory1.directBuffers;
        java.net.InetAddress inetAddress26 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress26);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray30 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList31 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList31, undertowBuilderCustomizerArray30);
        undertowEmbeddedServletContainerFactory29.builderCustomizers = undertowBuilderCustomizerList31;
        undertowEmbeddedServletContainerFactory29.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory29.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = undertowEmbeddedServletContainerFactory29.getMimeMappings();
        java.net.InetAddress inetAddress39 = null;
        undertowEmbeddedServletContainerFactory29.setAddress(inetAddress39);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer43 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray44 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer43 };
        undertowEmbeddedServletContainerFactory42.addBuilderCustomizers(undertowBuilderCustomizerArray44);
        org.springframework.boot.context.embedded.Ssl ssl46 = undertowEmbeddedServletContainerFactory42.getSsl();
        undertowEmbeddedServletContainerFactory42.setDirectBuffers((java.lang.Boolean) true);
        java.lang.Integer int49 = undertowEmbeddedServletContainerFactory42.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer52 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray53 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer52 };
        undertowEmbeddedServletContainerFactory51.addBuilderCustomizers(undertowBuilderCustomizerArray53);
        org.springframework.boot.context.embedded.Ssl ssl55 = undertowEmbeddedServletContainerFactory51.getSsl();
        java.lang.String str56 = undertowEmbeddedServletContainerFactory51.getContextPath();
        java.lang.String str57 = undertowEmbeddedServletContainerFactory51.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet58 = undertowEmbeddedServletContainerFactory51.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection59 = undertowEmbeddedServletContainerFactory51.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList60 = undertowEmbeddedServletContainerFactory51.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray61 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory51.addBuilderCustomizers(undertowBuilderCustomizerArray61);
        org.springframework.core.io.ResourceLoader resourceLoader63 = undertowEmbeddedServletContainerFactory51.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory65.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int68 = undertowEmbeddedServletContainerFactory65.ioThreads;
        java.lang.Integer int69 = undertowEmbeddedServletContainerFactory65.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage70 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray71 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage70 };
        undertowEmbeddedServletContainerFactory65.addErrorPages(errorPageArray71);
        undertowEmbeddedServletContainerFactory51.addErrorPages(errorPageArray71);
        undertowEmbeddedServletContainerFactory42.addErrorPages(errorPageArray71);
        undertowEmbeddedServletContainerFactory29.addErrorPages(errorPageArray71);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray71);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection77 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.concurrent.TimeUnit timeUnit79 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) ' ', timeUnit79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray18);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray44);
        org.junit.Assert.assertNull(ssl46);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray53);
        org.junit.Assert.assertNull(ssl55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "0.0.0.0" + "'", str57, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet58);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection59);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList60);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray61);
        org.junit.Assert.assertNull(resourceLoader63);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertNotNull(errorPageArray71);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection77);
    }

    @Test
    public void test03182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03182");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        io.undertow.Undertow.Builder builder4 = undertowEmbeddedServletContainerFactory1.createBuilder((int) '4');
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.ClassLoader classLoader8 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory10.getSsl();
        org.springframework.core.io.ResourceLoader resourceLoader12 = undertowEmbeddedServletContainerFactory10.resourceLoader;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo13 = null;
        undertowEmbeddedServletContainerFactory10.configureErrorPages(deploymentInfo13);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer17 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer17 };
        undertowEmbeddedServletContainerFactory16.addBuilderCustomizers(undertowBuilderCustomizerArray18);
        org.springframework.boot.context.embedded.Ssl ssl20 = undertowEmbeddedServletContainerFactory16.getSsl();
        java.lang.String str21 = undertowEmbeddedServletContainerFactory16.getContextPath();
        java.lang.String str22 = undertowEmbeddedServletContainerFactory16.getListenAddress();
        undertowEmbeddedServletContainerFactory16.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl25 = undertowEmbeddedServletContainerFactory16.getSsl();
        undertowEmbeddedServletContainerFactory16.setPort((int) (short) 0);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection28 = undertowEmbeddedServletContainerFactory16.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer31 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray32 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer31 };
        undertowEmbeddedServletContainerFactory30.addBuilderCustomizers(undertowBuilderCustomizerArray32);
        org.springframework.boot.context.embedded.Ssl ssl34 = undertowEmbeddedServletContainerFactory30.getSsl();
        java.lang.String str35 = undertowEmbeddedServletContainerFactory30.getContextPath();
        java.lang.String str36 = undertowEmbeddedServletContainerFactory30.getListenAddress();
        undertowEmbeddedServletContainerFactory30.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl39 = undertowEmbeddedServletContainerFactory30.getSsl();
        int int40 = undertowEmbeddedServletContainerFactory30.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray41 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory30.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray41);
        undertowEmbeddedServletContainerFactory16.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray41);
        undertowEmbeddedServletContainerFactory10.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray41);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray41);
        org.springframework.boot.context.embedded.Ssl ssl46 = undertowEmbeddedServletContainerFactory1.getSsl();
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray47 = undertowEmbeddedServletContainerFactory1.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertNull(resourceLoader12);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray18);
        org.junit.Assert.assertNull(ssl20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "0.0.0.0" + "'", str22, "0.0.0.0");
        org.junit.Assert.assertNull(ssl25);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray32);
        org.junit.Assert.assertNull(ssl34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "0.0.0.0" + "'", str36, "0.0.0.0");
        org.junit.Assert.assertNull(ssl39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray41);
        org.junit.Assert.assertNull(ssl46);
    }

    @Test
    public void test03183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03183");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings13);
        undertowEmbeddedServletContainerFactory1.setPort((int) '#');
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        org.springframework.boot.context.embedded.ErrorPage errorPage19 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage20 = undertowEmbeddedServletContainerFactory1.getUndertowErrorPage(errorPage19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(mimeMappings13);
    }

    @Test
    public void test03184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03184");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection8 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.springframework.core.io.ResourceLoader resourceLoader11 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        undertowEmbeddedServletContainerFactory1.setPort((int) '4');
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl16 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(resourceLoader11);
        org.junit.Assert.assertNull(ssl16);
    }

    @Test
    public void test03185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03185");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 1);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader10);
        undertowEmbeddedServletContainerFactory1.bufferSize = 8080;
        org.springframework.boot.context.embedded.Ssl ssl14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode15 = undertowEmbeddedServletContainerFactory1.getSslClientAuthMode(ssl14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(mimeMappings7);
    }

    @Test
    public void test03186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03186");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.net.InetAddress inetAddress7 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        java.lang.Boolean boolean11 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1);
        int int14 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        java.lang.Integer int15 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.Boolean boolean16 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 1;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(inetAddress7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1800 + "'", int14 == 1800);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test03187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03187");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 100);
        io.undertow.server.handlers.resource.ResourceManager resourceManager14 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        boolean boolean15 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.String str16 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) -1);
        java.lang.Integer int19 = undertowEmbeddedServletContainerFactory1.bufferSize;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(resourceManager14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "0.0.0.0" + "'", str16, "0.0.0.0");
        org.junit.Assert.assertNull(int19);
    }

    @Test
    public void test03188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03188");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        undertowEmbeddedServletContainerFactory12.setRegisterDefaultServlet(false);
        java.lang.Integer int16 = undertowEmbeddedServletContainerFactory12.workerThreads;
        io.undertow.Undertow.Builder builder18 = undertowEmbeddedServletContainerFactory12.createBuilder(100);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureSsl(ssl10, 35, builder18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection7);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test03189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03189");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.io.File file2 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file2);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 0;
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
    }

    @Test
    public void test03190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03190");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection8 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.springframework.core.io.ResourceLoader resourceLoader11 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        undertowEmbeddedServletContainerFactory1.setPort((int) '4');
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection14 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.lang.Class<?> wildcardClass15 = undertowBuilderCustomizerCollection14.getClass();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(resourceLoader11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test03191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03191");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory3.getMimeMappings();
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory3.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager7 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer9 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder6, deploymentManager7, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray14 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList15, undertowBuilderCustomizerArray14);
        undertowEmbeddedServletContainerFactory13.builderCustomizers = undertowBuilderCustomizerList15;
        boolean boolean18 = undertowEmbeddedServletContainerFactory13.isRegisterJspServlet();
        java.net.InetAddress inetAddress19 = undertowEmbeddedServletContainerFactory13.getAddress();
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer20 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray21 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer20 };
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray21);
        undertowEmbeddedServletContainerFactory13.addInitializers(servletContextInitializerArray21);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray21);
        org.springframework.boot.context.embedded.Ssl ssl25 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 8080);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray30 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList31 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList31, undertowBuilderCustomizerArray30);
        undertowEmbeddedServletContainerFactory29.builderCustomizers = undertowBuilderCustomizerList31;
        boolean boolean34 = undertowEmbeddedServletContainerFactory29.isRegisterDefaultServlet();
        boolean boolean35 = undertowEmbeddedServletContainerFactory29.isRegisterJspServlet();
        java.io.File file36 = null;
        undertowEmbeddedServletContainerFactory29.setDocumentRoot(file36);
        undertowEmbeddedServletContainerFactory29.setDirectBuffers((java.lang.Boolean) false);
        int int40 = undertowEmbeddedServletContainerFactory29.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer43 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray44 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer43 };
        undertowEmbeddedServletContainerFactory42.addBuilderCustomizers(undertowBuilderCustomizerArray44);
        org.springframework.boot.context.embedded.Ssl ssl46 = undertowEmbeddedServletContainerFactory42.getSsl();
        java.lang.String str47 = undertowEmbeddedServletContainerFactory42.getContextPath();
        java.lang.String str48 = undertowEmbeddedServletContainerFactory42.getListenAddress();
        undertowEmbeddedServletContainerFactory42.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl51 = undertowEmbeddedServletContainerFactory42.getSsl();
        undertowEmbeddedServletContainerFactory42.setPort((int) (short) 0);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList54 = undertowEmbeddedServletContainerFactory42.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer55 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer56 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray57 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer56 };
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray57);
        initializer55.initializers = servletContextInitializerArray57;
        undertowEmbeddedServletContainerFactory42.addInitializers(servletContextInitializerArray57);
        java.lang.ClassLoader classLoader61 = undertowEmbeddedServletContainerFactory42.getServletClassLoader();
        undertowEmbeddedServletContainerFactory42.ioThreads = 0;
        undertowEmbeddedServletContainerFactory42.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory42.bufferSize = 0;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet68 = undertowEmbeddedServletContainerFactory42.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory70.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int73 = undertowEmbeddedServletContainerFactory70.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory75 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory75.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int78 = undertowEmbeddedServletContainerFactory75.ioThreads;
        java.lang.Integer int79 = undertowEmbeddedServletContainerFactory75.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage80 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray81 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage80 };
        undertowEmbeddedServletContainerFactory75.addErrorPages(errorPageArray81);
        undertowEmbeddedServletContainerFactory70.addErrorPages(errorPageArray81);
        undertowEmbeddedServletContainerFactory42.addErrorPages(errorPageArray81);
        undertowEmbeddedServletContainerFactory29.addErrorPages(errorPageArray81);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray81);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(inetAddress19);
        org.junit.Assert.assertNotNull(servletContextInitializerArray21);
        org.junit.Assert.assertNull(ssl25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1800 + "'", int40 == 1800);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray44);
        org.junit.Assert.assertNull(ssl46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "0.0.0.0" + "'", str48, "0.0.0.0");
        org.junit.Assert.assertNull(ssl51);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList54);
        org.junit.Assert.assertNotNull(servletContextInitializerArray57);
        org.junit.Assert.assertNotNull(classLoader61);
        org.junit.Assert.assertNotNull(errorPageSet68);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNull(int79);
        org.junit.Assert.assertNotNull(errorPageArray81);
    }

    @Test
    public void test03192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03192");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList12;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList12;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory16.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory16.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray18);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        io.undertow.Undertow.Builder builder27 = undertowEmbeddedServletContainerFactory24.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer30 = undertowEmbeddedServletContainerFactory22.getUndertowEmbeddedServletContainer(builder27, deploymentManager28, (int) (byte) 0);
        io.undertow.servlet.api.DeploymentManager deploymentManager31 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer33 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder27, deploymentManager31, (int) ' ');
        org.springframework.boot.context.embedded.Ssl ssl34 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl34);
        boolean boolean36 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.net.InetAddress inetAddress37 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.ErrorPage errorPage38 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage39 = undertowEmbeddedServletContainerFactory1.getUndertowErrorPage(errorPage38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray18);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer30);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(inetAddress37);
    }

    @Test
    public void test03193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03193");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray2 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray2);
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray2);
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        undertowEmbeddedServletContainerFactory0.setPort((int) 'a');
        undertowEmbeddedServletContainerFactory0.bufferSize = 0;
        java.lang.Integer int11 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertNotNull(servletContextInitializerArray2);
        org.junit.Assert.assertNull(int11);
    }

    @Test
    public void test03194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03194");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.springframework.core.io.ResourceLoader resourceLoader9 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        boolean boolean10 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 1800;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Undertow does not support JSPs");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
        org.junit.Assert.assertNull(resourceLoader9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test03195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03195");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int4 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        io.undertow.server.handlers.resource.ResourceManager resourceManager8 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory1.workerThreads = 100;
        int int11 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory13.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory13.getSsl();
        java.lang.String str18 = undertowEmbeddedServletContainerFactory13.getContextPath();
        java.lang.String str19 = undertowEmbeddedServletContainerFactory13.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = undertowEmbeddedServletContainerFactory13.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray23 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList24 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList24, undertowBuilderCustomizerArray23);
        undertowEmbeddedServletContainerFactory22.builderCustomizers = undertowBuilderCustomizerList24;
        undertowEmbeddedServletContainerFactory13.builderCustomizers = undertowBuilderCustomizerList24;
        org.springframework.core.io.ResourceLoader resourceLoader28 = null;
        undertowEmbeddedServletContainerFactory13.resourceLoader = resourceLoader28;
        undertowEmbeddedServletContainerFactory13.directBuffers = true;
        java.net.InetAddress inetAddress32 = null;
        undertowEmbeddedServletContainerFactory13.setAddress(inetAddress32);
        undertowEmbeddedServletContainerFactory13.setBuffersPerRegion((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory13.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory13.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory41.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = undertowEmbeddedServletContainerFactory44.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray46 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory44.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray46);
        undertowEmbeddedServletContainerFactory41.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray46);
        undertowEmbeddedServletContainerFactory13.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray46);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray46);
        java.lang.Class<?> wildcardClass51 = undertowDeploymentInfoCustomizerArray46.getClass();
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(resourceManager8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "0.0.0.0" + "'", str19, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet20);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(mimeMappings45);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray46);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test03196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03196");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory3.getMimeMappings();
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory3.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager7 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer9 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder6, deploymentManager7, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory1.bufferSize = (-1);
        java.lang.Boolean boolean12 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo19 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureMimeMappings(deploymentInfo19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer9);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test03197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03197");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray7 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet8, errorPageArray7);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet8);
        java.net.InetAddress inetAddress11 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(inetAddress11);
        org.junit.Assert.assertNotNull(errorPageSet12);
    }

    @Test
    public void test03198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03198");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection9 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.workerThreads = 0;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList15 = undertowEmbeddedServletContainerFactory14.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray16 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray16);
        undertowEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray16);
        undertowEmbeddedServletContainerFactory14.setBuffersPerRegion((java.lang.Integer) 100);
        io.undertow.Undertow.Builder builder22 = undertowEmbeddedServletContainerFactory14.createBuilder(0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray25 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray25);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray28 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray28);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray30 = initializer29.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray30);
        initializer27.initializers = servletContextInitializerArray30;
        initializer26.initializers = servletContextInitializerArray30;
        undertowEmbeddedServletContainerFactory24.addInitializers(servletContextInitializerArray30);
        java.lang.Integer int35 = undertowEmbeddedServletContainerFactory24.buffersPerRegion;
        io.undertow.Undertow.Builder builder37 = undertowEmbeddedServletContainerFactory24.createBuilder((int) (short) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray39 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray39);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray41 = initializer40.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray41);
        initializer38.initializers = servletContextInitializerArray41;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray44 = initializer38.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray44);
        io.undertow.servlet.api.DeploymentManager deploymentManager46 = undertowEmbeddedServletContainerFactory24.createDeploymentManager(servletContextInitializerArray44);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer48 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder22, deploymentManager46, (int) ' ');
        org.springframework.boot.context.embedded.ErrorPage errorPage49 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage50 = undertowEmbeddedServletContainerFactory1.getUndertowErrorPage(errorPage49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection9);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList15);
        org.junit.Assert.assertNotNull(servletContextInitializerArray16);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(servletContextInitializerArray25);
        org.junit.Assert.assertNotNull(servletContextInitializerArray28);
        org.junit.Assert.assertNotNull(servletContextInitializerArray30);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(servletContextInitializerArray39);
        org.junit.Assert.assertNotNull(servletContextInitializerArray41);
        org.junit.Assert.assertNotNull(servletContextInitializerArray44);
        org.junit.Assert.assertNotNull(deploymentManager46);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer48);
    }

    @Test
    public void test03199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03199");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 1);
        undertowEmbeddedServletContainerFactory2.setContextPath("");
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory2.ioThreads;
        undertowEmbeddedServletContainerFactory2.setContextPath("");
        java.lang.Boolean boolean8 = undertowEmbeddedServletContainerFactory2.directBuffers;
        undertowEmbeddedServletContainerFactory2.setPort((int) (byte) -1);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(boolean8);
    }

    @Test
    public void test03200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03200");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.workerThreads = 8080;
        java.io.File file9 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        undertowEmbeddedServletContainerFactory1.ioThreads = 0;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test03201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03201");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setPort((int) (short) 0);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.workerThreads = 100;
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.lang.Integer int20 = undertowEmbeddedServletContainerFactory1.bufferSize;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection13);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertNull(int20);
    }

    @Test
    public void test03202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03202");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory1.getSsl();
        int int11 = undertowEmbeddedServletContainerFactory1.getPort();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList17, undertowBuilderCustomizerArray16);
        undertowEmbeddedServletContainerFactory15.builderCustomizers = undertowBuilderCustomizerList17;
        boolean boolean20 = undertowEmbeddedServletContainerFactory15.isRegisterJspServlet();
        java.net.InetAddress inetAddress21 = undertowEmbeddedServletContainerFactory15.getAddress();
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer22 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer22 };
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray23);
        undertowEmbeddedServletContainerFactory15.addInitializers(servletContextInitializerArray23);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray23);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection27 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.workerThreads = 8080;
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = (-1);
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.Undertow.Builder builder33 = undertowEmbeddedServletContainerFactory1.createBuilder(0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(inetAddress21);
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection27);
    }

    @Test
    public void test03203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03203");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList5 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList5, undertowDeploymentInfoCustomizerArray4);
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList5;
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory1.bufferSize;
        java.lang.String str9 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = null;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList10;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) (-1));
        boolean boolean14 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer17 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer17 };
        undertowEmbeddedServletContainerFactory16.addBuilderCustomizers(undertowBuilderCustomizerArray18);
        org.springframework.boot.context.embedded.Ssl ssl20 = undertowEmbeddedServletContainerFactory16.getSsl();
        java.lang.String str21 = undertowEmbeddedServletContainerFactory16.getContextPath();
        undertowEmbeddedServletContainerFactory16.setJspServletClassName("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer26 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray27 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer26 };
        undertowEmbeddedServletContainerFactory25.addBuilderCustomizers(undertowBuilderCustomizerArray27);
        undertowEmbeddedServletContainerFactory25.setSessionTimeout((int) (byte) 10);
        undertowEmbeddedServletContainerFactory25.setIoThreads((java.lang.Integer) 0);
        boolean boolean33 = undertowEmbeddedServletContainerFactory25.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory25.setJspServletClassName("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList37 = undertowEmbeddedServletContainerFactory36.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory25.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList37;
        undertowEmbeddedServletContainerFactory16.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList37;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList37;
        java.net.InetAddress inetAddress41 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress41);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "0.0.0.0" + "'", str9, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray18);
        org.junit.Assert.assertNull(ssl20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray27);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList37);
    }

    @Test
    public void test03204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03204");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        java.lang.Boolean boolean12 = undertowEmbeddedServletContainerFactory1.directBuffers;
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.Ssl ssl14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode15 = undertowEmbeddedServletContainerFactory1.getSslClientAuthMode(ssl14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test03205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03205");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList5 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList5, undertowDeploymentInfoCustomizerArray4);
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList5;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray14 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList15, undertowBuilderCustomizerArray14);
        undertowEmbeddedServletContainerFactory13.builderCustomizers = undertowBuilderCustomizerList15;
        java.lang.String str18 = undertowEmbeddedServletContainerFactory13.getListenAddress();
        undertowEmbeddedServletContainerFactory13.ioThreads = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList21 = undertowEmbeddedServletContainerFactory13.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList21;
        io.undertow.server.handlers.resource.ResourceManager resourceManager23 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        boolean boolean24 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.lang.Integer int25 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "0.0.0.0" + "'", str18, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList21);
        org.junit.Assert.assertNotNull(resourceManager23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(int25);
    }

    @Test
    public void test03206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03206");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory1.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer8 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray9 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer8 };
        undertowEmbeddedServletContainerFactory7.addBuilderCustomizers(undertowBuilderCustomizerArray9);
        org.springframework.boot.context.embedded.Ssl ssl11 = undertowEmbeddedServletContainerFactory7.getSsl();
        java.lang.String str12 = undertowEmbeddedServletContainerFactory7.getContextPath();
        java.lang.String str13 = undertowEmbeddedServletContainerFactory7.getListenAddress();
        undertowEmbeddedServletContainerFactory7.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl16 = undertowEmbeddedServletContainerFactory7.getSsl();
        int int17 = undertowEmbeddedServletContainerFactory7.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory7.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory20.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory20.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray22);
        undertowEmbeddedServletContainerFactory7.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray22);
        undertowEmbeddedServletContainerFactory7.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList28 = undertowEmbeddedServletContainerFactory27.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory27.ioThreads = 100;
        org.springframework.core.io.ResourceLoader resourceLoader31 = null;
        undertowEmbeddedServletContainerFactory27.setResourceLoader(resourceLoader31);
        undertowEmbeddedServletContainerFactory27.directBuffers = false;
        java.lang.Integer int35 = undertowEmbeddedServletContainerFactory27.buffersPerRegion;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        boolean boolean38 = undertowEmbeddedServletContainerFactory37.isRegisterJspServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = undertowEmbeddedServletContainerFactory37.getMimeMappings();
        undertowEmbeddedServletContainerFactory27.setMimeMappings(mimeMappings39);
        undertowEmbeddedServletContainerFactory7.setMimeMappings(mimeMappings39);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings39);
        org.springframework.boot.context.embedded.Ssl ssl43 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet44 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        int int45 = undertowEmbeddedServletContainerFactory1.getPort();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo46 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo46);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray9);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0.0.0.0" + "'", str13, "0.0.0.0");
        org.junit.Assert.assertNull(ssl16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray18);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray22);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList28);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNull(ssl43);
        org.junit.Assert.assertNotNull(errorPageSet44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }

    @Test
    public void test03207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03207");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        java.lang.String str1 = jarResourcemanager0.jarPath;
        jarResourcemanager0.jarPath = "";
        java.lang.String str4 = jarResourcemanager0.jarPath;
        java.lang.String str5 = jarResourcemanager0.jarPath;
        java.lang.String str6 = jarResourcemanager0.jarPath;
        jarResourcemanager0.close();
        jarResourcemanager0.close();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener9 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager0.registerResourceChangeListener(resourceChangeListener9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test03208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03208");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList9 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        int int10 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        java.lang.String str11 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory13.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        undertowEmbeddedServletContainerFactory13.setSessionTimeout((int) (byte) 10);
        java.lang.Integer int19 = undertowEmbeddedServletContainerFactory13.ioThreads;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray20 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray20);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray22 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray22);
        initializer21.initializers = servletContextInitializerArray22;
        undertowEmbeddedServletContainerFactory13.addInitializers(servletContextInitializerArray22);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray22);
        org.springframework.core.io.ResourceLoader resourceLoader27 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet28 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(servletContextInitializerArray20);
        org.junit.Assert.assertNotNull(servletContextInitializerArray22);
        org.junit.Assert.assertNull(resourceLoader27);
        org.junit.Assert.assertNotNull(errorPageSet28);
    }

    @Test
    public void test03209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03209");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection9 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray11);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo14 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo14);
        org.springframework.core.io.ResourceLoader resourceLoader16 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection13);
        org.junit.Assert.assertNull(resourceLoader16);
        org.junit.Assert.assertNotNull(errorPageSet17);
    }

    @Test
    public void test03210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03210");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo13 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo13);
        java.lang.Boolean boolean15 = undertowEmbeddedServletContainerFactory1.directBuffers;
        java.lang.ClassLoader classLoader16 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.bufferSize = 8080;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection19 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.Ssl ssl22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer26 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray27 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer26 };
        undertowEmbeddedServletContainerFactory25.addBuilderCustomizers(undertowBuilderCustomizerArray27);
        org.springframework.boot.context.embedded.Ssl ssl29 = undertowEmbeddedServletContainerFactory25.getSsl();
        java.lang.String str30 = undertowEmbeddedServletContainerFactory25.getContextPath();
        java.lang.String str31 = undertowEmbeddedServletContainerFactory25.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet32 = undertowEmbeddedServletContainerFactory25.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader33 = undertowEmbeddedServletContainerFactory25.resourceLoader;
        int int34 = undertowEmbeddedServletContainerFactory25.getSessionTimeout();
        org.springframework.core.io.ResourceLoader resourceLoader35 = null;
        undertowEmbeddedServletContainerFactory25.setResourceLoader(resourceLoader35);
        undertowEmbeddedServletContainerFactory25.workerThreads = 1;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings41 = undertowEmbeddedServletContainerFactory40.getMimeMappings();
        io.undertow.Undertow.Builder builder43 = undertowEmbeddedServletContainerFactory40.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager44 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer46 = undertowEmbeddedServletContainerFactory25.getUndertowEmbeddedServletContainer(builder43, deploymentManager44, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureSsl(ssl22, (int) (byte) 0, builder43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection19);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray27);
        org.junit.Assert.assertNull(ssl29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "0.0.0.0" + "'", str31, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet32);
        org.junit.Assert.assertNull(resourceLoader33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1800 + "'", int34 == 1800);
        org.junit.Assert.assertNotNull(mimeMappings41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer46);
    }

    @Test
    public void test03211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03211");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int4 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray7 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(int4);
    }

    @Test
    public void test03212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03212");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int4 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer11 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray12 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer11 };
        undertowEmbeddedServletContainerFactory10.addBuilderCustomizers(undertowBuilderCustomizerArray12);
        org.springframework.boot.context.embedded.Ssl ssl14 = undertowEmbeddedServletContainerFactory10.getSsl();
        undertowEmbeddedServletContainerFactory10.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory10.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress19 = undertowEmbeddedServletContainerFactory10.getAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo20 = null;
        undertowEmbeddedServletContainerFactory10.configureErrorPages(deploymentInfo20);
        undertowEmbeddedServletContainerFactory10.setIoThreads((java.lang.Integer) 1);
        boolean boolean24 = undertowEmbeddedServletContainerFactory10.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray28 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer27 };
        undertowEmbeddedServletContainerFactory26.addBuilderCustomizers(undertowBuilderCustomizerArray28);
        org.springframework.boot.context.embedded.Ssl ssl30 = undertowEmbeddedServletContainerFactory26.getSsl();
        java.lang.String str31 = undertowEmbeddedServletContainerFactory26.getContextPath();
        java.lang.String str32 = undertowEmbeddedServletContainerFactory26.getListenAddress();
        undertowEmbeddedServletContainerFactory26.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl35 = undertowEmbeddedServletContainerFactory26.getSsl();
        undertowEmbeddedServletContainerFactory26.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer40 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray41 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer40 };
        undertowEmbeddedServletContainerFactory39.addBuilderCustomizers(undertowBuilderCustomizerArray41);
        org.springframework.boot.context.embedded.Ssl ssl43 = undertowEmbeddedServletContainerFactory39.getSsl();
        undertowEmbeddedServletContainerFactory39.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory39.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer50 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray51 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer50 };
        undertowEmbeddedServletContainerFactory49.addBuilderCustomizers(undertowBuilderCustomizerArray51);
        undertowEmbeddedServletContainerFactory39.addBuilderCustomizers(undertowBuilderCustomizerArray51);
        undertowEmbeddedServletContainerFactory26.addBuilderCustomizers(undertowBuilderCustomizerArray51);
        undertowEmbeddedServletContainerFactory10.addBuilderCustomizers(undertowBuilderCustomizerArray51);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray51);
        java.lang.Integer int57 = undertowEmbeddedServletContainerFactory1.ioThreads;
        io.undertow.server.handlers.resource.ResourceManager resourceManager58 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection59 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 1;
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray12);
        org.junit.Assert.assertNull(ssl14);
        org.junit.Assert.assertNull(inetAddress19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray28);
        org.junit.Assert.assertNull(ssl30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "0.0.0.0" + "'", str32, "0.0.0.0");
        org.junit.Assert.assertNull(ssl35);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray41);
        org.junit.Assert.assertNull(ssl43);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray51);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(resourceManager58);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection59);
    }

    @Test
    public void test03213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03213");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory1.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer9 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer9 };
        undertowEmbeddedServletContainerFactory8.addBuilderCustomizers(undertowBuilderCustomizerArray10);
        org.springframework.boot.context.embedded.Ssl ssl12 = undertowEmbeddedServletContainerFactory8.getSsl();
        java.lang.String str13 = undertowEmbeddedServletContainerFactory8.getContextPath();
        java.lang.String str14 = undertowEmbeddedServletContainerFactory8.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet15 = undertowEmbeddedServletContainerFactory8.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection16 = undertowEmbeddedServletContainerFactory8.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = undertowEmbeddedServletContainerFactory8.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory8.addBuilderCustomizers(undertowBuilderCustomizerArray18);
        org.springframework.core.io.ResourceLoader resourceLoader20 = undertowEmbeddedServletContainerFactory8.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory22.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int25 = undertowEmbeddedServletContainerFactory22.ioThreads;
        java.lang.Integer int26 = undertowEmbeddedServletContainerFactory22.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage27 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray28 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage27 };
        undertowEmbeddedServletContainerFactory22.addErrorPages(errorPageArray28);
        undertowEmbeddedServletContainerFactory8.addErrorPages(errorPageArray28);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray31 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray31);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray33 = initializer32.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray33);
        undertowEmbeddedServletContainerFactory8.addInitializers(servletContextInitializerArray33);
        io.undertow.servlet.api.DeploymentManager deploymentManager36 = undertowEmbeddedServletContainerFactory1.createDeploymentManager(servletContextInitializerArray33);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection37 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray10);
        org.junit.Assert.assertNull(ssl12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0.0.0.0" + "'", str14, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet15);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection16);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray18);
        org.junit.Assert.assertNull(resourceLoader20);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(errorPageArray28);
        org.junit.Assert.assertNotNull(servletContextInitializerArray31);
        org.junit.Assert.assertNotNull(servletContextInitializerArray33);
        org.junit.Assert.assertNotNull(deploymentManager36);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection37);
    }

    @Test
    public void test03214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03214");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory1.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer9 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer9 };
        undertowEmbeddedServletContainerFactory8.addBuilderCustomizers(undertowBuilderCustomizerArray10);
        org.springframework.boot.context.embedded.Ssl ssl12 = undertowEmbeddedServletContainerFactory8.getSsl();
        java.lang.String str13 = undertowEmbeddedServletContainerFactory8.getContextPath();
        java.lang.String str14 = undertowEmbeddedServletContainerFactory8.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet15 = undertowEmbeddedServletContainerFactory8.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection16 = undertowEmbeddedServletContainerFactory8.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = undertowEmbeddedServletContainerFactory8.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory8.addBuilderCustomizers(undertowBuilderCustomizerArray18);
        org.springframework.core.io.ResourceLoader resourceLoader20 = undertowEmbeddedServletContainerFactory8.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory22.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int25 = undertowEmbeddedServletContainerFactory22.ioThreads;
        java.lang.Integer int26 = undertowEmbeddedServletContainerFactory22.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage27 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray28 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage27 };
        undertowEmbeddedServletContainerFactory22.addErrorPages(errorPageArray28);
        undertowEmbeddedServletContainerFactory8.addErrorPages(errorPageArray28);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray31 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray31);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray33 = initializer32.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray33);
        undertowEmbeddedServletContainerFactory8.addInitializers(servletContextInitializerArray33);
        io.undertow.servlet.api.DeploymentManager deploymentManager36 = undertowEmbeddedServletContainerFactory1.createDeploymentManager(servletContextInitializerArray33);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection37 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        undertowEmbeddedServletContainerFactory1.ioThreads = 1800;
        org.springframework.boot.context.embedded.ErrorPage errorPage42 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage43 = undertowEmbeddedServletContainerFactory1.getUndertowErrorPage(errorPage42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray10);
        org.junit.Assert.assertNull(ssl12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0.0.0.0" + "'", str14, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet15);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection16);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray18);
        org.junit.Assert.assertNull(resourceLoader20);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(errorPageArray28);
        org.junit.Assert.assertNotNull(servletContextInitializerArray31);
        org.junit.Assert.assertNotNull(servletContextInitializerArray33);
        org.junit.Assert.assertNotNull(deploymentManager36);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection37);
    }

    @Test
    public void test03215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03215");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.close();
        boolean boolean3 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "0.0.0.0";
        java.lang.String str6 = jarResourcemanager1.jarPath;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0.0.0.0" + "'", str6, "0.0.0.0");
    }

    @Test
    public void test03216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03216");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo4 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo4);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(1800);
        java.io.File file8 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet9 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo12 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureMimeMappings(deploymentInfo12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(errorPageSet9);
    }

    @Test
    public void test03217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03217");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList12;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList12;
        undertowEmbeddedServletContainerFactory1.workerThreads = 100;
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.Integer int20 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertNull(int20);
    }

    @Test
    public void test03218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03218");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        io.undertow.Undertow.Builder builder6 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager7 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer9 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder6, deploymentManager7, 0);
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.ioThreads;
        int int11 = undertowEmbeddedServletContainerFactory1.getPort();
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer20 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer20 };
        undertowEmbeddedServletContainerFactory19.addBuilderCustomizers(undertowBuilderCustomizerArray21);
        org.springframework.boot.context.embedded.Ssl ssl23 = undertowEmbeddedServletContainerFactory19.getSsl();
        java.lang.String str24 = undertowEmbeddedServletContainerFactory19.getContextPath();
        java.lang.String str25 = undertowEmbeddedServletContainerFactory19.getListenAddress();
        java.lang.String str26 = undertowEmbeddedServletContainerFactory19.getListenAddress();
        undertowEmbeddedServletContainerFactory19.directBuffers = false;
        undertowEmbeddedServletContainerFactory19.setSessionTimeout(1);
        org.springframework.core.io.ResourceLoader resourceLoader31 = null;
        undertowEmbeddedServletContainerFactory19.resourceLoader = resourceLoader31;
        boolean boolean33 = undertowEmbeddedServletContainerFactory19.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings35 = undertowEmbeddedServletContainerFactory34.getMimeMappings();
        undertowEmbeddedServletContainerFactory34.setRegisterJspServlet(false);
        int int38 = undertowEmbeddedServletContainerFactory34.getPort();
        undertowEmbeddedServletContainerFactory34.setSessionTimeout((int) (byte) 1);
        undertowEmbeddedServletContainerFactory34.workerThreads = 8080;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = undertowEmbeddedServletContainerFactory44.getMimeMappings();
        undertowEmbeddedServletContainerFactory44.bufferSize = 10;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray50 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList51 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList51, undertowBuilderCustomizerArray50);
        undertowEmbeddedServletContainerFactory49.builderCustomizers = undertowBuilderCustomizerList51;
        boolean boolean54 = undertowEmbeddedServletContainerFactory49.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings56 = undertowEmbeddedServletContainerFactory55.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray57 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory55.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray57);
        undertowEmbeddedServletContainerFactory49.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray57);
        undertowEmbeddedServletContainerFactory44.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray57);
        undertowEmbeddedServletContainerFactory34.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray57);
        undertowEmbeddedServletContainerFactory19.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray57);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray57);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList14);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray21);
        org.junit.Assert.assertNull(ssl23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "0.0.0.0" + "'", str25, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0.0.0.0" + "'", str26, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(mimeMappings35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 8080 + "'", int38 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings45);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(mimeMappings56);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray57);
    }

    @Test
    public void test03219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03219");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        java.lang.String str1 = jarResourcemanager0.jarPath;
        boolean boolean2 = jarResourcemanager0.isResourceChangeListenerSupported();
        java.lang.String str3 = jarResourcemanager0.jarPath;
        jarResourcemanager0.jarPath = "hi!";
        jarResourcemanager0.jarPath = "";
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test03220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03220");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer9 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer9 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray10);
        java.net.InetAddress inetAddress12 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress12);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection14 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file15);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray20 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer19 };
        undertowEmbeddedServletContainerFactory18.addBuilderCustomizers(undertowBuilderCustomizerArray20);
        undertowEmbeddedServletContainerFactory18.setSessionTimeout((int) (byte) 10);
        undertowEmbeddedServletContainerFactory18.setIoThreads((java.lang.Integer) 0);
        org.springframework.core.io.ResourceLoader resourceLoader26 = null;
        undertowEmbeddedServletContainerFactory18.resourceLoader = resourceLoader26;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray30 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList31 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList31, undertowBuilderCustomizerArray30);
        undertowEmbeddedServletContainerFactory29.builderCustomizers = undertowBuilderCustomizerList31;
        undertowEmbeddedServletContainerFactory29.workerThreads = (-1);
        int int36 = undertowEmbeddedServletContainerFactory29.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer39 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray40 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer39 };
        undertowEmbeddedServletContainerFactory38.addBuilderCustomizers(undertowBuilderCustomizerArray40);
        org.springframework.boot.context.embedded.Ssl ssl42 = undertowEmbeddedServletContainerFactory38.getSsl();
        java.lang.String str43 = undertowEmbeddedServletContainerFactory38.getContextPath();
        java.lang.String str44 = undertowEmbeddedServletContainerFactory38.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet45 = undertowEmbeddedServletContainerFactory38.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray48 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList49 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList49, undertowBuilderCustomizerArray48);
        undertowEmbeddedServletContainerFactory47.builderCustomizers = undertowBuilderCustomizerList49;
        undertowEmbeddedServletContainerFactory38.builderCustomizers = undertowBuilderCustomizerList49;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings54 = undertowEmbeddedServletContainerFactory53.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray55 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory53.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray55);
        undertowEmbeddedServletContainerFactory38.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray55);
        undertowEmbeddedServletContainerFactory29.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray55);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray59 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray59);
        undertowEmbeddedServletContainerFactory29.addInitializers(servletContextInitializerArray59);
        undertowEmbeddedServletContainerFactory18.addInitializers(servletContextInitializerArray59);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray59);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer64 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray59);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray65 = initializer64.initializers;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer66 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection14);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray20);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray40);
        org.junit.Assert.assertNull(ssl42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "0.0.0.0" + "'", str44, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet45);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(mimeMappings54);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray55);
        org.junit.Assert.assertNotNull(servletContextInitializerArray59);
        org.junit.Assert.assertNotNull(servletContextInitializerArray65);
    }

    @Test
    public void test03221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03221");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer11 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray12 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer11 };
        undertowEmbeddedServletContainerFactory10.addBuilderCustomizers(undertowBuilderCustomizerArray12);
        org.springframework.boot.context.embedded.Ssl ssl14 = undertowEmbeddedServletContainerFactory10.getSsl();
        undertowEmbeddedServletContainerFactory10.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory10.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer21 };
        undertowEmbeddedServletContainerFactory20.addBuilderCustomizers(undertowBuilderCustomizerArray22);
        org.springframework.boot.context.embedded.Ssl ssl24 = undertowEmbeddedServletContainerFactory20.getSsl();
        java.lang.String str25 = undertowEmbeddedServletContainerFactory20.getContextPath();
        java.lang.String str26 = undertowEmbeddedServletContainerFactory20.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet27 = undertowEmbeddedServletContainerFactory20.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection28 = undertowEmbeddedServletContainerFactory20.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList29 = undertowEmbeddedServletContainerFactory20.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray30 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory20.addBuilderCustomizers(undertowBuilderCustomizerArray30);
        undertowEmbeddedServletContainerFactory10.addBuilderCustomizers(undertowBuilderCustomizerArray30);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray30);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        boolean boolean36 = undertowEmbeddedServletContainerFactory35.isRegisterJspServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = undertowEmbeddedServletContainerFactory35.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer40 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray41 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer40 };
        undertowEmbeddedServletContainerFactory39.addBuilderCustomizers(undertowBuilderCustomizerArray41);
        org.springframework.boot.context.embedded.Ssl ssl43 = undertowEmbeddedServletContainerFactory39.getSsl();
        undertowEmbeddedServletContainerFactory39.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory39.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer50 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray51 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer50 };
        undertowEmbeddedServletContainerFactory49.addBuilderCustomizers(undertowBuilderCustomizerArray51);
        undertowEmbeddedServletContainerFactory39.addBuilderCustomizers(undertowBuilderCustomizerArray51);
        undertowEmbeddedServletContainerFactory35.addBuilderCustomizers(undertowBuilderCustomizerArray51);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray51);
        java.net.InetAddress inetAddress56 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress56);
        org.springframework.boot.context.embedded.Ssl ssl58 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray12);
        org.junit.Assert.assertNull(ssl14);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray22);
        org.junit.Assert.assertNull(ssl24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0.0.0.0" + "'", str26, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet27);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList29);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray30);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray41);
        org.junit.Assert.assertNull(ssl43);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray51);
        org.junit.Assert.assertNull(ssl58);
    }

    @Test
    public void test03222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03222");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer9 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer9 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection12 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.net.InetAddress inetAddress13 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress13);
        int int15 = undertowEmbeddedServletContainerFactory1.getPort();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection16 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection17 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 35);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection16);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection17);
    }

    @Test
    public void test03223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03223");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress10 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection12 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.lang.String str13 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer16 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer16 };
        undertowEmbeddedServletContainerFactory15.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory15.getSsl();
        java.lang.String str20 = undertowEmbeddedServletContainerFactory15.getContextPath();
        java.lang.String str21 = undertowEmbeddedServletContainerFactory15.getListenAddress();
        undertowEmbeddedServletContainerFactory15.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl24 = undertowEmbeddedServletContainerFactory15.getSsl();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = undertowEmbeddedServletContainerFactory15.getMimeMappings();
        undertowEmbeddedServletContainerFactory15.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory15.setPort((int) (byte) 10);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet30 = undertowEmbeddedServletContainerFactory15.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet30);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(inetAddress10);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0.0.0.0" + "'", str13, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "0.0.0.0" + "'", str21, "0.0.0.0");
        org.junit.Assert.assertNull(ssl24);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(errorPageSet30);
    }

    @Test
    public void test03224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03224");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader6;
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList12;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = undertowEmbeddedServletContainerFactory10.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader16 = null;
        undertowEmbeddedServletContainerFactory10.resourceLoader = resourceLoader16;
        java.lang.Boolean boolean18 = undertowEmbeddedServletContainerFactory10.directBuffers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList19 = undertowEmbeddedServletContainerFactory10.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList19;
        boolean boolean21 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.String str22 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.Integer int23 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(int23);
    }

    @Test
    public void test03225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03225");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress10 = undertowEmbeddedServletContainerFactory1.getAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo11 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo11);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        org.springframework.core.io.ResourceLoader resourceLoader15 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.lang.Boolean boolean16 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray18 = undertowEmbeddedServletContainerFactory1.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(inetAddress10);
        org.junit.Assert.assertNull(resourceLoader15);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + true + "'", boolean16, true);
        org.junit.Assert.assertNotNull(mimeMappings17);
    }

    @Test
    public void test03226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03226");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(0);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection4 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        java.lang.String str5 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo6 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.configureMimeMappings(deploymentInfo6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "0.0.0.0" + "'", str5, "0.0.0.0");
    }

    @Test
    public void test03227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03227");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        io.undertow.Undertow.Builder builder6 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager7 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer9 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder6, deploymentManager7, 0);
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.ioThreads;
        int int11 = undertowEmbeddedServletContainerFactory1.getPort();
        java.lang.String str12 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.lang.Class<?> wildcardClass13 = undertowEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test03228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03228");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        java.lang.String str1 = jarResourcemanager0.jarPath;
        boolean boolean2 = jarResourcemanager0.isResourceChangeListenerSupported();
        boolean boolean3 = jarResourcemanager0.isResourceChangeListenerSupported();
        jarResourcemanager0.close();
        boolean boolean5 = jarResourcemanager0.isResourceChangeListenerSupported();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener6 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager0.removeResourceChangeListener(resourceChangeListener6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test03229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03229");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection6 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 10);
        undertowEmbeddedServletContainerFactory1.workerThreads = (-1);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection6);
        org.junit.Assert.assertNotNull(errorPageSet11);
    }

    @Test
    public void test03230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03230");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.close();
        jarResourcemanager1.jarPath = "";
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.jarPath = "0.0.0.0";
        java.lang.String str11 = jarResourcemanager1.jarPath;
        java.lang.String str12 = jarResourcemanager1.jarPath;
        jarResourcemanager1.close();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "0.0.0.0" + "'", str11, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
    }

    @Test
    public void test03231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03231");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings13);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) (-1));
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.net.InetAddress inetAddress18 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress18);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 100);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo24 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureMimeMappings(deploymentInfo24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNull(ssl17);
    }

    @Test
    public void test03232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03232");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection9 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray12 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList13, undertowBuilderCustomizerArray12);
        undertowEmbeddedServletContainerFactory11.builderCustomizers = undertowBuilderCustomizerList13;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = undertowEmbeddedServletContainerFactory11.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        undertowEmbeddedServletContainerFactory11.resourceLoader = resourceLoader17;
        java.lang.Boolean boolean19 = undertowEmbeddedServletContainerFactory11.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory21.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory21.setRegisterJspServlet(false);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList26 = undertowEmbeddedServletContainerFactory21.deploymentInfoCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList27 = undertowEmbeddedServletContainerFactory21.builderCustomizers;
        undertowEmbeddedServletContainerFactory11.builderCustomizers = undertowBuilderCustomizerList27;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList27;
        undertowEmbeddedServletContainerFactory1.ioThreads = 0;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList26);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList27);
    }

    @Test
    public void test03233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03233");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader4;
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file6);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        java.lang.String str10 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.springframework.core.io.ResourceLoader resourceLoader11 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader11);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "0.0.0.0" + "'", str10, "0.0.0.0");
    }

    @Test
    public void test03234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03234");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        io.undertow.Undertow.Builder builder16 = undertowEmbeddedServletContainerFactory13.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager17 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer19 = undertowEmbeddedServletContainerFactory11.getUndertowEmbeddedServletContainer(builder16, deploymentManager17, (int) (byte) 0);
        io.undertow.servlet.api.DeploymentManager deploymentManager20 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer22 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder16, deploymentManager20, (int) (short) 1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList23 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 10);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 0);
        org.springframework.core.io.ResourceLoader resourceLoader28 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader28;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer19);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer22);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList23);
    }

    @Test
    public void test03235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03235");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray2 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray5 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray5);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray7 = initializer6.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray7);
        initializer4.initializers = servletContextInitializerArray7;
        initializer3.initializers = servletContextInitializerArray7;
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray7);
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        org.springframework.boot.context.embedded.Ssl ssl15 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str16 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray20 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer19 };
        undertowEmbeddedServletContainerFactory18.addBuilderCustomizers(undertowBuilderCustomizerArray20);
        org.springframework.boot.context.embedded.Ssl ssl22 = undertowEmbeddedServletContainerFactory18.getSsl();
        undertowEmbeddedServletContainerFactory18.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory18.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer29 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray30 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer29 };
        undertowEmbeddedServletContainerFactory28.addBuilderCustomizers(undertowBuilderCustomizerArray30);
        org.springframework.boot.context.embedded.Ssl ssl32 = undertowEmbeddedServletContainerFactory28.getSsl();
        java.lang.String str33 = undertowEmbeddedServletContainerFactory28.getContextPath();
        java.lang.String str34 = undertowEmbeddedServletContainerFactory28.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet35 = undertowEmbeddedServletContainerFactory28.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection36 = undertowEmbeddedServletContainerFactory28.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList37 = undertowEmbeddedServletContainerFactory28.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray38 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory28.addBuilderCustomizers(undertowBuilderCustomizerArray38);
        undertowEmbeddedServletContainerFactory18.addBuilderCustomizers(undertowBuilderCustomizerArray38);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer43 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray44 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer43 };
        undertowEmbeddedServletContainerFactory42.addBuilderCustomizers(undertowBuilderCustomizerArray44);
        undertowEmbeddedServletContainerFactory42.setSessionTimeout((int) (byte) 10);
        java.lang.Integer int48 = undertowEmbeddedServletContainerFactory42.ioThreads;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray49 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray49);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray51 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray51);
        initializer50.initializers = servletContextInitializerArray51;
        undertowEmbeddedServletContainerFactory42.addInitializers(servletContextInitializerArray51);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer55 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray51);
        io.undertow.servlet.api.DeploymentManager deploymentManager56 = undertowEmbeddedServletContainerFactory18.createDeploymentManager(servletContextInitializerArray51);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet57 = undertowEmbeddedServletContainerFactory18.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet57);
        java.lang.Boolean boolean59 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.junit.Assert.assertNotNull(servletContextInitializerArray2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray5);
        org.junit.Assert.assertNotNull(servletContextInitializerArray7);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(ssl15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "0.0.0.0" + "'", str16, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray20);
        org.junit.Assert.assertNull(ssl22);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray30);
        org.junit.Assert.assertNull(ssl32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "0.0.0.0" + "'", str34, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet35);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection36);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList37);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray38);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray44);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(servletContextInitializerArray49);
        org.junit.Assert.assertNotNull(servletContextInitializerArray51);
        org.junit.Assert.assertNotNull(deploymentManager56);
        org.junit.Assert.assertNotNull(errorPageSet57);
        org.junit.Assert.assertEquals("'" + boolean59 + "' != '" + true + "'", boolean59, true);
    }

    @Test
    public void test03236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03236");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.ioThreads = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList11 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList11, undertowBuilderCustomizerArray10);
        undertowEmbeddedServletContainerFactory9.builderCustomizers = undertowBuilderCustomizerList11;
        undertowEmbeddedServletContainerFactory9.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory9.bufferSize = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList18 = undertowEmbeddedServletContainerFactory9.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer21 };
        undertowEmbeddedServletContainerFactory20.addBuilderCustomizers(undertowBuilderCustomizerArray22);
        org.springframework.boot.context.embedded.Ssl ssl24 = undertowEmbeddedServletContainerFactory20.getSsl();
        java.lang.String str25 = undertowEmbeddedServletContainerFactory20.getContextPath();
        java.lang.String str26 = undertowEmbeddedServletContainerFactory20.getListenAddress();
        undertowEmbeddedServletContainerFactory20.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl29 = undertowEmbeddedServletContainerFactory20.getSsl();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = undertowEmbeddedServletContainerFactory20.getMimeMappings();
        undertowEmbeddedServletContainerFactory9.setMimeMappings(mimeMappings30);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings30);
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        java.lang.Integer int35 = undertowEmbeddedServletContainerFactory1.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader36 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader36;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory39.directBuffers = false;
        undertowEmbeddedServletContainerFactory39.setJspServletClassName("");
        io.undertow.Undertow.Builder builder44 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager45 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer47 = undertowEmbeddedServletContainerFactory39.getUndertowEmbeddedServletContainer(builder44, deploymentManager45, 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer50 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray51 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer50 };
        undertowEmbeddedServletContainerFactory49.addBuilderCustomizers(undertowBuilderCustomizerArray51);
        org.springframework.boot.context.embedded.Ssl ssl53 = undertowEmbeddedServletContainerFactory49.getSsl();
        undertowEmbeddedServletContainerFactory49.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory49.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress58 = undertowEmbeddedServletContainerFactory49.getAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings59 = undertowEmbeddedServletContainerFactory49.getMimeMappings();
        undertowEmbeddedServletContainerFactory39.setMimeMappings(mimeMappings59);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray63 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList64 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList64, undertowBuilderCustomizerArray63);
        undertowEmbeddedServletContainerFactory62.builderCustomizers = undertowBuilderCustomizerList64;
        boolean boolean67 = undertowEmbeddedServletContainerFactory62.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings69 = undertowEmbeddedServletContainerFactory68.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray70 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory68.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray70);
        undertowEmbeddedServletContainerFactory62.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray70);
        java.lang.String str73 = undertowEmbeddedServletContainerFactory62.getContextPath();
        org.springframework.core.io.ResourceLoader resourceLoader74 = null;
        undertowEmbeddedServletContainerFactory62.setResourceLoader(resourceLoader74);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray78 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList79 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList79, undertowBuilderCustomizerArray78);
        undertowEmbeddedServletContainerFactory77.builderCustomizers = undertowBuilderCustomizerList79;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings82 = undertowEmbeddedServletContainerFactory77.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader83 = null;
        undertowEmbeddedServletContainerFactory77.resourceLoader = resourceLoader83;
        java.lang.Boolean boolean85 = undertowEmbeddedServletContainerFactory77.directBuffers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList86 = undertowEmbeddedServletContainerFactory77.builderCustomizers;
        undertowEmbeddedServletContainerFactory62.builderCustomizers = undertowBuilderCustomizerList86;
        undertowEmbeddedServletContainerFactory39.builderCustomizers = undertowBuilderCustomizerList86;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList86;
        int int90 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader91 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader91;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray22);
        org.junit.Assert.assertNull(ssl24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0.0.0.0" + "'", str26, "0.0.0.0");
        org.junit.Assert.assertNull(ssl29);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer47);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray51);
        org.junit.Assert.assertNull(ssl53);
        org.junit.Assert.assertNull(inetAddress58);
        org.junit.Assert.assertNotNull(mimeMappings59);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(mimeMappings69);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(mimeMappings82);
        org.junit.Assert.assertNull(boolean85);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList86);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
    }

    @Test
    public void test03237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03237");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        org.springframework.core.io.ResourceLoader resourceLoader8 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader8);
        boolean boolean10 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray12 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorPageSet11);
    }

    @Test
    public void test03238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03238");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection9 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 10;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1800);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
    }

    @Test
    public void test03239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03239");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.ioThreads = 100;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet4 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        undertowEmbeddedServletContainerFactory0.ioThreads = 100;
        undertowEmbeddedServletContainerFactory0.bufferSize = 35;
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertNotNull(errorPageSet4);
    }

    @Test
    public void test03240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03240");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        boolean boolean10 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.lang.Boolean boolean11 = undertowEmbeddedServletContainerFactory1.directBuffers;
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray12 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
    }

    @Test
    public void test03241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03241");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl10);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.Ssl ssl14 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl14);
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray16 = undertowEmbeddedServletContainerFactory1.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
    }

    @Test
    public void test03242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03242");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 10;
        undertowEmbeddedServletContainerFactory1.ioThreads = (-1);
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader14);
        undertowEmbeddedServletContainerFactory1.workerThreads = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer20 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer20 };
        undertowEmbeddedServletContainerFactory19.addBuilderCustomizers(undertowBuilderCustomizerArray21);
        org.springframework.boot.context.embedded.Ssl ssl23 = undertowEmbeddedServletContainerFactory19.getSsl();
        undertowEmbeddedServletContainerFactory19.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory19.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress28 = undertowEmbeddedServletContainerFactory19.getAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo29 = null;
        undertowEmbeddedServletContainerFactory19.configureErrorPages(deploymentInfo29);
        undertowEmbeddedServletContainerFactory19.setIoThreads((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer35 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray36 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer35 };
        undertowEmbeddedServletContainerFactory34.addBuilderCustomizers(undertowBuilderCustomizerArray36);
        undertowEmbeddedServletContainerFactory34.setSessionTimeout((int) (byte) 10);
        undertowEmbeddedServletContainerFactory34.setIoThreads((java.lang.Integer) 0);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList42 = undertowEmbeddedServletContainerFactory34.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory19.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList42;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray46 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList47 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList47, undertowBuilderCustomizerArray46);
        undertowEmbeddedServletContainerFactory45.builderCustomizers = undertowBuilderCustomizerList47;
        undertowEmbeddedServletContainerFactory45.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory45.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings54 = undertowEmbeddedServletContainerFactory45.getMimeMappings();
        java.lang.String str55 = undertowEmbeddedServletContainerFactory45.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer undertowDeploymentInfoCustomizer56 = null;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray57 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] { undertowDeploymentInfoCustomizer56 };
        undertowEmbeddedServletContainerFactory45.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray57);
        undertowEmbeddedServletContainerFactory19.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray57);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray57);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection63 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        boolean boolean64 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray21);
        org.junit.Assert.assertNull(ssl23);
        org.junit.Assert.assertNull(inetAddress28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray36);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList42);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(mimeMappings54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "0.0.0.0" + "'", str55, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray57);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test03243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03243");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.jarPath = "hi!";
        boolean boolean6 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.close();
        java.lang.String str8 = jarResourcemanager1.jarPath;
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener9 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager1.removeResourceChangeListener(resourceChangeListener9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test03244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03244");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory3.getMimeMappings();
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory3.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager7 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer9 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder6, deploymentManager7, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory1.bufferSize = (-1);
        java.lang.Boolean boolean12 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.net.InetAddress inetAddress15 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress15);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1800);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        io.undertow.servlet.api.DeploymentInfo deploymentInfo21 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureMimeMappings(deploymentInfo21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer9);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test03245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03245");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 10;
        undertowEmbeddedServletContainerFactory1.ioThreads = (-1);
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader14);
        undertowEmbeddedServletContainerFactory1.workerThreads = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer20 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer20 };
        undertowEmbeddedServletContainerFactory19.addBuilderCustomizers(undertowBuilderCustomizerArray21);
        org.springframework.boot.context.embedded.Ssl ssl23 = undertowEmbeddedServletContainerFactory19.getSsl();
        undertowEmbeddedServletContainerFactory19.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory19.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress28 = undertowEmbeddedServletContainerFactory19.getAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo29 = null;
        undertowEmbeddedServletContainerFactory19.configureErrorPages(deploymentInfo29);
        undertowEmbeddedServletContainerFactory19.setIoThreads((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer35 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray36 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer35 };
        undertowEmbeddedServletContainerFactory34.addBuilderCustomizers(undertowBuilderCustomizerArray36);
        undertowEmbeddedServletContainerFactory34.setSessionTimeout((int) (byte) 10);
        undertowEmbeddedServletContainerFactory34.setIoThreads((java.lang.Integer) 0);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList42 = undertowEmbeddedServletContainerFactory34.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory19.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList42;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray46 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList47 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList47, undertowBuilderCustomizerArray46);
        undertowEmbeddedServletContainerFactory45.builderCustomizers = undertowBuilderCustomizerList47;
        undertowEmbeddedServletContainerFactory45.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory45.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings54 = undertowEmbeddedServletContainerFactory45.getMimeMappings();
        java.lang.String str55 = undertowEmbeddedServletContainerFactory45.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer undertowDeploymentInfoCustomizer56 = null;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray57 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] { undertowDeploymentInfoCustomizer56 };
        undertowEmbeddedServletContainerFactory45.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray57);
        undertowEmbeddedServletContainerFactory19.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray57);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray57);
        java.io.File file61 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file61);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet65 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray21);
        org.junit.Assert.assertNull(ssl23);
        org.junit.Assert.assertNull(inetAddress28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray36);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList42);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(mimeMappings54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "0.0.0.0" + "'", str55, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray57);
        org.junit.Assert.assertNotNull(errorPageSet65);
    }

    @Test
    public void test03246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03246");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray7 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet8, errorPageArray7);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet8);
        java.net.InetAddress inetAddress11 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1800);
        io.undertow.server.handlers.resource.ResourceManager resourceManager15 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.ErrorPage errorPage18 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage19 = undertowEmbeddedServletContainerFactory1.getUndertowErrorPage(errorPage18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(inetAddress11);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(resourceManager15);
    }

    @Test
    public void test03247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03247");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList13 = undertowEmbeddedServletContainerFactory12.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList13;
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader15;
        int int17 = undertowEmbeddedServletContainerFactory1.getPort();
        java.lang.Boolean boolean18 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test03248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03248");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setPort((int) (short) 0);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList13 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.String str15 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setPort((int) ' ');
        undertowEmbeddedServletContainerFactory1.ioThreads = 0;
        java.io.File file20 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file20);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "0.0.0.0" + "'", str15, "0.0.0.0");
    }

    @Test
    public void test03249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03249");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList12;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList12;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection16 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo17 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo17);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.Ssl ssl21 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection16);
        org.junit.Assert.assertNull(ssl21);
    }

    @Test
    public void test03250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03250");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.io.File file2 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file2);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 0;
        undertowEmbeddedServletContainerFactory0.setPort((int) (short) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer10 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer10 };
        undertowEmbeddedServletContainerFactory9.addBuilderCustomizers(undertowBuilderCustomizerArray11);
        org.springframework.boot.context.embedded.Ssl ssl13 = undertowEmbeddedServletContainerFactory9.getSsl();
        undertowEmbeddedServletContainerFactory9.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory9.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory9.getAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo19 = null;
        undertowEmbeddedServletContainerFactory9.configureErrorPages(deploymentInfo19);
        undertowEmbeddedServletContainerFactory9.setIoThreads((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer25 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray26 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer25 };
        undertowEmbeddedServletContainerFactory24.addBuilderCustomizers(undertowBuilderCustomizerArray26);
        undertowEmbeddedServletContainerFactory24.setSessionTimeout((int) (byte) 10);
        undertowEmbeddedServletContainerFactory24.setIoThreads((java.lang.Integer) 0);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList32 = undertowEmbeddedServletContainerFactory24.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory9.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList32;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray36 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList37 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList37, undertowBuilderCustomizerArray36);
        undertowEmbeddedServletContainerFactory35.builderCustomizers = undertowBuilderCustomizerList37;
        undertowEmbeddedServletContainerFactory35.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory35.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings44 = undertowEmbeddedServletContainerFactory35.getMimeMappings();
        java.lang.String str45 = undertowEmbeddedServletContainerFactory35.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer undertowDeploymentInfoCustomizer46 = null;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray47 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] { undertowDeploymentInfoCustomizer46 };
        undertowEmbeddedServletContainerFactory35.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray47);
        undertowEmbeddedServletContainerFactory9.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray47);
        undertowEmbeddedServletContainerFactory0.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray47);
        boolean boolean51 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertNull(ssl13);
        org.junit.Assert.assertNull(inetAddress18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray26);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList32);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(mimeMappings44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "0.0.0.0" + "'", str45, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test03251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03251");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 0);
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory1.createBuilder((int) '#');
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray7 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder6);
    }

    @Test
    public void test03252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03252");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList12;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList12;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory16.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory16.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray18);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray18);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        java.io.File file27 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file27);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = (-1);
        undertowEmbeddedServletContainerFactory1.workerThreads = 35;
        undertowEmbeddedServletContainerFactory1.setPort((int) (short) 0);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray18);
    }

    @Test
    public void test03253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03253");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory0.setBuffersPerRegion((java.lang.Integer) (-1));
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory0.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        undertowEmbeddedServletContainerFactory8.ioThreads = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        io.undertow.Undertow.Builder builder16 = undertowEmbeddedServletContainerFactory13.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager17 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer19 = undertowEmbeddedServletContainerFactory8.getUndertowEmbeddedServletContainer(builder16, deploymentManager17, (int) '4');
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection20 = undertowEmbeddedServletContainerFactory8.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray21 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray21);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = initializer22.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray23);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray23);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = initializer25.initializers;
        io.undertow.servlet.api.DeploymentManager deploymentManager27 = undertowEmbeddedServletContainerFactory8.createDeploymentManager(servletContextInitializerArray26);
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray26);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 1800;
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer19);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection20);
        org.junit.Assert.assertNotNull(servletContextInitializerArray21);
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
        org.junit.Assert.assertNotNull(servletContextInitializerArray26);
        org.junit.Assert.assertNotNull(deploymentManager27);
    }

    @Test
    public void test03254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03254");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.net.InetAddress inetAddress7 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        int int11 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.springframework.core.io.ResourceLoader resourceLoader12 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader12);
        undertowEmbeddedServletContainerFactory1.setPort((-1));
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection18 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList19 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.bufferSize = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray24 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList25 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList25, undertowBuilderCustomizerArray24);
        undertowEmbeddedServletContainerFactory23.builderCustomizers = undertowBuilderCustomizerList25;
        undertowEmbeddedServletContainerFactory23.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory23.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = undertowEmbeddedServletContainerFactory23.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings35 = undertowEmbeddedServletContainerFactory34.getMimeMappings();
        undertowEmbeddedServletContainerFactory23.setMimeMappings(mimeMappings35);
        undertowEmbeddedServletContainerFactory23.setWorkerThreads((java.lang.Integer) (-1));
        org.springframework.boot.context.embedded.Ssl ssl39 = undertowEmbeddedServletContainerFactory23.getSsl();
        java.net.InetAddress inetAddress40 = null;
        undertowEmbeddedServletContainerFactory23.setAddress(inetAddress40);
        undertowEmbeddedServletContainerFactory23.setBufferSize((java.lang.Integer) 100);
        java.lang.Boolean boolean44 = undertowEmbeddedServletContainerFactory23.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray47 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList48 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList48, undertowBuilderCustomizerArray47);
        undertowEmbeddedServletContainerFactory46.builderCustomizers = undertowBuilderCustomizerList48;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings51 = undertowEmbeddedServletContainerFactory46.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader52 = null;
        undertowEmbeddedServletContainerFactory46.resourceLoader = resourceLoader52;
        java.lang.Boolean boolean54 = undertowEmbeddedServletContainerFactory46.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory56.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory56.setRegisterJspServlet(false);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList61 = undertowEmbeddedServletContainerFactory56.deploymentInfoCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList62 = undertowEmbeddedServletContainerFactory56.builderCustomizers;
        undertowEmbeddedServletContainerFactory46.builderCustomizers = undertowBuilderCustomizerList62;
        undertowEmbeddedServletContainerFactory23.builderCustomizers = undertowBuilderCustomizerList62;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList62;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(inetAddress7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1800 + "'", int11 == 1800);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection18);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList19);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(mimeMappings35);
        org.junit.Assert.assertNull(ssl39);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(mimeMappings51);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList61);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList62);
    }

    @Test
    public void test03255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03255");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer0 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray1 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer0 };
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer5 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray6 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer5 };
        undertowEmbeddedServletContainerFactory4.addBuilderCustomizers(undertowBuilderCustomizerArray6);
        org.springframework.boot.context.embedded.Ssl ssl8 = undertowEmbeddedServletContainerFactory4.getSsl();
        java.lang.String str9 = undertowEmbeddedServletContainerFactory4.getContextPath();
        java.lang.String str10 = undertowEmbeddedServletContainerFactory4.getListenAddress();
        undertowEmbeddedServletContainerFactory4.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl13 = undertowEmbeddedServletContainerFactory4.getSsl();
        undertowEmbeddedServletContainerFactory4.setPort((int) (short) 0);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList16 = undertowEmbeddedServletContainerFactory4.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer18 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer18 };
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray19);
        initializer17.initializers = servletContextInitializerArray19;
        undertowEmbeddedServletContainerFactory4.addInitializers(servletContextInitializerArray19);
        initializer2.initializers = servletContextInitializerArray19;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray19);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        boolean boolean27 = undertowEmbeddedServletContainerFactory26.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory26.setWorkerThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer32 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray33 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer32 };
        undertowEmbeddedServletContainerFactory31.addBuilderCustomizers(undertowBuilderCustomizerArray33);
        undertowEmbeddedServletContainerFactory31.setSessionTimeout((int) (byte) 10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection37 = undertowEmbeddedServletContainerFactory31.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory31.bufferSize = 100;
        undertowEmbeddedServletContainerFactory31.buffersPerRegion = 10;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray42 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray42);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray45 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray45);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray47 = initializer46.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray47);
        initializer44.initializers = servletContextInitializerArray47;
        initializer43.initializers = servletContextInitializerArray47;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray51 = initializer43.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray51);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray53 = initializer52.initializers;
        undertowEmbeddedServletContainerFactory31.addInitializers(servletContextInitializerArray53);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer55 = undertowEmbeddedServletContainerFactory26.getEmbeddedServletContainer(servletContextInitializerArray53);
        initializer24.initializers = servletContextInitializerArray53;
        org.junit.Assert.assertNotNull(servletContextInitializerArray1);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray6);
        org.junit.Assert.assertNull(ssl8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "0.0.0.0" + "'", str10, "0.0.0.0");
        org.junit.Assert.assertNull(ssl13);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList16);
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray33);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection37);
        org.junit.Assert.assertNotNull(servletContextInitializerArray42);
        org.junit.Assert.assertNotNull(servletContextInitializerArray45);
        org.junit.Assert.assertNotNull(servletContextInitializerArray47);
        org.junit.Assert.assertNotNull(servletContextInitializerArray51);
        org.junit.Assert.assertNotNull(servletContextInitializerArray53);
        org.junit.Assert.assertNotNull(embeddedServletContainer55);
    }

    @Test
    public void test03256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03256");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setPort((int) (short) 10);
        org.springframework.core.io.ResourceLoader resourceLoader11 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader11;
        undertowEmbeddedServletContainerFactory1.setPort(0);
        io.undertow.server.handlers.resource.ResourceManager resourceManager15 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        int int16 = undertowEmbeddedServletContainerFactory1.getPort();
        undertowEmbeddedServletContainerFactory1.setPort(35);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(resourceManager15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test03257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03257");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet9 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.util.concurrent.TimeUnit timeUnit11 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 1, timeUnit11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(errorPageSet9);
    }

    @Test
    public void test03258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03258");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.ioThreads = 100;
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader4);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray8 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList9 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList9, undertowBuilderCustomizerArray8);
        undertowEmbeddedServletContainerFactory7.builderCustomizers = undertowBuilderCustomizerList9;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        undertowEmbeddedServletContainerFactory7.resourceLoader = resourceLoader13;
        java.lang.Boolean boolean15 = undertowEmbeddedServletContainerFactory7.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory17.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory17.setRegisterJspServlet(false);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList22 = undertowEmbeddedServletContainerFactory17.deploymentInfoCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList23 = undertowEmbeddedServletContainerFactory17.builderCustomizers;
        undertowEmbeddedServletContainerFactory7.builderCustomizers = undertowBuilderCustomizerList23;
        undertowEmbeddedServletContainerFactory0.builderCustomizers = undertowBuilderCustomizerList23;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray29 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer28 };
        undertowEmbeddedServletContainerFactory27.addBuilderCustomizers(undertowBuilderCustomizerArray29);
        org.springframework.boot.context.embedded.Ssl ssl31 = undertowEmbeddedServletContainerFactory27.getSsl();
        undertowEmbeddedServletContainerFactory27.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory27.bufferSize = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory37.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int40 = undertowEmbeddedServletContainerFactory37.ioThreads;
        java.lang.Integer int41 = undertowEmbeddedServletContainerFactory37.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage42 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray43 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage42 };
        undertowEmbeddedServletContainerFactory37.addErrorPages(errorPageArray43);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray45 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray45);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray47 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray47);
        initializer46.initializers = servletContextInitializerArray47;
        undertowEmbeddedServletContainerFactory37.addInitializers(servletContextInitializerArray47);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray47);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray47);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList54 = undertowEmbeddedServletContainerFactory53.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray55 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray55);
        undertowEmbeddedServletContainerFactory53.addInitializers(servletContextInitializerArray55);
        initializer52.initializers = servletContextInitializerArray55;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray59 = initializer52.initializers;
        io.undertow.servlet.api.DeploymentManager deploymentManager60 = undertowEmbeddedServletContainerFactory27.createDeploymentManager(servletContextInitializerArray59);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer61 = undertowEmbeddedServletContainerFactory0.getEmbeddedServletContainer(servletContextInitializerArray59);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList22);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList23);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray29);
        org.junit.Assert.assertNull(ssl31);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(errorPageArray43);
        org.junit.Assert.assertNotNull(servletContextInitializerArray45);
        org.junit.Assert.assertNotNull(servletContextInitializerArray47);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList54);
        org.junit.Assert.assertNotNull(servletContextInitializerArray55);
        org.junit.Assert.assertNotNull(servletContextInitializerArray59);
        org.junit.Assert.assertNotNull(deploymentManager60);
        org.junit.Assert.assertNotNull(embeddedServletContainer61);
    }

    @Test
    public void test03259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03259");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList5 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList5, undertowDeploymentInfoCustomizerArray4);
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList5;
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.lang.ClassLoader classLoader11 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray12 = undertowEmbeddedServletContainerFactory1.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(classLoader11);
    }

    @Test
    public void test03260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03260");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(1800);
        org.springframework.boot.context.embedded.Ssl ssl2 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean3 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.ErrorPage errorPage4 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage5 = undertowEmbeddedServletContainerFactory1.getUndertowErrorPage(errorPage4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(ssl2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test03261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03261");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 8080);
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer10 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray11 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer10 };
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray11);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray11);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray11);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList17 = undertowEmbeddedServletContainerFactory16.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory16.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray22 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray22);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray25 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray25);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray27 = initializer26.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray27);
        initializer24.initializers = servletContextInitializerArray27;
        initializer23.initializers = servletContextInitializerArray27;
        undertowEmbeddedServletContainerFactory21.addInitializers(servletContextInitializerArray27);
        io.undertow.servlet.api.DeploymentManager deploymentManager32 = undertowEmbeddedServletContainerFactory16.createDeploymentManager(servletContextInitializerArray27);
        initializer14.initializers = servletContextInitializerArray27;
        io.undertow.servlet.api.DeploymentManager deploymentManager34 = undertowEmbeddedServletContainerFactory1.createDeploymentManager(servletContextInitializerArray27);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList35 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.bufferSize = 10;
        java.net.InetAddress inetAddress38 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray11);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray22);
        org.junit.Assert.assertNotNull(servletContextInitializerArray25);
        org.junit.Assert.assertNotNull(servletContextInitializerArray27);
        org.junit.Assert.assertNotNull(deploymentManager32);
        org.junit.Assert.assertNotNull(deploymentManager34);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList35);
        org.junit.Assert.assertNull(inetAddress38);
    }

    @Test
    public void test03262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03262");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer12 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer12 };
        undertowEmbeddedServletContainerFactory11.addBuilderCustomizers(undertowBuilderCustomizerArray13);
        org.springframework.boot.context.embedded.Ssl ssl15 = undertowEmbeddedServletContainerFactory11.getSsl();
        java.lang.String str16 = undertowEmbeddedServletContainerFactory11.getContextPath();
        java.lang.String str17 = undertowEmbeddedServletContainerFactory11.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet18 = undertowEmbeddedServletContainerFactory11.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection19 = undertowEmbeddedServletContainerFactory11.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList20 = undertowEmbeddedServletContainerFactory11.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory11.addBuilderCustomizers(undertowBuilderCustomizerArray21);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray21);
        java.io.File file24 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection25 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader26 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader26;
        org.springframework.core.io.ResourceLoader resourceLoader28 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader28;
        int int30 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.springframework.core.io.ResourceLoader resourceLoader31 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray13);
        org.junit.Assert.assertNull(ssl15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "0.0.0.0" + "'", str17, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection19);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList20);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray21);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1800 + "'", int30 == 1800);
        org.junit.Assert.assertNull(resourceLoader31);
    }

    @Test
    public void test03263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03263");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.close();
        boolean boolean5 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "";
        boolean boolean8 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "0.0.0.0";
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource12 = jarResourcemanager1.getResource("hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test03264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03264");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        org.springframework.core.io.ResourceLoader resourceLoader8 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader8);
        undertowEmbeddedServletContainerFactory1.bufferSize = 0;
        io.undertow.server.handlers.resource.ResourceManager resourceManager12 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        java.lang.ClassLoader classLoader13 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer16 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer16 };
        undertowEmbeddedServletContainerFactory15.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory15.getSsl();
        java.lang.String str20 = undertowEmbeddedServletContainerFactory15.getContextPath();
        java.lang.String str21 = undertowEmbeddedServletContainerFactory15.getListenAddress();
        undertowEmbeddedServletContainerFactory15.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl24 = undertowEmbeddedServletContainerFactory15.getSsl();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = undertowEmbeddedServletContainerFactory15.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(resourceManager12);
        org.junit.Assert.assertNotNull(classLoader13);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "0.0.0.0" + "'", str21, "0.0.0.0");
        org.junit.Assert.assertNull(ssl24);
        org.junit.Assert.assertNotNull(mimeMappings25);
    }

    @Test
    public void test03265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03265");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(1);
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader13;
        boolean boolean15 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.lang.Integer int16 = undertowEmbeddedServletContainerFactory1.workerThreads;
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray17 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test03266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03266");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        java.lang.String str1 = jarResourcemanager0.jarPath;
        boolean boolean2 = jarResourcemanager0.isResourceChangeListenerSupported();
        java.lang.String str3 = jarResourcemanager0.jarPath;
        jarResourcemanager0.jarPath = "hi!";
        java.lang.String str6 = jarResourcemanager0.jarPath;
        jarResourcemanager0.jarPath = "";
        java.lang.String str9 = jarResourcemanager0.jarPath;
        java.lang.String str10 = jarResourcemanager0.jarPath;
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager0.removeResourceChangeListener(resourceChangeListener11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test03267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03267");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 0;
        org.springframework.boot.context.embedded.ErrorPage errorPage18 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage19 = undertowEmbeddedServletContainerFactory1.getUndertowErrorPage(errorPage18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertNotNull(mimeMappings11);
    }

    @Test
    public void test03268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03268");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.lang.Boolean boolean11 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer15 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer15 };
        undertowEmbeddedServletContainerFactory14.addBuilderCustomizers(undertowBuilderCustomizerArray16);
        org.springframework.boot.context.embedded.Ssl ssl18 = undertowEmbeddedServletContainerFactory14.getSsl();
        undertowEmbeddedServletContainerFactory14.setDirectBuffers((java.lang.Boolean) true);
        java.lang.Boolean boolean21 = undertowEmbeddedServletContainerFactory14.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray25 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer24 };
        undertowEmbeddedServletContainerFactory23.addBuilderCustomizers(undertowBuilderCustomizerArray25);
        org.springframework.boot.context.embedded.Ssl ssl27 = undertowEmbeddedServletContainerFactory23.getSsl();
        java.lang.String str28 = undertowEmbeddedServletContainerFactory23.getContextPath();
        java.lang.String str29 = undertowEmbeddedServletContainerFactory23.getListenAddress();
        java.lang.String str30 = undertowEmbeddedServletContainerFactory23.getListenAddress();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray31 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet32 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet32, errorPageArray31);
        undertowEmbeddedServletContainerFactory23.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet32);
        undertowEmbeddedServletContainerFactory14.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet32);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo36 = null;
        undertowEmbeddedServletContainerFactory14.configureErrorPages(deploymentInfo36);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = undertowEmbeddedServletContainerFactory41.getMimeMappings();
        io.undertow.Undertow.Builder builder44 = undertowEmbeddedServletContainerFactory41.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager45 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer47 = undertowEmbeddedServletContainerFactory39.getUndertowEmbeddedServletContainer(builder44, deploymentManager45, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory39.bufferSize = (-1);
        java.lang.Boolean boolean50 = undertowEmbeddedServletContainerFactory39.directBuffers;
        undertowEmbeddedServletContainerFactory39.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings53 = undertowEmbeddedServletContainerFactory39.getMimeMappings();
        undertowEmbeddedServletContainerFactory14.setMimeMappings(mimeMappings53);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings53);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) (-1));
        org.springframework.boot.context.embedded.Ssl ssl58 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode59 = undertowEmbeddedServletContainerFactory1.getSslClientAuthMode(ssl58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray16);
        org.junit.Assert.assertNull(ssl18);
        org.junit.Assert.assertEquals("'" + boolean21 + "' != '" + true + "'", boolean21, true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray25);
        org.junit.Assert.assertNull(ssl27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "0.0.0.0" + "'", str29, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "0.0.0.0" + "'", str30, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer47);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(mimeMappings53);
    }

    @Test
    public void test03269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03269");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList12;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList12;
        org.springframework.core.io.ResourceLoader resourceLoader16 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader16;
        java.lang.Integer int18 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Initializers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(int18);
    }

    @Test
    public void test03270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03270");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory3.getMimeMappings();
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory3.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager7 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer9 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder6, deploymentManager7, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory1.bufferSize = (-1);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection12 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.Ssl ssl13 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl13);
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file15);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList23 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList23, undertowBuilderCustomizerArray22);
        undertowEmbeddedServletContainerFactory21.builderCustomizers = undertowBuilderCustomizerList23;
        boolean boolean26 = undertowEmbeddedServletContainerFactory21.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = undertowEmbeddedServletContainerFactory27.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray29 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory27.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray29);
        undertowEmbeddedServletContainerFactory21.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray29);
        java.lang.String str32 = undertowEmbeddedServletContainerFactory21.getContextPath();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo33 = null;
        undertowEmbeddedServletContainerFactory21.configureErrorPages(deploymentInfo33);
        java.net.InetAddress inetAddress35 = undertowEmbeddedServletContainerFactory21.getAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = undertowEmbeddedServletContainerFactory21.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings36);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer9);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection12);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(inetAddress35);
        org.junit.Assert.assertNotNull(mimeMappings36);
    }

    @Test
    public void test03271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03271");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        io.undertow.Undertow.Builder builder4 = undertowEmbeddedServletContainerFactory1.createBuilder((int) '4');
        java.net.InetAddress inetAddress5 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress5);
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.core.io.ResourceLoader resourceLoader8 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader8;
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test03272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03272");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        jarResourcemanager0.jarPath = "0.0.0.0";
        boolean boolean3 = jarResourcemanager0.isResourceChangeListenerSupported();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test03273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03273");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.ioThreads = 10;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory11.getMimeMappings();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = undertowEmbeddedServletContainerFactory11.builderCustomizers;
        undertowEmbeddedServletContainerFactory11.workerThreads = 100;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection16 = undertowEmbeddedServletContainerFactory11.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = undertowEmbeddedServletContainerFactory20.getMimeMappings();
        io.undertow.Undertow.Builder builder23 = undertowEmbeddedServletContainerFactory20.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer26 = undertowEmbeddedServletContainerFactory18.getUndertowEmbeddedServletContainer(builder23, deploymentManager24, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory18.bufferSize = (-1);
        java.lang.Boolean boolean29 = undertowEmbeddedServletContainerFactory18.directBuffers;
        undertowEmbeddedServletContainerFactory18.setDirectBuffers((java.lang.Boolean) true);
        io.undertow.Undertow.Builder builder33 = undertowEmbeddedServletContainerFactory18.createBuilder(8080);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray36 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray36);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray39 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray39);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray41 = initializer40.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray41);
        initializer38.initializers = servletContextInitializerArray41;
        initializer37.initializers = servletContextInitializerArray41;
        undertowEmbeddedServletContainerFactory35.addInitializers(servletContextInitializerArray41);
        java.lang.Integer int46 = undertowEmbeddedServletContainerFactory35.buffersPerRegion;
        io.undertow.Undertow.Builder builder48 = undertowEmbeddedServletContainerFactory35.createBuilder((int) (short) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray50 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray50);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray52 = initializer51.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray52);
        initializer49.initializers = servletContextInitializerArray52;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray55 = initializer49.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray55);
        io.undertow.servlet.api.DeploymentManager deploymentManager57 = undertowEmbeddedServletContainerFactory35.createDeploymentManager(servletContextInitializerArray55);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer59 = undertowEmbeddedServletContainerFactory11.getUndertowEmbeddedServletContainer(builder33, deploymentManager57, (int) (short) 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings60 = undertowEmbeddedServletContainerFactory11.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings60);
        java.io.File file62 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray63 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer64 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray63);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray65 = initializer64.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray65);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer67 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray65);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray68 = initializer67.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray68);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer70 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray68);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer71 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray68);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray72 = initializer71.initializers;
        io.undertow.servlet.api.DeploymentManager deploymentManager73 = undertowEmbeddedServletContainerFactory1.createDeploymentManager(servletContextInitializerArray72);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer74 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray72);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList13);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection16);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer26);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(servletContextInitializerArray36);
        org.junit.Assert.assertNotNull(servletContextInitializerArray39);
        org.junit.Assert.assertNotNull(servletContextInitializerArray41);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(servletContextInitializerArray50);
        org.junit.Assert.assertNotNull(servletContextInitializerArray52);
        org.junit.Assert.assertNotNull(servletContextInitializerArray55);
        org.junit.Assert.assertNotNull(deploymentManager57);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer59);
        org.junit.Assert.assertNotNull(mimeMappings60);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNotNull(servletContextInitializerArray63);
        org.junit.Assert.assertNotNull(servletContextInitializerArray65);
        org.junit.Assert.assertNotNull(servletContextInitializerArray68);
        org.junit.Assert.assertNotNull(servletContextInitializerArray72);
        org.junit.Assert.assertNotNull(deploymentManager73);
    }

    @Test
    public void test03274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03274");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        io.undertow.server.handlers.resource.ResourceManager resourceManager11 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertNotNull(resourceManager11);
    }

    @Test
    public void test03275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03275");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.core.io.ResourceLoader resourceLoader15 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        io.undertow.server.handlers.resource.ResourceManager resourceManager16 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        java.io.File file17 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray18 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList12);
        org.junit.Assert.assertNull(resourceLoader15);
        org.junit.Assert.assertNotNull(resourceManager16);
        org.junit.Assert.assertNull(file17);
    }

    @Test
    public void test03276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03276");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.lang.Boolean boolean8 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer11 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray12 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer11 };
        undertowEmbeddedServletContainerFactory10.addBuilderCustomizers(undertowBuilderCustomizerArray12);
        org.springframework.boot.context.embedded.Ssl ssl14 = undertowEmbeddedServletContainerFactory10.getSsl();
        java.lang.String str15 = undertowEmbeddedServletContainerFactory10.getContextPath();
        java.lang.String str16 = undertowEmbeddedServletContainerFactory10.getListenAddress();
        java.lang.String str17 = undertowEmbeddedServletContainerFactory10.getListenAddress();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray18 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet19, errorPageArray18);
        undertowEmbeddedServletContainerFactory10.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet19);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet19);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo23 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo23);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("0.0.0.0");
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + true + "'", boolean8, true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray12);
        org.junit.Assert.assertNull(ssl14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "0.0.0.0" + "'", str16, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "0.0.0.0" + "'", str17, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test03277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03277");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory1.getSsl();
        int int11 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray12 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray12);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory14.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray16);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray16);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        int int23 = undertowEmbeddedServletContainerFactory1.getPort();
        java.lang.Integer int24 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 10);
        undertowEmbeddedServletContainerFactory1.setPort(35);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray12);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray16);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(int24);
    }

    @Test
    public void test03278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03278");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        java.lang.String str1 = jarResourcemanager0.jarPath;
        boolean boolean2 = jarResourcemanager0.isResourceChangeListenerSupported();
        java.lang.String str3 = jarResourcemanager0.jarPath;
        jarResourcemanager0.jarPath = "0.0.0.0";
        boolean boolean6 = jarResourcemanager0.isResourceChangeListenerSupported();
        jarResourcemanager0.close();
        jarResourcemanager0.close();
        jarResourcemanager0.close();
        java.lang.String str10 = jarResourcemanager0.jarPath;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "0.0.0.0" + "'", str10, "0.0.0.0");
    }

    @Test
    public void test03279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03279");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        java.lang.String str1 = jarResourcemanager0.jarPath;
        boolean boolean2 = jarResourcemanager0.isResourceChangeListenerSupported();
        java.lang.String str3 = jarResourcemanager0.jarPath;
        jarResourcemanager0.jarPath = "hi!";
        boolean boolean6 = jarResourcemanager0.isResourceChangeListenerSupported();
        boolean boolean7 = jarResourcemanager0.isResourceChangeListenerSupported();
        jarResourcemanager0.close();
        boolean boolean9 = jarResourcemanager0.isResourceChangeListenerSupported();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener10 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager0.registerResourceChangeListener(resourceChangeListener10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test03280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03280");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 10;
        undertowEmbeddedServletContainerFactory1.ioThreads = (-1);
        io.undertow.server.handlers.resource.ResourceManager resourceManager14 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer17 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer17 };
        undertowEmbeddedServletContainerFactory16.addBuilderCustomizers(undertowBuilderCustomizerArray18);
        undertowEmbeddedServletContainerFactory16.setSessionTimeout((int) (byte) 10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection22 = undertowEmbeddedServletContainerFactory16.getBuilderCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection23 = undertowEmbeddedServletContainerFactory16.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer26 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray27 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer26 };
        undertowEmbeddedServletContainerFactory25.addBuilderCustomizers(undertowBuilderCustomizerArray27);
        org.springframework.boot.context.embedded.Ssl ssl29 = undertowEmbeddedServletContainerFactory25.getSsl();
        java.lang.String str30 = undertowEmbeddedServletContainerFactory25.getContextPath();
        java.lang.String str31 = undertowEmbeddedServletContainerFactory25.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet32 = undertowEmbeddedServletContainerFactory25.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray35 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList36 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList36, undertowBuilderCustomizerArray35);
        undertowEmbeddedServletContainerFactory34.builderCustomizers = undertowBuilderCustomizerList36;
        undertowEmbeddedServletContainerFactory25.builderCustomizers = undertowBuilderCustomizerList36;
        undertowEmbeddedServletContainerFactory16.builderCustomizers = undertowBuilderCustomizerList36;
        org.springframework.core.io.ResourceLoader resourceLoader41 = undertowEmbeddedServletContainerFactory16.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer44 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray45 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer44 };
        undertowEmbeddedServletContainerFactory43.addBuilderCustomizers(undertowBuilderCustomizerArray45);
        org.springframework.boot.context.embedded.Ssl ssl47 = undertowEmbeddedServletContainerFactory43.getSsl();
        undertowEmbeddedServletContainerFactory43.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory43.setPort((int) (byte) 10);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet52 = undertowEmbeddedServletContainerFactory43.getErrorPages();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet53 = undertowEmbeddedServletContainerFactory43.getErrorPages();
        undertowEmbeddedServletContainerFactory16.setErrorPages(errorPageSet53);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer55 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer56 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray57 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer56 };
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray57);
        initializer55.initializers = servletContextInitializerArray57;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray57);
        undertowEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray57);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray57);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray57);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer64 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray57);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(resourceManager14);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection22);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection23);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray27);
        org.junit.Assert.assertNull(ssl29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "0.0.0.0" + "'", str31, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet32);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(resourceLoader41);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray45);
        org.junit.Assert.assertNull(ssl47);
        org.junit.Assert.assertNotNull(errorPageSet52);
        org.junit.Assert.assertNotNull(errorPageSet53);
        org.junit.Assert.assertNotNull(servletContextInitializerArray57);
    }

    @Test
    public void test03281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03281");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader6;
        java.io.File file8 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(errorPageSet12);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection13);
    }

    @Test
    public void test03282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03282");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.Ssl ssl2 = undertowEmbeddedServletContainerFactory0.getSsl();
        java.io.File file3 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file3);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList5 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.workerThreads = 0;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertNull(ssl2);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList5);
        org.junit.Assert.assertNotNull(errorPageSet8);
    }

    @Test
    public void test03283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03283");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList12;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList12;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory16.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory16.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray18);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        io.undertow.Undertow.Builder builder27 = undertowEmbeddedServletContainerFactory24.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer30 = undertowEmbeddedServletContainerFactory22.getUndertowEmbeddedServletContainer(builder27, deploymentManager28, (int) (byte) 0);
        io.undertow.servlet.api.DeploymentManager deploymentManager31 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer33 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder27, deploymentManager31, (int) ' ');
        org.springframework.boot.context.embedded.Ssl ssl34 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl34);
        undertowEmbeddedServletContainerFactory1.workerThreads = 10;
        boolean boolean38 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer41 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray42 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer41 };
        undertowEmbeddedServletContainerFactory40.addBuilderCustomizers(undertowBuilderCustomizerArray42);
        org.springframework.boot.context.embedded.Ssl ssl44 = undertowEmbeddedServletContainerFactory40.getSsl();
        undertowEmbeddedServletContainerFactory40.setDirectBuffers((java.lang.Boolean) true);
        java.lang.String str47 = undertowEmbeddedServletContainerFactory40.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer48 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray49 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer48 };
        undertowEmbeddedServletContainerFactory40.addBuilderCustomizers(undertowBuilderCustomizerArray49);
        java.net.InetAddress inetAddress51 = null;
        undertowEmbeddedServletContainerFactory40.setAddress(inetAddress51);
        boolean boolean53 = undertowEmbeddedServletContainerFactory40.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList54 = undertowEmbeddedServletContainerFactory40.builderCustomizers;
        java.io.File file55 = undertowEmbeddedServletContainerFactory40.getDocumentRoot();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList56 = undertowEmbeddedServletContainerFactory40.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList56;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings62 = undertowEmbeddedServletContainerFactory61.getMimeMappings();
        io.undertow.Undertow.Builder builder64 = undertowEmbeddedServletContainerFactory61.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager65 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer67 = undertowEmbeddedServletContainerFactory59.getUndertowEmbeddedServletContainer(builder64, deploymentManager65, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory59.bufferSize = (-1);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection70 = undertowEmbeddedServletContainerFactory59.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.Ssl ssl71 = null;
        undertowEmbeddedServletContainerFactory59.setSsl(ssl71);
        java.lang.Integer int73 = undertowEmbeddedServletContainerFactory59.ioThreads;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings74 = undertowEmbeddedServletContainerFactory59.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings74);
        undertowEmbeddedServletContainerFactory1.ioThreads = 10;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet78 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray18);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer30);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray42);
        org.junit.Assert.assertNull(ssl44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "0.0.0.0" + "'", str47, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList54);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList56);
        org.junit.Assert.assertNotNull(mimeMappings62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer67);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection70);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNotNull(mimeMappings74);
        org.junit.Assert.assertNotNull(errorPageSet78);
    }

    @Test
    public void test03284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03284");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray8 = undertowEmbeddedServletContainerFactory1.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
    }

    @Test
    public void test03285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03285");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        java.lang.String str1 = jarResourcemanager0.jarPath;
        jarResourcemanager0.jarPath = "0.0.0.0";
        java.lang.String str4 = jarResourcemanager0.jarPath;
        java.lang.String str5 = jarResourcemanager0.jarPath;
        jarResourcemanager0.jarPath = "0.0.0.0";
        java.lang.String str8 = jarResourcemanager0.jarPath;
        jarResourcemanager0.jarPath = "0.0.0.0";
        jarResourcemanager0.jarPath = "hi!";
        java.lang.String str13 = jarResourcemanager0.jarPath;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "0.0.0.0" + "'", str5, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test03286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03286");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory1.bufferSize;
        io.undertow.server.handlers.resource.ResourceManager resourceManager7 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1800);
        org.springframework.core.io.ResourceLoader resourceLoader11 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(resourceManager7);
        org.junit.Assert.assertNotNull(errorPageSet8);
    }

    @Test
    public void test03287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03287");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory2.setContextPath("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03288");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList12;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList12;
        java.net.InetAddress inetAddress16 = undertowEmbeddedServletContainerFactory1.getAddress();
        io.undertow.server.handlers.resource.ResourceManager resourceManager17 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer20 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer20 };
        undertowEmbeddedServletContainerFactory19.addBuilderCustomizers(undertowBuilderCustomizerArray21);
        org.springframework.boot.context.embedded.Ssl ssl23 = undertowEmbeddedServletContainerFactory19.getSsl();
        java.lang.String str24 = undertowEmbeddedServletContainerFactory19.getContextPath();
        java.lang.String str25 = undertowEmbeddedServletContainerFactory19.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet26 = undertowEmbeddedServletContainerFactory19.getErrorPages();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList27 = undertowEmbeddedServletContainerFactory19.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList27;
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        org.springframework.boot.context.embedded.Ssl ssl31 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode32 = undertowEmbeddedServletContainerFactory1.getSslClientAuthMode(ssl31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(inetAddress16);
        org.junit.Assert.assertNotNull(resourceManager17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray21);
        org.junit.Assert.assertNull(ssl23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "0.0.0.0" + "'", str25, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet26);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList27);
    }

    @Test
    public void test03289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03289");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory3.getMimeMappings();
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory3.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager7 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer9 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder6, deploymentManager7, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory1.bufferSize = (-1);
        java.lang.Boolean boolean12 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.Ssl ssl13 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) (-1));
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray16 = undertowEmbeddedServletContainerFactory1.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(ssl13);
    }

    @Test
    public void test03290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03290");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray8 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray10);
        initializer9.initializers = servletContextInitializerArray10;
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        java.lang.Boolean boolean14 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader15;
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo20 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureMimeMappings(deploymentInfo20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(servletContextInitializerArray8);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(int17);
    }

    @Test
    public void test03291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03291");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        undertowEmbeddedServletContainerFactory1.workerThreads = (-1);
        org.springframework.core.io.ResourceLoader resourceLoader8 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader8;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 10);
        java.lang.String str13 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.io.File file14 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file14);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList16 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList16);
    }

    @Test
    public void test03292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03292");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList12;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList12;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory16.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory16.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray18);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        io.undertow.Undertow.Builder builder27 = undertowEmbeddedServletContainerFactory24.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer30 = undertowEmbeddedServletContainerFactory22.getUndertowEmbeddedServletContainer(builder27, deploymentManager28, (int) (byte) 0);
        io.undertow.servlet.api.DeploymentManager deploymentManager31 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer33 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder27, deploymentManager31, (int) ' ');
        undertowEmbeddedServletContainerFactory1.bufferSize = 1800;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 8080);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) (-1));
        org.springframework.core.io.ResourceLoader resourceLoader40 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        undertowEmbeddedServletContainerFactory1.setPort(10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray18);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer30);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer33);
        org.junit.Assert.assertNull(resourceLoader40);
    }

    @Test
    public void test03293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03293");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.ioThreads = 0;
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.ErrorPage errorPage7 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage8 = undertowEmbeddedServletContainerFactory1.getUndertowErrorPage(errorPage7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test03294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03294");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader9 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        undertowEmbeddedServletContainerFactory1.bufferSize = 0;
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray12 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNull(resourceLoader9);
    }

    @Test
    public void test03295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03295");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(0);
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("");
        java.io.File file6 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file6);
        org.springframework.core.io.ResourceLoader resourceLoader8 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        undertowEmbeddedServletContainerFactory0.setSessionTimeout((int) '#');
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertNull(resourceLoader8);
    }

    @Test
    public void test03296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03296");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory3.getMimeMappings();
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory3.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager7 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer9 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder6, deploymentManager7, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = (-1);
        int int16 = undertowEmbeddedServletContainerFactory1.getPort();
        java.lang.String str17 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer9);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test03297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03297");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer12 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer12 };
        undertowEmbeddedServletContainerFactory11.addBuilderCustomizers(undertowBuilderCustomizerArray13);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray13);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 1;
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray18 = undertowEmbeddedServletContainerFactory1.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray13);
    }

    @Test
    public void test03298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03298");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress10 = undertowEmbeddedServletContainerFactory1.getAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo11 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo11);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory1.setPort((int) (short) 100);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 8080;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(inetAddress10);
    }

    @Test
    public void test03299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03299");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        io.undertow.Undertow.Builder builder6 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager7 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer9 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder6, deploymentManager7, 0);
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.springframework.core.io.ResourceLoader resourceLoader11 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader11;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        java.lang.Integer int15 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray16 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test03300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03300");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory1.workerThreads;
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.ClassLoader classLoader11 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer16 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer16 };
        undertowEmbeddedServletContainerFactory15.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        undertowEmbeddedServletContainerFactory13.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo21 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo21);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int25 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.String str26 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.Undertow.Builder builder28 = undertowEmbeddedServletContainerFactory1.createBuilder((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(classLoader11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0.0.0.0" + "'", str26, "0.0.0.0");
    }

    @Test
    public void test03301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03301");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader6;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection8 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray9 = undertowEmbeddedServletContainerFactory1.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection8);
    }

    @Test
    public void test03302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03302");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress10 = undertowEmbeddedServletContainerFactory1.getAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo11 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo11);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        boolean boolean15 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.ioThreads = 8080;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(inetAddress10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test03303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03303");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.ioThreads = 0;
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.net.InetAddress inetAddress7 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress7);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer11 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray12 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer11 };
        undertowEmbeddedServletContainerFactory10.addBuilderCustomizers(undertowBuilderCustomizerArray12);
        org.springframework.boot.context.embedded.Ssl ssl14 = undertowEmbeddedServletContainerFactory10.getSsl();
        undertowEmbeddedServletContainerFactory10.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory10.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress19 = undertowEmbeddedServletContainerFactory10.getAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo20 = null;
        undertowEmbeddedServletContainerFactory10.configureErrorPages(deploymentInfo20);
        undertowEmbeddedServletContainerFactory10.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory10.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.Ssl ssl26 = null;
        undertowEmbeddedServletContainerFactory10.setSsl(ssl26);
        java.lang.Integer int28 = undertowEmbeddedServletContainerFactory10.workerThreads;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = undertowEmbeddedServletContainerFactory10.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings29);
        io.undertow.server.handlers.resource.ResourceManager resourceManager31 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray12);
        org.junit.Assert.assertNull(ssl14);
        org.junit.Assert.assertNull(inetAddress19);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNotNull(resourceManager31);
    }

    @Test
    public void test03304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03304");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        io.undertow.Undertow.Builder builder6 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager7 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer9 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder6, deploymentManager7, 0);
        org.springframework.core.io.ResourceLoader resourceLoader10 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader13);
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader15;
        java.lang.String str17 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer9);
        org.junit.Assert.assertNull(resourceLoader10);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test03305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03305");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.jarPath = "hi!";
        java.lang.String str6 = jarResourcemanager1.jarPath;
        jarResourcemanager1.close();
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.close();
        java.lang.String str11 = jarResourcemanager1.jarPath;
        java.lang.String str12 = jarResourcemanager1.jarPath;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource14 = jarResourcemanager1.getResource("hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test03306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03306");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("hi!", (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03307");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.net.InetAddress inetAddress6 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory10.getMimeMappings();
        undertowEmbeddedServletContainerFactory10.bufferSize = 10;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList17, undertowBuilderCustomizerArray16);
        undertowEmbeddedServletContainerFactory15.builderCustomizers = undertowBuilderCustomizerList17;
        boolean boolean20 = undertowEmbeddedServletContainerFactory15.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = undertowEmbeddedServletContainerFactory21.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray23 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory21.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray23);
        undertowEmbeddedServletContainerFactory15.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray23);
        undertowEmbeddedServletContainerFactory10.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray23);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer29 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray30 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer29 };
        undertowEmbeddedServletContainerFactory28.addBuilderCustomizers(undertowBuilderCustomizerArray30);
        org.springframework.boot.context.embedded.Ssl ssl32 = undertowEmbeddedServletContainerFactory28.getSsl();
        java.lang.String str33 = undertowEmbeddedServletContainerFactory28.getContextPath();
        java.lang.String str34 = undertowEmbeddedServletContainerFactory28.getListenAddress();
        java.lang.String str35 = undertowEmbeddedServletContainerFactory28.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray38 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList39 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList39, undertowBuilderCustomizerArray38);
        undertowEmbeddedServletContainerFactory37.builderCustomizers = undertowBuilderCustomizerList39;
        boolean boolean42 = undertowEmbeddedServletContainerFactory37.isRegisterJspServlet();
        java.net.InetAddress inetAddress43 = undertowEmbeddedServletContainerFactory37.getAddress();
        java.lang.Integer int44 = undertowEmbeddedServletContainerFactory37.buffersPerRegion;
        undertowEmbeddedServletContainerFactory37.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer49 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray50 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer49 };
        undertowEmbeddedServletContainerFactory48.addBuilderCustomizers(undertowBuilderCustomizerArray50);
        org.springframework.boot.context.embedded.Ssl ssl52 = undertowEmbeddedServletContainerFactory48.getSsl();
        java.lang.String str53 = undertowEmbeddedServletContainerFactory48.getContextPath();
        java.lang.String str54 = undertowEmbeddedServletContainerFactory48.getListenAddress();
        undertowEmbeddedServletContainerFactory48.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl57 = undertowEmbeddedServletContainerFactory48.getSsl();
        undertowEmbeddedServletContainerFactory48.setPort((int) (short) 0);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection60 = undertowEmbeddedServletContainerFactory48.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer63 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray64 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer63 };
        undertowEmbeddedServletContainerFactory62.addBuilderCustomizers(undertowBuilderCustomizerArray64);
        org.springframework.boot.context.embedded.Ssl ssl66 = undertowEmbeddedServletContainerFactory62.getSsl();
        java.lang.String str67 = undertowEmbeddedServletContainerFactory62.getContextPath();
        java.lang.String str68 = undertowEmbeddedServletContainerFactory62.getListenAddress();
        undertowEmbeddedServletContainerFactory62.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl71 = undertowEmbeddedServletContainerFactory62.getSsl();
        int int72 = undertowEmbeddedServletContainerFactory62.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray73 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory62.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray73);
        undertowEmbeddedServletContainerFactory48.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray73);
        undertowEmbeddedServletContainerFactory37.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray73);
        undertowEmbeddedServletContainerFactory28.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray73);
        undertowEmbeddedServletContainerFactory10.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray73);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray73);
        org.springframework.core.io.ResourceLoader resourceLoader80 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader80;
        org.springframework.boot.context.embedded.Ssl ssl82 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory85 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings86 = undertowEmbeddedServletContainerFactory85.getMimeMappings();
        io.undertow.Undertow.Builder builder88 = undertowEmbeddedServletContainerFactory85.createBuilder((int) '4');
        java.net.InetAddress inetAddress89 = null;
        undertowEmbeddedServletContainerFactory85.setAddress(inetAddress89);
        java.lang.String str91 = undertowEmbeddedServletContainerFactory85.getListenAddress();
        java.net.InetAddress inetAddress92 = null;
        undertowEmbeddedServletContainerFactory85.setAddress(inetAddress92);
        int int94 = undertowEmbeddedServletContainerFactory85.getSessionTimeout();
        io.undertow.Undertow.Builder builder96 = undertowEmbeddedServletContainerFactory85.createBuilder((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureSsl(ssl82, 1800, builder96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray23);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray30);
        org.junit.Assert.assertNull(ssl32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "0.0.0.0" + "'", str34, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "0.0.0.0" + "'", str35, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(inetAddress43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray50);
        org.junit.Assert.assertNull(ssl52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "0.0.0.0" + "'", str54, "0.0.0.0");
        org.junit.Assert.assertNull(ssl57);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection60);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray64);
        org.junit.Assert.assertNull(ssl66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "0.0.0.0" + "'", str68, "0.0.0.0");
        org.junit.Assert.assertNull(ssl71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray73);
        org.junit.Assert.assertNotNull(mimeMappings86);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "0.0.0.0" + "'", str91, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1800 + "'", int94 == 1800);
        org.junit.Assert.assertNotNull(builder96);
    }

    @Test
    public void test03308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03308");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList9 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        int int10 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        java.lang.String str11 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 10;
        undertowEmbeddedServletContainerFactory1.ioThreads = 100;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test03309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03309");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.ioThreads = 100;
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader4);
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        undertowEmbeddedServletContainerFactory0.bufferSize = (-1);
        io.undertow.Undertow.Builder builder12 = undertowEmbeddedServletContainerFactory0.createBuilder((int) (short) 1);
        java.net.InetAddress inetAddress13 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress13);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test03310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03310");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList5 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList5, undertowDeploymentInfoCustomizerArray4);
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList5;
        org.springframework.core.io.ResourceLoader resourceLoader8 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader8;
        java.lang.String str10 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList11 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray14 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList15, undertowBuilderCustomizerArray14);
        undertowEmbeddedServletContainerFactory13.builderCustomizers = undertowBuilderCustomizerList15;
        undertowEmbeddedServletContainerFactory13.workerThreads = (-1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer22 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray23 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer22 };
        undertowEmbeddedServletContainerFactory21.addBuilderCustomizers(undertowBuilderCustomizerArray23);
        org.springframework.boot.context.embedded.Ssl ssl25 = undertowEmbeddedServletContainerFactory21.getSsl();
        java.lang.String str26 = undertowEmbeddedServletContainerFactory21.getContextPath();
        java.lang.String str27 = undertowEmbeddedServletContainerFactory21.getListenAddress();
        undertowEmbeddedServletContainerFactory21.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl30 = undertowEmbeddedServletContainerFactory21.getSsl();
        int int31 = undertowEmbeddedServletContainerFactory21.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray32 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory21.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray32);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings35 = undertowEmbeddedServletContainerFactory34.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray36 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory34.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        undertowEmbeddedServletContainerFactory21.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        undertowEmbeddedServletContainerFactory13.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) (-1));
        org.springframework.core.io.ResourceLoader resourceLoader43 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList44 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray45 = undertowEmbeddedServletContainerFactory1.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray23);
        org.junit.Assert.assertNull(ssl25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "0.0.0.0" + "'", str27, "0.0.0.0");
        org.junit.Assert.assertNull(ssl30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray32);
        org.junit.Assert.assertNotNull(mimeMappings35);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray36);
        org.junit.Assert.assertNull(resourceLoader43);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList44);
    }

    @Test
    public void test03311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03311");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(1800);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet3 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setIoThreads((java.lang.Integer) 10);
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory0.directBuffers;
        org.springframework.boot.context.embedded.ErrorPage errorPage7 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage8 = undertowEmbeddedServletContainerFactory0.getUndertowErrorPage(errorPage7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorPageSet3);
        org.junit.Assert.assertNull(boolean6);
    }

    @Test
    public void test03312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03312");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertNotNull(errorPageSet11);
    }

    @Test
    public void test03313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03313");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = undertowEmbeddedServletContainerFactory7.getMimeMappings();
        io.undertow.Undertow.Builder builder10 = undertowEmbeddedServletContainerFactory7.createBuilder((int) '4');
        java.net.InetAddress inetAddress11 = null;
        undertowEmbeddedServletContainerFactory7.setAddress(inetAddress11);
        boolean boolean13 = undertowEmbeddedServletContainerFactory7.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 8080);
        java.net.InetAddress inetAddress17 = null;
        undertowEmbeddedServletContainerFactory16.setAddress(inetAddress17);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory20.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int23 = undertowEmbeddedServletContainerFactory20.ioThreads;
        java.lang.Integer int24 = undertowEmbeddedServletContainerFactory20.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage25 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray26 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage25 };
        undertowEmbeddedServletContainerFactory20.addErrorPages(errorPageArray26);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray28 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray28);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray30 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray30);
        initializer29.initializers = servletContextInitializerArray30;
        undertowEmbeddedServletContainerFactory20.addInitializers(servletContextInitializerArray30);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray30);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray30);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList37 = undertowEmbeddedServletContainerFactory36.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray38 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray38);
        undertowEmbeddedServletContainerFactory36.addInitializers(servletContextInitializerArray38);
        initializer35.initializers = servletContextInitializerArray38;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray42 = initializer35.initializers;
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer43 = undertowEmbeddedServletContainerFactory16.getEmbeddedServletContainer(servletContextInitializerArray42);
        io.undertow.servlet.api.DeploymentManager deploymentManager44 = undertowEmbeddedServletContainerFactory7.createDeploymentManager(servletContextInitializerArray42);
        io.undertow.servlet.api.DeploymentManager deploymentManager45 = undertowEmbeddedServletContainerFactory0.createDeploymentManager(servletContextInitializerArray42);
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 0;
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList2);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(errorPageArray26);
        org.junit.Assert.assertNotNull(servletContextInitializerArray28);
        org.junit.Assert.assertNotNull(servletContextInitializerArray30);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList37);
        org.junit.Assert.assertNotNull(servletContextInitializerArray38);
        org.junit.Assert.assertNotNull(servletContextInitializerArray42);
        org.junit.Assert.assertNotNull(embeddedServletContainer43);
        org.junit.Assert.assertNotNull(deploymentManager44);
        org.junit.Assert.assertNotNull(deploymentManager45);
    }

    @Test
    public void test03314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03314");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList12;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList12;
        java.net.InetAddress inetAddress16 = undertowEmbeddedServletContainerFactory1.getAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo17 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo17);
        java.lang.Integer int19 = undertowEmbeddedServletContainerFactory1.workerThreads;
        java.lang.String str20 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray23 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList24 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList24, undertowBuilderCustomizerArray23);
        undertowEmbeddedServletContainerFactory22.builderCustomizers = undertowBuilderCustomizerList24;
        undertowEmbeddedServletContainerFactory22.setWorkerThreads((java.lang.Integer) 100);
        boolean boolean29 = undertowEmbeddedServletContainerFactory22.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory22.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray32 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray32);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray34 = initializer33.initializers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray35 = initializer33.initializers;
        io.undertow.servlet.api.DeploymentManager deploymentManager36 = undertowEmbeddedServletContainerFactory22.createDeploymentManager(servletContextInitializerArray35);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray35);
        io.undertow.servlet.api.DeploymentManager deploymentManager38 = undertowEmbeddedServletContainerFactory1.createDeploymentManager(servletContextInitializerArray35);
        undertowEmbeddedServletContainerFactory1.workerThreads = 0;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(inetAddress16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(servletContextInitializerArray32);
        org.junit.Assert.assertNotNull(servletContextInitializerArray34);
        org.junit.Assert.assertNotNull(servletContextInitializerArray35);
        org.junit.Assert.assertNotNull(deploymentManager36);
        org.junit.Assert.assertNotNull(deploymentManager38);
    }

    @Test
    public void test03315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03315");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList5 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList5, undertowDeploymentInfoCustomizerArray4);
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList5;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader10);
        java.net.InetAddress inetAddress12 = undertowEmbeddedServletContainerFactory1.getAddress();
        int int13 = undertowEmbeddedServletContainerFactory1.getPort();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList14 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet15 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray21 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray21);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = initializer22.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray23);
        initializer20.initializers = servletContextInitializerArray23;
        initializer19.initializers = servletContextInitializerArray23;
        undertowEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray23);
        java.lang.Integer int28 = undertowEmbeddedServletContainerFactory17.buffersPerRegion;
        undertowEmbeddedServletContainerFactory17.directBuffers = true;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory32.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = undertowEmbeddedServletContainerFactory35.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray37 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory35.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray37);
        undertowEmbeddedServletContainerFactory32.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray37);
        undertowEmbeddedServletContainerFactory17.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray37);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray37);
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(inetAddress12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList14);
        org.junit.Assert.assertNotNull(errorPageSet15);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertNotNull(servletContextInitializerArray21);
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray37);
    }

    @Test
    public void test03316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03316");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory1.workerThreads;
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory1.ioThreads;
        boolean boolean10 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("0.0.0.0");
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test03317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03317");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList10 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray11 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet12, errorPageArray11);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet12);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer17 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer17 };
        undertowEmbeddedServletContainerFactory16.addBuilderCustomizers(undertowBuilderCustomizerArray18);
        org.springframework.boot.context.embedded.Ssl ssl20 = undertowEmbeddedServletContainerFactory16.getSsl();
        java.lang.String str21 = undertowEmbeddedServletContainerFactory16.getContextPath();
        java.lang.String str22 = undertowEmbeddedServletContainerFactory16.getListenAddress();
        undertowEmbeddedServletContainerFactory16.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory16.buffersPerRegion = 10;
        undertowEmbeddedServletContainerFactory16.ioThreads = (-1);
        undertowEmbeddedServletContainerFactory16.setBufferSize((java.lang.Integer) 8080);
        undertowEmbeddedServletContainerFactory16.setBufferSize((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray33 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory16.addErrorPages(errorPageArray33);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray33);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList10);
        org.junit.Assert.assertNotNull(errorPageArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray18);
        org.junit.Assert.assertNull(ssl20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "0.0.0.0" + "'", str22, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageArray33);
    }

    @Test
    public void test03318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03318");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection8 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer11 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray12 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer11 };
        undertowEmbeddedServletContainerFactory10.addBuilderCustomizers(undertowBuilderCustomizerArray12);
        org.springframework.boot.context.embedded.Ssl ssl14 = undertowEmbeddedServletContainerFactory10.getSsl();
        java.lang.String str15 = undertowEmbeddedServletContainerFactory10.getContextPath();
        java.lang.String str16 = undertowEmbeddedServletContainerFactory10.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = undertowEmbeddedServletContainerFactory10.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray20 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList21 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList21, undertowBuilderCustomizerArray20);
        undertowEmbeddedServletContainerFactory19.builderCustomizers = undertowBuilderCustomizerList21;
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList21;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList21;
        org.springframework.core.io.ResourceLoader resourceLoader26 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer29 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray30 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer29 };
        undertowEmbeddedServletContainerFactory28.addBuilderCustomizers(undertowBuilderCustomizerArray30);
        org.springframework.boot.context.embedded.Ssl ssl32 = undertowEmbeddedServletContainerFactory28.getSsl();
        undertowEmbeddedServletContainerFactory28.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory28.setPort((int) (byte) 10);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet37 = undertowEmbeddedServletContainerFactory28.getErrorPages();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet38 = undertowEmbeddedServletContainerFactory28.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet38);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer41 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray42 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer41 };
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray42);
        initializer40.initializers = servletContextInitializerArray42;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray42);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray42);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo47 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo47);
        org.springframework.boot.context.embedded.Ssl ssl49 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl49);
        java.io.File file51 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file51);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray12);
        org.junit.Assert.assertNull(ssl14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "0.0.0.0" + "'", str16, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(resourceLoader26);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray30);
        org.junit.Assert.assertNull(ssl32);
        org.junit.Assert.assertNotNull(errorPageSet37);
        org.junit.Assert.assertNotNull(errorPageSet38);
        org.junit.Assert.assertNotNull(servletContextInitializerArray42);
    }

    @Test
    public void test03319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03319");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings13);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) (-1));
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.net.InetAddress inetAddress18 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress18);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 100);
        boolean boolean22 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection23 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection23);
    }

    @Test
    public void test03320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03320");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory1.getSsl();
        int int11 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray12 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray12);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory14.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray16);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray16);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        undertowEmbeddedServletContainerFactory1.ioThreads = 10;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo23 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer26 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray27 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer26 };
        undertowEmbeddedServletContainerFactory25.addBuilderCustomizers(undertowBuilderCustomizerArray27);
        org.springframework.boot.context.embedded.Ssl ssl29 = undertowEmbeddedServletContainerFactory25.getSsl();
        java.lang.String str30 = undertowEmbeddedServletContainerFactory25.getContextPath();
        java.lang.String str31 = undertowEmbeddedServletContainerFactory25.getListenAddress();
        undertowEmbeddedServletContainerFactory25.setRegisterDefaultServlet(false);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection34 = undertowEmbeddedServletContainerFactory25.getBuilderCustomizers();
        boolean boolean35 = undertowEmbeddedServletContainerFactory25.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray38 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList39 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList39, undertowBuilderCustomizerArray38);
        undertowEmbeddedServletContainerFactory37.builderCustomizers = undertowBuilderCustomizerList39;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = undertowEmbeddedServletContainerFactory37.getMimeMappings();
        java.lang.Integer int43 = undertowEmbeddedServletContainerFactory37.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer46 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray47 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer46 };
        undertowEmbeddedServletContainerFactory45.addBuilderCustomizers(undertowBuilderCustomizerArray47);
        org.springframework.boot.context.embedded.Ssl ssl49 = undertowEmbeddedServletContainerFactory45.getSsl();
        java.lang.String str50 = undertowEmbeddedServletContainerFactory45.getContextPath();
        java.lang.String str51 = undertowEmbeddedServletContainerFactory45.getListenAddress();
        undertowEmbeddedServletContainerFactory45.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl54 = null;
        undertowEmbeddedServletContainerFactory45.setSsl(ssl54);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings57 = undertowEmbeddedServletContainerFactory56.getMimeMappings();
        undertowEmbeddedServletContainerFactory45.setMimeMappings(mimeMappings57);
        undertowEmbeddedServletContainerFactory45.bufferSize = 1800;
        boolean boolean61 = undertowEmbeddedServletContainerFactory45.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray64 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer65 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray64);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer66 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray67 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer68 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray67);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray69 = initializer68.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer70 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray69);
        initializer66.initializers = servletContextInitializerArray69;
        initializer65.initializers = servletContextInitializerArray69;
        undertowEmbeddedServletContainerFactory63.addInitializers(servletContextInitializerArray69);
        io.undertow.servlet.api.DeploymentManager deploymentManager74 = undertowEmbeddedServletContainerFactory45.createDeploymentManager(servletContextInitializerArray69);
        io.undertow.servlet.api.DeploymentManager deploymentManager75 = undertowEmbeddedServletContainerFactory37.createDeploymentManager(servletContextInitializerArray69);
        undertowEmbeddedServletContainerFactory25.addInitializers(servletContextInitializerArray69);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.registerServletContainerInitializerToDriveServletContextInitializers(deploymentInfo23, servletContextInitializerArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray12);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray16);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray27);
        org.junit.Assert.assertNull(ssl29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "0.0.0.0" + "'", str31, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray47);
        org.junit.Assert.assertNull(ssl49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "0.0.0.0" + "'", str51, "0.0.0.0");
        org.junit.Assert.assertNotNull(mimeMappings57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray64);
        org.junit.Assert.assertNotNull(servletContextInitializerArray67);
        org.junit.Assert.assertNotNull(servletContextInitializerArray69);
        org.junit.Assert.assertNotNull(deploymentManager74);
        org.junit.Assert.assertNotNull(deploymentManager75);
    }

    @Test
    public void test03321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03321");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.io.File file11 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file11);
        java.net.InetAddress inetAddress13 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress13);
        undertowEmbeddedServletContainerFactory1.bufferSize = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray19 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList20 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList20, undertowBuilderCustomizerArray19);
        undertowEmbeddedServletContainerFactory18.builderCustomizers = undertowBuilderCustomizerList20;
        java.lang.String str23 = undertowEmbeddedServletContainerFactory18.getListenAddress();
        undertowEmbeddedServletContainerFactory18.ioThreads = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList26 = undertowEmbeddedServletContainerFactory18.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList26;
        org.springframework.boot.context.embedded.Ssl ssl28 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "0.0.0.0" + "'", str23, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList26);
    }

    @Test
    public void test03322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03322");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = undertowEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray9 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory7.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray9);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray9);
        java.lang.String str12 = undertowEmbeddedServletContainerFactory1.getContextPath();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo13 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo13);
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Undertow does not support JSPs");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList17);
    }

    @Test
    public void test03323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03323");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.bufferSize = 10;
        java.lang.String str5 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray8 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray8);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray11 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray11);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = initializer12.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray13);
        initializer10.initializers = servletContextInitializerArray13;
        initializer9.initializers = servletContextInitializerArray13;
        undertowEmbeddedServletContainerFactory7.addInitializers(servletContextInitializerArray13);
        java.lang.Integer int18 = undertowEmbeddedServletContainerFactory7.buffersPerRegion;
        io.undertow.Undertow.Builder builder20 = undertowEmbeddedServletContainerFactory7.createBuilder((int) (short) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray22 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray22);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray24 = initializer23.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray24);
        initializer21.initializers = servletContextInitializerArray24;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray27 = initializer21.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray27);
        io.undertow.servlet.api.DeploymentManager deploymentManager29 = undertowEmbeddedServletContainerFactory7.createDeploymentManager(servletContextInitializerArray27);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray27);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection31 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.net.InetAddress inetAddress32 = undertowEmbeddedServletContainerFactory1.getAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo33 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureMimeMappings(deploymentInfo33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "0.0.0.0" + "'", str5, "0.0.0.0");
        org.junit.Assert.assertNotNull(servletContextInitializerArray8);
        org.junit.Assert.assertNotNull(servletContextInitializerArray11);
        org.junit.Assert.assertNotNull(servletContextInitializerArray13);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(servletContextInitializerArray22);
        org.junit.Assert.assertNotNull(servletContextInitializerArray24);
        org.junit.Assert.assertNotNull(servletContextInitializerArray27);
        org.junit.Assert.assertNotNull(deploymentManager29);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection31);
        org.junit.Assert.assertNull(inetAddress32);
    }

    @Test
    public void test03324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03324");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int4 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage6 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray7 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage6 };
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray7);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory10.getMimeMappings();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = undertowEmbeddedServletContainerFactory10.builderCustomizers;
        undertowEmbeddedServletContainerFactory10.workerThreads = 100;
        undertowEmbeddedServletContainerFactory10.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory10.setSessionTimeout((int) (short) 100);
        undertowEmbeddedServletContainerFactory10.ioThreads = (-1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer23 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray24 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer23 };
        undertowEmbeddedServletContainerFactory22.addBuilderCustomizers(undertowBuilderCustomizerArray24);
        org.springframework.boot.context.embedded.Ssl ssl26 = undertowEmbeddedServletContainerFactory22.getSsl();
        java.lang.String str27 = undertowEmbeddedServletContainerFactory22.getContextPath();
        java.lang.String str28 = undertowEmbeddedServletContainerFactory22.getListenAddress();
        undertowEmbeddedServletContainerFactory22.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl31 = undertowEmbeddedServletContainerFactory22.getSsl();
        undertowEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection34 = undertowEmbeddedServletContainerFactory22.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer37 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray38 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer37 };
        undertowEmbeddedServletContainerFactory36.addBuilderCustomizers(undertowBuilderCustomizerArray38);
        org.springframework.boot.context.embedded.Ssl ssl40 = undertowEmbeddedServletContainerFactory36.getSsl();
        undertowEmbeddedServletContainerFactory36.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory36.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer47 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray48 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer47 };
        undertowEmbeddedServletContainerFactory46.addBuilderCustomizers(undertowBuilderCustomizerArray48);
        org.springframework.boot.context.embedded.Ssl ssl50 = undertowEmbeddedServletContainerFactory46.getSsl();
        java.lang.String str51 = undertowEmbeddedServletContainerFactory46.getContextPath();
        java.lang.String str52 = undertowEmbeddedServletContainerFactory46.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet53 = undertowEmbeddedServletContainerFactory46.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection54 = undertowEmbeddedServletContainerFactory46.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList55 = undertowEmbeddedServletContainerFactory46.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray56 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory46.addBuilderCustomizers(undertowBuilderCustomizerArray56);
        undertowEmbeddedServletContainerFactory36.addBuilderCustomizers(undertowBuilderCustomizerArray56);
        undertowEmbeddedServletContainerFactory22.addBuilderCustomizers(undertowBuilderCustomizerArray56);
        undertowEmbeddedServletContainerFactory10.addBuilderCustomizers(undertowBuilderCustomizerArray56);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray56);
        org.springframework.core.io.ResourceLoader resourceLoader62 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo63 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(errorPageArray7);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList12);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray24);
        org.junit.Assert.assertNull(ssl26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "0.0.0.0" + "'", str28, "0.0.0.0");
        org.junit.Assert.assertNull(ssl31);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection34);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray38);
        org.junit.Assert.assertNull(ssl40);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray48);
        org.junit.Assert.assertNull(ssl50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "0.0.0.0" + "'", str52, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet53);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection54);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList55);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray56);
        org.junit.Assert.assertNull(resourceLoader62);
    }

    @Test
    public void test03325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03325");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress10 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.net.InetAddress inetAddress12 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.net.InetAddress inetAddress13 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.lang.Class<?> wildcardClass14 = undertowEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(inetAddress10);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(inetAddress12);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test03326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03326");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList5 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList5, undertowDeploymentInfoCustomizerArray4);
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList5;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.lang.Integer int11 = undertowEmbeddedServletContainerFactory1.workerThreads;
        java.net.InetAddress inetAddress12 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress12);
        java.lang.ClassLoader classLoader14 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(classLoader14);
    }

    @Test
    public void test03327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03327");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        java.lang.String str1 = jarResourcemanager0.jarPath;
        jarResourcemanager0.jarPath = "0.0.0.0";
        java.lang.String str4 = jarResourcemanager0.jarPath;
        java.lang.String str5 = jarResourcemanager0.jarPath;
        java.lang.String str6 = jarResourcemanager0.jarPath;
        jarResourcemanager0.jarPath = "0.0.0.0";
        boolean boolean9 = jarResourcemanager0.isResourceChangeListenerSupported();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener10 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager0.registerResourceChangeListener(resourceChangeListener10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "0.0.0.0" + "'", str5, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0.0.0.0" + "'", str6, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test03328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03328");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        java.lang.Boolean boolean5 = undertowEmbeddedServletContainerFactory1.directBuffers;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection6 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection6);
        org.junit.Assert.assertNull(int7);
    }

    @Test
    public void test03329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03329");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.ioThreads = 100;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet4 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        undertowEmbeddedServletContainerFactory0.ioThreads = 100;
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory0.workerThreads;
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertNotNull(errorPageSet4);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test03330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03330");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.ioThreads = 100;
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader4);
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        undertowEmbeddedServletContainerFactory0.bufferSize = (-1);
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        org.springframework.core.io.ResourceLoader resourceLoader13 = undertowEmbeddedServletContainerFactory0.resourceLoader;
        boolean boolean14 = undertowEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(resourceLoader13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test03331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03331");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (-1));
        java.lang.String str3 = undertowEmbeddedServletContainerFactory2.getContextPath();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    }

    @Test
    public void test03332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03332");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        io.undertow.Undertow.Builder builder6 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager7 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer9 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder6, deploymentManager7, 0);
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.springframework.core.io.ResourceLoader resourceLoader11 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader11;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray14 = undertowEmbeddedServletContainerFactory1.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection13);
    }

    @Test
    public void test03333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03333");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress10 = undertowEmbeddedServletContainerFactory1.getAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo11 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo11);
        java.lang.Integer int13 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        int int14 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.springframework.boot.context.embedded.Ssl ssl15 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl15);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(inetAddress10);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1800 + "'", int14 == 1800);
    }

    @Test
    public void test03334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03334");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.bufferSize = 10;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList17, undertowBuilderCustomizerArray16);
        undertowEmbeddedServletContainerFactory15.builderCustomizers = undertowBuilderCustomizerList17;
        undertowEmbeddedServletContainerFactory15.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory15.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = undertowEmbeddedServletContainerFactory15.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings24);
        boolean boolean26 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(mimeMappings27);
    }

    @Test
    public void test03335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03335");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory1.workerThreads;
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 35);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(int8);
    }

    @Test
    public void test03336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03336");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory1.getSsl();
        int int11 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray12 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray12);
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        java.lang.Integer int21 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray12);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(int21);
    }

    @Test
    public void test03337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03337");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.io.File file2 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file2);
        undertowEmbeddedServletContainerFactory0.buffersPerRegion = 0;
        int int6 = undertowEmbeddedServletContainerFactory0.getPort();
        int int7 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        java.net.InetAddress inetAddress8 = null;
        undertowEmbeddedServletContainerFactory0.setAddress(inetAddress8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = undertowEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8080 + "'", int6 == 8080);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1800 + "'", int7 == 1800);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertNotNull(mimeMappings11);
    }

    @Test
    public void test03338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03338");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.net.InetAddress inetAddress6 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray14 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList15, undertowBuilderCustomizerArray14);
        undertowEmbeddedServletContainerFactory13.builderCustomizers = undertowBuilderCustomizerList15;
        undertowEmbeddedServletContainerFactory13.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory13.bufferSize = 1;
        org.springframework.boot.context.embedded.Ssl ssl22 = null;
        undertowEmbeddedServletContainerFactory13.setSsl(ssl22);
        java.lang.String str24 = undertowEmbeddedServletContainerFactory13.getListenAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = undertowEmbeddedServletContainerFactory13.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings25);
        org.springframework.core.io.ResourceLoader resourceLoader27 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader27;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray31 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList32 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList32, undertowBuilderCustomizerArray31);
        undertowEmbeddedServletContainerFactory30.builderCustomizers = undertowBuilderCustomizerList32;
        undertowEmbeddedServletContainerFactory30.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory30.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = undertowEmbeddedServletContainerFactory30.getMimeMappings();
        java.io.File file40 = null;
        undertowEmbeddedServletContainerFactory30.setDocumentRoot(file40);
        org.springframework.core.io.ResourceLoader resourceLoader42 = undertowEmbeddedServletContainerFactory30.resourceLoader;
        boolean boolean43 = undertowEmbeddedServletContainerFactory30.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList45 = undertowEmbeddedServletContainerFactory44.deploymentInfoCustomizers;
        java.io.File file46 = null;
        undertowEmbeddedServletContainerFactory44.setDocumentRoot(file46);
        undertowEmbeddedServletContainerFactory44.buffersPerRegion = 0;
        undertowEmbeddedServletContainerFactory44.setPort((int) (short) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer54 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray55 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer54 };
        undertowEmbeddedServletContainerFactory53.addBuilderCustomizers(undertowBuilderCustomizerArray55);
        org.springframework.boot.context.embedded.Ssl ssl57 = undertowEmbeddedServletContainerFactory53.getSsl();
        undertowEmbeddedServletContainerFactory53.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory53.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress62 = undertowEmbeddedServletContainerFactory53.getAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo63 = null;
        undertowEmbeddedServletContainerFactory53.configureErrorPages(deploymentInfo63);
        undertowEmbeddedServletContainerFactory53.setIoThreads((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer69 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray70 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer69 };
        undertowEmbeddedServletContainerFactory68.addBuilderCustomizers(undertowBuilderCustomizerArray70);
        undertowEmbeddedServletContainerFactory68.setSessionTimeout((int) (byte) 10);
        undertowEmbeddedServletContainerFactory68.setIoThreads((java.lang.Integer) 0);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList76 = undertowEmbeddedServletContainerFactory68.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory53.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList76;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory79 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray80 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList81 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList81, undertowBuilderCustomizerArray80);
        undertowEmbeddedServletContainerFactory79.builderCustomizers = undertowBuilderCustomizerList81;
        undertowEmbeddedServletContainerFactory79.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory79.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings88 = undertowEmbeddedServletContainerFactory79.getMimeMappings();
        java.lang.String str89 = undertowEmbeddedServletContainerFactory79.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer undertowDeploymentInfoCustomizer90 = null;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray91 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] { undertowDeploymentInfoCustomizer90 };
        undertowEmbeddedServletContainerFactory79.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray91);
        undertowEmbeddedServletContainerFactory53.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray91);
        undertowEmbeddedServletContainerFactory44.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray91);
        undertowEmbeddedServletContainerFactory30.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray91);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray91);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 10;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "0.0.0.0" + "'", str24, "0.0.0.0");
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNull(resourceLoader42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList45);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray55);
        org.junit.Assert.assertNull(ssl57);
        org.junit.Assert.assertNull(inetAddress62);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray70);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList76);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(mimeMappings88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "0.0.0.0" + "'", str89, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray91);
    }

    @Test
    public void test03339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03339");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.jarPath = "hi!";
        boolean boolean6 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean7 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "";
        jarResourcemanager1.jarPath = "";
        jarResourcemanager1.close();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener13 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager1.registerResourceChangeListener(resourceChangeListener13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test03340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03340");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        java.util.concurrent.TimeUnit timeUnit5 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout(0, timeUnit5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03341");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList12;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList12;
        java.lang.String str16 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.io.File file17 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.core.io.ResourceLoader resourceLoader18 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(resourceLoader18);
    }

    @Test
    public void test03342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03342");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList12;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList12;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory16.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory16.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray18);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        io.undertow.Undertow.Builder builder27 = undertowEmbeddedServletContainerFactory24.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer30 = undertowEmbeddedServletContainerFactory22.getUndertowEmbeddedServletContainer(builder27, deploymentManager28, (int) (byte) 0);
        io.undertow.servlet.api.DeploymentManager deploymentManager31 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer33 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder27, deploymentManager31, (int) ' ');
        org.springframework.boot.context.embedded.Ssl ssl34 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl34);
        undertowEmbeddedServletContainerFactory1.workerThreads = 10;
        boolean boolean38 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo39 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList41 = undertowEmbeddedServletContainerFactory40.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray42 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray42);
        undertowEmbeddedServletContainerFactory40.addInitializers(servletContextInitializerArray42);
        undertowEmbeddedServletContainerFactory40.setBuffersPerRegion((java.lang.Integer) 100);
        java.net.InetAddress inetAddress47 = undertowEmbeddedServletContainerFactory40.getAddress();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray48 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray48);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer50 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray51 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray51);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray53 = initializer52.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray53);
        initializer50.initializers = servletContextInitializerArray53;
        initializer49.initializers = servletContextInitializerArray53;
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer57 = undertowEmbeddedServletContainerFactory40.getEmbeddedServletContainer(servletContextInitializerArray53);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray53);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.registerServletContainerInitializerToDriveServletContextInitializers(deploymentInfo39, servletContextInitializerArray53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray18);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer30);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList41);
        org.junit.Assert.assertNotNull(servletContextInitializerArray42);
        org.junit.Assert.assertNull(inetAddress47);
        org.junit.Assert.assertNotNull(servletContextInitializerArray48);
        org.junit.Assert.assertNotNull(servletContextInitializerArray51);
        org.junit.Assert.assertNotNull(servletContextInitializerArray53);
        org.junit.Assert.assertNotNull(embeddedServletContainer57);
    }

    @Test
    public void test03343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03343");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory1.getSsl();
        int int11 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray12 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray12);
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 100);
        java.io.File file19 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file19);
        java.lang.Integer int21 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray25 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer24 };
        undertowEmbeddedServletContainerFactory23.addBuilderCustomizers(undertowBuilderCustomizerArray25);
        org.springframework.boot.context.embedded.Ssl ssl27 = undertowEmbeddedServletContainerFactory23.getSsl();
        java.lang.String str28 = undertowEmbeddedServletContainerFactory23.getContextPath();
        java.lang.String str29 = undertowEmbeddedServletContainerFactory23.getListenAddress();
        undertowEmbeddedServletContainerFactory23.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl32 = undertowEmbeddedServletContainerFactory23.getSsl();
        undertowEmbeddedServletContainerFactory23.setPort((int) (short) 0);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList35 = undertowEmbeddedServletContainerFactory23.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList35;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray12);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray25);
        org.junit.Assert.assertNull(ssl27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "0.0.0.0" + "'", str29, "0.0.0.0");
        org.junit.Assert.assertNull(ssl32);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList35);
    }

    @Test
    public void test03344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03344");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader9;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.lang.Boolean boolean12 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test03345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03345");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray2 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray2);
        undertowEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray2);
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory0.ioThreads;
        java.lang.ClassLoader classLoader6 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        org.springframework.boot.context.embedded.Ssl ssl7 = undertowEmbeddedServletContainerFactory0.getSsl();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo8 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo8);
        java.lang.String str10 = undertowEmbeddedServletContainerFactory0.getContextPath();
        java.lang.String str11 = undertowEmbeddedServletContainerFactory0.getContextPath();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertNotNull(servletContextInitializerArray2);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNull(ssl7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test03346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03346");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList5 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList5, undertowDeploymentInfoCustomizerArray4);
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList5;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader10);
        java.net.InetAddress inetAddress12 = undertowEmbeddedServletContainerFactory1.getAddress();
        int int13 = undertowEmbeddedServletContainerFactory1.getPort();
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(inetAddress12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(int14);
    }

    @Test
    public void test03347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03347");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory1.workerThreads;
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.ClassLoader classLoader11 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer16 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer16 };
        undertowEmbeddedServletContainerFactory15.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        undertowEmbeddedServletContainerFactory13.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo21 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo21);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int25 = undertowEmbeddedServletContainerFactory1.ioThreads;
        io.undertow.server.handlers.resource.ResourceManager resourceManager26 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(classLoader11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(resourceManager26);
    }

    @Test
    public void test03348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03348");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        io.undertow.server.handlers.resource.ResourceManager resourceManager11 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.springframework.core.io.ResourceLoader resourceLoader12 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader12);
        org.springframework.boot.context.embedded.Ssl ssl14 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.Ssl ssl18 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory21.directBuffers = false;
        undertowEmbeddedServletContainerFactory21.setJspServletClassName("");
        io.undertow.Undertow.Builder builder26 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer29 = undertowEmbeddedServletContainerFactory21.getUndertowEmbeddedServletContainer(builder26, deploymentManager27, 0);
        java.lang.Integer int30 = undertowEmbeddedServletContainerFactory21.ioThreads;
        org.springframework.core.io.ResourceLoader resourceLoader31 = null;
        undertowEmbeddedServletContainerFactory21.resourceLoader = resourceLoader31;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo33 = null;
        undertowEmbeddedServletContainerFactory21.configureErrorPages(deploymentInfo33);
        undertowEmbeddedServletContainerFactory21.setContextPath("");
        io.undertow.Undertow.Builder builder38 = undertowEmbeddedServletContainerFactory21.createBuilder((-1));
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureSsl(ssl18, 8080, builder38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(resourceManager11);
        org.junit.Assert.assertNull(ssl14);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(builder38);
    }

    @Test
    public void test03349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03349");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer6 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray7 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer6 };
        undertowEmbeddedServletContainerFactory5.addBuilderCustomizers(undertowBuilderCustomizerArray7);
        org.springframework.boot.context.embedded.Ssl ssl9 = undertowEmbeddedServletContainerFactory5.getSsl();
        undertowEmbeddedServletContainerFactory5.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory5.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer16 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer16 };
        undertowEmbeddedServletContainerFactory15.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        undertowEmbeddedServletContainerFactory5.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        undertowEmbeddedServletContainerFactory1.ioThreads = 8080;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray7);
        org.junit.Assert.assertNull(ssl9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
    }

    @Test
    public void test03350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03350");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory13.directBuffers = false;
        undertowEmbeddedServletContainerFactory13.setJspServletClassName("");
        java.lang.String str18 = undertowEmbeddedServletContainerFactory13.getContextPath();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray19 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20, errorPageArray19);
        undertowEmbeddedServletContainerFactory13.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20);
        org.springframework.core.io.ResourceLoader resourceLoader24 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader24;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList26 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.ioThreads = 1;
        org.springframework.boot.context.embedded.Ssl ssl29 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl29);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(errorPageArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList26);
    }

    @Test
    public void test03351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03351");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader9;
        java.lang.String str11 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.setPort((int) (short) 100);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader18 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.lang.Boolean boolean19 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.Ssl ssl20 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory23.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory23.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray30 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList31 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList31, undertowBuilderCustomizerArray30);
        undertowEmbeddedServletContainerFactory29.builderCustomizers = undertowBuilderCustomizerList31;
        undertowEmbeddedServletContainerFactory29.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory29.bufferSize = 1;
        org.springframework.boot.context.embedded.Ssl ssl38 = null;
        undertowEmbeddedServletContainerFactory29.setSsl(ssl38);
        java.lang.String str40 = undertowEmbeddedServletContainerFactory29.getListenAddress();
        io.undertow.Undertow.Builder builder42 = undertowEmbeddedServletContainerFactory29.createBuilder((int) (byte) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer45 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray46 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer45 };
        undertowEmbeddedServletContainerFactory44.addBuilderCustomizers(undertowBuilderCustomizerArray46);
        org.springframework.boot.context.embedded.Ssl ssl48 = undertowEmbeddedServletContainerFactory44.getSsl();
        java.lang.String str49 = undertowEmbeddedServletContainerFactory44.getContextPath();
        java.lang.String str50 = undertowEmbeddedServletContainerFactory44.getListenAddress();
        undertowEmbeddedServletContainerFactory44.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl53 = undertowEmbeddedServletContainerFactory44.getSsl();
        int int54 = undertowEmbeddedServletContainerFactory44.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray55 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory44.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray55);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings58 = undertowEmbeddedServletContainerFactory57.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray59 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory57.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray59);
        undertowEmbeddedServletContainerFactory44.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray59);
        undertowEmbeddedServletContainerFactory44.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList65 = undertowEmbeddedServletContainerFactory64.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory64.ioThreads = 100;
        org.springframework.core.io.ResourceLoader resourceLoader68 = null;
        undertowEmbeddedServletContainerFactory64.setResourceLoader(resourceLoader68);
        undertowEmbeddedServletContainerFactory64.directBuffers = false;
        java.lang.Integer int72 = undertowEmbeddedServletContainerFactory64.buffersPerRegion;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        boolean boolean75 = undertowEmbeddedServletContainerFactory74.isRegisterJspServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings76 = undertowEmbeddedServletContainerFactory74.getMimeMappings();
        undertowEmbeddedServletContainerFactory64.setMimeMappings(mimeMappings76);
        undertowEmbeddedServletContainerFactory44.setMimeMappings(mimeMappings76);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory81 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 8080);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory83 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray84 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer85 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray84);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer86 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray87 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer88 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray87);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray89 = initializer88.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer90 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray89);
        initializer86.initializers = servletContextInitializerArray89;
        initializer85.initializers = servletContextInitializerArray89;
        undertowEmbeddedServletContainerFactory83.addInitializers(servletContextInitializerArray89);
        undertowEmbeddedServletContainerFactory81.addInitializers(servletContextInitializerArray89);
        io.undertow.servlet.api.DeploymentManager deploymentManager95 = undertowEmbeddedServletContainerFactory44.createDeploymentManager(servletContextInitializerArray89);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer97 = undertowEmbeddedServletContainerFactory23.getUndertowEmbeddedServletContainer(builder42, deploymentManager95, (int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureSsl(ssl20, 8080, builder42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList12);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNull(resourceLoader18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "0.0.0.0" + "'", str40, "0.0.0.0");
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray46);
        org.junit.Assert.assertNull(ssl48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "0.0.0.0" + "'", str50, "0.0.0.0");
        org.junit.Assert.assertNull(ssl53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray55);
        org.junit.Assert.assertNotNull(mimeMappings58);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray59);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList65);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(mimeMappings76);
        org.junit.Assert.assertNotNull(servletContextInitializerArray84);
        org.junit.Assert.assertNotNull(servletContextInitializerArray87);
        org.junit.Assert.assertNotNull(servletContextInitializerArray89);
        org.junit.Assert.assertNotNull(deploymentManager95);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer97);
    }

    @Test
    public void test03352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03352");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection8 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer11 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray12 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer11 };
        undertowEmbeddedServletContainerFactory10.addBuilderCustomizers(undertowBuilderCustomizerArray12);
        org.springframework.boot.context.embedded.Ssl ssl14 = undertowEmbeddedServletContainerFactory10.getSsl();
        java.lang.String str15 = undertowEmbeddedServletContainerFactory10.getContextPath();
        java.lang.String str16 = undertowEmbeddedServletContainerFactory10.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = undertowEmbeddedServletContainerFactory10.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray20 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList21 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList21, undertowBuilderCustomizerArray20);
        undertowEmbeddedServletContainerFactory19.builderCustomizers = undertowBuilderCustomizerList21;
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList21;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList21;
        org.springframework.core.io.ResourceLoader resourceLoader26 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader26);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 10;
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray30 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray12);
        org.junit.Assert.assertNull(ssl14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "0.0.0.0" + "'", str16, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test03353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03353");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) -1);
        org.springframework.boot.context.embedded.Ssl ssl2 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer6 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray7 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer6 };
        undertowEmbeddedServletContainerFactory5.addBuilderCustomizers(undertowBuilderCustomizerArray7);
        org.springframework.boot.context.embedded.Ssl ssl9 = undertowEmbeddedServletContainerFactory5.getSsl();
        java.lang.String str10 = undertowEmbeddedServletContainerFactory5.getContextPath();
        java.lang.String str11 = undertowEmbeddedServletContainerFactory5.getListenAddress();
        undertowEmbeddedServletContainerFactory5.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl14 = undertowEmbeddedServletContainerFactory5.getSsl();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = undertowEmbeddedServletContainerFactory5.getMimeMappings();
        boolean boolean16 = undertowEmbeddedServletContainerFactory5.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer19 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray20 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer19 };
        undertowEmbeddedServletContainerFactory18.addBuilderCustomizers(undertowBuilderCustomizerArray20);
        org.springframework.boot.context.embedded.Ssl ssl22 = undertowEmbeddedServletContainerFactory18.getSsl();
        java.net.InetAddress inetAddress23 = undertowEmbeddedServletContainerFactory18.getAddress();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection24 = undertowEmbeddedServletContainerFactory18.getBuilderCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = undertowEmbeddedServletContainerFactory18.getMimeMappings();
        undertowEmbeddedServletContainerFactory5.setMimeMappings(mimeMappings25);
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings25);
        org.springframework.core.io.ResourceLoader resourceLoader28 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader28;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray7);
        org.junit.Assert.assertNull(ssl9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "0.0.0.0" + "'", str11, "0.0.0.0");
        org.junit.Assert.assertNull(ssl14);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray20);
        org.junit.Assert.assertNull(ssl22);
        org.junit.Assert.assertNull(inetAddress23);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection24);
        org.junit.Assert.assertNotNull(mimeMappings25);
    }

    @Test
    public void test03354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03354");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader4);
        io.undertow.Undertow.Builder builder7 = undertowEmbeddedServletContainerFactory1.createBuilder((-1));
        org.junit.Assert.assertNotNull(builder7);
    }

    @Test
    public void test03355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03355");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.io.File file8 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 8080);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        io.undertow.Undertow.Builder builder17 = undertowEmbeddedServletContainerFactory14.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager18 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer20 = undertowEmbeddedServletContainerFactory12.getUndertowEmbeddedServletContainer(builder17, deploymentManager18, (int) (byte) 0);
        io.undertow.servlet.api.DeploymentManager deploymentManager21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer23 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder17, deploymentManager21, (int) (short) 100);
        boolean boolean24 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray29 = undertowEmbeddedServletContainerFactory1.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer20);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test03356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03356");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.close();
        boolean boolean5 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "";
        java.lang.String str8 = jarResourcemanager1.jarPath;
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test03357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03357");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.net.InetAddress inetAddress6 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.ioThreads = 1800;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray14 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray14);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray17 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray17);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = initializer18.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray19);
        initializer16.initializers = servletContextInitializerArray19;
        initializer15.initializers = servletContextInitializerArray19;
        undertowEmbeddedServletContainerFactory13.addInitializers(servletContextInitializerArray19);
        java.lang.Integer int24 = undertowEmbeddedServletContainerFactory13.buffersPerRegion;
        undertowEmbeddedServletContainerFactory13.setWorkerThreads((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 8080);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray30 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray30);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray32 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray32);
        initializer31.initializers = servletContextInitializerArray32;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray37 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList38 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList38, undertowBuilderCustomizerArray37);
        undertowEmbeddedServletContainerFactory36.builderCustomizers = undertowBuilderCustomizerList38;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings41 = undertowEmbeddedServletContainerFactory36.getMimeMappings();
        boolean boolean42 = undertowEmbeddedServletContainerFactory36.isRegisterJspServlet();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray43 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray43);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer45 = undertowEmbeddedServletContainerFactory36.getEmbeddedServletContainer(servletContextInitializerArray43);
        initializer31.initializers = servletContextInitializerArray43;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray43);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer48 = undertowEmbeddedServletContainerFactory29.getEmbeddedServletContainer(servletContextInitializerArray43);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray43);
        undertowEmbeddedServletContainerFactory13.addInitializers(servletContextInitializerArray43);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray43);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray43);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setContextPath("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
        org.junit.Assert.assertNotNull(servletContextInitializerArray14);
        org.junit.Assert.assertNotNull(servletContextInitializerArray17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(servletContextInitializerArray30);
        org.junit.Assert.assertNotNull(servletContextInitializerArray32);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(mimeMappings41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray43);
        org.junit.Assert.assertNotNull(embeddedServletContainer45);
        org.junit.Assert.assertNotNull(embeddedServletContainer48);
    }

    @Test
    public void test03358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03358");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        boolean boolean5 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        java.net.InetAddress inetAddress12 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(inetAddress12);
    }

    @Test
    public void test03359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03359");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress10 = undertowEmbeddedServletContainerFactory1.getAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo11 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo11);
        java.lang.Integer int13 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 10;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo16 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo16);
        org.springframework.boot.context.embedded.Ssl ssl18 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(inetAddress10);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(ssl18);
    }

    @Test
    public void test03360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03360");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList2 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory0.workerThreads;
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList2);
        org.junit.Assert.assertNull(int5);
    }

    @Test
    public void test03361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03361");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray2 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray5 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray5);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray7 = initializer6.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray7);
        initializer4.initializers = servletContextInitializerArray7;
        initializer3.initializers = servletContextInitializerArray7;
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray7);
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        io.undertow.Undertow.Builder builder14 = undertowEmbeddedServletContainerFactory1.createBuilder((int) (short) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer17 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer17 };
        undertowEmbeddedServletContainerFactory16.addBuilderCustomizers(undertowBuilderCustomizerArray18);
        org.springframework.boot.context.embedded.Ssl ssl20 = undertowEmbeddedServletContainerFactory16.getSsl();
        java.lang.String str21 = undertowEmbeddedServletContainerFactory16.getContextPath();
        java.lang.String str22 = undertowEmbeddedServletContainerFactory16.getListenAddress();
        undertowEmbeddedServletContainerFactory16.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory16.buffersPerRegion = 10;
        undertowEmbeddedServletContainerFactory16.ioThreads = (-1);
        org.springframework.core.io.ResourceLoader resourceLoader29 = null;
        undertowEmbeddedServletContainerFactory16.setResourceLoader(resourceLoader29);
        undertowEmbeddedServletContainerFactory16.workerThreads = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer35 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray36 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer35 };
        undertowEmbeddedServletContainerFactory34.addBuilderCustomizers(undertowBuilderCustomizerArray36);
        org.springframework.boot.context.embedded.Ssl ssl38 = undertowEmbeddedServletContainerFactory34.getSsl();
        undertowEmbeddedServletContainerFactory34.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory34.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress43 = undertowEmbeddedServletContainerFactory34.getAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo44 = null;
        undertowEmbeddedServletContainerFactory34.configureErrorPages(deploymentInfo44);
        undertowEmbeddedServletContainerFactory34.setIoThreads((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer50 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray51 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer50 };
        undertowEmbeddedServletContainerFactory49.addBuilderCustomizers(undertowBuilderCustomizerArray51);
        undertowEmbeddedServletContainerFactory49.setSessionTimeout((int) (byte) 10);
        undertowEmbeddedServletContainerFactory49.setIoThreads((java.lang.Integer) 0);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList57 = undertowEmbeddedServletContainerFactory49.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory34.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList57;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray61 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList62 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList62, undertowBuilderCustomizerArray61);
        undertowEmbeddedServletContainerFactory60.builderCustomizers = undertowBuilderCustomizerList62;
        undertowEmbeddedServletContainerFactory60.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory60.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings69 = undertowEmbeddedServletContainerFactory60.getMimeMappings();
        java.lang.String str70 = undertowEmbeddedServletContainerFactory60.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer undertowDeploymentInfoCustomizer71 = null;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray72 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] { undertowDeploymentInfoCustomizer71 };
        undertowEmbeddedServletContainerFactory60.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray72);
        undertowEmbeddedServletContainerFactory34.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray72);
        undertowEmbeddedServletContainerFactory16.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray72);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList76 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList76;
        org.junit.Assert.assertNotNull(servletContextInitializerArray2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray5);
        org.junit.Assert.assertNotNull(servletContextInitializerArray7);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray18);
        org.junit.Assert.assertNull(ssl20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "0.0.0.0" + "'", str22, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray36);
        org.junit.Assert.assertNull(ssl38);
        org.junit.Assert.assertNull(inetAddress43);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray51);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList57);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(mimeMappings69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "0.0.0.0" + "'", str70, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray72);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList76);
    }

    @Test
    public void test03362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03362");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.jarPath = "hi!";
        boolean boolean6 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "hi!";
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource10 = jarResourcemanager1.getResource("");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test03363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03363");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader7 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 8080);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray12);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray15 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray15);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray17 = initializer16.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray17);
        initializer14.initializers = servletContextInitializerArray17;
        initializer13.initializers = servletContextInitializerArray17;
        undertowEmbeddedServletContainerFactory11.addInitializers(servletContextInitializerArray17);
        java.lang.Integer int22 = undertowEmbeddedServletContainerFactory11.buffersPerRegion;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray25 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList26 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList26, undertowBuilderCustomizerArray25);
        undertowEmbeddedServletContainerFactory24.builderCustomizers = undertowBuilderCustomizerList26;
        undertowEmbeddedServletContainerFactory24.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory24.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        java.lang.String str34 = undertowEmbeddedServletContainerFactory24.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer undertowDeploymentInfoCustomizer35 = null;
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray36 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] { undertowDeploymentInfoCustomizer35 };
        undertowEmbeddedServletContainerFactory24.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        undertowEmbeddedServletContainerFactory11.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray36);
        undertowEmbeddedServletContainerFactory1.workerThreads = 100;
        java.net.InetAddress inetAddress42 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.lang.ClassLoader classLoader43 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNull(resourceLoader7);
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertNotNull(servletContextInitializerArray15);
        org.junit.Assert.assertNotNull(servletContextInitializerArray17);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "0.0.0.0" + "'", str34, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray36);
        org.junit.Assert.assertNull(inetAddress42);
        org.junit.Assert.assertNotNull(classLoader43);
    }

    @Test
    public void test03364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03364");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection9 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setContextPath("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection9);
    }

    @Test
    public void test03365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03365");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.ioThreads = 100;
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader4);
        undertowEmbeddedServletContainerFactory0.directBuffers = false;
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory0.buffersPerRegion;
        undertowEmbeddedServletContainerFactory0.bufferSize = (-1);
        undertowEmbeddedServletContainerFactory0.directBuffers = true;
        io.undertow.Undertow.Builder builder14 = undertowEmbeddedServletContainerFactory0.createBuilder((-1));
        int int15 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
    }

    @Test
    public void test03366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03366");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.io.File file2 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file2);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo4 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo4);
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory0.directBuffers;
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory10.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory10.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory10.ioThreads = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray19 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList20 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList20, undertowBuilderCustomizerArray19);
        undertowEmbeddedServletContainerFactory18.builderCustomizers = undertowBuilderCustomizerList20;
        undertowEmbeddedServletContainerFactory18.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory18.bufferSize = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList27 = undertowEmbeddedServletContainerFactory18.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer30 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray31 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer30 };
        undertowEmbeddedServletContainerFactory29.addBuilderCustomizers(undertowBuilderCustomizerArray31);
        org.springframework.boot.context.embedded.Ssl ssl33 = undertowEmbeddedServletContainerFactory29.getSsl();
        java.lang.String str34 = undertowEmbeddedServletContainerFactory29.getContextPath();
        java.lang.String str35 = undertowEmbeddedServletContainerFactory29.getListenAddress();
        undertowEmbeddedServletContainerFactory29.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl38 = undertowEmbeddedServletContainerFactory29.getSsl();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = undertowEmbeddedServletContainerFactory29.getMimeMappings();
        undertowEmbeddedServletContainerFactory18.setMimeMappings(mimeMappings39);
        undertowEmbeddedServletContainerFactory10.setMimeMappings(mimeMappings39);
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings39);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer45 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray46 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer45 };
        undertowEmbeddedServletContainerFactory44.addBuilderCustomizers(undertowBuilderCustomizerArray46);
        org.springframework.boot.context.embedded.Ssl ssl48 = undertowEmbeddedServletContainerFactory44.getSsl();
        java.lang.String str49 = undertowEmbeddedServletContainerFactory44.getContextPath();
        java.lang.String str50 = undertowEmbeddedServletContainerFactory44.getListenAddress();
        undertowEmbeddedServletContainerFactory44.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl53 = undertowEmbeddedServletContainerFactory44.getSsl();
        undertowEmbeddedServletContainerFactory44.setPort((int) (short) 0);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection56 = undertowEmbeddedServletContainerFactory44.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer59 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray60 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer59 };
        undertowEmbeddedServletContainerFactory58.addBuilderCustomizers(undertowBuilderCustomizerArray60);
        org.springframework.boot.context.embedded.Ssl ssl62 = undertowEmbeddedServletContainerFactory58.getSsl();
        undertowEmbeddedServletContainerFactory58.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory58.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer69 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray70 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer69 };
        undertowEmbeddedServletContainerFactory68.addBuilderCustomizers(undertowBuilderCustomizerArray70);
        org.springframework.boot.context.embedded.Ssl ssl72 = undertowEmbeddedServletContainerFactory68.getSsl();
        java.lang.String str73 = undertowEmbeddedServletContainerFactory68.getContextPath();
        java.lang.String str74 = undertowEmbeddedServletContainerFactory68.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet75 = undertowEmbeddedServletContainerFactory68.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection76 = undertowEmbeddedServletContainerFactory68.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList77 = undertowEmbeddedServletContainerFactory68.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray78 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory68.addBuilderCustomizers(undertowBuilderCustomizerArray78);
        undertowEmbeddedServletContainerFactory58.addBuilderCustomizers(undertowBuilderCustomizerArray78);
        undertowEmbeddedServletContainerFactory44.addBuilderCustomizers(undertowBuilderCustomizerArray78);
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray78);
        io.undertow.server.handlers.resource.ResourceManager resourceManager83 = undertowEmbeddedServletContainerFactory0.getDocumentRootResourceManager();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList84 = undertowEmbeddedServletContainerFactory0.builderCustomizers;
        java.lang.String str85 = undertowEmbeddedServletContainerFactory0.getListenAddress();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList27);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray31);
        org.junit.Assert.assertNull(ssl33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "0.0.0.0" + "'", str35, "0.0.0.0");
        org.junit.Assert.assertNull(ssl38);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray46);
        org.junit.Assert.assertNull(ssl48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "0.0.0.0" + "'", str50, "0.0.0.0");
        org.junit.Assert.assertNull(ssl53);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection56);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray60);
        org.junit.Assert.assertNull(ssl62);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray70);
        org.junit.Assert.assertNull(ssl72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "0.0.0.0" + "'", str74, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet75);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection76);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList77);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray78);
        org.junit.Assert.assertNotNull(resourceManager83);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "0.0.0.0" + "'", str85, "0.0.0.0");
    }

    @Test
    public void test03367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03367");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList12;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList12;
        java.lang.String str16 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.io.File file17 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray20 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList21 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList21, undertowBuilderCustomizerArray20);
        undertowEmbeddedServletContainerFactory19.builderCustomizers = undertowBuilderCustomizerList21;
        undertowEmbeddedServletContainerFactory19.workerThreads = (-1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray29 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer28 };
        undertowEmbeddedServletContainerFactory27.addBuilderCustomizers(undertowBuilderCustomizerArray29);
        org.springframework.boot.context.embedded.Ssl ssl31 = undertowEmbeddedServletContainerFactory27.getSsl();
        java.lang.String str32 = undertowEmbeddedServletContainerFactory27.getContextPath();
        java.lang.String str33 = undertowEmbeddedServletContainerFactory27.getListenAddress();
        undertowEmbeddedServletContainerFactory27.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl36 = undertowEmbeddedServletContainerFactory27.getSsl();
        int int37 = undertowEmbeddedServletContainerFactory27.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray38 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory27.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray38);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings41 = undertowEmbeddedServletContainerFactory40.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray42 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory40.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray42);
        undertowEmbeddedServletContainerFactory27.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray42);
        undertowEmbeddedServletContainerFactory19.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray42);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray42);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo47 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureMimeMappings(deploymentInfo47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray29);
        org.junit.Assert.assertNull(ssl31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "0.0.0.0" + "'", str33, "0.0.0.0");
        org.junit.Assert.assertNull(ssl36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray38);
        org.junit.Assert.assertNotNull(mimeMappings41);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray42);
    }

    @Test
    public void test03368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03368");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.ioThreads = 100;
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        undertowEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader4);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory9.getMimeMappings();
        io.undertow.Undertow.Builder builder12 = undertowEmbeddedServletContainerFactory9.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager13 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer15 = undertowEmbeddedServletContainerFactory7.getUndertowEmbeddedServletContainer(builder12, deploymentManager13, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory7.bufferSize = (-1);
        java.lang.Boolean boolean18 = undertowEmbeddedServletContainerFactory7.directBuffers;
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory7.getSsl();
        java.io.File file20 = undertowEmbeddedServletContainerFactory7.getDocumentRoot();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = undertowEmbeddedServletContainerFactory7.getErrorPages();
        undertowEmbeddedServletContainerFactory0.setErrorPages(errorPageSet21);
        org.springframework.core.io.ResourceLoader resourceLoader23 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader23;
        java.lang.String str25 = undertowEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.concurrent.TimeUnit timeUnit28 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.setSessionTimeout(0, timeUnit28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(errorPageSet21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(mimeMappings26);
    }

    @Test
    public void test03369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03369");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(8080);
        java.lang.Boolean boolean2 = undertowEmbeddedServletContainerFactory1.directBuffers;
        java.net.InetAddress inetAddress3 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress3);
        java.util.concurrent.TimeUnit timeUnit6 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) -1, timeUnit6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean2);
    }

    @Test
    public void test03370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03370");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.ioThreads = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList9 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.workerThreads = 0;
        undertowEmbeddedServletContainerFactory1.setPort(10);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray14 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray14);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray16 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray16);
        initializer15.initializers = servletContextInitializerArray16;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList22 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList22, undertowBuilderCustomizerArray21);
        undertowEmbeddedServletContainerFactory20.builderCustomizers = undertowBuilderCustomizerList22;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = undertowEmbeddedServletContainerFactory20.getMimeMappings();
        boolean boolean26 = undertowEmbeddedServletContainerFactory20.isRegisterJspServlet();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray27 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray27);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer29 = undertowEmbeddedServletContainerFactory20.getEmbeddedServletContainer(servletContextInitializerArray27);
        initializer15.initializers = servletContextInitializerArray27;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray27);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer32 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray27);
        java.lang.ClassLoader classLoader33 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.springframework.boot.context.embedded.Ssl ssl34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode35 = undertowEmbeddedServletContainerFactory1.getSslClientAuthMode(ssl34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0.0.0.0" + "'", str6, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList9);
        org.junit.Assert.assertNotNull(servletContextInitializerArray14);
        org.junit.Assert.assertNotNull(servletContextInitializerArray16);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray27);
        org.junit.Assert.assertNotNull(embeddedServletContainer29);
        org.junit.Assert.assertNotNull(embeddedServletContainer32);
        org.junit.Assert.assertNotNull(classLoader33);
    }

    @Test
    public void test03371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03371");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        boolean boolean2 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.close();
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource5 = jarResourcemanager1.getResource("");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test03372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03372");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.io.File file2 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file2);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo4 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo4);
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory0.directBuffers;
        undertowEmbeddedServletContainerFactory0.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory10.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory10.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory10.ioThreads = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray19 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList20 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList20, undertowBuilderCustomizerArray19);
        undertowEmbeddedServletContainerFactory18.builderCustomizers = undertowBuilderCustomizerList20;
        undertowEmbeddedServletContainerFactory18.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory18.bufferSize = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList27 = undertowEmbeddedServletContainerFactory18.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer30 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray31 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer30 };
        undertowEmbeddedServletContainerFactory29.addBuilderCustomizers(undertowBuilderCustomizerArray31);
        org.springframework.boot.context.embedded.Ssl ssl33 = undertowEmbeddedServletContainerFactory29.getSsl();
        java.lang.String str34 = undertowEmbeddedServletContainerFactory29.getContextPath();
        java.lang.String str35 = undertowEmbeddedServletContainerFactory29.getListenAddress();
        undertowEmbeddedServletContainerFactory29.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl38 = undertowEmbeddedServletContainerFactory29.getSsl();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = undertowEmbeddedServletContainerFactory29.getMimeMappings();
        undertowEmbeddedServletContainerFactory18.setMimeMappings(mimeMappings39);
        undertowEmbeddedServletContainerFactory10.setMimeMappings(mimeMappings39);
        undertowEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings39);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer45 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray46 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer45 };
        undertowEmbeddedServletContainerFactory44.addBuilderCustomizers(undertowBuilderCustomizerArray46);
        org.springframework.boot.context.embedded.Ssl ssl48 = undertowEmbeddedServletContainerFactory44.getSsl();
        java.lang.String str49 = undertowEmbeddedServletContainerFactory44.getContextPath();
        java.lang.String str50 = undertowEmbeddedServletContainerFactory44.getListenAddress();
        undertowEmbeddedServletContainerFactory44.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl53 = undertowEmbeddedServletContainerFactory44.getSsl();
        undertowEmbeddedServletContainerFactory44.setPort((int) (short) 0);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection56 = undertowEmbeddedServletContainerFactory44.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer59 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray60 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer59 };
        undertowEmbeddedServletContainerFactory58.addBuilderCustomizers(undertowBuilderCustomizerArray60);
        org.springframework.boot.context.embedded.Ssl ssl62 = undertowEmbeddedServletContainerFactory58.getSsl();
        undertowEmbeddedServletContainerFactory58.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory58.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer69 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray70 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer69 };
        undertowEmbeddedServletContainerFactory68.addBuilderCustomizers(undertowBuilderCustomizerArray70);
        org.springframework.boot.context.embedded.Ssl ssl72 = undertowEmbeddedServletContainerFactory68.getSsl();
        java.lang.String str73 = undertowEmbeddedServletContainerFactory68.getContextPath();
        java.lang.String str74 = undertowEmbeddedServletContainerFactory68.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet75 = undertowEmbeddedServletContainerFactory68.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection76 = undertowEmbeddedServletContainerFactory68.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList77 = undertowEmbeddedServletContainerFactory68.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray78 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory68.addBuilderCustomizers(undertowBuilderCustomizerArray78);
        undertowEmbeddedServletContainerFactory58.addBuilderCustomizers(undertowBuilderCustomizerArray78);
        undertowEmbeddedServletContainerFactory44.addBuilderCustomizers(undertowBuilderCustomizerArray78);
        undertowEmbeddedServletContainerFactory0.addBuilderCustomizers(undertowBuilderCustomizerArray78);
        org.springframework.core.io.ResourceLoader resourceLoader83 = null;
        undertowEmbeddedServletContainerFactory0.resourceLoader = resourceLoader83;
        java.io.File file85 = undertowEmbeddedServletContainerFactory0.getDocumentRoot();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList27);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray31);
        org.junit.Assert.assertNull(ssl33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "0.0.0.0" + "'", str35, "0.0.0.0");
        org.junit.Assert.assertNull(ssl38);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray46);
        org.junit.Assert.assertNull(ssl48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "0.0.0.0" + "'", str50, "0.0.0.0");
        org.junit.Assert.assertNull(ssl53);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection56);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray60);
        org.junit.Assert.assertNull(ssl62);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray70);
        org.junit.Assert.assertNull(ssl72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "0.0.0.0" + "'", str74, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet75);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection76);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList77);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray78);
        org.junit.Assert.assertNull(file85);
    }

    @Test
    public void test03373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03373");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        undertowEmbeddedServletContainerFactory1.setPort((int) ' ');
        io.undertow.server.handlers.resource.ResourceManager resourceManager8 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(resourceManager8);
    }

    @Test
    public void test03374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03374");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList5 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList5, undertowDeploymentInfoCustomizerArray4);
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList5;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader10);
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        java.io.File file13 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        io.undertow.Undertow.Builder builder15 = undertowEmbeddedServletContainerFactory1.createBuilder((-1));
        undertowEmbeddedServletContainerFactory1.bufferSize = 10;
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(builder15);
    }

    @Test
    public void test03375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03375");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList5 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList5, undertowDeploymentInfoCustomizerArray4);
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList5;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.lang.Integer int11 = undertowEmbeddedServletContainerFactory1.workerThreads;
        java.net.InetAddress inetAddress12 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.Ssl ssl13 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(inetAddress12);
        org.junit.Assert.assertNull(ssl13);
    }

    @Test
    public void test03376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03376");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        java.lang.String str1 = jarResourcemanager0.jarPath;
        boolean boolean2 = jarResourcemanager0.isResourceChangeListenerSupported();
        java.lang.String str3 = jarResourcemanager0.jarPath;
        jarResourcemanager0.jarPath = "0.0.0.0";
        boolean boolean6 = jarResourcemanager0.isResourceChangeListenerSupported();
        jarResourcemanager0.close();
        jarResourcemanager0.close();
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource10 = jarResourcemanager0.getResource("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test03377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03377");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.lang.Boolean boolean11 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.Ssl ssl15 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray19 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList20 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList20, undertowBuilderCustomizerArray19);
        undertowEmbeddedServletContainerFactory18.builderCustomizers = undertowBuilderCustomizerList20;
        undertowEmbeddedServletContainerFactory18.setWorkerThreads((java.lang.Integer) 100);
        org.springframework.core.io.ResourceLoader resourceLoader25 = null;
        undertowEmbeddedServletContainerFactory18.setResourceLoader(resourceLoader25);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList27 = undertowEmbeddedServletContainerFactory18.deploymentInfoCustomizers;
        java.lang.ClassLoader classLoader28 = undertowEmbeddedServletContainerFactory18.getServletClassLoader();
        undertowEmbeddedServletContainerFactory18.bufferSize = 1800;
        io.undertow.Undertow.Builder builder32 = undertowEmbeddedServletContainerFactory18.createBuilder(0);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureSsl(ssl15, (int) (byte) 1, builder32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList27);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(builder32);
    }

    @Test
    public void test03378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03378");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection10 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        io.undertow.Undertow.Builder builder12 = undertowEmbeddedServletContainerFactory1.createBuilder((int) (short) 100);
        undertowEmbeddedServletContainerFactory1.setPort((int) '4');
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList18 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList18, undertowBuilderCustomizerArray17);
        undertowEmbeddedServletContainerFactory16.builderCustomizers = undertowBuilderCustomizerList18;
        undertowEmbeddedServletContainerFactory16.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory16.bufferSize = 1;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray28 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer27 };
        undertowEmbeddedServletContainerFactory26.addBuilderCustomizers(undertowBuilderCustomizerArray28);
        org.springframework.boot.context.embedded.Ssl ssl30 = undertowEmbeddedServletContainerFactory26.getSsl();
        java.lang.String str31 = undertowEmbeddedServletContainerFactory26.getContextPath();
        java.lang.String str32 = undertowEmbeddedServletContainerFactory26.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet33 = undertowEmbeddedServletContainerFactory26.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray36 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList37 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList37, undertowBuilderCustomizerArray36);
        undertowEmbeddedServletContainerFactory35.builderCustomizers = undertowBuilderCustomizerList37;
        undertowEmbeddedServletContainerFactory26.builderCustomizers = undertowBuilderCustomizerList37;
        java.lang.String str41 = undertowEmbeddedServletContainerFactory26.getContextPath();
        undertowEmbeddedServletContainerFactory26.buffersPerRegion = 8080;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray46 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList47 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList47, undertowBuilderCustomizerArray46);
        undertowEmbeddedServletContainerFactory45.builderCustomizers = undertowBuilderCustomizerList47;
        java.lang.String str50 = undertowEmbeddedServletContainerFactory45.getListenAddress();
        undertowEmbeddedServletContainerFactory45.ioThreads = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList53 = undertowEmbeddedServletContainerFactory45.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory55.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int58 = undertowEmbeddedServletContainerFactory55.ioThreads;
        java.lang.Integer int59 = undertowEmbeddedServletContainerFactory55.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage60 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray61 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage60 };
        undertowEmbeddedServletContainerFactory55.addErrorPages(errorPageArray61);
        undertowEmbeddedServletContainerFactory45.addErrorPages(errorPageArray61);
        undertowEmbeddedServletContainerFactory26.addErrorPages(errorPageArray61);
        undertowEmbeddedServletContainerFactory16.addErrorPages(errorPageArray61);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray61);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection67 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.workerThreads = 1800;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray28);
        org.junit.Assert.assertNull(ssl30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "0.0.0.0" + "'", str32, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet33);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "0.0.0.0" + "'", str50, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList53);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(errorPageArray61);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection67);
    }

    @Test
    public void test03379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03379");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.close();
        boolean boolean3 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.close();
        jarResourcemanager1.close();
        jarResourcemanager1.jarPath = "";
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener8 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager1.removeResourceChangeListener(resourceChangeListener8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test03380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03380");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        boolean boolean1 = jarResourcemanager0.isResourceChangeListenerSupported();
        boolean boolean2 = jarResourcemanager0.isResourceChangeListenerSupported();
        jarResourcemanager0.close();
        jarResourcemanager0.jarPath = "hi!";
        boolean boolean6 = jarResourcemanager0.isResourceChangeListenerSupported();
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource8 = jarResourcemanager0.getResource("");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test03381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03381");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader8 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader8;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList10 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList10);
    }

    @Test
    public void test03382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03382");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "hi!";
        java.lang.String str4 = jarResourcemanager1.jarPath;
        java.lang.String str5 = jarResourcemanager1.jarPath;
        boolean boolean6 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean7 = jarResourcemanager1.isResourceChangeListenerSupported();
        java.lang.String str8 = jarResourcemanager1.jarPath;
        jarResourcemanager1.close();
        jarResourcemanager1.close();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager1.removeResourceChangeListener(resourceChangeListener11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test03383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03383");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray8 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray8);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray10);
        initializer9.initializers = servletContextInitializerArray10;
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray10);
        java.lang.Boolean boolean14 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader15;
        java.lang.Integer int17 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer20 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer20 };
        undertowEmbeddedServletContainerFactory19.addBuilderCustomizers(undertowBuilderCustomizerArray21);
        org.springframework.boot.context.embedded.Ssl ssl23 = undertowEmbeddedServletContainerFactory19.getSsl();
        java.lang.String str24 = undertowEmbeddedServletContainerFactory19.getContextPath();
        java.lang.String str25 = undertowEmbeddedServletContainerFactory19.getListenAddress();
        undertowEmbeddedServletContainerFactory19.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl28 = null;
        undertowEmbeddedServletContainerFactory19.setSsl(ssl28);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = undertowEmbeddedServletContainerFactory30.getMimeMappings();
        undertowEmbeddedServletContainerFactory19.setMimeMappings(mimeMappings31);
        undertowEmbeddedServletContainerFactory19.bufferSize = 1800;
        boolean boolean35 = undertowEmbeddedServletContainerFactory19.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory19.setRegisterJspServlet(false);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet38 = undertowEmbeddedServletContainerFactory19.getErrorPages();
        undertowEmbeddedServletContainerFactory19.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer43 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray44 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer43 };
        undertowEmbeddedServletContainerFactory42.addBuilderCustomizers(undertowBuilderCustomizerArray44);
        org.springframework.boot.context.embedded.Ssl ssl46 = undertowEmbeddedServletContainerFactory42.getSsl();
        undertowEmbeddedServletContainerFactory42.setDirectBuffers((java.lang.Boolean) true);
        java.lang.Boolean boolean49 = undertowEmbeddedServletContainerFactory42.directBuffers;
        org.springframework.core.io.ResourceLoader resourceLoader50 = null;
        undertowEmbeddedServletContainerFactory42.setResourceLoader(resourceLoader50);
        int int52 = undertowEmbeddedServletContainerFactory42.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet53 = undertowEmbeddedServletContainerFactory42.getErrorPages();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList54 = undertowEmbeddedServletContainerFactory42.builderCustomizers;
        undertowEmbeddedServletContainerFactory19.builderCustomizers = undertowBuilderCustomizerList54;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList54;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.Undertow.Builder builder58 = undertowEmbeddedServletContainerFactory1.createBuilder(0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(servletContextInitializerArray8);
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray21);
        org.junit.Assert.assertNull(ssl23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "0.0.0.0" + "'", str25, "0.0.0.0");
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(errorPageSet38);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray44);
        org.junit.Assert.assertNull(ssl46);
        org.junit.Assert.assertEquals("'" + boolean49 + "' != '" + true + "'", boolean49, true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(errorPageSet53);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList54);
    }

    @Test
    public void test03384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03384");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList2 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo5 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray6 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray6);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray8 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer9 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray8);
        initializer7.initializers = servletContextInitializerArray8;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList14 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList14, undertowBuilderCustomizerArray13);
        undertowEmbeddedServletContainerFactory12.builderCustomizers = undertowBuilderCustomizerList14;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory12.getMimeMappings();
        boolean boolean18 = undertowEmbeddedServletContainerFactory12.isRegisterJspServlet();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray19);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer21 = undertowEmbeddedServletContainerFactory12.getEmbeddedServletContainer(servletContextInitializerArray19);
        initializer7.initializers = servletContextInitializerArray19;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray19);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray19);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray19);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.registerServletContainerInitializerToDriveServletContextInitializers(deploymentInfo5, servletContextInitializerArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertNotNull(embeddedServletContainer21);
    }

    @Test
    public void test03385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03385");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = undertowEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray9 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory7.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray9);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray9);
        java.lang.String str12 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader13);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray15 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray15);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray18);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray20 = initializer19.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray20);
        initializer17.initializers = servletContextInitializerArray20;
        initializer16.initializers = servletContextInitializerArray20;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray24 = initializer16.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray24);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray24);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray24);
        java.lang.Class<?> wildcardClass28 = servletContextInitializerArray24.getClass();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(servletContextInitializerArray15);
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertNotNull(servletContextInitializerArray20);
        org.junit.Assert.assertNotNull(servletContextInitializerArray24);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test03386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03386");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.net.InetAddress inetAddress6 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        io.undertow.Undertow.Builder builder9 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory11.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory11.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory11.setWorkerThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory11.workerThreads = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = undertowEmbeddedServletContainerFactory23.getMimeMappings();
        io.undertow.Undertow.Builder builder26 = undertowEmbeddedServletContainerFactory23.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer29 = undertowEmbeddedServletContainerFactory21.getUndertowEmbeddedServletContainer(builder26, deploymentManager27, (int) (byte) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer32 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray33 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer32 };
        undertowEmbeddedServletContainerFactory31.addBuilderCustomizers(undertowBuilderCustomizerArray33);
        org.springframework.boot.context.embedded.Ssl ssl35 = undertowEmbeddedServletContainerFactory31.getSsl();
        java.lang.String str36 = undertowEmbeddedServletContainerFactory31.getContextPath();
        java.lang.String str37 = undertowEmbeddedServletContainerFactory31.getListenAddress();
        undertowEmbeddedServletContainerFactory31.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl40 = null;
        undertowEmbeddedServletContainerFactory31.setSsl(ssl40);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = undertowEmbeddedServletContainerFactory42.getMimeMappings();
        undertowEmbeddedServletContainerFactory31.setMimeMappings(mimeMappings43);
        undertowEmbeddedServletContainerFactory31.bufferSize = 1800;
        boolean boolean47 = undertowEmbeddedServletContainerFactory31.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray50 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray50);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray53 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray53);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray55 = initializer54.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer56 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray55);
        initializer52.initializers = servletContextInitializerArray55;
        initializer51.initializers = servletContextInitializerArray55;
        undertowEmbeddedServletContainerFactory49.addInitializers(servletContextInitializerArray55);
        io.undertow.servlet.api.DeploymentManager deploymentManager60 = undertowEmbeddedServletContainerFactory31.createDeploymentManager(servletContextInitializerArray55);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer62 = undertowEmbeddedServletContainerFactory11.getUndertowEmbeddedServletContainer(builder26, deploymentManager60, (int) (byte) -1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer64 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder9, deploymentManager60, (int) (short) 1);
        org.springframework.boot.context.embedded.Ssl ssl65 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode66 = undertowEmbeddedServletContainerFactory1.getSslClientAuthMode(ssl65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer29);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray33);
        org.junit.Assert.assertNull(ssl35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "0.0.0.0" + "'", str37, "0.0.0.0");
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray50);
        org.junit.Assert.assertNotNull(servletContextInitializerArray53);
        org.junit.Assert.assertNotNull(servletContextInitializerArray55);
        org.junit.Assert.assertNotNull(deploymentManager60);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer62);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer64);
    }

    @Test
    public void test03387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03387");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory3.getMimeMappings();
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory3.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager7 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer9 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder6, deploymentManager7, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer16 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer16 };
        undertowEmbeddedServletContainerFactory15.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory15.getSsl();
        java.lang.String str20 = undertowEmbeddedServletContainerFactory15.getContextPath();
        java.lang.String str21 = undertowEmbeddedServletContainerFactory15.getListenAddress();
        undertowEmbeddedServletContainerFactory15.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl24 = undertowEmbeddedServletContainerFactory15.getSsl();
        undertowEmbeddedServletContainerFactory15.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer29 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray30 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer29 };
        undertowEmbeddedServletContainerFactory28.addBuilderCustomizers(undertowBuilderCustomizerArray30);
        org.springframework.boot.context.embedded.Ssl ssl32 = undertowEmbeddedServletContainerFactory28.getSsl();
        undertowEmbeddedServletContainerFactory28.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory28.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer39 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray40 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer39 };
        undertowEmbeddedServletContainerFactory38.addBuilderCustomizers(undertowBuilderCustomizerArray40);
        undertowEmbeddedServletContainerFactory28.addBuilderCustomizers(undertowBuilderCustomizerArray40);
        undertowEmbeddedServletContainerFactory15.addBuilderCustomizers(undertowBuilderCustomizerArray40);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray40);
        undertowEmbeddedServletContainerFactory1.setPort((int) (short) 100);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo47 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureMimeMappings(deploymentInfo47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "0.0.0.0" + "'", str21, "0.0.0.0");
        org.junit.Assert.assertNull(ssl24);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray30);
        org.junit.Assert.assertNull(ssl32);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray40);
    }

    @Test
    public void test03388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03388");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress10 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory14.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory14.setRegisterJspServlet(false);
        undertowEmbeddedServletContainerFactory14.setWorkerThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory14.workerThreads = 0;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = undertowEmbeddedServletContainerFactory26.getMimeMappings();
        io.undertow.Undertow.Builder builder29 = undertowEmbeddedServletContainerFactory26.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager30 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer32 = undertowEmbeddedServletContainerFactory24.getUndertowEmbeddedServletContainer(builder29, deploymentManager30, (int) (byte) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer35 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray36 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer35 };
        undertowEmbeddedServletContainerFactory34.addBuilderCustomizers(undertowBuilderCustomizerArray36);
        org.springframework.boot.context.embedded.Ssl ssl38 = undertowEmbeddedServletContainerFactory34.getSsl();
        java.lang.String str39 = undertowEmbeddedServletContainerFactory34.getContextPath();
        java.lang.String str40 = undertowEmbeddedServletContainerFactory34.getListenAddress();
        undertowEmbeddedServletContainerFactory34.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl43 = null;
        undertowEmbeddedServletContainerFactory34.setSsl(ssl43);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings46 = undertowEmbeddedServletContainerFactory45.getMimeMappings();
        undertowEmbeddedServletContainerFactory34.setMimeMappings(mimeMappings46);
        undertowEmbeddedServletContainerFactory34.bufferSize = 1800;
        boolean boolean50 = undertowEmbeddedServletContainerFactory34.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray53 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray53);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer55 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray56 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer57 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray56);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray58 = initializer57.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray58);
        initializer55.initializers = servletContextInitializerArray58;
        initializer54.initializers = servletContextInitializerArray58;
        undertowEmbeddedServletContainerFactory52.addInitializers(servletContextInitializerArray58);
        io.undertow.servlet.api.DeploymentManager deploymentManager63 = undertowEmbeddedServletContainerFactory34.createDeploymentManager(servletContextInitializerArray58);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer65 = undertowEmbeddedServletContainerFactory14.getUndertowEmbeddedServletContainer(builder29, deploymentManager63, (int) (byte) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList66 = undertowEmbeddedServletContainerFactory14.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList66;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(inetAddress10);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer32);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray36);
        org.junit.Assert.assertNull(ssl38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "0.0.0.0" + "'", str40, "0.0.0.0");
        org.junit.Assert.assertNotNull(mimeMappings46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray53);
        org.junit.Assert.assertNotNull(servletContextInitializerArray56);
        org.junit.Assert.assertNotNull(servletContextInitializerArray58);
        org.junit.Assert.assertNotNull(deploymentManager63);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer65);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList66);
    }

    @Test
    public void test03389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03389");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.net.InetAddress inetAddress6 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.ioThreads = 1800;
        org.springframework.boot.context.embedded.Ssl ssl12 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl12);
        boolean boolean14 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test03390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03390");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory3.getMimeMappings();
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory3.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager7 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer9 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder6, deploymentManager7, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory1.bufferSize = (-1);
        java.lang.Boolean boolean12 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        io.undertow.Undertow.Builder builder16 = undertowEmbeddedServletContainerFactory1.createBuilder(8080);
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray17 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test03391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03391");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList5 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList5, undertowDeploymentInfoCustomizerArray4);
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList5;
        org.springframework.core.io.ResourceLoader resourceLoader8 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader8;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        java.lang.String str12 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer16 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer16 };
        undertowEmbeddedServletContainerFactory15.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        undertowEmbeddedServletContainerFactory15.setSessionTimeout((int) (byte) 10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection21 = undertowEmbeddedServletContainerFactory15.getBuilderCustomizers();
        undertowEmbeddedServletContainerFactory15.bufferSize = 100;
        undertowEmbeddedServletContainerFactory15.buffersPerRegion = 10;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer27 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray26);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray29 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray29);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray31 = initializer30.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer32 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray31);
        initializer28.initializers = servletContextInitializerArray31;
        initializer27.initializers = servletContextInitializerArray31;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray35 = initializer27.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray35);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray37 = initializer36.initializers;
        undertowEmbeddedServletContainerFactory15.addInitializers(servletContextInitializerArray37);
        io.undertow.servlet.api.DeploymentManager deploymentManager39 = undertowEmbeddedServletContainerFactory1.createDeploymentManager(servletContextInitializerArray37);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList13);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection21);
        org.junit.Assert.assertNotNull(servletContextInitializerArray26);
        org.junit.Assert.assertNotNull(servletContextInitializerArray29);
        org.junit.Assert.assertNotNull(servletContextInitializerArray31);
        org.junit.Assert.assertNotNull(servletContextInitializerArray35);
        org.junit.Assert.assertNotNull(servletContextInitializerArray37);
        org.junit.Assert.assertNotNull(deploymentManager39);
    }

    @Test
    public void test03392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03392");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setPort((int) (short) 0);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer16 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer16 };
        undertowEmbeddedServletContainerFactory15.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory15.getSsl();
        undertowEmbeddedServletContainerFactory15.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory15.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer26 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray27 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer26 };
        undertowEmbeddedServletContainerFactory25.addBuilderCustomizers(undertowBuilderCustomizerArray27);
        org.springframework.boot.context.embedded.Ssl ssl29 = undertowEmbeddedServletContainerFactory25.getSsl();
        java.lang.String str30 = undertowEmbeddedServletContainerFactory25.getContextPath();
        java.lang.String str31 = undertowEmbeddedServletContainerFactory25.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet32 = undertowEmbeddedServletContainerFactory25.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection33 = undertowEmbeddedServletContainerFactory25.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList34 = undertowEmbeddedServletContainerFactory25.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray35 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory25.addBuilderCustomizers(undertowBuilderCustomizerArray35);
        undertowEmbeddedServletContainerFactory15.addBuilderCustomizers(undertowBuilderCustomizerArray35);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray35);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer43 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray44 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer43 };
        undertowEmbeddedServletContainerFactory42.addBuilderCustomizers(undertowBuilderCustomizerArray44);
        undertowEmbeddedServletContainerFactory42.setSessionTimeout((int) (byte) 10);
        undertowEmbeddedServletContainerFactory42.setIoThreads((java.lang.Integer) 0);
        boolean boolean50 = undertowEmbeddedServletContainerFactory42.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings55 = undertowEmbeddedServletContainerFactory54.getMimeMappings();
        io.undertow.Undertow.Builder builder57 = undertowEmbeddedServletContainerFactory54.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager58 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer60 = undertowEmbeddedServletContainerFactory52.getUndertowEmbeddedServletContainer(builder57, deploymentManager58, (int) (byte) 0);
        io.undertow.servlet.api.DeploymentManager deploymentManager61 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer63 = undertowEmbeddedServletContainerFactory42.getUndertowEmbeddedServletContainer(builder57, deploymentManager61, (int) (short) 1);
        io.undertow.servlet.api.DeploymentManager deploymentManager64 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer66 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder57, deploymentManager64, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList69 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.ioThreads = 1800;
        boolean boolean72 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.lang.Integer int73 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection13);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray27);
        org.junit.Assert.assertNull(ssl29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "0.0.0.0" + "'", str31, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet32);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection33);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList34);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray35);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray44);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(mimeMappings55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer60);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer63);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer66);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(int73);
    }

    @Test
    public void test03393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03393");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(0);
        java.io.File file4 = null;
        undertowEmbeddedServletContainerFactory0.setDocumentRoot(file4);
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory0.bufferSize;
        java.lang.ClassLoader classLoader7 = undertowEmbeddedServletContainerFactory0.getServletClassLoader();
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray8 = undertowEmbeddedServletContainerFactory0.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(classLoader7);
    }

    @Test
    public void test03394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03394");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.bufferSize = 10;
        int int5 = undertowEmbeddedServletContainerFactory1.getPort();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList6 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList6);
    }

    @Test
    public void test03395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03395");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection10 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.concurrent.TimeUnit timeUnit12 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 100, timeUnit12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection10);
    }

    @Test
    public void test03396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03396");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int4 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage6 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray7 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage6 };
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray7);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray9 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray9);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray11 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray11);
        initializer10.initializers = servletContextInitializerArray11;
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray11);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection15 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Undertow does not support JSPs");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(errorPageArray7);
        org.junit.Assert.assertNotNull(servletContextInitializerArray9);
        org.junit.Assert.assertNotNull(servletContextInitializerArray11);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection15);
    }

    @Test
    public void test03397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03397");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 10;
        undertowEmbeddedServletContainerFactory1.ioThreads = (-1);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 8080);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1);
        java.lang.Boolean boolean18 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer21 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer21 };
        undertowEmbeddedServletContainerFactory20.addBuilderCustomizers(undertowBuilderCustomizerArray22);
        org.springframework.boot.context.embedded.Ssl ssl24 = undertowEmbeddedServletContainerFactory20.getSsl();
        java.lang.String str25 = undertowEmbeddedServletContainerFactory20.getContextPath();
        java.lang.String str26 = undertowEmbeddedServletContainerFactory20.getListenAddress();
        undertowEmbeddedServletContainerFactory20.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl29 = undertowEmbeddedServletContainerFactory20.getSsl();
        undertowEmbeddedServletContainerFactory20.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer34 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray35 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer34 };
        undertowEmbeddedServletContainerFactory33.addBuilderCustomizers(undertowBuilderCustomizerArray35);
        org.springframework.boot.context.embedded.Ssl ssl37 = undertowEmbeddedServletContainerFactory33.getSsl();
        undertowEmbeddedServletContainerFactory33.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory33.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer44 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray45 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer44 };
        undertowEmbeddedServletContainerFactory43.addBuilderCustomizers(undertowBuilderCustomizerArray45);
        undertowEmbeddedServletContainerFactory33.addBuilderCustomizers(undertowBuilderCustomizerArray45);
        undertowEmbeddedServletContainerFactory20.addBuilderCustomizers(undertowBuilderCustomizerArray45);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray45);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo50 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList52 = undertowEmbeddedServletContainerFactory51.deploymentInfoCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList53 = undertowEmbeddedServletContainerFactory51.builderCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList54 = undertowEmbeddedServletContainerFactory51.builderCustomizers;
        undertowEmbeddedServletContainerFactory51.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings59 = undertowEmbeddedServletContainerFactory58.getMimeMappings();
        io.undertow.Undertow.Builder builder61 = undertowEmbeddedServletContainerFactory58.createBuilder((int) '4');
        java.net.InetAddress inetAddress62 = null;
        undertowEmbeddedServletContainerFactory58.setAddress(inetAddress62);
        boolean boolean64 = undertowEmbeddedServletContainerFactory58.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 8080);
        java.net.InetAddress inetAddress68 = null;
        undertowEmbeddedServletContainerFactory67.setAddress(inetAddress68);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory71.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int74 = undertowEmbeddedServletContainerFactory71.ioThreads;
        java.lang.Integer int75 = undertowEmbeddedServletContainerFactory71.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage76 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray77 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage76 };
        undertowEmbeddedServletContainerFactory71.addErrorPages(errorPageArray77);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray79 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer80 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray79);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray81 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer82 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray81);
        initializer80.initializers = servletContextInitializerArray81;
        undertowEmbeddedServletContainerFactory71.addInitializers(servletContextInitializerArray81);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer85 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray81);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer86 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray81);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory87 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList88 = undertowEmbeddedServletContainerFactory87.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray89 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer90 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray89);
        undertowEmbeddedServletContainerFactory87.addInitializers(servletContextInitializerArray89);
        initializer86.initializers = servletContextInitializerArray89;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray93 = initializer86.initializers;
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer94 = undertowEmbeddedServletContainerFactory67.getEmbeddedServletContainer(servletContextInitializerArray93);
        io.undertow.servlet.api.DeploymentManager deploymentManager95 = undertowEmbeddedServletContainerFactory58.createDeploymentManager(servletContextInitializerArray93);
        io.undertow.servlet.api.DeploymentManager deploymentManager96 = undertowEmbeddedServletContainerFactory51.createDeploymentManager(servletContextInitializerArray93);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.registerServletContainerInitializerToDriveServletContextInitializers(deploymentInfo50, servletContextInitializerArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray22);
        org.junit.Assert.assertNull(ssl24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0.0.0.0" + "'", str26, "0.0.0.0");
        org.junit.Assert.assertNull(ssl29);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray35);
        org.junit.Assert.assertNull(ssl37);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray45);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList52);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList53);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList54);
        org.junit.Assert.assertNotNull(mimeMappings59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(int74);
        org.junit.Assert.assertNull(int75);
        org.junit.Assert.assertNotNull(errorPageArray77);
        org.junit.Assert.assertNotNull(servletContextInitializerArray79);
        org.junit.Assert.assertNotNull(servletContextInitializerArray81);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList88);
        org.junit.Assert.assertNotNull(servletContextInitializerArray89);
        org.junit.Assert.assertNotNull(servletContextInitializerArray93);
        org.junit.Assert.assertNotNull(embeddedServletContainer94);
        org.junit.Assert.assertNotNull(deploymentManager95);
        org.junit.Assert.assertNotNull(deploymentManager96);
    }

    @Test
    public void test03398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03398");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.close();
        jarResourcemanager1.jarPath = "";
        jarResourcemanager1.jarPath = "0.0.0.0";
        jarResourcemanager1.jarPath = "";
        java.lang.String str11 = jarResourcemanager1.jarPath;
        boolean boolean12 = jarResourcemanager1.isResourceChangeListenerSupported();
        java.lang.String str13 = jarResourcemanager1.jarPath;
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener14 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager1.removeResourceChangeListener(resourceChangeListener14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test03399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03399");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 10);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.core.io.ResourceLoader resourceLoader6 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage errorPage7 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage8 = undertowEmbeddedServletContainerFactory1.getUndertowErrorPage(errorPage7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(resourceLoader6);
    }

    @Test
    public void test03400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03400");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("0.0.0.0", (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03401");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.io.File file8 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test03402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03402");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader9 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        int int10 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        undertowEmbeddedServletContainerFactory1.ioThreads = 1;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection15 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList16 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        java.io.File file17 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNull(resourceLoader9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1800 + "'", int10 == 1800);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection15);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList16);
    }

    @Test
    public void test03403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03403");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 10;
        undertowEmbeddedServletContainerFactory1.ioThreads = (-1);
        io.undertow.server.handlers.resource.ResourceManager resourceManager14 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        io.undertow.server.handlers.resource.ResourceManager resourceManager15 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        java.lang.String str16 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.bufferSize = 100;
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(resourceManager14);
        org.junit.Assert.assertNotNull(resourceManager15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test03404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03404");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int4 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) -1);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer11 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray12 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer11 };
        undertowEmbeddedServletContainerFactory10.addBuilderCustomizers(undertowBuilderCustomizerArray12);
        org.springframework.boot.context.embedded.Ssl ssl14 = undertowEmbeddedServletContainerFactory10.getSsl();
        undertowEmbeddedServletContainerFactory10.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory10.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress19 = undertowEmbeddedServletContainerFactory10.getAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo20 = null;
        undertowEmbeddedServletContainerFactory10.configureErrorPages(deploymentInfo20);
        undertowEmbeddedServletContainerFactory10.setIoThreads((java.lang.Integer) 1);
        boolean boolean24 = undertowEmbeddedServletContainerFactory10.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer27 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray28 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer27 };
        undertowEmbeddedServletContainerFactory26.addBuilderCustomizers(undertowBuilderCustomizerArray28);
        org.springframework.boot.context.embedded.Ssl ssl30 = undertowEmbeddedServletContainerFactory26.getSsl();
        java.lang.String str31 = undertowEmbeddedServletContainerFactory26.getContextPath();
        java.lang.String str32 = undertowEmbeddedServletContainerFactory26.getListenAddress();
        undertowEmbeddedServletContainerFactory26.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl35 = undertowEmbeddedServletContainerFactory26.getSsl();
        undertowEmbeddedServletContainerFactory26.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer40 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray41 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer40 };
        undertowEmbeddedServletContainerFactory39.addBuilderCustomizers(undertowBuilderCustomizerArray41);
        org.springframework.boot.context.embedded.Ssl ssl43 = undertowEmbeddedServletContainerFactory39.getSsl();
        undertowEmbeddedServletContainerFactory39.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory39.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer50 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray51 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer50 };
        undertowEmbeddedServletContainerFactory49.addBuilderCustomizers(undertowBuilderCustomizerArray51);
        undertowEmbeddedServletContainerFactory39.addBuilderCustomizers(undertowBuilderCustomizerArray51);
        undertowEmbeddedServletContainerFactory26.addBuilderCustomizers(undertowBuilderCustomizerArray51);
        undertowEmbeddedServletContainerFactory10.addBuilderCustomizers(undertowBuilderCustomizerArray51);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray51);
        java.lang.Integer int57 = undertowEmbeddedServletContainerFactory1.ioThreads;
        io.undertow.server.handlers.resource.ResourceManager resourceManager58 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        java.lang.Integer int59 = undertowEmbeddedServletContainerFactory1.bufferSize;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings60 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 0;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings63 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet64 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray12);
        org.junit.Assert.assertNull(ssl14);
        org.junit.Assert.assertNull(inetAddress19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray28);
        org.junit.Assert.assertNull(ssl30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "0.0.0.0" + "'", str32, "0.0.0.0");
        org.junit.Assert.assertNull(ssl35);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray41);
        org.junit.Assert.assertNull(ssl43);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray51);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(resourceManager58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(mimeMappings60);
        org.junit.Assert.assertNotNull(mimeMappings63);
        org.junit.Assert.assertNotNull(errorPageSet64);
    }

    @Test
    public void test03405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03405");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 10);
        undertowEmbeddedServletContainerFactory1.ioThreads = 10;
        undertowEmbeddedServletContainerFactory1.setContextPath("");
        io.undertow.servlet.api.DeploymentInfo deploymentInfo16 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureMimeMappings(deploymentInfo16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(int7);
    }

    @Test
    public void test03406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03406");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList12;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList12;
        org.springframework.core.io.ResourceLoader resourceLoader16 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader16;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList18 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.bufferSize = 10;
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo23 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureMimeMappings(deploymentInfo23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList18);
    }

    @Test
    public void test03407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03407");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader9;
        java.lang.String str11 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.setPort((int) (short) 100);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.ioThreads = 10;
        java.lang.Integer int20 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.springframework.boot.context.embedded.Ssl ssl21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode22 = undertowEmbeddedServletContainerFactory1.getSslClientAuthMode(ssl21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList12);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList15);
        org.junit.Assert.assertNull(int20);
    }

    @Test
    public void test03408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03408");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList12;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList12;
        java.net.InetAddress inetAddress16 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.lang.Boolean boolean17 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray20 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList21 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList21, undertowBuilderCustomizerArray20);
        undertowEmbeddedServletContainerFactory19.builderCustomizers = undertowBuilderCustomizerList21;
        java.lang.String str24 = undertowEmbeddedServletContainerFactory19.getListenAddress();
        undertowEmbeddedServletContainerFactory19.ioThreads = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList27 = undertowEmbeddedServletContainerFactory19.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory29.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int32 = undertowEmbeddedServletContainerFactory29.ioThreads;
        java.lang.Integer int33 = undertowEmbeddedServletContainerFactory29.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage34 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray35 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage34 };
        undertowEmbeddedServletContainerFactory29.addErrorPages(errorPageArray35);
        undertowEmbeddedServletContainerFactory19.addErrorPages(errorPageArray35);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray35);
        undertowEmbeddedServletContainerFactory1.ioThreads = 10;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(inetAddress16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "0.0.0.0" + "'", str24, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList27);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(errorPageArray35);
    }

    @Test
    public void test03409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03409");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.Ssl ssl12 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(ssl12);
    }

    @Test
    public void test03410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03410");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList9 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        int int10 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        java.lang.String str11 = undertowEmbeddedServletContainerFactory1.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory13.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        undertowEmbeddedServletContainerFactory13.setSessionTimeout((int) (byte) 10);
        java.lang.Integer int19 = undertowEmbeddedServletContainerFactory13.ioThreads;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray20 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray20);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray22 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray22);
        initializer21.initializers = servletContextInitializerArray22;
        undertowEmbeddedServletContainerFactory13.addInitializers(servletContextInitializerArray22);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray22);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.Ssl ssl29 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.ErrorPage errorPage30 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage31 = undertowEmbeddedServletContainerFactory1.getUndertowErrorPage(errorPage30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(servletContextInitializerArray20);
        org.junit.Assert.assertNotNull(servletContextInitializerArray22);
        org.junit.Assert.assertNull(ssl29);
    }

    @Test
    public void test03411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03411");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setPort((int) (short) 0);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer16 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray17 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer16 };
        undertowEmbeddedServletContainerFactory15.addBuilderCustomizers(undertowBuilderCustomizerArray17);
        org.springframework.boot.context.embedded.Ssl ssl19 = undertowEmbeddedServletContainerFactory15.getSsl();
        undertowEmbeddedServletContainerFactory15.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory15.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer26 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray27 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer26 };
        undertowEmbeddedServletContainerFactory25.addBuilderCustomizers(undertowBuilderCustomizerArray27);
        org.springframework.boot.context.embedded.Ssl ssl29 = undertowEmbeddedServletContainerFactory25.getSsl();
        java.lang.String str30 = undertowEmbeddedServletContainerFactory25.getContextPath();
        java.lang.String str31 = undertowEmbeddedServletContainerFactory25.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet32 = undertowEmbeddedServletContainerFactory25.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection33 = undertowEmbeddedServletContainerFactory25.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList34 = undertowEmbeddedServletContainerFactory25.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray35 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory25.addBuilderCustomizers(undertowBuilderCustomizerArray35);
        undertowEmbeddedServletContainerFactory15.addBuilderCustomizers(undertowBuilderCustomizerArray35);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray35);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer43 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray44 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer43 };
        undertowEmbeddedServletContainerFactory42.addBuilderCustomizers(undertowBuilderCustomizerArray44);
        undertowEmbeddedServletContainerFactory42.setSessionTimeout((int) (byte) 10);
        undertowEmbeddedServletContainerFactory42.setIoThreads((java.lang.Integer) 0);
        boolean boolean50 = undertowEmbeddedServletContainerFactory42.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings55 = undertowEmbeddedServletContainerFactory54.getMimeMappings();
        io.undertow.Undertow.Builder builder57 = undertowEmbeddedServletContainerFactory54.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager58 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer60 = undertowEmbeddedServletContainerFactory52.getUndertowEmbeddedServletContainer(builder57, deploymentManager58, (int) (byte) 0);
        io.undertow.servlet.api.DeploymentManager deploymentManager61 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer63 = undertowEmbeddedServletContainerFactory42.getUndertowEmbeddedServletContainer(builder57, deploymentManager61, (int) (short) 1);
        io.undertow.servlet.api.DeploymentManager deploymentManager64 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer66 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder57, deploymentManager64, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList69 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.ioThreads = 1800;
        org.springframework.core.io.ResourceLoader resourceLoader72 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection13);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray17);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray27);
        org.junit.Assert.assertNull(ssl29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "0.0.0.0" + "'", str31, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet32);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection33);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList34);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray35);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray44);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(mimeMappings55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer60);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer63);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer66);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList69);
        org.junit.Assert.assertNull(resourceLoader72);
    }

    @Test
    public void test03412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03412");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", (int) (short) 1);
        java.lang.Integer int3 = undertowEmbeddedServletContainerFactory2.workerThreads;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList4 = undertowEmbeddedServletContainerFactory2.deploymentInfoCustomizers;
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory2.workerThreads;
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray6 = undertowEmbeddedServletContainerFactory2.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList4);
        org.junit.Assert.assertNull(int5);
    }

    @Test
    public void test03413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03413");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        java.lang.String str1 = jarResourcemanager0.jarPath;
        jarResourcemanager0.jarPath = "0.0.0.0";
        java.lang.String str4 = jarResourcemanager0.jarPath;
        java.lang.String str5 = jarResourcemanager0.jarPath;
        java.lang.String str6 = jarResourcemanager0.jarPath;
        boolean boolean7 = jarResourcemanager0.isResourceChangeListenerSupported();
        jarResourcemanager0.jarPath = "0.0.0.0";
        boolean boolean10 = jarResourcemanager0.isResourceChangeListenerSupported();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager0.removeResourceChangeListener(resourceChangeListener11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "0.0.0.0" + "'", str5, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0.0.0.0" + "'", str6, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test03414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03414");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.ioThreads = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList9 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        java.lang.ClassLoader classLoader10 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 35);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0.0.0.0" + "'", str6, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList9);
        org.junit.Assert.assertNotNull(classLoader10);
    }

    @Test
    public void test03415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03415");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList12;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList12;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory16.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory16.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray18);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray18);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = undertowEmbeddedServletContainerFactory24.getMimeMappings();
        io.undertow.Undertow.Builder builder27 = undertowEmbeddedServletContainerFactory24.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager28 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer30 = undertowEmbeddedServletContainerFactory22.getUndertowEmbeddedServletContainer(builder27, deploymentManager28, (int) (byte) 0);
        io.undertow.servlet.api.DeploymentManager deploymentManager31 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer33 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder27, deploymentManager31, (int) ' ');
        undertowEmbeddedServletContainerFactory1.bufferSize = 1800;
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        io.undertow.server.handlers.resource.ResourceManager resourceManager38 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray18);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer30);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer33);
        org.junit.Assert.assertNotNull(resourceManager38);
    }

    @Test
    public void test03416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03416");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 10;
        undertowEmbeddedServletContainerFactory1.ioThreads = (-1);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 8080);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.workerThreads = 0;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection20 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        boolean boolean21 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test03417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03417");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection8 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer11 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray12 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer11 };
        undertowEmbeddedServletContainerFactory10.addBuilderCustomizers(undertowBuilderCustomizerArray12);
        org.springframework.boot.context.embedded.Ssl ssl14 = undertowEmbeddedServletContainerFactory10.getSsl();
        java.lang.String str15 = undertowEmbeddedServletContainerFactory10.getContextPath();
        java.lang.String str16 = undertowEmbeddedServletContainerFactory10.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = undertowEmbeddedServletContainerFactory10.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray20 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList21 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList21, undertowBuilderCustomizerArray20);
        undertowEmbeddedServletContainerFactory19.builderCustomizers = undertowBuilderCustomizerList21;
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList21;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList21;
        org.springframework.core.io.ResourceLoader resourceLoader26 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer29 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray30 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer29 };
        undertowEmbeddedServletContainerFactory28.addBuilderCustomizers(undertowBuilderCustomizerArray30);
        org.springframework.boot.context.embedded.Ssl ssl32 = undertowEmbeddedServletContainerFactory28.getSsl();
        undertowEmbeddedServletContainerFactory28.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory28.setPort((int) (byte) 10);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet37 = undertowEmbeddedServletContainerFactory28.getErrorPages();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet38 = undertowEmbeddedServletContainerFactory28.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet38);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer41 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray42 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer41 };
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray42);
        initializer40.initializers = servletContextInitializerArray42;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray42);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray42);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList49 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        io.undertow.server.handlers.resource.ResourceManager resourceManager50 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray12);
        org.junit.Assert.assertNull(ssl14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "0.0.0.0" + "'", str16, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(resourceLoader26);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray30);
        org.junit.Assert.assertNull(ssl32);
        org.junit.Assert.assertNotNull(errorPageSet37);
        org.junit.Assert.assertNotNull(errorPageSet38);
        org.junit.Assert.assertNotNull(servletContextInitializerArray42);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList49);
        org.junit.Assert.assertNotNull(resourceManager50);
    }

    @Test
    public void test03418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03418");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl10);
        undertowEmbeddedServletContainerFactory1.ioThreads = 0;
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader14;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo16 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo16);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
    }

    @Test
    public void test03419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03419");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.workerThreads = 8080;
        org.springframework.boot.context.embedded.Ssl ssl9 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl9);
        org.springframework.core.io.ResourceLoader resourceLoader11 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(int6);
    }

    @Test
    public void test03420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03420");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        java.lang.Boolean boolean12 = undertowEmbeddedServletContainerFactory1.directBuffers;
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.ioThreads = 0;
        java.lang.Boolean boolean16 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test03421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03421");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader7 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader7;
        java.lang.Boolean boolean9 = undertowEmbeddedServletContainerFactory1.directBuffers;
        java.lang.ClassLoader classLoader10 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.lang.Integer int11 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNull(int11);
    }

    @Test
    public void test03422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03422");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.close();
        boolean boolean3 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "hi!";
        boolean boolean6 = jarResourcemanager1.isResourceChangeListenerSupported();
        boolean boolean7 = jarResourcemanager1.isResourceChangeListenerSupported();
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener8 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager1.registerResourceChangeListener(resourceChangeListener8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test03423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03423");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader6;
        int int8 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1800);
        io.undertow.server.handlers.resource.ResourceManager resourceManager11 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.springframework.core.io.ResourceLoader resourceLoader12 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader12;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1800 + "'", int8 == 1800);
        org.junit.Assert.assertNotNull(resourceManager11);
    }

    @Test
    public void test03424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03424");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl10);
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray12 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test03425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03425");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory("", 8080);
        java.net.InetAddress inetAddress3 = null;
        undertowEmbeddedServletContainerFactory2.setAddress(inetAddress3);
        java.net.InetAddress inetAddress5 = undertowEmbeddedServletContainerFactory2.getAddress();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory2.getContextPath();
        org.junit.Assert.assertNull(inetAddress5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test03426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03426");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        java.util.concurrent.TimeUnit timeUnit3 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10, timeUnit3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03427");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress10 = undertowEmbeddedServletContainerFactory1.getAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo11 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo11);
        java.lang.Integer int13 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 10;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo16 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo16);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo18 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo18);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(inetAddress10);
        org.junit.Assert.assertNull(int13);
    }

    @Test
    public void test03428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03428");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        java.lang.String str1 = jarResourcemanager0.jarPath;
        jarResourcemanager0.jarPath = "hi!";
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource5 = jarResourcemanager0.getResource("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test03429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03429");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        int int12 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.springframework.boot.context.embedded.Ssl ssl13 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl13);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1800 + "'", int12 == 1800);
    }

    @Test
    public void test03430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03430");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        int int9 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer12 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer12 };
        undertowEmbeddedServletContainerFactory11.addBuilderCustomizers(undertowBuilderCustomizerArray13);
        org.springframework.boot.context.embedded.Ssl ssl15 = undertowEmbeddedServletContainerFactory11.getSsl();
        undertowEmbeddedServletContainerFactory11.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory11.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress20 = undertowEmbeddedServletContainerFactory11.getAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo21 = null;
        undertowEmbeddedServletContainerFactory11.configureErrorPages(deploymentInfo21);
        undertowEmbeddedServletContainerFactory11.setIoThreads((java.lang.Integer) 1);
        boolean boolean25 = undertowEmbeddedServletContainerFactory11.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList26 = undertowEmbeddedServletContainerFactory11.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList26;
        org.springframework.core.io.ResourceLoader resourceLoader28 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader28);
        org.springframework.core.io.ResourceLoader resourceLoader30 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader30;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.Undertow.Builder builder33 = undertowEmbeddedServletContainerFactory1.createBuilder((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1800 + "'", int9 == 1800);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray13);
        org.junit.Assert.assertNull(ssl15);
        org.junit.Assert.assertNull(inetAddress20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList26);
    }

    @Test
    public void test03431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03431");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory1.workerThreads;
        undertowEmbeddedServletContainerFactory1.setPort(8080);
        undertowEmbeddedServletContainerFactory1.bufferSize = (-1);
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        io.undertow.server.handlers.resource.ResourceManager resourceManager19 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(resourceManager19);
    }

    @Test
    public void test03432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03432");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        java.lang.String str1 = jarResourcemanager0.jarPath;
        jarResourcemanager0.jarPath = "0.0.0.0";
        java.lang.String str4 = jarResourcemanager0.jarPath;
        jarResourcemanager0.jarPath = "0.0.0.0";
        java.lang.String str7 = jarResourcemanager0.jarPath;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
    }

    @Test
    public void test03433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03433");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        io.undertow.Undertow.Builder builder4 = undertowEmbeddedServletContainerFactory1.createBuilder((int) '4');
        java.net.InetAddress inetAddress5 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress5);
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList8 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 0);
        java.io.File file11 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList8);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test03434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03434");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        boolean boolean10 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList12, undertowDeploymentInfoCustomizerArray11);
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList12;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo15 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo15);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test03435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03435");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer12 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer12 };
        undertowEmbeddedServletContainerFactory11.addBuilderCustomizers(undertowBuilderCustomizerArray13);
        org.springframework.boot.context.embedded.Ssl ssl15 = undertowEmbeddedServletContainerFactory11.getSsl();
        java.lang.String str16 = undertowEmbeddedServletContainerFactory11.getContextPath();
        java.lang.String str17 = undertowEmbeddedServletContainerFactory11.getListenAddress();
        undertowEmbeddedServletContainerFactory11.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl20 = undertowEmbeddedServletContainerFactory11.getSsl();
        undertowEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer25 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray26 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer25 };
        undertowEmbeddedServletContainerFactory24.addBuilderCustomizers(undertowBuilderCustomizerArray26);
        org.springframework.boot.context.embedded.Ssl ssl28 = undertowEmbeddedServletContainerFactory24.getSsl();
        undertowEmbeddedServletContainerFactory24.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory24.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer35 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray36 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer35 };
        undertowEmbeddedServletContainerFactory34.addBuilderCustomizers(undertowBuilderCustomizerArray36);
        undertowEmbeddedServletContainerFactory24.addBuilderCustomizers(undertowBuilderCustomizerArray36);
        undertowEmbeddedServletContainerFactory11.addBuilderCustomizers(undertowBuilderCustomizerArray36);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray36);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory44.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray47 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList48 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList48, undertowDeploymentInfoCustomizerArray47);
        undertowEmbeddedServletContainerFactory44.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList48;
        undertowEmbeddedServletContainerFactory44.setIoThreads((java.lang.Integer) 1);
        org.springframework.core.io.ResourceLoader resourceLoader53 = null;
        undertowEmbeddedServletContainerFactory44.setResourceLoader(resourceLoader53);
        java.net.InetAddress inetAddress55 = undertowEmbeddedServletContainerFactory44.getAddress();
        int int56 = undertowEmbeddedServletContainerFactory44.getPort();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList57 = undertowEmbeddedServletContainerFactory44.deploymentInfoCustomizers;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList58 = undertowEmbeddedServletContainerFactory44.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList58;
        java.lang.ClassLoader classLoader60 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        java.io.File file61 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file61);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray13);
        org.junit.Assert.assertNull(ssl15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "0.0.0.0" + "'", str17, "0.0.0.0");
        org.junit.Assert.assertNull(ssl20);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray26);
        org.junit.Assert.assertNull(ssl28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray36);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(inetAddress55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList57);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList58);
        org.junit.Assert.assertNotNull(classLoader60);
    }

    @Test
    public void test03436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03436");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        java.lang.Boolean boolean12 = undertowEmbeddedServletContainerFactory1.directBuffers;
        java.lang.Boolean boolean13 = undertowEmbeddedServletContainerFactory1.directBuffers;
        undertowEmbeddedServletContainerFactory1.ioThreads = 0;
        undertowEmbeddedServletContainerFactory1.workerThreads = 1800;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer20 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer20 };
        undertowEmbeddedServletContainerFactory19.addBuilderCustomizers(undertowBuilderCustomizerArray21);
        org.springframework.boot.context.embedded.Ssl ssl23 = undertowEmbeddedServletContainerFactory19.getSsl();
        java.lang.String str24 = undertowEmbeddedServletContainerFactory19.getContextPath();
        java.lang.String str25 = undertowEmbeddedServletContainerFactory19.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet26 = undertowEmbeddedServletContainerFactory19.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection27 = undertowEmbeddedServletContainerFactory19.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList28 = undertowEmbeddedServletContainerFactory19.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray29 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory19.addBuilderCustomizers(undertowBuilderCustomizerArray29);
        org.springframework.core.io.ResourceLoader resourceLoader31 = undertowEmbeddedServletContainerFactory19.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory33.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int36 = undertowEmbeddedServletContainerFactory33.ioThreads;
        java.lang.Integer int37 = undertowEmbeddedServletContainerFactory33.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage38 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray39 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage38 };
        undertowEmbeddedServletContainerFactory33.addErrorPages(errorPageArray39);
        undertowEmbeddedServletContainerFactory19.addErrorPages(errorPageArray39);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer44 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray45 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer44 };
        undertowEmbeddedServletContainerFactory43.addBuilderCustomizers(undertowBuilderCustomizerArray45);
        org.springframework.boot.context.embedded.Ssl ssl47 = undertowEmbeddedServletContainerFactory43.getSsl();
        undertowEmbeddedServletContainerFactory43.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory43.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress52 = undertowEmbeddedServletContainerFactory43.getAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo53 = null;
        undertowEmbeddedServletContainerFactory43.configureErrorPages(deploymentInfo53);
        undertowEmbeddedServletContainerFactory43.setIoThreads((java.lang.Integer) 1);
        boolean boolean57 = undertowEmbeddedServletContainerFactory43.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer60 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray61 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer60 };
        undertowEmbeddedServletContainerFactory59.addBuilderCustomizers(undertowBuilderCustomizerArray61);
        org.springframework.boot.context.embedded.Ssl ssl63 = undertowEmbeddedServletContainerFactory59.getSsl();
        java.lang.String str64 = undertowEmbeddedServletContainerFactory59.getContextPath();
        java.lang.String str65 = undertowEmbeddedServletContainerFactory59.getListenAddress();
        undertowEmbeddedServletContainerFactory59.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl68 = undertowEmbeddedServletContainerFactory59.getSsl();
        undertowEmbeddedServletContainerFactory59.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer73 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray74 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer73 };
        undertowEmbeddedServletContainerFactory72.addBuilderCustomizers(undertowBuilderCustomizerArray74);
        org.springframework.boot.context.embedded.Ssl ssl76 = undertowEmbeddedServletContainerFactory72.getSsl();
        undertowEmbeddedServletContainerFactory72.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory72.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory82 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer83 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray84 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer83 };
        undertowEmbeddedServletContainerFactory82.addBuilderCustomizers(undertowBuilderCustomizerArray84);
        undertowEmbeddedServletContainerFactory72.addBuilderCustomizers(undertowBuilderCustomizerArray84);
        undertowEmbeddedServletContainerFactory59.addBuilderCustomizers(undertowBuilderCustomizerArray84);
        undertowEmbeddedServletContainerFactory43.addBuilderCustomizers(undertowBuilderCustomizerArray84);
        undertowEmbeddedServletContainerFactory19.addBuilderCustomizers(undertowBuilderCustomizerArray84);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray84);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray21);
        org.junit.Assert.assertNull(ssl23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "0.0.0.0" + "'", str25, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet26);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection27);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray29);
        org.junit.Assert.assertNull(resourceLoader31);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(errorPageArray39);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray45);
        org.junit.Assert.assertNull(ssl47);
        org.junit.Assert.assertNull(inetAddress52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray61);
        org.junit.Assert.assertNull(ssl63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "0.0.0.0" + "'", str65, "0.0.0.0");
        org.junit.Assert.assertNull(ssl68);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray74);
        org.junit.Assert.assertNull(ssl76);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray84);
    }

    @Test
    public void test03437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03437");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.ioThreads = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList9 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory11.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory11.ioThreads;
        java.lang.Integer int15 = undertowEmbeddedServletContainerFactory11.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage16 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray17 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage16 };
        undertowEmbeddedServletContainerFactory11.addErrorPages(errorPageArray17);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray17);
        java.lang.String str20 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setPort(0);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList23 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        org.springframework.boot.context.embedded.Ssl ssl26 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0.0.0.0" + "'", str6, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList9);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(errorPageArray17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "0.0.0.0" + "'", str20, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList23);
        org.junit.Assert.assertNull(ssl26);
    }

    @Test
    public void test03438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03438");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection8 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 1800);
        boolean boolean14 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer17 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer17 };
        undertowEmbeddedServletContainerFactory16.addBuilderCustomizers(undertowBuilderCustomizerArray18);
        org.springframework.boot.context.embedded.Ssl ssl20 = undertowEmbeddedServletContainerFactory16.getSsl();
        java.lang.String str21 = undertowEmbeddedServletContainerFactory16.getContextPath();
        java.lang.String str22 = undertowEmbeddedServletContainerFactory16.getListenAddress();
        undertowEmbeddedServletContainerFactory16.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory16.buffersPerRegion = 10;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory28.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int31 = undertowEmbeddedServletContainerFactory28.ioThreads;
        java.lang.Integer int32 = undertowEmbeddedServletContainerFactory28.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage33 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray34 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage33 };
        undertowEmbeddedServletContainerFactory28.addErrorPages(errorPageArray34);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray36 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer37 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray36);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray38 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer39 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray38);
        initializer37.initializers = servletContextInitializerArray38;
        undertowEmbeddedServletContainerFactory28.addInitializers(servletContextInitializerArray38);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray38);
        undertowEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray38);
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray38);
        org.springframework.core.io.ResourceLoader resourceLoader45 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray18);
        org.junit.Assert.assertNull(ssl20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "0.0.0.0" + "'", str22, "0.0.0.0");
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(errorPageArray34);
        org.junit.Assert.assertNotNull(servletContextInitializerArray36);
        org.junit.Assert.assertNotNull(servletContextInitializerArray38);
        org.junit.Assert.assertNull(resourceLoader45);
    }

    @Test
    public void test03439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03439");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.net.InetAddress inetAddress2 = undertowEmbeddedServletContainerFactory0.getAddress();
        undertowEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer7 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray8 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer7 };
        undertowEmbeddedServletContainerFactory6.addBuilderCustomizers(undertowBuilderCustomizerArray8);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory6.getSsl();
        java.lang.String str11 = undertowEmbeddedServletContainerFactory6.getContextPath();
        java.lang.String str12 = undertowEmbeddedServletContainerFactory6.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet13 = undertowEmbeddedServletContainerFactory6.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList17 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList17, undertowBuilderCustomizerArray16);
        undertowEmbeddedServletContainerFactory15.builderCustomizers = undertowBuilderCustomizerList17;
        undertowEmbeddedServletContainerFactory6.builderCustomizers = undertowBuilderCustomizerList17;
        java.net.InetAddress inetAddress21 = undertowEmbeddedServletContainerFactory6.getAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo22 = null;
        undertowEmbeddedServletContainerFactory6.configureErrorPages(deploymentInfo22);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer26 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray27 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer26 };
        undertowEmbeddedServletContainerFactory25.addBuilderCustomizers(undertowBuilderCustomizerArray27);
        org.springframework.boot.context.embedded.Ssl ssl29 = undertowEmbeddedServletContainerFactory25.getSsl();
        org.springframework.core.io.ResourceLoader resourceLoader30 = null;
        undertowEmbeddedServletContainerFactory25.resourceLoader = resourceLoader30;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer34 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray35 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer34 };
        undertowEmbeddedServletContainerFactory33.addBuilderCustomizers(undertowBuilderCustomizerArray35);
        org.springframework.boot.context.embedded.Ssl ssl37 = undertowEmbeddedServletContainerFactory33.getSsl();
        java.lang.String str38 = undertowEmbeddedServletContainerFactory33.getContextPath();
        java.lang.String str39 = undertowEmbeddedServletContainerFactory33.getListenAddress();
        undertowEmbeddedServletContainerFactory33.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory33.buffersPerRegion = 10;
        undertowEmbeddedServletContainerFactory33.ioThreads = (-1);
        undertowEmbeddedServletContainerFactory33.setBufferSize((java.lang.Integer) 8080);
        undertowEmbeddedServletContainerFactory33.setBufferSize((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray50 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory33.addErrorPages(errorPageArray50);
        undertowEmbeddedServletContainerFactory25.addErrorPages(errorPageArray50);
        undertowEmbeddedServletContainerFactory6.addErrorPages(errorPageArray50);
        undertowEmbeddedServletContainerFactory0.addErrorPages(errorPageArray50);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo55 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory0.configureMimeMappings(deploymentInfo55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertNull(inetAddress2);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray8);
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0.0.0.0" + "'", str12, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet13);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(inetAddress21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray27);
        org.junit.Assert.assertNull(ssl29);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray35);
        org.junit.Assert.assertNull(ssl37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "0.0.0.0" + "'", str39, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageArray50);
    }

    @Test
    public void test03440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03440");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList12;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList12;
        org.springframework.core.io.ResourceLoader resourceLoader16 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader16;
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        java.net.InetAddress inetAddress20 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress20);
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.bufferSize = 8080;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo28 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo28);
        undertowEmbeddedServletContainerFactory1.bufferSize = 0;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test03441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03441");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection9 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray11);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo14 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo14);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet16 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection13);
        org.junit.Assert.assertNotNull(errorPageSet16);
        org.junit.Assert.assertNotNull(errorPageSet17);
    }

    @Test
    public void test03442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03442");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("");
        jarResourcemanager1.close();
        boolean boolean3 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "hi!";
        boolean boolean6 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.jarPath = "";
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test03443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03443");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory1.getSsl();
        int int11 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray12 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray12);
        java.lang.Integer int14 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 100);
        java.io.File file19 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file19);
        java.lang.Integer int21 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray25 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer24 };
        undertowEmbeddedServletContainerFactory23.addBuilderCustomizers(undertowBuilderCustomizerArray25);
        org.springframework.boot.context.embedded.Ssl ssl27 = undertowEmbeddedServletContainerFactory23.getSsl();
        java.lang.String str28 = undertowEmbeddedServletContainerFactory23.getContextPath();
        java.lang.String str29 = undertowEmbeddedServletContainerFactory23.getListenAddress();
        undertowEmbeddedServletContainerFactory23.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl32 = undertowEmbeddedServletContainerFactory23.getSsl();
        undertowEmbeddedServletContainerFactory23.setPort((int) (short) 0);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList35 = undertowEmbeddedServletContainerFactory23.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList35;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer39 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray40 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer39 };
        undertowEmbeddedServletContainerFactory38.addBuilderCustomizers(undertowBuilderCustomizerArray40);
        boolean boolean42 = undertowEmbeddedServletContainerFactory38.isRegisterDefaultServlet();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection43 = undertowEmbeddedServletContainerFactory38.getBuilderCustomizers();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet44 = undertowEmbeddedServletContainerFactory38.getErrorPages();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = undertowEmbeddedServletContainerFactory38.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings45);
        org.springframework.core.io.ResourceLoader resourceLoader47 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader47);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray12);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray25);
        org.junit.Assert.assertNull(ssl27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "0.0.0.0" + "'", str29, "0.0.0.0");
        org.junit.Assert.assertNull(ssl32);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList35);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection43);
        org.junit.Assert.assertNotNull(errorPageSet44);
        org.junit.Assert.assertNotNull(mimeMappings45);
    }

    @Test
    public void test03444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03444");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory12.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int15 = undertowEmbeddedServletContainerFactory12.ioThreads;
        java.lang.Integer int16 = undertowEmbeddedServletContainerFactory12.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage17 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray18 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage17 };
        undertowEmbeddedServletContainerFactory12.addErrorPages(errorPageArray18);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray18);
        java.lang.Integer int21 = undertowEmbeddedServletContainerFactory1.workerThreads;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection22 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo23 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureMimeMappings(deploymentInfo23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(errorPageArray18);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection22);
    }

    @Test
    public void test03445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03445");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        java.lang.String str5 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.Undertow.Builder builder8 = undertowEmbeddedServletContainerFactory1.createBuilder(1800);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "0.0.0.0" + "'", str5, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0.0.0.0" + "'", str6, "0.0.0.0");
    }

    @Test
    public void test03446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03446");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = undertowEmbeddedServletContainerFactory3.getMimeMappings();
        io.undertow.Undertow.Builder builder6 = undertowEmbeddedServletContainerFactory3.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager7 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer9 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder6, deploymentManager7, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory1.bufferSize = (-1);
        java.lang.Boolean boolean12 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.Ssl ssl13 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) (-1));
        undertowEmbeddedServletContainerFactory1.bufferSize = 1800;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer20 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer20 };
        undertowEmbeddedServletContainerFactory19.addBuilderCustomizers(undertowBuilderCustomizerArray21);
        undertowEmbeddedServletContainerFactory19.setSessionTimeout((int) (byte) 10);
        undertowEmbeddedServletContainerFactory19.setIoThreads((java.lang.Integer) 0);
        boolean boolean27 = undertowEmbeddedServletContainerFactory19.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = undertowEmbeddedServletContainerFactory31.getMimeMappings();
        io.undertow.Undertow.Builder builder34 = undertowEmbeddedServletContainerFactory31.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager35 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer37 = undertowEmbeddedServletContainerFactory29.getUndertowEmbeddedServletContainer(builder34, deploymentManager35, (int) (byte) 0);
        io.undertow.servlet.api.DeploymentManager deploymentManager38 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer40 = undertowEmbeddedServletContainerFactory19.getUndertowEmbeddedServletContainer(builder34, deploymentManager38, (int) (short) 1);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo41 = null;
        undertowEmbeddedServletContainerFactory19.configureErrorPages(deploymentInfo41);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer45 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray46 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer45 };
        undertowEmbeddedServletContainerFactory44.addBuilderCustomizers(undertowBuilderCustomizerArray46);
        org.springframework.boot.context.embedded.Ssl ssl48 = undertowEmbeddedServletContainerFactory44.getSsl();
        undertowEmbeddedServletContainerFactory44.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory44.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer55 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray56 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer55 };
        undertowEmbeddedServletContainerFactory54.addBuilderCustomizers(undertowBuilderCustomizerArray56);
        undertowEmbeddedServletContainerFactory44.addBuilderCustomizers(undertowBuilderCustomizerArray56);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray59 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory44.addErrorPages(errorPageArray59);
        undertowEmbeddedServletContainerFactory19.addErrorPages(errorPageArray59);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray59);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(ssl13);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer37);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer40);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray46);
        org.junit.Assert.assertNull(ssl48);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray56);
        org.junit.Assert.assertNotNull(errorPageArray59);
    }

    @Test
    public void test03447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03447");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(1);
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("hi!");
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 1);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader6;
    }

    @Test
    public void test03448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03448");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        java.lang.Integer int6 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.workerThreads = 8080;
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(int6);
    }

    @Test
    public void test03449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03449");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        java.lang.String str4 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(100);
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) (-1));
        boolean boolean10 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0.0.0.0" + "'", str4, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test03450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03450");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList5 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList5, undertowDeploymentInfoCustomizerArray4);
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList5;
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory1.bufferSize;
        java.lang.String str9 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList10 = null;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList10;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) (-1));
        java.lang.ClassLoader classLoader14 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "0.0.0.0" + "'", str9, "0.0.0.0");
        org.junit.Assert.assertNotNull(classLoader14);
    }

    @Test
    public void test03451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03451");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer9 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer9 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection12 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.net.InetAddress inetAddress13 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress13);
        int int15 = undertowEmbeddedServletContainerFactory1.getPort();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection16 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection17 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.lang.String str18 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.io.File file19 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.lang.Integer int20 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection16);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "0.0.0.0" + "'", str18, "0.0.0.0");
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(int20);
    }

    @Test
    public void test03452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03452");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        boolean boolean7 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 8080);
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer10 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray11 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer10 };
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray11);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray11);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray11);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList17 = undertowEmbeddedServletContainerFactory16.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory16.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray22 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray22);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray25 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray25);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray27 = initializer26.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray27);
        initializer24.initializers = servletContextInitializerArray27;
        initializer23.initializers = servletContextInitializerArray27;
        undertowEmbeddedServletContainerFactory21.addInitializers(servletContextInitializerArray27);
        io.undertow.servlet.api.DeploymentManager deploymentManager32 = undertowEmbeddedServletContainerFactory16.createDeploymentManager(servletContextInitializerArray27);
        initializer14.initializers = servletContextInitializerArray27;
        io.undertow.servlet.api.DeploymentManager deploymentManager34 = undertowEmbeddedServletContainerFactory1.createDeploymentManager(servletContextInitializerArray27);
        org.springframework.boot.context.embedded.Ssl ssl35 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray11);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray22);
        org.junit.Assert.assertNotNull(servletContextInitializerArray25);
        org.junit.Assert.assertNotNull(servletContextInitializerArray27);
        org.junit.Assert.assertNotNull(deploymentManager32);
        org.junit.Assert.assertNotNull(deploymentManager34);
        org.junit.Assert.assertNull(ssl35);
    }

    @Test
    public void test03453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03453");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int4 = undertowEmbeddedServletContainerFactory1.ioThreads;
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        boolean boolean8 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader9;
        java.io.File file11 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file11);
        java.io.File file13 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.boot.context.embedded.ErrorPage errorPage14 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage15 = undertowEmbeddedServletContainerFactory1.getUndertowErrorPage(errorPage14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test03454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03454");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        jarResourcemanager0.jarPath = "hi!";
        boolean boolean3 = jarResourcemanager0.isResourceChangeListenerSupported();
        java.lang.String str4 = jarResourcemanager0.jarPath;
        jarResourcemanager0.close();
        jarResourcemanager0.jarPath = "hi!";
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener8 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager0.removeResourceChangeListener(resourceChangeListener8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
    }

    @Test
    public void test03455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03455");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        java.lang.Integer int9 = undertowEmbeddedServletContainerFactory1.workerThreads;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer12 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray13 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer12 };
        undertowEmbeddedServletContainerFactory11.addBuilderCustomizers(undertowBuilderCustomizerArray13);
        org.springframework.boot.context.embedded.Ssl ssl15 = undertowEmbeddedServletContainerFactory11.getSsl();
        java.lang.String str16 = undertowEmbeddedServletContainerFactory11.getContextPath();
        java.lang.String str17 = undertowEmbeddedServletContainerFactory11.getListenAddress();
        undertowEmbeddedServletContainerFactory11.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl20 = undertowEmbeddedServletContainerFactory11.getSsl();
        undertowEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer25 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray26 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer25 };
        undertowEmbeddedServletContainerFactory24.addBuilderCustomizers(undertowBuilderCustomizerArray26);
        org.springframework.boot.context.embedded.Ssl ssl28 = undertowEmbeddedServletContainerFactory24.getSsl();
        undertowEmbeddedServletContainerFactory24.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory24.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer35 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray36 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer35 };
        undertowEmbeddedServletContainerFactory34.addBuilderCustomizers(undertowBuilderCustomizerArray36);
        undertowEmbeddedServletContainerFactory24.addBuilderCustomizers(undertowBuilderCustomizerArray36);
        undertowEmbeddedServletContainerFactory11.addBuilderCustomizers(undertowBuilderCustomizerArray36);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray36);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 0);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray13);
        org.junit.Assert.assertNull(ssl15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "0.0.0.0" + "'", str17, "0.0.0.0");
        org.junit.Assert.assertNull(ssl20);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray26);
        org.junit.Assert.assertNull(ssl28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray36);
    }

    @Test
    public void test03456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03456");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test03457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03457");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(1800);
        org.springframework.boot.context.embedded.Ssl ssl2 = undertowEmbeddedServletContainerFactory1.getSsl();
        boolean boolean3 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) -1);
        java.net.InetAddress inetAddress6 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress6);
        java.io.File file8 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file8);
        org.junit.Assert.assertNull(ssl2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test03458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03458");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress10 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.net.InetAddress inetAddress12 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.net.InetAddress inetAddress13 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.io.File file14 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setContextPath("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(inetAddress10);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(inetAddress12);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test03459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03459");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.close();
        jarResourcemanager1.jarPath = "";
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.close();
        jarResourcemanager1.close();
        java.lang.String str11 = jarResourcemanager1.jarPath;
        io.undertow.server.handlers.resource.ResourceChangeListener resourceChangeListener12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jarResourcemanager1.removeResourceChangeListener(resourceChangeListener12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: UT000073: Resource change listeners are not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test03460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03460");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl6 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl6);
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 10);
        undertowEmbeddedServletContainerFactory1.workerThreads = 100;
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection12 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.lang.Integer int13 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection12);
        org.junit.Assert.assertNull(int13);
    }

    @Test
    public void test03461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03461");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList1 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory0.setSessionTimeout(0);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection4 = undertowEmbeddedServletContainerFactory0.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList5 = undertowEmbeddedServletContainerFactory0.deploymentInfoCustomizers;
        java.lang.Boolean boolean6 = undertowEmbeddedServletContainerFactory0.directBuffers;
        int int7 = undertowEmbeddedServletContainerFactory0.getSessionTimeout();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo8 = null;
        undertowEmbeddedServletContainerFactory0.configureErrorPages(deploymentInfo8);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory0.getSsl();
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList1);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection4);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(ssl10);
    }

    @Test
    public void test03462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03462");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray2 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray5 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray5);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray7 = initializer6.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray7);
        initializer4.initializers = servletContextInitializerArray7;
        initializer3.initializers = servletContextInitializerArray7;
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray7);
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        io.undertow.Undertow.Builder builder14 = undertowEmbeddedServletContainerFactory1.createBuilder((int) (short) 100);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray16 = undertowEmbeddedServletContainerFactory1.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletContextInitializerArray2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray5);
        org.junit.Assert.assertNotNull(servletContextInitializerArray7);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(mimeMappings15);
    }

    @Test
    public void test03463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03463");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        int int9 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory1.getSsl();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0.0.0.0" + "'", str6, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(ssl10);
    }

    @Test
    public void test03464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03464");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer9 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray10 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer9 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection12 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection13 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList14 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        java.io.File file15 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file15);
        java.net.InetAddress inetAddress17 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.lang.ClassLoader classLoader18 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo19 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureMimeMappings(deploymentInfo19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection12);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection13);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList14);
        org.junit.Assert.assertNull(inetAddress17);
        org.junit.Assert.assertNotNull(classLoader18);
    }

    @Test
    public void test03465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03465");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.lang.Boolean boolean8 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer11 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray12 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer11 };
        undertowEmbeddedServletContainerFactory10.addBuilderCustomizers(undertowBuilderCustomizerArray12);
        org.springframework.boot.context.embedded.Ssl ssl14 = undertowEmbeddedServletContainerFactory10.getSsl();
        java.lang.String str15 = undertowEmbeddedServletContainerFactory10.getContextPath();
        java.lang.String str16 = undertowEmbeddedServletContainerFactory10.getListenAddress();
        java.lang.String str17 = undertowEmbeddedServletContainerFactory10.getListenAddress();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray18 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet19, errorPageArray18);
        undertowEmbeddedServletContainerFactory10.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet19);
        undertowEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet19);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo23 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo23);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = undertowEmbeddedServletContainerFactory28.getMimeMappings();
        io.undertow.Undertow.Builder builder31 = undertowEmbeddedServletContainerFactory28.createBuilder((int) '4');
        io.undertow.servlet.api.DeploymentManager deploymentManager32 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer34 = undertowEmbeddedServletContainerFactory26.getUndertowEmbeddedServletContainer(builder31, deploymentManager32, (int) (byte) 0);
        undertowEmbeddedServletContainerFactory26.bufferSize = (-1);
        java.lang.Boolean boolean37 = undertowEmbeddedServletContainerFactory26.directBuffers;
        undertowEmbeddedServletContainerFactory26.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = undertowEmbeddedServletContainerFactory26.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings40);
        java.lang.Integer int42 = undertowEmbeddedServletContainerFactory1.workerThreads;
        java.lang.Boolean boolean43 = undertowEmbeddedServletContainerFactory1.directBuffers;
        java.io.File file44 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file44);
        org.springframework.core.io.ResourceLoader resourceLoader46 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.KeyManager[] keyManagerArray47 = undertowEmbeddedServletContainerFactory1.getKeyManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + true + "'", boolean8, true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray12);
        org.junit.Assert.assertNull(ssl14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "0.0.0.0" + "'", str16, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "0.0.0.0" + "'", str17, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer34);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertEquals("'" + boolean43 + "' != '" + true + "'", boolean43, true);
        org.junit.Assert.assertNull(resourceLoader46);
    }

    @Test
    public void test03466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03466");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray2 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray5 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray5);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray7 = initializer6.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray7);
        initializer4.initializers = servletContextInitializerArray7;
        initializer3.initializers = servletContextInitializerArray7;
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray7);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        java.net.InetAddress inetAddress14 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress14);
        org.springframework.boot.context.embedded.Ssl ssl16 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl16);
        org.junit.Assert.assertNotNull(servletContextInitializerArray2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray5);
        org.junit.Assert.assertNotNull(servletContextInitializerArray7);
    }

    @Test
    public void test03467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03467");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        io.undertow.Undertow.Builder builder4 = undertowEmbeddedServletContainerFactory1.createBuilder((int) '4');
        java.net.InetAddress inetAddress5 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress5);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory8.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList12, undertowDeploymentInfoCustomizerArray11);
        undertowEmbeddedServletContainerFactory8.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList12;
        undertowEmbeddedServletContainerFactory8.setIoThreads((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = undertowEmbeddedServletContainerFactory8.getMimeMappings();
        undertowEmbeddedServletContainerFactory8.setBuffersPerRegion((java.lang.Integer) 8080);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList23 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList23, undertowBuilderCustomizerArray22);
        undertowEmbeddedServletContainerFactory21.builderCustomizers = undertowBuilderCustomizerList23;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = undertowEmbeddedServletContainerFactory21.getMimeMappings();
        boolean boolean27 = undertowEmbeddedServletContainerFactory21.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList28 = undertowEmbeddedServletContainerFactory21.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory8.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList28;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList28;
        io.undertow.server.handlers.resource.ResourceManager resourceManager31 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        java.lang.Integer int32 = undertowEmbeddedServletContainerFactory1.workerThreads;
        int int33 = undertowEmbeddedServletContainerFactory1.getPort();
        java.net.InetAddress inetAddress34 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress34);
        org.springframework.boot.context.embedded.Ssl ssl36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.xnio.SslClientAuthMode sslClientAuthMode37 = undertowEmbeddedServletContainerFactory1.getSslClientAuthMode(ssl36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList28);
        org.junit.Assert.assertNotNull(resourceManager31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test03468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03468");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setPort((int) (short) 0);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList13 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer15 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray16 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer15 };
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray16);
        initializer14.initializers = servletContextInitializerArray16;
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray16);
        java.lang.ClassLoader classLoader20 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.ioThreads = 0;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.bufferSize = 0;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet27 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory29.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int32 = undertowEmbeddedServletContainerFactory29.bufferSize;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory34.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int37 = undertowEmbeddedServletContainerFactory34.ioThreads;
        java.lang.Integer int38 = undertowEmbeddedServletContainerFactory34.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage39 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray40 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage39 };
        undertowEmbeddedServletContainerFactory34.addErrorPages(errorPageArray40);
        undertowEmbeddedServletContainerFactory29.addErrorPages(errorPageArray40);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray40);
        // The following exception was thrown during execution in test generation
        try {
            javax.net.ssl.TrustManager[] trustManagerArray44 = undertowEmbeddedServletContainerFactory1.getTrustManagers();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: java.lang.NullPointerException");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList13);
        org.junit.Assert.assertNotNull(servletContextInitializerArray16);
        org.junit.Assert.assertNotNull(classLoader20);
        org.junit.Assert.assertNotNull(errorPageSet27);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(errorPageArray40);
    }

    @Test
    public void test03469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03469");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList5 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList5, undertowDeploymentInfoCustomizerArray4);
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList5;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray14 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList15 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList15, undertowBuilderCustomizerArray14);
        undertowEmbeddedServletContainerFactory13.builderCustomizers = undertowBuilderCustomizerList15;
        java.lang.String str18 = undertowEmbeddedServletContainerFactory13.getListenAddress();
        undertowEmbeddedServletContainerFactory13.ioThreads = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList21 = undertowEmbeddedServletContainerFactory13.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList21;
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 100;
        undertowEmbeddedServletContainerFactory1.bufferSize = (-1);
        undertowEmbeddedServletContainerFactory1.bufferSize = 0;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.ioThreads = 1800;
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "0.0.0.0" + "'", str18, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList21);
    }

    @Test
    public void test03470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03470");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.net.InetAddress inetAddress7 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo9 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo9);
        java.lang.Integer int11 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        org.springframework.core.io.ResourceLoader resourceLoader12 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.lang.ClassLoader classLoader14 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.ioThreads = 0;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(inetAddress7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(resourceLoader12);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(classLoader14);
    }

    @Test
    public void test03471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03471");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        boolean boolean6 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        java.net.InetAddress inetAddress7 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList12, undertowBuilderCustomizerArray11);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList12;
        int int15 = undertowEmbeddedServletContainerFactory1.getPort();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection16 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.lang.Boolean boolean17 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(inetAddress7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection16);
        org.junit.Assert.assertNull(boolean17);
    }

    @Test
    public void test03472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03472");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "hi!";
        jarResourcemanager1.jarPath = "hi!";
        java.lang.String str6 = jarResourcemanager1.jarPath;
        jarResourcemanager1.close();
        jarResourcemanager1.jarPath = "hi!";
        boolean boolean10 = jarResourcemanager1.isResourceChangeListenerSupported();
        jarResourcemanager1.close();
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource13 = jarResourcemanager1.getResource("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test03473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03473");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        boolean boolean10 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray11 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList12, undertowDeploymentInfoCustomizerArray11);
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList12;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo15 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo15);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList17 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        org.springframework.core.io.ResourceLoader resourceLoader20 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader20);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer23 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap22);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer initParameterConfiguringServletContextInitializer25 = new org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer(strMap24);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { initParameterConfiguringServletContextInitializer23, initParameterConfiguringServletContextInitializer25 };
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer27 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: java.lang.NullPointerException");
        } catch (java.lang.RuntimeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray26);
    }

    @Test
    public void test03474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03474");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList16 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList16, undertowBuilderCustomizerArray15);
        undertowEmbeddedServletContainerFactory14.builderCustomizers = undertowBuilderCustomizerList16;
        undertowEmbeddedServletContainerFactory14.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory14.bufferSize = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList23 = undertowEmbeddedServletContainerFactory14.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray24 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet25 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet25, errorPageArray24);
        undertowEmbeddedServletContainerFactory14.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet25);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer30 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray31 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer30 };
        undertowEmbeddedServletContainerFactory29.addBuilderCustomizers(undertowBuilderCustomizerArray31);
        org.springframework.boot.context.embedded.Ssl ssl33 = undertowEmbeddedServletContainerFactory29.getSsl();
        java.lang.String str34 = undertowEmbeddedServletContainerFactory29.getContextPath();
        java.lang.String str35 = undertowEmbeddedServletContainerFactory29.getListenAddress();
        undertowEmbeddedServletContainerFactory29.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory29.buffersPerRegion = 10;
        undertowEmbeddedServletContainerFactory29.ioThreads = (-1);
        undertowEmbeddedServletContainerFactory29.setBufferSize((java.lang.Integer) 8080);
        undertowEmbeddedServletContainerFactory29.setBufferSize((java.lang.Integer) 1);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray46 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        undertowEmbeddedServletContainerFactory29.addErrorPages(errorPageArray46);
        undertowEmbeddedServletContainerFactory14.addErrorPages(errorPageArray46);
        undertowEmbeddedServletContainerFactory1.addErrorPages(errorPageArray46);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList23);
        org.junit.Assert.assertNotNull(errorPageArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray31);
        org.junit.Assert.assertNull(ssl33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "0.0.0.0" + "'", str35, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageArray46);
    }

    @Test
    public void test03475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03475");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        undertowEmbeddedServletContainerFactory1.workerThreads = (-1);
        int int8 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer11 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray12 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer11 };
        undertowEmbeddedServletContainerFactory10.addBuilderCustomizers(undertowBuilderCustomizerArray12);
        org.springframework.boot.context.embedded.Ssl ssl14 = undertowEmbeddedServletContainerFactory10.getSsl();
        undertowEmbeddedServletContainerFactory10.setDirectBuffers((java.lang.Boolean) true);
        java.lang.Boolean boolean17 = undertowEmbeddedServletContainerFactory10.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer20 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray21 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer20 };
        undertowEmbeddedServletContainerFactory19.addBuilderCustomizers(undertowBuilderCustomizerArray21);
        org.springframework.boot.context.embedded.Ssl ssl23 = undertowEmbeddedServletContainerFactory19.getSsl();
        java.lang.String str24 = undertowEmbeddedServletContainerFactory19.getContextPath();
        java.lang.String str25 = undertowEmbeddedServletContainerFactory19.getListenAddress();
        java.lang.String str26 = undertowEmbeddedServletContainerFactory19.getListenAddress();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray27 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet28 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet28, errorPageArray27);
        undertowEmbeddedServletContainerFactory19.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet28);
        undertowEmbeddedServletContainerFactory10.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet28);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection32 = undertowEmbeddedServletContainerFactory10.getBuilderCustomizers();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList33 = undertowEmbeddedServletContainerFactory10.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList33;
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("");
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 0);
        undertowEmbeddedServletContainerFactory1.directBuffers = true;
        io.undertow.servlet.api.DeploymentInfo deploymentInfo41 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureMimeMappings(deploymentInfo41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray12);
        org.junit.Assert.assertNull(ssl14);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + true + "'", boolean17, true);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray21);
        org.junit.Assert.assertNull(ssl23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "0.0.0.0" + "'", str25, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0.0.0.0" + "'", str26, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection32);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList33);
    }

    @Test
    public void test03476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03476");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.workerThreads = 100;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 100);
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader11 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory13.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory13.getSsl();
        java.lang.String str18 = undertowEmbeddedServletContainerFactory13.getContextPath();
        java.lang.String str19 = undertowEmbeddedServletContainerFactory13.getListenAddress();
        undertowEmbeddedServletContainerFactory13.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl22 = undertowEmbeddedServletContainerFactory13.getSsl();
        undertowEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList25 = undertowEmbeddedServletContainerFactory13.deploymentInfoCustomizers;
        org.springframework.core.io.ResourceLoader resourceLoader26 = undertowEmbeddedServletContainerFactory13.resourceLoader;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList27 = undertowEmbeddedServletContainerFactory13.builderCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer30 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray31 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer30 };
        undertowEmbeddedServletContainerFactory29.addBuilderCustomizers(undertowBuilderCustomizerArray31);
        org.springframework.boot.context.embedded.Ssl ssl33 = undertowEmbeddedServletContainerFactory29.getSsl();
        java.lang.String str34 = undertowEmbeddedServletContainerFactory29.getContextPath();
        java.lang.String str35 = undertowEmbeddedServletContainerFactory29.getListenAddress();
        java.lang.String str36 = undertowEmbeddedServletContainerFactory29.getListenAddress();
        boolean boolean37 = undertowEmbeddedServletContainerFactory29.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory29.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory29.bufferSize = 10;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray44 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList45 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList45, undertowBuilderCustomizerArray44);
        undertowEmbeddedServletContainerFactory43.builderCustomizers = undertowBuilderCustomizerList45;
        undertowEmbeddedServletContainerFactory43.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory43.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings52 = undertowEmbeddedServletContainerFactory43.getMimeMappings();
        undertowEmbeddedServletContainerFactory29.setMimeMappings(mimeMappings52);
        org.springframework.boot.context.embedded.Ssl ssl54 = undertowEmbeddedServletContainerFactory29.getSsl();
        undertowEmbeddedServletContainerFactory29.setBuffersPerRegion((java.lang.Integer) 8080);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer59 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray60 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer59 };
        undertowEmbeddedServletContainerFactory58.addBuilderCustomizers(undertowBuilderCustomizerArray60);
        org.springframework.boot.context.embedded.Ssl ssl62 = undertowEmbeddedServletContainerFactory58.getSsl();
        java.lang.String str63 = undertowEmbeddedServletContainerFactory58.getContextPath();
        java.lang.String str64 = undertowEmbeddedServletContainerFactory58.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet65 = undertowEmbeddedServletContainerFactory58.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray68 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList69 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList69, undertowBuilderCustomizerArray68);
        undertowEmbeddedServletContainerFactory67.builderCustomizers = undertowBuilderCustomizerList69;
        undertowEmbeddedServletContainerFactory58.builderCustomizers = undertowBuilderCustomizerList69;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory73 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings74 = undertowEmbeddedServletContainerFactory73.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray75 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory73.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray75);
        undertowEmbeddedServletContainerFactory58.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray75);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList78 = undertowEmbeddedServletContainerFactory58.builderCustomizers;
        undertowEmbeddedServletContainerFactory29.builderCustomizers = undertowBuilderCustomizerList78;
        undertowEmbeddedServletContainerFactory13.builderCustomizers = undertowBuilderCustomizerList78;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList78;
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(resourceLoader11);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "0.0.0.0" + "'", str19, "0.0.0.0");
        org.junit.Assert.assertNull(ssl22);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList25);
        org.junit.Assert.assertNull(resourceLoader26);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList27);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray31);
        org.junit.Assert.assertNull(ssl33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "0.0.0.0" + "'", str35, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "0.0.0.0" + "'", str36, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(mimeMappings52);
        org.junit.Assert.assertNull(ssl54);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray60);
        org.junit.Assert.assertNull(ssl62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "0.0.0.0" + "'", str64, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet65);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(mimeMappings74);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray75);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList78);
    }

    @Test
    public void test03477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03477");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection7 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection8 = undertowEmbeddedServletContainerFactory1.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer11 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray12 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer11 };
        undertowEmbeddedServletContainerFactory10.addBuilderCustomizers(undertowBuilderCustomizerArray12);
        org.springframework.boot.context.embedded.Ssl ssl14 = undertowEmbeddedServletContainerFactory10.getSsl();
        java.lang.String str15 = undertowEmbeddedServletContainerFactory10.getContextPath();
        java.lang.String str16 = undertowEmbeddedServletContainerFactory10.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = undertowEmbeddedServletContainerFactory10.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray20 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList21 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList21, undertowBuilderCustomizerArray20);
        undertowEmbeddedServletContainerFactory19.builderCustomizers = undertowBuilderCustomizerList21;
        undertowEmbeddedServletContainerFactory10.builderCustomizers = undertowBuilderCustomizerList21;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList21;
        org.springframework.core.io.ResourceLoader resourceLoader26 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.lang.Boolean boolean27 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer30 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray31 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer30 };
        undertowEmbeddedServletContainerFactory29.addBuilderCustomizers(undertowBuilderCustomizerArray31);
        undertowEmbeddedServletContainerFactory29.setSessionTimeout((int) (byte) 10);
        undertowEmbeddedServletContainerFactory29.setIoThreads((java.lang.Integer) 0);
        org.springframework.core.io.ResourceLoader resourceLoader37 = null;
        undertowEmbeddedServletContainerFactory29.resourceLoader = resourceLoader37;
        java.lang.String str39 = undertowEmbeddedServletContainerFactory29.getContextPath();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer42 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray43 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer42 };
        undertowEmbeddedServletContainerFactory41.addBuilderCustomizers(undertowBuilderCustomizerArray43);
        org.springframework.boot.context.embedded.Ssl ssl45 = undertowEmbeddedServletContainerFactory41.getSsl();
        undertowEmbeddedServletContainerFactory41.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory41.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer52 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray53 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer52 };
        undertowEmbeddedServletContainerFactory51.addBuilderCustomizers(undertowBuilderCustomizerArray53);
        undertowEmbeddedServletContainerFactory41.addBuilderCustomizers(undertowBuilderCustomizerArray53);
        undertowEmbeddedServletContainerFactory29.addBuilderCustomizers(undertowBuilderCustomizerArray53);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray53);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer60 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray61 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer60 };
        undertowEmbeddedServletContainerFactory59.addBuilderCustomizers(undertowBuilderCustomizerArray61);
        undertowEmbeddedServletContainerFactory59.setSessionTimeout((int) (byte) 10);
        java.lang.Integer int65 = undertowEmbeddedServletContainerFactory59.ioThreads;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray66 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer67 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray66);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray68 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer69 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray68);
        initializer67.initializers = servletContextInitializerArray68;
        undertowEmbeddedServletContainerFactory59.addInitializers(servletContextInitializerArray68);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer72 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray68);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer73 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray68);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer74 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection7);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection8);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray12);
        org.junit.Assert.assertNull(ssl14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "0.0.0.0" + "'", str16, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet17);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(resourceLoader26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray31);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray43);
        org.junit.Assert.assertNull(ssl45);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray53);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray61);
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertNotNull(servletContextInitializerArray66);
        org.junit.Assert.assertNotNull(servletContextInitializerArray68);
    }

    @Test
    public void test03478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03478");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.net.InetAddress inetAddress6 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int10 = undertowEmbeddedServletContainerFactory1.ioThreads;
        org.springframework.boot.context.embedded.Ssl ssl11 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer15 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer15 };
        undertowEmbeddedServletContainerFactory14.addBuilderCustomizers(undertowBuilderCustomizerArray16);
        org.springframework.boot.context.embedded.Ssl ssl18 = undertowEmbeddedServletContainerFactory14.getSsl();
        java.lang.String str19 = undertowEmbeddedServletContainerFactory14.getContextPath();
        java.lang.String str20 = undertowEmbeddedServletContainerFactory14.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = undertowEmbeddedServletContainerFactory14.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray24 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList25 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList25, undertowBuilderCustomizerArray24);
        undertowEmbeddedServletContainerFactory23.builderCustomizers = undertowBuilderCustomizerList25;
        undertowEmbeddedServletContainerFactory14.builderCustomizers = undertowBuilderCustomizerList25;
        java.lang.String str29 = undertowEmbeddedServletContainerFactory14.getContextPath();
        java.net.InetAddress inetAddress30 = undertowEmbeddedServletContainerFactory14.getAddress();
        io.undertow.Undertow.Builder builder32 = undertowEmbeddedServletContainerFactory14.createBuilder((int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureSsl(ssl11, 1800, builder32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray16);
        org.junit.Assert.assertNull(ssl18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "0.0.0.0" + "'", str20, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet21);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(inetAddress30);
        org.junit.Assert.assertNotNull(builder32);
    }

    @Test
    public void test03479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03479");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.io.File file11 = null;
        undertowEmbeddedServletContainerFactory1.setDocumentRoot(file11);
        org.springframework.core.io.ResourceLoader resourceLoader13 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(100);
        io.undertow.servlet.api.DeploymentInfo deploymentInfo16 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray19 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList20 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList20, undertowBuilderCustomizerArray19);
        undertowEmbeddedServletContainerFactory18.builderCustomizers = undertowBuilderCustomizerList20;
        undertowEmbeddedServletContainerFactory18.setWorkerThreads((java.lang.Integer) 100);
        org.springframework.core.io.ResourceLoader resourceLoader25 = null;
        undertowEmbeddedServletContainerFactory18.setResourceLoader(resourceLoader25);
        boolean boolean27 = undertowEmbeddedServletContainerFactory18.isRegisterJspServlet();
        java.lang.ClassLoader classLoader28 = undertowEmbeddedServletContainerFactory18.getServletClassLoader();
        undertowEmbeddedServletContainerFactory18.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory18.setDirectBuffers((java.lang.Boolean) true);
        boolean boolean33 = undertowEmbeddedServletContainerFactory18.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory35.directBuffers = false;
        undertowEmbeddedServletContainerFactory35.setJspServletClassName("");
        io.undertow.Undertow.Builder builder40 = null;
        io.undertow.servlet.api.DeploymentManager deploymentManager41 = null;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer43 = undertowEmbeddedServletContainerFactory35.getUndertowEmbeddedServletContainer(builder40, deploymentManager41, 0);
        java.lang.Integer int44 = undertowEmbeddedServletContainerFactory35.ioThreads;
        int int45 = undertowEmbeddedServletContainerFactory35.getPort();
        undertowEmbeddedServletContainerFactory35.setContextPath("");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer50 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray51 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer50 };
        undertowEmbeddedServletContainerFactory49.addBuilderCustomizers(undertowBuilderCustomizerArray51);
        org.springframework.boot.context.embedded.Ssl ssl53 = undertowEmbeddedServletContainerFactory49.getSsl();
        java.lang.String str54 = undertowEmbeddedServletContainerFactory49.getContextPath();
        java.lang.String str55 = undertowEmbeddedServletContainerFactory49.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet56 = undertowEmbeddedServletContainerFactory49.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray59 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList60 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList60, undertowBuilderCustomizerArray59);
        undertowEmbeddedServletContainerFactory58.builderCustomizers = undertowBuilderCustomizerList60;
        undertowEmbeddedServletContainerFactory49.builderCustomizers = undertowBuilderCustomizerList60;
        java.net.InetAddress inetAddress64 = undertowEmbeddedServletContainerFactory49.getAddress();
        io.undertow.server.handlers.resource.ResourceManager resourceManager65 = undertowEmbeddedServletContainerFactory49.getDocumentRootResourceManager();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer68 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray69 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer68 };
        undertowEmbeddedServletContainerFactory67.addBuilderCustomizers(undertowBuilderCustomizerArray69);
        org.springframework.boot.context.embedded.Ssl ssl71 = undertowEmbeddedServletContainerFactory67.getSsl();
        java.lang.String str72 = undertowEmbeddedServletContainerFactory67.getContextPath();
        java.lang.String str73 = undertowEmbeddedServletContainerFactory67.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet74 = undertowEmbeddedServletContainerFactory67.getErrorPages();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList75 = undertowEmbeddedServletContainerFactory67.builderCustomizers;
        undertowEmbeddedServletContainerFactory49.builderCustomizers = undertowBuilderCustomizerList75;
        undertowEmbeddedServletContainerFactory35.builderCustomizers = undertowBuilderCustomizerList75;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList78 = undertowEmbeddedServletContainerFactory35.deploymentInfoCustomizers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory80 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory80.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int83 = undertowEmbeddedServletContainerFactory80.ioThreads;
        java.lang.Integer int84 = undertowEmbeddedServletContainerFactory80.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage85 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray86 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage85 };
        undertowEmbeddedServletContainerFactory80.addErrorPages(errorPageArray86);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray88 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer89 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray88);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray90 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer91 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray90);
        initializer89.initializers = servletContextInitializerArray90;
        undertowEmbeddedServletContainerFactory80.addInitializers(servletContextInitializerArray90);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer94 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray90);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray95 = initializer94.initializers;
        undertowEmbeddedServletContainerFactory35.addInitializers(servletContextInitializerArray95);
        undertowEmbeddedServletContainerFactory18.addInitializers(servletContextInitializerArray95);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.registerServletContainerInitializerToDriveServletContextInitializers(deploymentInfo16, servletContextInitializerArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNull(resourceLoader13);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray51);
        org.junit.Assert.assertNull(ssl53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "0.0.0.0" + "'", str55, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet56);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(inetAddress64);
        org.junit.Assert.assertNotNull(resourceManager65);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray69);
        org.junit.Assert.assertNull(ssl71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "0.0.0.0" + "'", str73, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet74);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList75);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList78);
        org.junit.Assert.assertNull(int83);
        org.junit.Assert.assertNull(int84);
        org.junit.Assert.assertNotNull(errorPageArray86);
        org.junit.Assert.assertNotNull(servletContextInitializerArray88);
        org.junit.Assert.assertNotNull(servletContextInitializerArray90);
        org.junit.Assert.assertNotNull(servletContextInitializerArray95);
    }

    @Test
    public void test03480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03480");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.directBuffers = false;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList13 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer16 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray17 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer16 };
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer18 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray17);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer19 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray17);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray20 = initializer19.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory22.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int25 = undertowEmbeddedServletContainerFactory22.ioThreads;
        java.lang.Integer int26 = undertowEmbeddedServletContainerFactory22.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage27 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray28 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage27 };
        undertowEmbeddedServletContainerFactory22.addErrorPages(errorPageArray28);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray30 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer31 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray30);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray32 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer33 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray32);
        initializer31.initializers = servletContextInitializerArray32;
        undertowEmbeddedServletContainerFactory22.addInitializers(servletContextInitializerArray32);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer36 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray32);
        initializer19.initializers = servletContextInitializerArray32;
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray32);
        java.lang.Integer int39 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        boolean boolean40 = undertowEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress41 = null;
        undertowEmbeddedServletContainerFactory1.setAddress(inetAddress41);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList13);
        org.junit.Assert.assertNotNull(servletContextInitializerArray17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray20);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(errorPageArray28);
        org.junit.Assert.assertNotNull(servletContextInitializerArray30);
        org.junit.Assert.assertNotNull(servletContextInitializerArray32);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test03481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03481");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager();
        java.lang.String str1 = jarResourcemanager0.jarPath;
        boolean boolean2 = jarResourcemanager0.isResourceChangeListenerSupported();
        java.lang.String str3 = jarResourcemanager0.jarPath;
        jarResourcemanager0.jarPath = "0.0.0.0";
        boolean boolean6 = jarResourcemanager0.isResourceChangeListenerSupported();
        boolean boolean7 = jarResourcemanager0.isResourceChangeListenerSupported();
        boolean boolean8 = jarResourcemanager0.isResourceChangeListenerSupported();
        java.lang.String str9 = jarResourcemanager0.jarPath;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource11 = jarResourcemanager0.getResource("hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "0.0.0.0" + "'", str9, "0.0.0.0");
    }

    @Test
    public void test03482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03482");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress10 = undertowEmbeddedServletContainerFactory1.getAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo11 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo11);
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        boolean boolean15 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer18 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray19 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer18 };
        undertowEmbeddedServletContainerFactory17.addBuilderCustomizers(undertowBuilderCustomizerArray19);
        org.springframework.boot.context.embedded.Ssl ssl21 = undertowEmbeddedServletContainerFactory17.getSsl();
        java.lang.String str22 = undertowEmbeddedServletContainerFactory17.getContextPath();
        java.lang.String str23 = undertowEmbeddedServletContainerFactory17.getListenAddress();
        undertowEmbeddedServletContainerFactory17.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl26 = undertowEmbeddedServletContainerFactory17.getSsl();
        undertowEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer31 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray32 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer31 };
        undertowEmbeddedServletContainerFactory30.addBuilderCustomizers(undertowBuilderCustomizerArray32);
        org.springframework.boot.context.embedded.Ssl ssl34 = undertowEmbeddedServletContainerFactory30.getSsl();
        undertowEmbeddedServletContainerFactory30.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory30.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer41 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray42 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer41 };
        undertowEmbeddedServletContainerFactory40.addBuilderCustomizers(undertowBuilderCustomizerArray42);
        undertowEmbeddedServletContainerFactory30.addBuilderCustomizers(undertowBuilderCustomizerArray42);
        undertowEmbeddedServletContainerFactory17.addBuilderCustomizers(undertowBuilderCustomizerArray42);
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray42);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList48 = undertowEmbeddedServletContainerFactory47.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory47.ioThreads = 100;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet51 = undertowEmbeddedServletContainerFactory47.getErrorPages();
        io.undertow.Undertow.Builder builder53 = undertowEmbeddedServletContainerFactory47.createBuilder((int) (short) 10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList55 = undertowEmbeddedServletContainerFactory54.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory54.setSessionTimeout(0);
        java.io.File file58 = null;
        undertowEmbeddedServletContainerFactory54.setDocumentRoot(file58);
        java.lang.Integer int60 = undertowEmbeddedServletContainerFactory54.bufferSize;
        java.lang.ClassLoader classLoader61 = undertowEmbeddedServletContainerFactory54.getServletClassLoader();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory63.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int66 = undertowEmbeddedServletContainerFactory63.ioThreads;
        java.lang.Integer int67 = undertowEmbeddedServletContainerFactory63.ioThreads;
        org.springframework.boot.context.embedded.ErrorPage errorPage68 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray69 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage68 };
        undertowEmbeddedServletContainerFactory63.addErrorPages(errorPageArray69);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray71 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer72 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray71);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray73 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer74 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray73);
        initializer72.initializers = servletContextInitializerArray73;
        undertowEmbeddedServletContainerFactory63.addInitializers(servletContextInitializerArray73);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer77 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray73);
        io.undertow.servlet.api.DeploymentManager deploymentManager78 = undertowEmbeddedServletContainerFactory54.createDeploymentManager(servletContextInitializerArray73);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer undertowEmbeddedServletContainer80 = undertowEmbeddedServletContainerFactory1.getUndertowEmbeddedServletContainer(builder53, deploymentManager78, 0);
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Undertow does not support JSPs");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNull(inetAddress10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray19);
        org.junit.Assert.assertNull(ssl21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "0.0.0.0" + "'", str23, "0.0.0.0");
        org.junit.Assert.assertNull(ssl26);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray32);
        org.junit.Assert.assertNull(ssl34);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray42);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList48);
        org.junit.Assert.assertNotNull(errorPageSet51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList55);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(classLoader61);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNotNull(errorPageArray69);
        org.junit.Assert.assertNotNull(servletContextInitializerArray71);
        org.junit.Assert.assertNotNull(servletContextInitializerArray73);
        org.junit.Assert.assertNotNull(deploymentManager78);
        org.junit.Assert.assertNotNull(undertowEmbeddedServletContainer80);
    }

    @Test
    public void test03483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03483");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (byte) -1);
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList2 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory1.setBuffersPerRegion((java.lang.Integer) 8080);
        undertowEmbeddedServletContainerFactory1.ioThreads = (-1);
        java.net.InetAddress inetAddress7 = undertowEmbeddedServletContainerFactory1.getAddress();
        java.util.concurrent.TimeUnit timeUnit9 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1, timeUnit9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList2);
        org.junit.Assert.assertNull(inetAddress7);
    }

    @Test
    public void test03484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03484");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        boolean boolean2 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo4 = null;
        undertowEmbeddedServletContainerFactory1.configureErrorPages(deploymentInfo4);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(1800);
        java.io.File file8 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet9 = undertowEmbeddedServletContainerFactory1.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        boolean boolean12 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(errorPageSet9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test03485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03485");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        java.lang.Integer int7 = undertowEmbeddedServletContainerFactory1.ioThreads;
        undertowEmbeddedServletContainerFactory1.setIoThreads((java.lang.Integer) 1);
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 1);
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader14);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(int7);
    }

    @Test
    public void test03486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03486");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.bufferSize = 0;
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        undertowEmbeddedServletContainerFactory1.setSsl(ssl10);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer14 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray15 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer14 };
        undertowEmbeddedServletContainerFactory13.addBuilderCustomizers(undertowBuilderCustomizerArray15);
        org.springframework.boot.context.embedded.Ssl ssl17 = undertowEmbeddedServletContainerFactory13.getSsl();
        undertowEmbeddedServletContainerFactory13.setDirectBuffers((java.lang.Boolean) true);
        java.lang.String str20 = undertowEmbeddedServletContainerFactory13.getListenAddress();
        int int21 = undertowEmbeddedServletContainerFactory13.getSessionTimeout();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer24 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray25 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer24 };
        undertowEmbeddedServletContainerFactory23.addBuilderCustomizers(undertowBuilderCustomizerArray25);
        org.springframework.boot.context.embedded.Ssl ssl27 = undertowEmbeddedServletContainerFactory23.getSsl();
        undertowEmbeddedServletContainerFactory23.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory23.setPort((int) (byte) 10);
        java.net.InetAddress inetAddress32 = undertowEmbeddedServletContainerFactory23.getAddress();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo33 = null;
        undertowEmbeddedServletContainerFactory23.configureErrorPages(deploymentInfo33);
        undertowEmbeddedServletContainerFactory23.setIoThreads((java.lang.Integer) 1);
        boolean boolean37 = undertowEmbeddedServletContainerFactory23.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList38 = undertowEmbeddedServletContainerFactory23.builderCustomizers;
        undertowEmbeddedServletContainerFactory13.builderCustomizers = undertowBuilderCustomizerList38;
        org.springframework.core.io.ResourceLoader resourceLoader40 = null;
        undertowEmbeddedServletContainerFactory13.setResourceLoader(resourceLoader40);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory43.setDirectBuffers((java.lang.Boolean) false);
        java.lang.Integer int46 = undertowEmbeddedServletContainerFactory43.ioThreads;
        undertowEmbeddedServletContainerFactory43.directBuffers = true;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer49 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray50 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer49 };
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer51 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray50);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer52 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray50);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray53 = initializer52.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray56 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList57 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList57, undertowBuilderCustomizerArray56);
        undertowEmbeddedServletContainerFactory55.builderCustomizers = undertowBuilderCustomizerList57;
        undertowEmbeddedServletContainerFactory55.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory55.bufferSize = 1;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings64 = undertowEmbeddedServletContainerFactory55.getMimeMappings();
        java.io.File file65 = null;
        undertowEmbeddedServletContainerFactory55.setDocumentRoot(file65);
        java.lang.String str67 = undertowEmbeddedServletContainerFactory55.getListenAddress();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList69 = undertowEmbeddedServletContainerFactory68.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory68.ioThreads = 100;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory73 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray74 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer75 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray74);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer76 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray77 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer78 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray77);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray79 = initializer78.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer80 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray79);
        initializer76.initializers = servletContextInitializerArray79;
        initializer75.initializers = servletContextInitializerArray79;
        undertowEmbeddedServletContainerFactory73.addInitializers(servletContextInitializerArray79);
        undertowEmbeddedServletContainerFactory68.addInitializers(servletContextInitializerArray79);
        org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer85 = undertowEmbeddedServletContainerFactory55.getEmbeddedServletContainer(servletContextInitializerArray79);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer86 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray79);
        initializer52.initializers = servletContextInitializerArray79;
        io.undertow.servlet.api.DeploymentManager deploymentManager88 = undertowEmbeddedServletContainerFactory43.createDeploymentManager(servletContextInitializerArray79);
        io.undertow.servlet.api.DeploymentManager deploymentManager89 = undertowEmbeddedServletContainerFactory13.createDeploymentManager(servletContextInitializerArray79);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.EmbeddedServletContainer embeddedServletContainer90 = undertowEmbeddedServletContainerFactory1.getEmbeddedServletContainer(servletContextInitializerArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray15);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "0.0.0.0" + "'", str20, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1800 + "'", int21 == 1800);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray25);
        org.junit.Assert.assertNull(ssl27);
        org.junit.Assert.assertNull(inetAddress32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList38);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(servletContextInitializerArray50);
        org.junit.Assert.assertNotNull(servletContextInitializerArray53);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(mimeMappings64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "0.0.0.0" + "'", str67, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList69);
        org.junit.Assert.assertNotNull(servletContextInitializerArray74);
        org.junit.Assert.assertNotNull(servletContextInitializerArray77);
        org.junit.Assert.assertNotNull(servletContextInitializerArray79);
        org.junit.Assert.assertNotNull(embeddedServletContainer85);
        org.junit.Assert.assertNotNull(deploymentManager88);
        org.junit.Assert.assertNotNull(deploymentManager89);
    }

    @Test
    public void test03487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03487");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("hi!");
        jarResourcemanager1.jarPath = "0.0.0.0";
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.server.handlers.resource.Resource resource5 = jarResourcemanager1.getResource("0.0.0.0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no !/ in spec");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03488");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.core.io.ResourceLoader resourceLoader4 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        java.lang.Integer int5 = undertowEmbeddedServletContainerFactory1.bufferSize;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        java.lang.Class<?> wildcardClass8 = undertowEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test03489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03489");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = undertowEmbeddedServletContainerFactory0.getMimeMappings();
        undertowEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.junit.Assert.assertNotNull(mimeMappings1);
    }

    @Test
    public void test03490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03490");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager jarResourcemanager1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.JarResourcemanager("0.0.0.0");
        boolean boolean2 = jarResourcemanager1.isResourceChangeListenerSupported();
        java.lang.String str3 = jarResourcemanager1.jarPath;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "0.0.0.0" + "'", str3, "0.0.0.0");
    }

    @Test
    public void test03491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03491");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.Ssl ssl10 = undertowEmbeddedServletContainerFactory1.getSsl();
        int int11 = undertowEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray12 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray12);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = undertowEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray16 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        undertowEmbeddedServletContainerFactory14.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray16);
        undertowEmbeddedServletContainerFactory1.addDeploymentInfoCustomizers(undertowDeploymentInfoCustomizerArray16);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.setBufferSize((java.lang.Integer) 0);
        java.io.File file23 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray12);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray16);
        org.junit.Assert.assertNull(file23);
    }

    @Test
    public void test03492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03492");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        org.springframework.core.io.ResourceLoader resourceLoader9 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        undertowEmbeddedServletContainerFactory1.workerThreads = 0;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout(0);
        java.io.File file14 = undertowEmbeddedServletContainerFactory1.getDocumentRoot();
        io.undertow.servlet.api.DeploymentInfo deploymentInfo15 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.configureMimeMappings(deploymentInfo15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
        org.junit.Assert.assertNull(resourceLoader9);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test03493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03493");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) false);
        org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] undertowDeploymentInfoCustomizerArray4 = new org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList5 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer>) undertowDeploymentInfoCustomizerList5, undertowDeploymentInfoCustomizerArray4);
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList5;
        java.lang.Integer int8 = undertowEmbeddedServletContainerFactory1.bufferSize;
        org.springframework.core.io.ResourceLoader resourceLoader9 = undertowEmbeddedServletContainerFactory1.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage errorPage10 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.servlet.api.ErrorPage errorPage11 = undertowEmbeddedServletContainerFactory1.getUndertowErrorPage(errorPage10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(resourceLoader9);
    }

    @Test
    public void test03494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03494");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        java.lang.String str8 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        boolean boolean9 = undertowEmbeddedServletContainerFactory1.isRegisterJspServlet();
        undertowEmbeddedServletContainerFactory1.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory1.bufferSize = 10;
        java.lang.ClassLoader classLoader14 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        int int15 = undertowEmbeddedServletContainerFactory1.getSessionTimeout();
        undertowEmbeddedServletContainerFactory1.setJspServletClassName("0.0.0.0");
        java.net.InetAddress inetAddress18 = undertowEmbeddedServletContainerFactory1.getAddress();
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0.0.0.0" + "'", str8, "0.0.0.0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(classLoader14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1800 + "'", int15 == 1800);
        org.junit.Assert.assertNull(inetAddress18);
    }

    @Test
    public void test03495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03495");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = undertowEmbeddedServletContainerFactory1.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.workerThreads = 100;
        undertowEmbeddedServletContainerFactory1.setWorkerThreads((java.lang.Integer) 100);
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (short) 100);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerCollection10 = undertowEmbeddedServletContainerFactory1.getDeploymentInfoCustomizers();
        io.undertow.server.handlers.resource.ResourceManager resourceManager11 = undertowEmbeddedServletContainerFactory1.getDocumentRootResourceManager();
        undertowEmbeddedServletContainerFactory1.setPort(8080);
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList3);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerCollection10);
        org.junit.Assert.assertNotNull(resourceManager11);
    }

    @Test
    public void test03496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03496");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.ioThreads = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList9 = undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers;
        java.lang.ClassLoader classLoader10 = undertowEmbeddedServletContainerFactory1.getServletClassLoader();
        undertowEmbeddedServletContainerFactory1.bufferSize = 1800;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList14 = undertowEmbeddedServletContainerFactory13.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory13.ioThreads = 100;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = undertowEmbeddedServletContainerFactory13.getErrorPages();
        undertowEmbeddedServletContainerFactory1.setErrorPages(errorPageSet17);
        undertowEmbeddedServletContainerFactory1.workerThreads = 1;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Undertow does not support JSPs");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0.0.0.0" + "'", str6, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList9);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList14);
        org.junit.Assert.assertNotNull(errorPageSet17);
    }

    @Test
    public void test03497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03497");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray2 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray2);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer4 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray5 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer6 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray5);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray7 = initializer6.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer8 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray7);
        initializer4.initializers = servletContextInitializerArray7;
        initializer3.initializers = servletContextInitializerArray7;
        undertowEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray7);
        java.lang.Integer int12 = undertowEmbeddedServletContainerFactory1.buffersPerRegion;
        io.undertow.Undertow.Builder builder14 = undertowEmbeddedServletContainerFactory1.createBuilder((int) (short) 100);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer17 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray18 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer17 };
        undertowEmbeddedServletContainerFactory16.addBuilderCustomizers(undertowBuilderCustomizerArray18);
        org.springframework.boot.context.embedded.Ssl ssl20 = undertowEmbeddedServletContainerFactory16.getSsl();
        java.lang.String str21 = undertowEmbeddedServletContainerFactory16.getContextPath();
        java.lang.String str22 = undertowEmbeddedServletContainerFactory16.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = undertowEmbeddedServletContainerFactory16.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader24 = undertowEmbeddedServletContainerFactory16.resourceLoader;
        boolean boolean25 = undertowEmbeddedServletContainerFactory16.isRegisterJspServlet();
        java.net.InetAddress inetAddress26 = undertowEmbeddedServletContainerFactory16.getAddress();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList27 = undertowEmbeddedServletContainerFactory16.builderCustomizers;
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList27;
        // The following exception was thrown during execution in test generation
        try {
            io.undertow.Undertow.Builder builder30 = undertowEmbeddedServletContainerFactory1.createBuilder((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletContextInitializerArray2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray5);
        org.junit.Assert.assertNotNull(servletContextInitializerArray7);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray18);
        org.junit.Assert.assertNull(ssl20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "0.0.0.0" + "'", str22, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet23);
        org.junit.Assert.assertNull(resourceLoader24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(inetAddress26);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerList27);
    }

    @Test
    public void test03498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03498");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer2 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray3 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer2 };
        undertowEmbeddedServletContainerFactory1.addBuilderCustomizers(undertowBuilderCustomizerArray3);
        org.springframework.boot.context.embedded.Ssl ssl5 = undertowEmbeddedServletContainerFactory1.getSsl();
        java.lang.String str6 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.lang.String str7 = undertowEmbeddedServletContainerFactory1.getListenAddress();
        undertowEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        undertowEmbeddedServletContainerFactory1.buffersPerRegion = 10;
        undertowEmbeddedServletContainerFactory1.ioThreads = (-1);
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        undertowEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader14);
        java.lang.String str16 = undertowEmbeddedServletContainerFactory1.getContextPath();
        java.util.concurrent.TimeUnit timeUnit18 = null;
        // The following exception was thrown during execution in test generation
        try {
            undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10, timeUnit18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray3);
        org.junit.Assert.assertNull(ssl5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0.0.0.0" + "'", str7, "0.0.0.0");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test03499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03499");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray2 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList3, undertowBuilderCustomizerArray2);
        undertowEmbeddedServletContainerFactory1.builderCustomizers = undertowBuilderCustomizerList3;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = undertowEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader7 = null;
        undertowEmbeddedServletContainerFactory1.resourceLoader = resourceLoader7;
        undertowEmbeddedServletContainerFactory1.setSessionTimeout((int) '4');
        undertowEmbeddedServletContainerFactory1.bufferSize = 1800;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(mimeMappings6);
    }

    @Test
    public void test03500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03500");
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory(8080);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer4 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray5 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer4 };
        undertowEmbeddedServletContainerFactory3.addBuilderCustomizers(undertowBuilderCustomizerArray5);
        undertowEmbeddedServletContainerFactory3.setSessionTimeout((int) (byte) 10);
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection9 = undertowEmbeddedServletContainerFactory3.getBuilderCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerCollection10 = undertowEmbeddedServletContainerFactory3.getBuilderCustomizers();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer13 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray14 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer13 };
        undertowEmbeddedServletContainerFactory12.addBuilderCustomizers(undertowBuilderCustomizerArray14);
        org.springframework.boot.context.embedded.Ssl ssl16 = undertowEmbeddedServletContainerFactory12.getSsl();
        java.lang.String str17 = undertowEmbeddedServletContainerFactory12.getContextPath();
        java.lang.String str18 = undertowEmbeddedServletContainerFactory12.getListenAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = undertowEmbeddedServletContainerFactory12.getErrorPages();
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray22 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList23 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList23, undertowBuilderCustomizerArray22);
        undertowEmbeddedServletContainerFactory21.builderCustomizers = undertowBuilderCustomizerList23;
        undertowEmbeddedServletContainerFactory12.builderCustomizers = undertowBuilderCustomizerList23;
        undertowEmbeddedServletContainerFactory3.builderCustomizers = undertowBuilderCustomizerList23;
        org.springframework.core.io.ResourceLoader resourceLoader28 = undertowEmbeddedServletContainerFactory3.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer undertowBuilderCustomizer31 = null;
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray32 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] { undertowBuilderCustomizer31 };
        undertowEmbeddedServletContainerFactory30.addBuilderCustomizers(undertowBuilderCustomizerArray32);
        org.springframework.boot.context.embedded.Ssl ssl34 = undertowEmbeddedServletContainerFactory30.getSsl();
        undertowEmbeddedServletContainerFactory30.setDirectBuffers((java.lang.Boolean) true);
        undertowEmbeddedServletContainerFactory30.setPort((int) (byte) 10);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet39 = undertowEmbeddedServletContainerFactory30.getErrorPages();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet40 = undertowEmbeddedServletContainerFactory30.getErrorPages();
        undertowEmbeddedServletContainerFactory3.setErrorPages(errorPageSet40);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer42 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer43 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray44 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer43 };
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer45 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray44);
        initializer42.initializers = servletContextInitializerArray44;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer47 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray44);
        undertowEmbeddedServletContainerFactory3.addInitializers(servletContextInitializerArray44);
        undertowEmbeddedServletContainerFactory3.setSessionTimeout((int) (byte) 10);
        java.io.File file51 = null;
        undertowEmbeddedServletContainerFactory3.setDocumentRoot(file51);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList54 = undertowEmbeddedServletContainerFactory53.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory53.ioThreads = 100;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray59 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer60 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray59);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer61 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray62 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer63 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray62);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray64 = initializer63.initializers;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer initializer65 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.Initializer(servletContextInitializerArray64);
        initializer61.initializers = servletContextInitializerArray64;
        initializer60.initializers = servletContextInitializerArray64;
        undertowEmbeddedServletContainerFactory58.addInitializers(servletContextInitializerArray64);
        undertowEmbeddedServletContainerFactory53.addInitializers(servletContextInitializerArray64);
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList71 = undertowEmbeddedServletContainerFactory70.deploymentInfoCustomizers;
        java.io.File file72 = null;
        undertowEmbeddedServletContainerFactory70.setDocumentRoot(file72);
        org.springframework.core.io.ResourceLoader resourceLoader74 = undertowEmbeddedServletContainerFactory70.resourceLoader;
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory((int) (short) 0);
        org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] undertowBuilderCustomizerArray77 = new org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer> undertowBuilderCustomizerList78 = new java.util.ArrayList<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer>) undertowBuilderCustomizerList78, undertowBuilderCustomizerArray77);
        undertowEmbeddedServletContainerFactory76.builderCustomizers = undertowBuilderCustomizerList78;
        java.lang.String str81 = undertowEmbeddedServletContainerFactory76.getListenAddress();
        undertowEmbeddedServletContainerFactory76.ioThreads = 1;
        java.util.List<org.springframework.boot.context.embedded.undertow.UndertowDeploymentInfoCustomizer> undertowDeploymentInfoCustomizerList84 = undertowEmbeddedServletContainerFactory76.deploymentInfoCustomizers;
        undertowEmbeddedServletContainerFactory70.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList84;
        undertowEmbeddedServletContainerFactory53.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList84;
        undertowEmbeddedServletContainerFactory3.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList84;
        undertowEmbeddedServletContainerFactory1.deploymentInfoCustomizers = undertowDeploymentInfoCustomizerList84;
        java.lang.Boolean boolean89 = undertowEmbeddedServletContainerFactory1.directBuffers;
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray5);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection9);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerCollection10);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray14);
        org.junit.Assert.assertNull(ssl16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "0.0.0.0" + "'", str18, "0.0.0.0");
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(resourceLoader28);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray32);
        org.junit.Assert.assertNull(ssl34);
        org.junit.Assert.assertNotNull(errorPageSet39);
        org.junit.Assert.assertNotNull(errorPageSet40);
        org.junit.Assert.assertNotNull(servletContextInitializerArray44);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList54);
        org.junit.Assert.assertNotNull(servletContextInitializerArray59);
        org.junit.Assert.assertNotNull(servletContextInitializerArray62);
        org.junit.Assert.assertNotNull(servletContextInitializerArray64);
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList71);
        org.junit.Assert.assertNull(resourceLoader74);
        org.junit.Assert.assertNotNull(undertowBuilderCustomizerArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "0.0.0.0" + "'", str81, "0.0.0.0");
        org.junit.Assert.assertNotNull(undertowDeploymentInfoCustomizerList84);
        org.junit.Assert.assertNull(boolean89);
    }
}

